<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="46" /><link rel="next" href="48" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 793 — Протокол управления передачей (TCP), стр. 47</title><meta name="author" content="J. Postel" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../793.rfc">RFC 793 — Протокол управления передачей (TCP)</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 793</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Transmission Control Protocol</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 761</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Стандарт Интернета</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="1981-09-08">Сентябрь 1981</time></dd><dd><div class="icon i5"></div> Автор: <span itemprop="author">J. Postel</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 793,</span> Страница 47 из 49</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../793.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="46"><b>&larr;</b></a></li><li><a class="x" href="../793.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a class="x" href="37">37</a></li><li><a class="x" href="38">38</a></li><li><a class="x" href="39">39</a></li><li><a class="x" href="40">40</a></li><li><a href="41">41</a></li><li><a href="42">42</a></li><li><a href="43">43</a></li><li><a href="44">44</a></li><li><a href="45">45</a></li><li><a href="46">46</a></li><li class="this"><span>47</span></li><li><a href="48">48</a></li><li><a href="49">49</a></li><li><a accesskey="3" title="На страницу вперед" href="48">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="49">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><ul><li><ol><li><p>Если не установлен ни бит SYN, ни бит, сегмент отбрасывается с возвратом управления.</p><p>После перечисленных для состояний CLOSED, LISTEN, SYN-SENT проверок выполняются следующие операции:</p><ol><li><p class="b">Проверка порядкового номера</p><p class="b">Состояния SYN-RECEIVED; ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2; CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>Начальные проверки с целью отбрасывания старых дубликатов проводятся в порядке прибытия, но дальнейшая обработка сегментов ведется в соответствии с порядковыми номерами в поле SEG.SEQ. Если сегмент включает старые и новые данные, должна обрабатываться только новая информация.</p><p>При начальной проверке прибывающих сегментов возможны 4 варианта:</p><table><tr><td>Размер сегмента</td><td>Окно приема</td><td>Проверка</td></tr><tr><td>0</td><td>0</td><td>SEG.SEQ = RCV.NXT</td></tr><tr><td>0</td><td>>0</td><td>RCV.NXT =&lt; SEG.SEQ &lt; RCV.NXT+RCV.WND</td></tr><tr><td>>0</td><td>0</td><td>недопустимо</td></tr><tr><td>>0</td><td>>0</td><td>RCV.NXT =&lt; SEG.SEQ &lt; RCV.NXT+RCV.WND или<br />RCV.NXT =&lt; SEG.SEQ+SEG.LEN-1 &lt; RCV.NXT+RCV.WND</td></tr></table><p>Если RCV.WND = 0, сегменты не могут приниматься за исключением корректных сегментов ACK, URG и RST.</p><p>Если входящий сегмент неприемлем, в ответ на него должно быть передано уведомление (если установлен бит RST, сегмент должен быть отброшен с возвратом управления):</p><pre>&lt;SEQ=SND.NXT&gt;&lt;ACK=RCV.NXT&gt;&lt;CTL=ACK&gt;</pre><p>После передачи подтверждения происходит отбрасывание неприемлемого сегмента и возврат управления.</p><p>В дальнейшем сегменты предполагаются идеализированными — они начинаются с RCV.NXT и не выходят за пределы окна. Реальные сегменты могут быть подогнаны под такую идеализацию путем отрезания любой части, выходящей за пределы окна (включая SYN и FIN), и дальнейшей обработки только для сегментов, начинающихся с RCV.NXT. Сегменты с более высокими порядковыми номерами могут сохраняться для последующей обработки.</p></li><li><p class="b">Проверка бита RST</p><p class="b">Состояние SYN-RECEIVED</p><p>Если установлен бит RST</p><p class="lia">Если соединение было открыто пассивным вызовом OPEN (т. е., перешло из состояния LISTEN), оно будет возвращено в состояние LISTEN с возвратом управления. Пользователю не будет передаваться никакого уведомления об этом. Если соединение организовано активным вызовом OPEN (т. е., перешло из состояния SYN-SENT), оно будет отвергнуто (refused) и пользователь получит сообщение "connection refused". В обоих случаях все сегменты из очереди на передачу должны быть удалены. В случае активного вызова OPEN соединение переводится в состояние CLOSED с удалением TCB и возвратом управления.</p><p class="b">Состояния ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2; CLOSE-WAIT</p><p>Если установлен бит RST, все остающиеся вызовы RECEIVE и SEND должны получить команду сброса (reset). Все сегменты из очередей должны быть удалены. Пользователь должен получить сигнал "connection reset" (сброс соединения). Соединение переходит в состояние CLOSED с удалением TCB и возвратом управления.</p><p class="b">Состояния CLOSING; LAST-ACK; TIME-WAIT</p><p>Если установлен бит RST, соединение переходит в состояние CLOSED с удалением TCB и возвратом управления.</p></li><li><p class="b">Проверка предпочтений и безопасности</p><p class="b">Состояние SYN-RECEIVED</p><p>Если уровни безопасности/разделения и предпочтения в сегменте не соответствуют в точности таким же уровням в TCB, передается сигнал сброса (reset) с возвратом управления.</p><p class="b">Состояния ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2; CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>Если уровни безопасности/разделения и предпочтения в сегменте не соответствуют в точности таким же уровням в TCB, передается сигнал сброса (reset), все остающиеся вызовы RECEIVE и SEND должны получить сигнал reset. Все очереди сегментов удаляются. Пользователь должен получить сигнал "connection reset". Соединение переходит в состояние CLOSED с удалением TCB и возвратом управления.</p><div class="note"><p>Отметим, что эта проверка проводится после проверки порядкового номера для предотвращения приема сегментов из старых соединений между теми же портами, но с другим уровнем безопасности или предпочтений, которые могут вызвать разрыв текущего соединения.</p><p>Если соединение было инициировано пассивным вызовом OPEN, оно переходит в состояние LISTEN c возвратом управления. В остальных случаях выполняется дальнейшая обработка.</p></div></li><li><p class="b">Проверка бита SYN</p><p class="b">Состояния SYN-RECEIVED; ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2; CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>Если SYN находится в окне, это говорит об ошибке. Передается сигнал сброса (reset), все незавершенные вызовы RECEIVE и SEND должны получить reset. Все сегменты из очередей удаляются, пользователь должен получить сигнал "connection reset". Соединение переходит в состояние CLOSED с удалением TCB и возвратом управления.</p><p>Если SYN не находится в окне, этот этап не будет выполняться, поскольку будет передано подтверждение еще на первом этапе (проверка порядкового номера).</p></li><li><p class="b">Проверка поля ACK</p><p>Если бит ACK не установлен, сегмент отбрасывается с возвратом управления.</p><p>При наличии бита ACK выполняется дальнейшая обработка.</p><p class="b">Состояние SYN-RECEIVED</p><p>Если SND.UNA =&lt; SEG.ACK =&lt; SND.NXT, соединение переходит в состояние ESTABLISHED12 и обработка продолжается.</p><p>Если сегмент подтверждения неприемлем, формируется и передается сегмент сброса (reset).</p><pre>&lt;SEQ=SEG.ACK&gt;&lt;CTL=RST&gt;</pre><p class="b">Состояние ESTABLISHED</p><p>Если SND.UNA &lt; SEG.ACK =&lt; SND.NXT, устанавливается SND.UNA &lt;- SEG.ACK. Все, так или иначе, целиком подтвержденные сегменты удаляются из очереди повторной передачи. Пользователь должен получить позитивные подтверждения для буферов, которые были переданы и полностью подтверждены (т. е., в результате вызова SEND должно быть возвращено сообщение "ok"). Если подтверждение ACK является дубликатом (SEG.ACK =&lt; SND.UNA), его можно игнорировать. Если ACK подтверждает что-то, еще не переданное (SEG.ACK > SND.NXT), посылается подтверждение ACK и сегмент отбрасывается с возвратом управления.</p><p>Если SND.UNA =&lt; SEG.ACK =&lt; SND.NXT, окно нужно обновить. Если выполняется условие</p><pre>(SND.WL1 &lt; SEG.SEQ) OR ((SND.WL1 = SEG.SEQ) AND (SND.WL2 =&lt; SEG.ACK)),</pre><p>нужно установить SND.WND &lt;- SEG.WND, SND.WL1 &lt;- SEG.SEQ и SND.WL2 &lt;- SEG.ACK.</p><p class="note">Отметим, что SND.WND задает смещение от SND.UNA, поле SND.WL1 содержит порядковый номер последнего сегмента, использованного для обновления SND.WND, а SND.WL2 содержит номер подтверждения последнего сегмента, использованного для обновления SND.WND. Описанная проверка позволяет предотвратить использование старых сегментов для обновления окна.</p><p class="b">Состояние FIN-WAIT-1</p><p>В дополнение к операциям, выполняемым в состоянии ESTABLISHED (см. выше), если наш запрос FIN уже подтвержден, соединение переводится в состояние FIN-WAIT-2 и продолжается обработка для этого состояния.</p><p class="b">Состояние FIN-WAIT-2</p><p>В дополнение к операциям, выполняемым в состоянии ESTABLISHED (см. выше), если очередь повторной передачи пуста, на пользовательский запрос CLOSE может быть передан отклик "ok", но TCB не удаляется.</p><p class="b">Состояние CLOSE-WAIT</p><p>Выполняются те же операции, что и для состояния ESTABLISHED.</p><p class="b">Состояние CLOSING</p><p>В дополнение к операциям, выполняемым в состоянии ESTABLISHED (см. выше), если ACK подтверждает наш запрос FIN, соединение переводится в состояние TIME-WAIT, в остальных случаях сегмент игнорируется.</p><p class="b">Состояние LAST-ACK</p><p>В этом состоянии могут доставляться только подтверждения для запроса FIN. Если запрос FIN уже подтвержден, удаляется TCB и соединение переводится в состояние CLOSED с возвратом управления.</p><p class="b">Состояние TIME-WAIT</p><p>В этом состоянии могут доставляться только повторы сегмента FIN с удаленной стороны. Подтвердите доставку и запустите заново отсчет тайм-аута 2 MSL.</p></li><li><p class="b">Проверка бита URG</p><p class="b">Состояния ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2</p><p>При установленном бите URG, задается значение RCV.UP &lt;- max(RCV.UP,SEG.UP) и пользователю передается сигнал о том, что удаленная сторона имеет срочные данные, если указатель срочности (RCV.UP) превышает порядковые номера воспринятых данных. Если пользователю уже был передан такой сигнал (или пользователь находится в режиме "urgent") для продолжающейся последовательности срочных данных, повторять такой сигнал не нужно.</p><p class="b">Состояния CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>В этих состояниях флаг срочности не должен появляться, поскольку удаленная сторона уже передала запрос FIN. Игнорируйте URG.</p></li><li><p class="b">Обработка содержимого сегмента</p><p class="b">Состояния ESTABLISHED; FIN-WAIT-1; FIN-WAIT-2</p><p>В состоянии ESTABLISHED возможна доставка содержимого сегмента в пользовательские буферы RECEIVE. Содержимое сегмента может переноситься в буфер до его заполнения или до завершения сегмента. Если закончившийся сегмент содержит флаг PUSH, пользователю передается уведомление путем установки флага PUSH при возврате управления.</p><p>Когда TCP отвечает за доставку данных пользователю, требуется также подтверждать получение данных.</p><p>Когда TCP несет ответственность за доставку данных, значение RCV.NXT увеличивается на размер принятых данных и уточняется значение RCV.WND с учетом текущего размера буфера. Сумма RCV.NXT и RCV.WND при этом не должна уменьшаться.</p><p>Пожалуйста, не забывайте о предложениях по управлению окном, рассмотренных в параграфе 3.7. Передается подтверждение в форме:</p><pre>&lt;SEQ=SND.NXT&gt;&lt;ACK=RCV.NXT&gt;&lt;CTL=ACK&gt;</pre><p>Это подтверждение должно включаться в сегмент, который будет передаваться с минимальной возможной задержкой.</p><p class="b">Состояния CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>В этих состояниях сегменты данных не должны приходить, поскольку с удаленной стороны уже получен сигнал FIN. Игнорируйте такие сегменты.</p></li><li><p class="b">Проверка бита FIN</p><p>Не обрабатывайте флаг FIN для состояний CLOSED, LISTEN или SYN-SENT, поскольку значение SEG.SEQ не может быть проверено; отбрасывайте сегмент с возвратом управления.</p><p>Если бит FIN установлен, пользователю передается сигнал "connection closing" (соединение закрывается) и все ожидающие вызовы RECEIVE должны вернуть такое же сообщение, увеличив RCV.NXT на размер FIN и передав подтверждение для FIN. Отметим, что FIN вызывает PUSH для всех сегментов, которые еще не доставлены пользователю.</p><p class="b">Состояния SYN-RECEIVED; ESTABLISHED</p><p>Переход в состояние CLOSE-WAIT.</p><p class="b">Состояние FIN-WAIT-1</p><p>Если наш запрос FIN уже подтвержден (возможно в данном сегменте), соединение переводится в состояние TIME-WAIT, начинается новый отсчет для времени ожидания и выключаются другие таймеры. В противном случае соединение переводится в состояние CLOSING.</p><p class="b">Состояние FIN-WAIT-2</p><p>Переход в состояние TIME-WAIT, начинается новый отсчет для времени ожидания и выключаются другие таймеры.</p><p class="b">Состояния CLOSE-WAIT; CLOSING; LAST-ACK; TIME-WAIT</p><p>Состояние сохраняется неизменным. В состоянии TIME-WAIT заново запускается отсчет тайм-аута 2 MSL.</p></li></ol><p>Завершение обработки и возврат управления.</p></li></ol></li></ul></div></div><noindex><div class="pages"><p class="r"> <b>Страница 47 из 49</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../793.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="46"><b>&larr;</b></a></li><li><a class="x" href="../793.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a class="x" href="37">37</a></li><li><a class="x" href="38">38</a></li><li><a class="x" href="39">39</a></li><li><a class="x" href="40">40</a></li><li><a href="41">41</a></li><li><a href="42">42</a></li><li><a href="43">43</a></li><li><a href="44">44</a></li><li><a href="45">45</a></li><li><a href="46">46</a></li><li class="this"><span>47</span></li><li><a href="48">48</a></li><li><a href="49">49</a></li><li><a title="На страницу вперед" href="48">&rarr;</a></li><li><a title="Последняя страница" href="49">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 793 - Протокол управления передачей (TCP)",disqus_identifier="793.rfc",disqus_url="http://rfc2.ru/793.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>