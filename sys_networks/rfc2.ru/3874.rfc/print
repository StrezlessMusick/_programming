<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><link rel="canonical" href="../3874.rfc" /><meta name="Robots" content="noindex, nofollow" /><title>Перевод RFC 3874 — Необратимая 224-битовая хэш-функция SHA-224</title><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../3874.rfc">RFC 3874 — Необратимая 224-битовая хэш-функция SHA-224</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 3874</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">A 224-bit One-way Hash Function: SHA-224</span></a></dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Информационный</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2004-09-01">Сентябрь 2004</time></dd><dd><div class="icon i5"></div> Автор: <span itemprop="author">Russell Housley</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div id="text" itemprop="articleBody"><h3>Статус документа</h3><p>В этом документе содержится информация для сообщества Internet. Документ не содержит каких-либо стандартов Internet. Допускается свободное распространение документа.</p><h3>Тезисы</h3><p>В данном документе описывается 224-битовая необратимая хэш-функция SHA-224, основанная на SHA-256, но использующая другое начальное значение и размер 224 бита.</p><h2>1. Введение</h2><p>В этом документе содержится спецификация 224-битовой необратимой хэш-функции, носящей название SHA-224. Национальный институт стандартов и технологии США (NIST) в документе FIPS 180-2 Change Notice от 28 февраля 2004 подтвердил необратимость хэш-функции SHA-224. Необратимые хэш-функции называют также цифровыми подписями. Функция SHA-224 основана на алгоритме SHA-256, обеспечивающем необратимое 256-битовое хэширование, подтвержденное NIST [SHA2]. Расчет хэш-значения SHA-224 выполняется в два этапа. Сначала определяется значение SHA-256 (при этом используется иное стартовое значение) и затем полученный результат отсекается до 224 битов.</p><p>NIST занимается разработкой руководства по ключам шифрования и недавно этот институт опубликовал для комментариев черновой вариант документа [NISTGUIDE]. В руководстве обсуждаются пять уровней конфиденциальности с ключами размером 80, 112, 128, 192 и 256 битов. Для всех этих уровней, за исключением одного, доступны необратимые хэш-функции. SHA-224 предназначена для заполнения пустого места в этом списке. Необратимая хэш-функция SHA-224 обеспечивает ключи размером 112 битов, что совпадает с одним из общепринятых вариантов Triple-DES [3DES].</p><p>В этом документе приводится спецификация необратимой хэш-функции SHA-224 для сообщества Internet, а также идентификаторы объектов для использования в протоколах, основанных на ASN.1.</p><h3>1.1. Вопросы применения</h3><p>Поскольку функция SHA-224 основана на SHA-256, при ее вычислении выполняется примерно такой же объем работ. Однако, несмотря на практически одинаковую сложность вычислений, SHA-224 хорошо подходит для использования в качестве необратимой хэш-функции, генерирующей ключи размером 112 битов. Использование другого стартового значения и последующее отсечение созданных сигнатур SHA-256 позволяет однозначно идентифицировать сигнатуры SHA-224, рассчитанные для тех же данных.</p><p>Для некоторых сред важен каждый передаваемый октет. В таких случаях сокращение сигнатуры на 4 октета по сравнению с SHA-256 имеет важное значение.</p><p>Исходя из сказанного выше можно предложить следующие рекомендации по использованию функции:</p><ul class="dot"><li>при использовании с алгоритмами шифрования, основанными на ключах размером 112 битов SHA-224 обеспечивает подходящую необратимую хэш-функцию;</li><li>когда компактность сигнатур не играет важной роли, следует использовать SHA-256, а не SHA-224.</li></ul><h3>1.2. Терминология</h3><p>Ключевые слова необходимо (MUST), недопустимо (MUST NOT), требуется (REQUIRED), нужно (SHALL), не нужно (SHALL NOT), следует (SHOULD), не следует (SHOULD NOT), рекомендуется (RECOMMENDED), возможно (MAY), необязательно (OPTIONAL) в данном документе должны интерпретироваться в соответствии с [STDWORDS].</p><h2>2. Описание SHA-224</h2><p>Алгоритм SHA-224 может использоваться при расчете необратимых хэш-значений для сообщений размером до 2^64 битов.</p><p>SHA-224 использует алгоритм SHA-256 [SHA2]. Для расчета необратимой хэш-функции SHA-256 использует опись из шестидесяти четырех 32-битовых слов, восемь 32-битовых рабочих переменных и создает хэш-значение из восьми 32-битовых слов.</p><p>Функция SHA-224 определяется также, как SHA-256, с двумя отличиями:</p><ol><li><p>Для SHA-224 начальное хэш-значение представляет собой восемь 32-битовых рабочих переменных, совместно обозначаемых как H, которые должны быть равны:</p><pre>H_0 = c1059ed8               H_4 = ffc00b31
H_1 = 367cd507               H_5 = 68581511
H_2 = 3070dd17               H_6 = 64f98fa7
H_3 = f70e5939               H_7 = befa4fa4</pre></li><li><p>SHA-224 просто использует первые сеть 32-битовых слов результата SHA-256. Таким образом, окончательное значение H представляет собой конкатенацию (||) семи компонент:</p><pre>H_0 || H_1 || H_2 || H_3 || H_4 || H_5 || H_6</pre></li></ol><h2>3. Тестовые векторы</h2><p>В этом параграфе описаны три тестовых вектора, которые могут использоваться для проверки реализации алгоритма SHA-224.</p><h3>3.1. Вектор #1</h3><p>Предположим, что хэшируемое сообщение содержит 24-битовую строку ASCII "abc", которая эквивалентна двоичной строке:</p><pre>01100001 01100010 01100011</pre><p>Функция SHA-224 в этом случае должна возвращать значение (в шестнадцатеричном представлении):</p><pre>23097d22 3405d822 8642a477 bda255b3 2aadbce4 bda0b3f7 e36c9da7</pre><h3>3.2. Вектор #2</h3><p>При хэшировании 448-битовой строки ASCII "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq" функция SHA-224 должна возвращать значение (в шестнадцатеричном представлении):</p><pre>75388b16 512776cc 5dba5da1 fd890150 b0c6455c b4f58b19 52522525</pre><h3>3.3. Вектор #3</h3><p>При хэшировании сообщения, содержащего 1 000 000 символов "a", функция SHA-224 должна возвращать хэш-значение (в шестнадцатеричном представлении):</p><pre>20794655 980c91d8 bbb4c1ea 97618a4b f03f4258 1948b2ee 4ee7ad67</pre><h2>4. Идентификатор объекта</h2><p>NIST выделил идентификатор объекта ASN.1 [X.208-88, X.209-88] для SHA-224. Некоторые протоколы используют идентификатор объекта для именования необратимых хэш-функций. Примером такого протокола является CMS [CMS]. Разработчики такого типа протоколов, которые используют SHA-224, должны указывать идентификатор объекта.</p><pre>id-sha224  OBJECT IDENTIFIER  ::=  { joint-iso-itu-t(2)
                country(16) us(840) organization(1) gov(101)
                csor(3) nistalgorithm(4) hashalgs(2) sha224(4) }</pre><h2>5. Вопросы безопасности</h2><p>Необратимые хэш-функции обычно используются с другими криптографическими алгоритмами (такими, как алгоритмы создания цифровых подписей и кодов аутентификации сообщений) или при генерации случайных значений. При использовании необратимой хэш-функции вместе с другим алгоритмом могут присутствовать указанные где-либо требования по уровню безопасности (размер ключа). Например, если сообщение подписывается сигнатурой размером 128 битов, алгоритм создания такой сигнатуры может потребовать использования необратимой хэш-функции, возвращающей хэш-значение такого же размера. SHA-224 генерирует 112-битовые хэш-значения, в общем случае пригодные для Triple-DES [3DES].</p><p>Этот документ содержит спецификацию SHA-224 для сообщества Internet. Автор не дает гарантий безопасности для того или иного использования алгоритма. Однако, поскольку применение SHA-256 обеспечивает ожидаемый уровень безопасности, SHA-224 также будет обеспечивать ожидаемый уровень.</p><h2>6. Литература</h2><h3>6.1. Нормативные документы</h3><table itemprop="references"><tr><td>[SHA2]</td><td>Federal Information Processing Standards Publication (FIPS PUB) 180-2, Secure Hash Standard, 1 August 2002.</td></tr><tr><td>[STDWORDS]</td><td>Bradner, S., «Key words for use in RFCs to Indicate Requirement Levels», BCP 14, RFC 2119, Март 1997.</td></tr></table><h3>6.2. Информационные ссылки</h3><table itemprop="references"><tr><td>[3DES]</td><td>American National Standards Institute. ANSI X9.52-1998, Triple Data Encryption Algorithm Modes of Operation. 1998.</td></tr><tr><td>[CMS]</td><td>Housley, R., «Cryptographic Message Syntax (CMS)», RFC 3852, Июль 2004.</td></tr><tr><td>[NISTGUIDE]</td><td>National Institute of Standards and Technology. Second Draft: «Key Management Guideline, Part 1: General Guidance.» June 2002. [http://csrc.nist.gov/encryption/kms/guideline-1.pdf]</td></tr><tr><td>[X.208-88]</td><td>CCITT Recommendation X.208: Specification of Abstract Syntax Notation One (ASN.1). 1988.</td></tr><tr><td>[X.209-88]</td><td>CCITT Recommendation X.209: Specification of Basic Encoding Rules for Abstract Syntax Notation One (ASN.1). 1988.</td></tr></table><h2>7. Благодарности</h2><p>Большое спасибо Джиму Шааду (Jim Schaad) за генерацию тестовых векторов. Для подтверждения корректности этих векторов была использована реализация Брайана Глэдмана (Brian Gladman).</p><h2>8. Адреса авторов</h2><p>Russell Housley<br />Vigil Security, LLC<br />918 Spring Knoll Drive<br />Herndon, VA 20170 USA<br />EMail: <bdo dir="rtl">&#109;&#111;&#99;&#46;&#99;&#101;&#115;&#108;&#105;&#103;&#105;&#118;&#64;&#121;&#101;&#108;&#115;&#117;&#111;&#104;</bdo></p></div></div><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 3874 - Необратимая 224-битовая хэш-функция SHA-224",disqus_identifier="3874.rfc",disqus_url="http://rfc2.ru/3874.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true, ut:"noindex"}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>