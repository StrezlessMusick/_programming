<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="12" /><link rel="next" href="14" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 4422 — Простой уровень аутентификации и защиты (SASL), стр. 13</title><meta name="author" content="Алексей Мельников, Kurt D. Zeilenga" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../4422.rfc">RFC 4422 — Простой уровень аутентификации и защиты (SASL)</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 4422</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Simple Authentication and Security Layer (SASL)</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 2222</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2006-06-01">Июнь 2006</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">Алексей Мельников</span>, <span itemprop="author">Kurt D. Zeilenga</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 4422,</span> Страница 13 из 26</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../4422.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="12"><b>&larr;</b></a></li><li><a class="x" href="../4422.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a href="9">9</a></li><li><a href="10">10</a></li><li><a href="11">11</a></li><li><a href="12">12</a></li><li class="this"><span>13</span></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a accesskey="3" title="На страницу вперед" href="14">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="26">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h2 id="p5">5. Требования к механизмам</h2><p>Спецификации механизмов SASL должны обеспечивать следующую информацию:</p><ol><li><p>Имя механизма (см. параграф 3.1). Это имя должно быть зарегистрировано, как описано в параграфе 7.1.</p></li><li><p>Определение запросов сервера (server-challenge) и откликов клиента (client-response) в процессе аутентификационного обмена, а также:</p><ul class="lat"><li><p>Индикацию того, начинает работу механизма клиент (client-first), сервер (server-first) или это может изменяться (variable). Если механизм SASL определен, как client-first, а клиент не передает начального отклика в запросе на аутентификацию, первый запрос (challenge) сервера должен быть пустым (механизм EXTERNAL является примером такого случая). Если механизм SASL определен, как variable, спецификация должна указывать поведение сервера для тех случаев, когда начальный отклик в клиентском запросе на аутентификацию опущен (механизм DIGEST-MD5 [DIGEST-MD5] является примером для этого случая). Если механизм SASL определен, как server-first, для клиента недопустимо передавать начальный отклик в запросе на аутентификацию (примером для этого случая может служить механизм CRAM-MD5 [CRAM-MD5]).</p></li><li><p>Индикация того, предполагается ли со стороны сервера предоставление дополнительных данных, показывающих успех при аутентификации. Если такие данные ожидаются и сервер шлет их как запрос (challenge), спецификация должна показывать, что в ответ на такой запрос передается пустой отклик. При разработке механизмов SASL следует минимизировать число запросов и откликов, требуемых для выполнения аутентификационного обмена.</p></li></ul><p>При разработке механизмов SASL следует минимизировать число запросов и откликов, требуемых для выполнения аутентификационного обмена.</p></li><li><p>Идентификация возможности поддержки механизмом передачи строк идентификации при проверке полномочий (см. параграф 3.4.1). Хотя некоторые унаследованные механизмы не способны передавать строки authorization identity (это означает, что для данного механизма authorization identity во всех случаях является пустой строкой), новым механизмам следует поддерживать передачу строк идентификации при проверке полномочий. Механизмам не следует поддерживать одновременно передачу отсутствия строк authorization identity и передачу пустых строк идентификации при проверке полномочий.</p><p>Механизмы, способные передавать строки authorization identity, должны поддерживать возможность передачи произвольных непустых последовательностей символов Unicode, включая строки с символами NUL (U+0000). Механизмам следует использовать формат преобразования UTF-8 [RFC3629]. В спецификации должно быть указано, каким образом включаются в строки идентификации все последовательности символов, имеющие специальное значение для данного механизма, во избежание неоднозначности при декодировании строк authorization identity. Обычно механизмы, использующие специальные символы, требуют для таких символов добавки специального escape-символа или представления таких символов в виде последовательности (после преобразования в заданный формат Unicode) с использованием схем кодирования данных типа Base64 [RFC3548].</p></li><li><p>Спецификация должна указывать, предлагает ли механизм уровень защиты. Если механизм предлагает такой уровень, спецификация должна детально описывать защиту и другие услуги, обеспечиваемые этим уровнем, а также способы реализации сервиса.</p></li><li><p>Если используемая механизмом криптографическая технология поддерживает защиту целостности данных, спецификация механизма должна защищать целостность при передаче строк authorization identity и согласовании уровня защиты.</p></li></ol><p>Механизмам SASL следует быть нейтральными по отношению к протоколам.</p><p>Механизмам SASL следует использовать существующие формы свидетельств (credential) и идентификации (identity), а также связанный с ними синтаксис и семантику.</p><p>Механизмам SASL следует использовать формат преобразования UTF-8 [RFC3629] для представления передаваемых кодов (code point) Unicode [Unicode].</p><p>Во избежание проблем интероперабельности в результате различной нормализации, когда механизм вызывается для символьных данных (отличных от строк authorization identity), которые будут использоваться в качестве входной информации для криптографических функций и/или функций сравнения, спецификация должна подробно описывать когда и где готовятся символьные данные (включая любую нормализацию) для передачи их функциям, чтобы обеспечить корректную работу.</p><p>Для простых имен пользователей и паролей в аутентификационных свидетельствах в качестве алгоритма подготовки следует указывать SASLprep [RFC4013] (профиль алгоритма подготовки StringPrep [RFC3454]).</p><p>Механизмам не следует использовать строки authorization identity при генерации каких-либо долгоживущих криптографических ключей или хэш-значений, поскольку не существует требования, по которому строки authorization identity должны быть каноническими. Долгосрочный в данном случае означает существование в течение срока, превышающего продолжительность аутентификационного обмена. Т. е., поскольку разные клиенты (одного или различных протоколов) могут предоставлять различные строки authorization identity, которые семантически будут эквивалентны, использование таких строк для генерации криптографических ключей и хэш-значений может приводить к проблемам интероперабельности и иным сложностям.</p></div></div><noindex><div class="pages"><p class="r"> <b>Страница 13 из 26</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../4422.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="12"><b>&larr;</b></a></li><li><a class="x" href="../4422.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a href="9">9</a></li><li><a href="10">10</a></li><li><a href="11">11</a></li><li><a href="12">12</a></li><li class="this"><span>13</span></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a title="На страницу вперед" href="14">&rarr;</a></li><li><a title="Последняя страница" href="26">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 4422 - Простой уровень аутентификации и защиты (SASL)",disqus_identifier="4422.rfc",disqus_url="http://rfc2.ru/4422.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>