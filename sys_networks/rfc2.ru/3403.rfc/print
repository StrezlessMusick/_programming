<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><link rel="canonical" href="../3403.rfc" /><meta name="Robots" content="noindex, nofollow" /><title>Перевод RFC 3403 — Система DDDS. Часть 3 - База данных DNS</title><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../3403.rfc">RFC 3403 — Система DDDS. Часть 3 - База данных DNS</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 3403</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank"><span itemprop="alternativeHeadline">Dynamic Delegation Discovery System - Part Three: The Domain Name System (DNS) Database</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 2168, RFC 2915</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2002-10-03">Октябрь 2002</time></dd><dd><div class="icon i5"></div> Автор: <span itemprop="author">Michael Mealling</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div id="text" itemprop="articleBody"><h3>Статус документа</h3><p>Этот документ содержит спецификацию стандартного протокола, предложенного сообществу Internet, и служит приглашением к дискуссии в целях развития. Текущее состояние стандартизации и статус описанного здесь протокола можно узнать из документа "Internet Official Protocol Standards" (STD 1). Документ может распространяться без ограничений.</p><h3>Тезисы</h3><p>Этот документ описывает Базу данных DDDS (Dynamic Delegation Discovery System — динамическая система детектирования передачи полномочий), использующую систему DNS в качестве распределенной базы Правил. Ключами являются доменные имена и Правила представляются с использованием записей NAPTR RR. Поскольку этот документ отменяет действие RFC 2915, он является официальной спецификацией для записей NAPTR в DNS. Документ также является частью серии, полностью указанной в документе "Dynamic Delegation Discovery System (DDDS) Part One: The Comprehensive DDDS" (RFC 3401). Важно подчеркнуть, что понимание любого документа этой серии невозможно без прочтения других документов.</p><h2>Оглавление</h2><ul class="map"><li><a href="print#p1">1. Введение</a></li><li><a href="print#p2">2. Терминология</a></li><li><a href="print#p3">3. Спецификация Базы данных DDDS</a></li><li><a href="print#p4">4. Формат NAPTR RR</a></li><li class="lia"><a href="print#p4.1">4.1. Формат пакета</a></li><li class="lia"><a href="print#p4.2">4.2. Обработка дополнительной информации</a></li><li class="lib"><a href="print#p4.2.1">4.2.1. Обработка раздела Additional серверами DNS</a></li><li class="lib"><a href="print#p4.2.2">4.2.2. Обработка раздела Additional Information преобразователями и приложениями</a></li><li class="lia"><a href="print#p4.3">4.3. Формат Master-файла</a></li><li><a href="print#p5">5. Спецификация Приложения</a></li><li><a href="print#p6">6. Примеры</a></li><li class="lia"><a href="print#p6.1">6.1. Пример URN</a></li><li class="lia"><a href="print#p6.2">6.2. Пример E164</a></li><li><a href="print#p7">7. Совет администраторам DNS</a></li><li><a href="print#p8">8. Примечания</a></li><li><a href="print#p9">9. Согласование с IANA</a></li><li><a href="print#p10">10. Вопросы безопасности</a></li><li><a href="print#p.references">Литература</a></li></ul><h2 id="p1">1. Введение</h2><p>Система DDDS обеспечивает возможность организации связей между строками данных для поддержки систем передачи полномочий (делегирования0 с динамической конфигурацией. Работа DDDS основана на отображении некой уникальной строки на данные, хранящиеся в Базе данных DDDS путем итеративного применения правил преобразования строк до выполнения условий завершения.</p><p>Этот документ описывает способ, при котором используется система DNS в качестве хранилища Правил, обеспечивающих функционирование Приложения DDDS. Документ не задает какого-либо конкретного приложения или сценария использования. Вся серия документов описана в "Dynamic Delegation Discovery System (DDDS) Part One: The Comprehensive DDDS" (RFC 3401) [1]. Важно подчеркнуть, что понимание любого документа этой серии невозможно без прочтения других документов.</p><p>Описанная здесь запись DNS NAPTR была изначально предложена рабочей группой URN в качестве способа представления наборов правил в DNS, позволяющих разобрать делегированную часть URI таким образом, чтобы она могла быть изменена и ределегирована с течением времени. В результате получились записи RR, включающие регулярные выражения, которые используются клиентскими программами для преобразования строк в доменные имена.</p><p>Регулярные выражения были выбраны за их возможность компактно выражать большие объемы информации для передачи в обычно небольших пакетах DNS.</p><p>Со временем процесс был обобщен для других Приложений и Баз данных о Правилах. В этом документе определена База данных о Правилах без задания какого-либо Приложения, поскольку может существовать множество Приложений, способных использовать эту Базу данных о Правилах.</p><h2 id="p2">2. Терминология</h2><p>Ключевые слова необходимо (MUST), недопустимо (MUST NOT), требуется (REQUIRED), нужно (SHALL), не следует (SHALL NOT), следует (SHOULD), не нужно (SHOULD NOT), рекомендуется (RECOMMENDED), возможно (MAY), необязательно (OPTIONAL) в данном документе интерпретируются в соответствии с [6].</p><p>Все прочие термины, особенно выделенные шрифтом, заимствованы из [3].</p><h2 id="p3">3. Спецификация Базы данных DDDS</h2><ul><li class="b">General Description — общее описание</li><li class="lib"><p>Эта база данных использует систему DNS, описанную в [8] и [7].</p><p>Набором символов, используемых для задания различных значений записей NAPTR является UTF-8 [17]. Следует соблюдать осторожность в тех случаях, когда ввод или вывод выражений для замены содержит коды, выходящие за пределы эквивалентности ASCII/Unicode в UTF-8 — любые символы UTF-8 интерпретируются как последовательности кодовых точек (code-point), а не байтов. Это сделано для поддержки других языков в расширенных регулярных выражениях POSIX, чтобы обеспечить возможность соответствия предназначенным кодовым точкам. Недопустимо писать выражения для замены так, чтобы они зависели от локальных установок POSIX, поскольку это приведет к потере выражениями для замены их универсальности в применении.</p><p>Все записи о ресурсах DNS имеют связанное с ними значение времени жизни TTL. По истечении с момента отыскания записи соответствующего числа секунд корректность записи теряется м нужно сделать новый запрос для получения новых записей. Таким образом, как указано в Алгоритме DDDS, могут возникать ситуации, когда срок действия данного Правила истекает. В тех случаях, когда приложение пытается вернуться к ранее найденным наборам Правил (в случае неподходящего пути передачи полномочий или при отказе сервера) приложение должно обеспечить гарантию того, что ни одна из записей, к которым происходит возврат, не перестала быть корректной по времени жизни. Если истек срок действия хотя бы одной записи приложение должно вернуть процесс на первый шаг алгоритма.</p></li><li class="b">Key Format — формат ключей</li><li class="lib">Ключ представляет собой корректно сформированное доменное имя DNS.</li><li class="b">Lookup Request — поисковый запрос</li><li class="lib">Чтобы запросить набор правил для данного Ключа, клиент вводит запрос, соответствующий стандартным правилам DNS, для записис NAPTR RR, соответствующей данному доменному имени.</li><li class="b">Lookup Response — отклик при поиске</li><li class="lib">Отклик на запрос для данного Ключа (доменное имя) будет серией записей NAPTR. Формат записи NAPTR описан в главе 4.</li><li class="b">Rule Insertion Procedure — процедура вставки правил</li><li class="lib">Правила вставляются путем добавления новых записей в соответствующую зону DNS. Если Правило производит Ключ, который существует в конкретной зоне, тогда только объект, имеющий административный контроль над этой зоной, может задавать Правило, связанное с таким Ключом.</li><li class="b">Collision Avoidance — предотвращение конфликтов</li><li class="lib"><p>В том случае, когда два Приложения могут использовать эту Базу данных (на практике это случай использования базы приложениями ENUM и URI Resolution, описанный в параграфе 6.2), возможно возникновение конфликта между правилами, когда в домене появляются две записи NAPTR, применимые более, чем к одному Приложению. Существуют три способа предотвращения конфликтов.</p><ul class="dot"><li><p>Создание в домене новой зоны, которая содержит только записи NAPTR, которые подходят для Приложения. Например, все записи URI Resolution могут размещаться в зоне urires.example.com, а все записи ENUM — в зоне enum.example.com. В том случае, когда такое решение невозможно по причине отсутствия контроля над восходящим делегированием, следует использовать второй метод.</p></li><li><p>Создание регулярного выражения, содержащего часть строки AUS, достаточную для однозначной идентификации приложения. Например, URI Resolution может использовать имя схемы слева для привязки регулярного выражения к соответствию этой схеме. Связанные с ENUM записи в той же зоне могут привязываться слева к соответствию символу "+", который определен в ENUM как начало каждой строки AUS. В результате данной строке AUS может соответствовать лишь одна из записей, а не две.</p></li><li><p>Если два приложения используют различные значения Flags или Services, тогда записи другого Приложения можно игнорировать, поскольку они не будут соответствовать значению Services/Flags.</p></li></ul></li></ul><h2 id="p4">4. Формат NAPTR RR</h2><h3 id="p4.1">4.1. Формат пакета</h3><p>Формат пакетов NAPTR RR показан на рисунке. Код типа DNS для NAPTR имеет значение 35.</p><pre>                                1  1  1  1  1  1
  0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                     ORDER                     |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
|                   PREFERENCE                  |
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
/                     FLAGS                     /
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
/                   SERVICES                    /
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
/                    REGEXP                     /
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+
/                  REPLACEMENT                  /
/                                               /
+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+</pre><p>Определения &lt;character-string&gt; (строка символов) и &lt;domainname&gt; (доменное имя) приведены в RFC 1035 [7].</p><ul><li class="b">ORDER</li><li class="lib">16-битовое целое число без знака, задающее порядок, в котором должны обрабатываться записи NAPTR для точного представления упорядоченного списка Правил. Упорядочивание идет от меньших значений к большим. Если две записи имеют одинаковое значение порядка, считается, что они являются одним правилом и выбор следует делать на основе комбинации значений Preference и Services</li><li class="b">PREFERENCE</li><li class="lib"><p>Хотя это поле и носит название «предпочтение» в соответствии с принятой в DNS терминологией, в Алгоритме DDDS оно является эквивалентом значения Priority. Это 16-битовое целое число без знака, которое задает порядок, в котором следует обрабатывать записи NAPTR с одинаковыми значениями поля Order (младшие номера обрабатываются раньше старших). Это похоже на поле Preference в записи MX и используется так, чтобы администратор домена мог направить клиентов на более подходящие хосты или менее отягощенные протоколы. Клиент может обращаться к записям с более высокими значениями поля Preference, если у клиента есть достаточные основания для этого (например, отсутствие поддержки некоторых протоколов или служб).</p><p>Важное различие между полями Order и Preference заключается в том, что после того, как найдено соответствие, для клиента недопустимо обращаться к записям с другими значениями поля Order, но можно обрабатывать записи с одинаковыми значениями Order и различными значениями Preferences. Единственное исключение из этого правила указано в Примечании к спецификации алгоритма DDDS по части разрешения клиенту использовать более сложное определение сервиса между п. 3 и п. 4 в алгоритме. Значение Preference используется для обозначения более высокого качества сервиса в правилах, которые рассматриваются как одинаковые с точки зрения передачи полномочий, но не с точки зрения распределения нагрузки.</p><p>Важно отметить, что DNS поддерживает несколько механизмов распределения нагрузки и если распределение нагрузки требуется как сервис, для распределения нагрузки следует использовать такие средства, как записи SRV или множественные записи типа A.</p></li><li class="b">FLAGS</li><li class="lib"><p>Строка символов (&lt;character-string&gt;), содержащая флаги для контроля деталей перезаписи и интерпретации полей записи. Флаги представляют собой одиночные буквы от A до Z или цифры от 0 до 9. регистр букв во внимание не принимается. Поле флагов может быть пустым.</p><p>Приложение само задает, как оно использует эту Базу данных для определения флагов в этом поле. Приложение должно определить, какие из флагов трактуются как завершающие.</p></li><li class="b">SERVICES</li><li class="lib">Строка символов (&lt;character-string&gt;), задающая Параметры сервиса (Service Parameters), применимые к данному пути передачи полномочий. Значения этого поля определяются спецификацией Приложения.</li><li class="b">REGEXP</li><li class="lib"><p>Строка символов (&lt;character-string&gt;), содержащая выражение для замены, которое применяется к исходной строке, сохраняемой клиентом для конструирования следующего искомого доменного имени. Синтаксис этого поля описан в спецификации Алгоритма DDDS.</p><p>Как указано в алгоритме DDDS, регулярные выражения недопустимо использовать в кумулятивной манере — они должны применяться исключительно к исходной строке, сохраняемой клиентом, а не к доменным именам, созданным предыдущей перезаписью NAPTR. Второй вариант представляется заманчивым для некоторых приложений, но опыт показывает что такой вариант подвержен отказам, склонен к возникновению ошибок и очень сложен в отладке.</p></li><li class="b">REPLACEMENT</li><li class="lib"><p>Строка &lt;domain-name&gt;, которая является следующим доменным именем для запроса в зависимости от возможных значений поля флагов. Это поле используется в тех случаях, когда регулярное выражение представляет собой простую операцию замены. Любое значение в этом поле должно быть полным доменным именем. Сокращение имен для этого поля не применяется.</p><p>Это поле вместе с полем REGEXP создают Выражение для замены в Алгоритме DDDS. Существование этого поля обусловлено историческими причинами, связанными с возможностью сокращения имен в DNS. Упомянутые поля являются взаимоисключающими. Если возвращена запись, имеющая значения для обоих полей, это рассматривается как ошибка и следует игнорировать результат или возвращать сообщение об ошибке.</p></li></ul><h3 id="p4.2">4.2. Обработка дополнительной информации</h3><p>Обработка раздела Additional требует обновленных серверов DNS, поэтому пройдет много лет прежде, чем предложения смогут столкнуться с имеющими отношение к делу записями в разделе дополнительной информации.</p><h4 id="p4.2.1">4.2.1. Обработка раздела Additional Information серверами DNS</h4><p>Серверы DNS могут добавлять в раздел дополнительной информации наборы RRset, имеющие отношение к ответу и такой же уровень аутентичности, что и данные в разделе Answer. В общем случае это могут быть записи A и SRV, в зависимости от приложения.</p><h4 id="p4.2.2">4.2.2. Обработка раздела Additional Information преобразователями и приложениями</h4><p>Приложения могут проверять раздел Additional Information на предмет наличия имеющих отношение к делу записей, но для Приложений недопустимо требовать наличия каких-либо записей в разделе Additional Information любого отклика DNS для обеспечения возможности работы клиентов. Все Приложения должны быть способны обрабатывать отклики от серверов имен, которые никогда не заполняют в откликах раздел Additional Information.</p><h3 id="p4.3">4.3. Формат Master-файла</h3><p>Формат master-файла соответствует стандартным правилам RFC 1035. Поля Order и Preference, будучи 16-битовыми целыми числами без знака, могут принимать значения от 0 до 65535. Поля Flags, Services и Regexp являются заключенными в кавычки строками (&lt;character-string&gt;). Поскольку поле Regexp может содержать множество символов обратной дробной черты ((backslash), это поле следует трактовать с осторожностью. Работа с регулярными выражениями рассмотрена в главе 7.</p><h2 id="p5">5. Спецификация Приложения</h2><p>Эта База данных DDDS применима для любых приложений, использующих алгоритм DDDS. В дополнение к элементам, требуемым для спецификации Приложения DDDS, приложения, желающие использовать эту базу данных, должны определить перечисленные ниже значения.</p><ul class="dot"><li><p>К какому домену относится Ключ, создаваемый правилом First Well Known Rule. Каждое приложение должно обеспечивать гарантию того, что его правила не будут конфликтовать с правилами, используемыми другими приложениями, которые работают в этой же Базой данных. Например, приложение foo может задать, что все его ключи, создаваемые первым общеизвестным правилом будут относиться к зоне foo.net.</p></li><li><p>Какие значения допустимы в полях Services и Protocols.</p></li><li><p>Каким предполагается вывод завершающего правила перезаписи в дополнение к способу реального представления и использования флагов.</p></li></ul><h2 id="p6">6. Примеры</h2><h3 id="p6.1">6.1. Пример URN</h3><p>Записи NAPTR изначально создавались для использования с сервисом URN RDS [15]. В этом примере рассматривается, как конкретное имя URN будет использовать запись NAPTR для поиска преобразователя, который может ответить на вопрос о URN. Спецификация этого Приложения приведена в документе [2].</p><p>Рассмотрим пространство имен a URN, основанное на MIME Content-Id (гипотетическое пространство). URN может иметь вид:</p><pre>urn:cid:199606121851.1@bar.example.com</pre><p>Первое общеизвестное правило Приложения служит для извлечения символов между первым и вторым двоеточием. В нашем примере это будет cid. Приложение также задает, что для построения корректного Ключа в конце результата работы First Well Known Rule следует добавить строку urn.arpa. Окончательным результатом тогда будет служить cid.urn.arpa. Далее клиент запрашивает в DNS записи NAPTR для доменного имени cid.urn.arpa. Результатом будет единственная запись:</p><pre>cid.urn.arpa.
  ;;       order pref flags service        regexp           replacement
  IN NAPTR 100   10   ""    ""  "!^urn:cid:.+@([^\.]+\.)(.*)$!\2!i"    .</pre><p>Поскольку запись является единственной в отклике, проблемы упорядочения не возникает. Поле замены пусто, поэтому используется шаблон, возвращенный в поле regexp. Применим выражение regexp ко всему значению URN для проверки наличия соответствия. Последовательность выражения для замены \2 возвращает подстроку example.com. Поскольку поле флагов пусто, поиск не является завершающим и наш следующий запрос к DNS возвратит большее число записей NAPTR, где новое доменное имя example.com.</p><p>Отметим, что правило не выделяет полное доменное имя из CID, предполагая вместо этого, что CID происходит от хоста и выделяется домен для этого хоста. Когда все хосты (такие, как bar) могут иметь свои записи NAPTR, поддержка таких записей для всех машин сайта может стать чересчур обременительной. Шаблоны здесь не подойдут, поскольку они возвращают результат только в тех случаях, когда в системе отсутствует точное соответствие для имен.</p><p>Запись, возвращенная для запроса example.com может иметь вид:</p><pre>example.com.
;;      order pref flags service           regexp replacement
IN NAPTR 100  50  "a"    "z3950+N2L+N2C"     ""   cidserver.example.com.
IN NAPTR 100  50  "a"    "rcds+N2C"          ""   cidserver.example.com.
IN NAPTR 100  50  "s"    "http+N2L+N2C+N2R"  ""   www.example.com.</pre><p>Продолжая этот пример, отметим, что значения полей Order и Preference равны для всех записей, поэтому клиент может выбрать любую запись. Приложение определяет, что флаг 'a' указывает на завершение поиска и выводом перезаписи будет доменное имя, для которого следует запросить запись типа A. Когда клиент сделает это, он узнает хост, его IP-адрес, протокол и доступные для этого протокола службы. Этой информации клиенту достаточно для контакта с сервером и передачи тому запроса о URN.</p><p>Повторно используем регулярное выражения, содержащее \2, для выделения доменного имени из CID и \. для соответствия символу '.', разделяющему компоненты доменного имени. Поскольку \ является escape-символом, включение самого этого символа должно использовать предшествующий ему дополнительный символ \ (escape). Для случая приведенной выше записис cid.urn.arpa регулярное выражение в master-файле должно иметь вид "!^urn:cid:.+@([^\\.]+\\.)(.*)$!\\2!i". Когда клиент получит реальную запись, та будет преобразована к виду "!^urn:cid:.+@([^\.]+\.)(.*)$!\2!i".</p><h3 id="p6.2">6.2. Пример E164</h3><p>Рабочая группа ENUM подготовила спецификацию сервиса, который позволяет отображать телефонные номера на URI [18]. Строка AUS для Приложения ENUM представляет собой телефонный номер E.164 с удаленными символами «-». Первое общеизвестное правило обеспечивает удаление из телефонного номера ненужные символы и полученное в результате значение используется как первый Ключ. Например, телефонный номер 770-555-1212 в формате E.164 будет иметь вид +1-770-555-1212. Полученный в результате преобразования первый Ключ будет иметь значение 17705551212.</p><p>В настоящее время ENUM является единственным приложением, использующим эту Базу данных. Спецификация приложения задает для преобразования первого Ключа в формат, корректный для Базы данных вставку точек между цифрами и добавления строки «e164.arpa.» в конце. Для упомянутого выше телефонного номера преобразованный ключ будет иметь значение «2.1.2.1.5.5.5.0.7.7.1.e164.arpa.». Это доменное имя используется для нахождения Правил перезаписи, как записей NAPTR.</p><p>Для нашего примера мы можем получить в результате следующие записи NAPTR:</p><pre>$ORIGIN 2.1.2.1.5.5.5.0.7.7.1.e164.arpa.
 IN NAPTR 100 10 "u" "sip+E2U"  "!^.*$!sip:information@foo.se!i"     .
 IN NAPTR 102 10 "u" "smtp+E2U" "!^.*$!mailto:information@foo.se!i"  .</pre><p>Оба приложения ENUM [18] и URI Resolution [4] используют флаг 'u'. Это флаг говорит, что Правило является завершающим и результатом служит значение URI, которое содержит информацию, требуемую для обращения в телефонную компанию. ENUM также использует такой формат для своих параметров сервиса (Service Parameters). Это показывает, что для доступа к телефонному сервису поддерживается протокол Session Initiation Protocol или SMTP (электронная почта).</p><h2 id="p7">7. Совет администраторам DNS</h2><p>Остерегайтесь регулярных выражений. Они не только достаточно сложны сами по себе, но ещ и взаимодействуют с DNS, как было отмечено выше. Любые символы обратной дробной черты (\) в регулярном выражении должны указываться дважды, чтобы в отклике на запрос появился одиночный символ \. Более того, использование двойных символов \ возможно не было протестировано со всеми реализациями серверов DNS.</p><p>Чтобы не возникало ненужных проблем с файлами зон, администраторам рекомендуется использовать при написании правил перезаписи свойство регулярных выражений 'default delimiter'. По спецификации DDDS регулярные выражения начинаются с символа, который будет использоваться в качестве ограничителя. Следовательно, если первым символом регулярного выражения является восклицательный знак (например), регулярное выражение можно создать с использованием меньшего числа символов \.</p><h2 id="p8">8. Примечания</h2><p>Клиент должен обрабатывать множество записей NAPTR, упорядоченных по значению поля Order, и недопустимо просто использовать первую запись, которая обеспечивает известную комбинацию Service Parameter.</p><p>Если множество записей RR имеют одинаковое значение поля Order и все прочие критерии дают одинаковый результат, клиенту следует использовать значение поля Preference для выбора следующей рассматриваемой записи NAPTR. Однако, поскольку во многих случаях существуют предпочтительные протоколы или службы, клиент может использовать для сортировки записей иные критерии.</p><p>При отказе после перезаписи клиенту настоятельно рекомендуется сообщить об отказе, а не просто переходить к использованию других путей перезаписи.</p><h2 id="p9">9. Согласование с IANA</h2><p>Значения полей Services и Flags будут определяться Приложением, использующим эту Базу данных DDDS. Это может потребовать механизма регистрации и связанных с такой регистрацией ресурсов IANA. Данная спецификация таких требований не включает.</p><h2 id="p10">10. Вопросы безопасности</h2><p>Записи NAPTR, подобно всем прочим записям DNS, могут подписываться и проверяться в соответствии с процедурами DNSSEC.</p><p>Эта База данных делает идентификаторы из других пространств имен объектами тех же атак, которым подвержены обычные доменные имена. Поскольку этот вопрос не был разрешен ранее, он может рассматриваться (или не рассматриваться) как проблемы.</p><p>Следует проверять корректность регулярных выражений, не просто передавая из чему-либо типа PERL, поскольку в такие выражения может быть включен произвольный код, который будет выполнен в системе.</p><h2>Литература</h2><table itemprop="references"><tr><td>[1]</td><td>Mealling, M., <a href="../3401.rfc" title="Система DDDS. Часть 1 - DDDS в целом">«Система DDDS. Часть 1 - DDDS в целом», RFC 3401</a>, Октябрь 2002.</td></tr><tr><td>[2]</td><td>Mealling, M., <a href="../3402.rfc" title="Система DDDS. Часть 2 - Алгоритм">«Система DDDS. Часть 2 - Алгоритм», RFC 3402</a>, Октябрь 2002.</td></tr><tr><td>[3]</td><td>Mealling, M., «Dynamic Delegation Discovery System (DDDS) Part Three: The Doman Name System (DNS) Database», RFC 3403, Октябрь 2002.</td></tr><tr><td>[4]</td><td>Mealling, M., <a href="../3404.rfc" title="Система DDDS. Часть 4 - Приложение для преобразования URI">«Система DDDS. Часть 4 - Приложение для преобразования URI», RFC 3404</a>, Октябрь 2002.</td></tr><tr><td>[5]</td><td>Mealling, M., <a href="../3405.rfc" title="Система DDDS. Часть 5 - Процедуры присваивания URI.ARPA">«Система DDDS. Часть 5 - Процедуры присваивания URI.ARPA»", RFC 3405</a>, Октябрь 2002.</td></tr><tr><td>[6]</td><td>Bradner, S., «Key words for use in RFCs to Indicate Requirement Levels», BCP 14, RFC 2119, Март 1997.</td></tr><tr><td>[7]</td><td>Mockapetris, P., «Domain names — implementation and specification», STD 13, RFC 1035, Ноябрь 1987.</td></tr><tr><td>[8]</td><td>Mockapetris, P., «Domain names — concepts and facilities», STD 13, RFC 1034, Ноябрь 1987.</td></tr><tr><td>[9]</td><td>Gulbrandsen, A., Vixie, P. и L. Esibov, «A DNS RR for specifying the location of services (DNS SRV)», RFC 2782, Февраль 2000.</td></tr><tr><td>[10]</td><td>Crocker, D., «Augmented BNF for Syntax Specifications: ABNF», RFC 2234, Ноябрь 1997.</td></tr><tr><td>[11]</td><td>Daniel, R., «A Trivial Convention for using HTTP in URN Resolution», RFC 2169, Июнь 1997.</td></tr><tr><td>[12]</td><td>IEEE, «IEEE Standard for Information Technology — Portable Operating System Interface (POSIX) — Part 2: Shell and Utilities (Vol. 1)», IEEE Std 1003.2-1992, Январь 1993.</td></tr><tr><td>[13]</td><td>Berners-Lee, T., Fielding, R. и L. Masinter, «Uniform Resource Identifiers (URI): Generic Syntax», RFC 2396, Август 1998.</td></tr><tr><td>[14]</td><td>Moats, R., «URN Syntax», RFC 2141, Май 1997.</td></tr><tr><td>[15]</td><td>Sollins, K., «Architectural Principles of Uniform Resource Name Resolution», RFC 2276, Январь 1998.</td></tr><tr><td>[16]</td><td>Daniel, R. и M. Mealling, «Resolution of Uniform Resource Identifiers using the Domain Name System», RFC 2168, Июнь 1997.</td></tr><tr><td>[17]</td><td>Yergeau, F., «UTF-8, a transformation format of ISO 10646», RFC 2279, Январь 1998.с</td></tr><tr><td>[18]</td><td>Faltstrom, P., «E.164 number and DNS», RFC 2916, Сентябрь 2000.</td></tr></table><h2>Адрес автора</h2><p>Michael Mealling<br />VeriSign<br />21345 Ridgetop Circle<br />Sterling, VA 20166 US<br />URI: http://www.verisignlabs.com<br />EMail: <bdo dir="rtl">&#116;&#101;&#110;&#46;&#109;&#121;&#110;&#111;&#101;&#110;&#64;&#108;&#101;&#97;&#104;&#99;&#105;&#109;</bdo></p></div></div><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 3403 - Система DDDS. Часть 3 - База данных DNS",disqus_identifier="3403.rfc",disqus_url="http://rfc2.ru/3403.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true, ut:"noindex"}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>