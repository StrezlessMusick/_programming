<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><link rel="canonical" href="../3540.rfc" /><meta name="Robots" content="noindex, nofollow" /><title>Перевод RFC 3540 — Устойчивый механизм сигнализации насыщения с помощью ECN-nonce</title><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../3540.rfc">RFC 3540 — Устойчивый механизм сигнализации насыщения с помощью ECN-nonce</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 3540</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Robust Explicit Congestion Notification (ECN) Signaling with Nonces</span></a></dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Экспериментальный</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2003-06-30">Июнь 2003</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">Neil Spring</span>, <span itemprop="author">David Wetherall</span>, <span itemprop="author">David Ely</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div id="text" itemprop="articleBody"><h3>Статус документа</h3><p>Этот документ определяет экспериментальный протокол (Experimental Protocol) для сообщества Internet. Документ не содержит спецификаций каких-либо стандартов и служит приглашением к дискуссии в целях развития протокола. Допускается свободное распространение документа.</p><h3>Тезисы</h3><p>В это документе описано необязательное расширение ECN-nonce, обеспечивающее для ECN (Explicit Congestion Notification — явное уведомление о насыщении) защиту от случайного или преднамеренного сокрытия пакетов, помеченных отправителем TCP. Расширение повышает устойчивость работы систем контроля насыщения, предотвращая возможность использования ECN для неправомерного захвата полосы сетевых соединений. ECN-nonce использует два кода ECT (ECN-Capable Transport — поддерживающий ECN транспорт) в поле ECN заголовков IP и требует наличия флага в заголовке TCP. Расширение эффективно работает как на маршрутизаторах, так и на хостах.</p><h2>1. Введение</h2><p>Данная спецификация описывает необязательное дополнение к ECN [RFC3168], повышающее устойчивость к случайному или преднамеренному сокрытию помеченных ECN пакетов. Это расширение не будет развертываться повсеместно. Одной из целей публикации данного RFC со статусом Experimental является является осторожное развертывание и использование протокола до начала его стандартизации. Другой целью публикации является обеспечение разработчикам межсетевых экранов времени для признания и восприятия модели, представленной с помощью nonce. Рабочая группа Transport Area заново представит эту спецификацию в качестве IETF Proposed Standard (проект стандарта) в будущем после обретения необходимого опыта.</p><p>Для корректной работы ECN нужна кооперация получателя (для передачи отправителю сигнала о насыщении — CE) и отправителя, однако протокол не обеспечивает механизма для такой кооперации. Это ведет к тому, что неаккуратно или некорректно настроенные получатели всегда будут сбрасывать ECN-Echo и просто не будут сообщать отправителю о возникновении перегрузки в сети. Такое поведение дает получателю преимущества в скорости по сравнению с корректно настроенными соединениями. Более того, любое устройство на пути (транслятор адресов NAT, межсетевой экран, формирователь полосы QoS и т. п.) может безнаказанно удалить индикаторы перегрузки.</p><p>Такое поведение может создавать угрозу работе системы контроля насыщения в Internet. С учетом роли системы контроля насыщения разумно разработать сигнальный механизм ECN, который будет обеспечивать устойчивость к максимально возможному числу угроз. ECN-nonce обеспечивает простой и эффективный механизм предотвращения недопустимого использования ECN.</p><p>ECN-nonce позволяет отправителю проверить корректность поведения получателя ECN и не вносит искажений, которые могли бы привести к сокрытию помеченных (или отброшенных) пакетов на сигнальном пути. Механизм ECN-nonce защищает как от ошибок в реализациях, так и от злонамеренного использования. Этот механизм:</p><ul class="dot"><li>с высокой вероятностью детектирует некорректно работающих получателей и не оказывает влияния на добросовестных получателей;</li><li>не меняет других аспектов использования ECN и не снижает преимуществ, обеспечиваемых ECN для корректно работающих получателей;</li><li>практически не добавляет служебной информации (один флаг в заголовке TCP) и не требует значительных ресурсов для обработки;</li><li>прост и по имеющимся данным не подвержен другим атакам.</li></ul><p>Отметим также, что использование ECN-nonce дает два дополнительных преимущества, даже если использовать только маршрутизаторы drop-tail. Во-первых, отбрасывание пакетов не может быть скрыто от отправителя. Во-вторых, он позволяет предотвратить излишне оптимистичные подтверждения [Savage], когда сегменты TCP подтверждаются еще до их получения. Эти преимущества также служат повышению устойчивости системы контроля насыщения к атакам. Детального рассмотрения этих преимуществ в данном документе не приводится.</p><p>Остальная часть документа содержит описание механизма ECN-nonce в виде обзора с последующим детальным описанием поведения отправителей и получателей.</p><p>Ключевые слова: необходимо (MUST), недопустимо (MUST NOT), требуется (REQUIRED), нужно (SHALL), не нужно (SHALL NOT), следует (SHOULD), не следует (SHOULD NOT), рекомендуется (RECOMMENDED), возможно (MAY), необязательно (OPTIONAL) в данном документе интерпретируются в соответствии с [RFC2119].</p><h2>2. Обзор</h2><p>Работа ECN-nonce строится на базе существующих сигнальных механизмов ECN-Echo и CWR (Congestion Window Reduced — уменьшение размера окна насыщения). Предполагается знакомство читателя ECN [ECN]. Для простоты ECN-nonce описывается только для одного направления, хотя этот механизм работает параллельно в обоих направлениях.</p><p>Протокол ECN для TCP сохраняется неизменным за исключением добавления нового поля в заголовок TCP. В соответствии с [RFC3168] в поле ECN заголовка IP исходящих пакетов устанавливается код ECT(0) или ECT(1). Перегруженные маршрутизаторы изменяют значение этого поля на CE. Когда получатель TCP видит код CE, он устанавливает флаг ECE (ECN-Echo) в последующих подтверждениях, пока не получит флаг CWR. Этот флаг (CWR) устанавливается отправителем в новых данных в результате реакции отправителя на перегрузку.</p><p>ECN-nonce позволяет получателю уведомить отправителя, что подтверждаемый сегмент отправителя был принят без маркеров перегрузки. Случайное однобитовые значения (nonce) помещаются в 2-битовый код ECT. Однобитовая сумма этих значений возвращается в виде флага в заголовке TCP, называемого битом NS (Nonce sum — сумма значений nonce). Маркировка пакетов удаляет значения nonce в кода ECT, поскольку CE переписывает оба бита ECN в заголовках IP. Поскольку для расчета суммы требуется каждое значение nonce, корректная сумма предполагает получение непомеченного пакета. В результате не только предотвращается сокрытие маркировки не получателями, но и возможность снятия маркеров на промежуточных маршрутизаторах без предсказания исходных значений nonce.</p><p>Отправитель может проверить возвращенную получателем сумму значений nonce, чтобы убедиться в том, что индикация перегрузки путем маркировки (или отбрасывания) пакетов не была скрыта. Поскольку сумма nonce выражается в виде одного бита, отправитель имеет 50% вероятность обнаружения получателей, скрывающих наличие индикатора перегрузки. Поскольку каждое подтверждение представляет собой независимую попытку такого определения, обман разоблачается очень быстро, если сигналы о насыщении повторялись.</p><p>В следующих параграфах приводится более детальное описание протокола ECN-nonce.</p><p>В каждом подтверждении содержится сумма значений nonce, которая представляет собой 1-битовый результат сложения (четность или исключающее ИЛИ) значений nonce для подтверждаемого диапазона байтов. Сумма используется по той причине, что не каждый пакет подтверждается индивидуально и гарантия доставки подтверждений не обеспечивается. Если не пользоваться суммой, можно будут просто возвращать значение nonce из пакета без маркировки для уведомления отправителя о том, что пакет был доставлен без маркировки. Однако в силу того, что для таких подтверждений доставка не гарантируется, отправитель не сможет отличить потерю подтверждения ACK от сокрытия маркированных пакетов. Использование суммы nonce не позволяет получателю скрывать получение пакетов с марками путем простого отказа от их подтверждения. Поскольку значения nonce и сумма этих значений являются однобитовыми, предсказание суммы не проще, чем предсказание отдельных значений. Расчет суммы значений nonce показан на рисунке 1.</p><pre>
Отправитель        Получатель

                   исходная сумаа = 1
-- 1:4 ECT(0)  --&gt; NS = 1 + 0(1:4) = 1(:4)
&lt;- ACK 4, NS=1 ---
-- 4:8 ECT(1)  --&gt; NS = 1(:4) + 1(4:8) = 0(:8)
&lt;- ACK 8, NS=0 ---
-- 8:12 ECT(1)  -&gt; NS = 0(:8) + 1(8:12) = 1(:12)
&lt;- ACK 12, NS=1 --
-- 12:16 ECT(1) -&gt; NS = 1(:12) + 1(12:16) = 0(:16)
&lt;- ACK 16, NS=0 --


Рисунок 1: Расчет суммы значений nonce (NS) на приемной стороне.</pre><p>После того, как в сети возникло насыщение и пакеты были помечены или потеряны, требуется ресинхронизация сумм nonce между отправителем и получателем. При маркировке пакетов значения nonce сбрасываются и сумма nonce на приемной стороне не будет совпадать с суммой на стороне отправителя. После потери значений nonce различие в суммах у отправителя и получателя будет сохраняться до следующей потери. Это означает, что можно ресинхронизировать отправителя и получателя после перегрузки путем установки на передающей стороне значения суммы, принятой от получателя. Поскольку индикацию перегрузки не требуется делать чаще, чем один раз за период кругового обхода (round trip), отправитель прекращает проверку суммы при получении сигнала CWR и устанавливает для своей суммы nonce значение, принятое от получателя с подтверждением новых данных. Преимуществом такого подхода является то, что получатель явно не вовлечен в процесс ресинхронизации. Иллюстрация процесса показана на рисунке 2. Отметим, что сумма nonce, возвращенная в ACK 12 (NS=0) отличается от суммы в предыдущем примере (NS=1) и сохраняет отличие для ACK 16 на рисунке 2.</p><pre>
Отправитель              Получатель

                       исходная сумаа = 1
-- 1:4 ECT(0)       -&gt; NS = 1 + 0(1:4) = 1(:4)
&lt;- ACK 4, NS=1      --
-- 4:8 ECT(1) -&gt; CE -&gt; NS = 1(:4) + ?(4:8) = 1(:8)
&lt;- ACK 8, ECE NS=1  --
-- 8:12 ECT(1), CWR -&gt; NS = 1(:8) + 1(8:12) = 0(:12)
&lt;- ACK 12, NS=0     --
-- 12:16 ECT(1)     -&gt; NS = 0(:12) + 1(12:16) = 1(:16)
&lt;- ACK 16, NS=1     --


Рисунок 2: Расчет NS на приемной стороне при маркировке
пакета (4:8). Получатель может рассчитать некорректное
значение суммы в результате утери nonce при маркировке пакета.</pre><p>Нам нужно еще согласовать значения nonce, передаваемые в пакетах и подтверждающие диапазон принятых байтов. Байтовые границы для подтверждений не обязательно соответствуют границам при передаче, а при повторе пакеты могут передаваться с иными границами. Первый вопрос об установке nonce при подтверждении части сегмента рассматривается в параграфе 6.1. Второй вопрос о значении nonce, передаваемом при повторе мелкого сегмента в большом имеет простой ответ — ECN отключается при повторе, поэтому nonce не передается. Поскольку повторы передачи связаны с фактами насыщения, проверка nonce отключается, пока не будет подтверждения CWR и насыщение не закончится.</p><p>В следующих параграфах подробно рассматривается поведение отправителей, маршрутизаторов и получателей, начиная с передачи данных отправителем. Далее рассматривается сигнальный цикл ECN и в заключение описан процесс обработки подтверждения отправителем.</p><h2>3. Поведение отправителя (передача)</h2><p>Отправителя управляют CWR и ECN-Echo как это делалось раньше. Кроме того, они должны включать значения nonce в передаваемые пакеты и проверять корректность сумм nonce в принятых подтверждениях. Данный параграф описывает процесс передачи.</p><p>Для включения однобитового значения nonce в каждый совместимый с ECN пакет IP отправитель использует два кода ECT — ECT (0) представляет nonce = 0, а ECT(1) — nonce = 1. Как и в ECN повтор передачи не совместим с использованием ECN, поэтому пакет не включает значения nonce.</p><p>Отправитель поддерживает отображение порядкового номера для окончания каждого пакета в сумму nonce (а не значение nonce, включенное в исходную передачу), ожидаемую в подтверждении, соответствующем этому порядковому номеру.</p><h2>4. Поведение маршрутизатора</h2><p>Маршрутизаторы ведут себя в соответствии с [RFC3168]. При маркировке пакетов для индикации перегрузки исходное значение nonce в ECT(0) или ECT(1) теряется. Ни получатель, ни любой другой узел не могут снять маркировку пакета без предсказания исходного значения nonce.</p><h2>5. Поведение получателя (прием и передача)</h2><p>Получатель ECN-nonce поддерживает сумму значений nonce, вычисляемую по мере доставки пакетов, и возвращает текущее значение суммы nonce в каждом подтверждении. В остальном поведение получателя не отличается от [RFC3168]. Возврат суммы nonce не требуется, но рекомендуется, поскольку отправителям разрешено прекращать передачу поддерживающих ECN пакетов получателям, которые не поддерживают ECN-nonce.</p><p>По мере того, как пакеты удаляются из очереди доставленных с нарушением порядка пакетов для подтверждения, значения nonce восстанавливаются из заголовков IP. Полученное из заголовка значение nonce прибавляется к текущему значению суммы nonce как подтверждение порядкового номера для недавнего пакета.</p><p>В случае маркировки пакетов одно или множество значений nonce будет неизвестно получателю. В этом случае отсутствующие значения nonce игнорируются при расчете суммы (или в расчет включается нулевое значение nonce) и устанавливается флаг ECNEcho для индикации насыщения отправителю.</p><p>Возврат суммы nonce, соответствующей данному подтверждению, прост. Сумма передается в фиде однобитового флага NS в заголовке TCP. Этот бит размещается рядом с битами CWR и ECN-Echo, занимая битовую позицию 7 в байте 13 заголовка TCP, как показано на рисунке 3.</p><pre>
  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|               |           | N | C | E | U | A | P | R | S | F |
| Header Length | Reserved  | S | W | C | R | C | S | S | Y | I |
|               |           |   | R | E | G | K | H | T | N | N |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+


Рисунок 3: Новое определение байтов 13 и 14 заголовка TCP</pre><p>Начальное значение суммы nonce равно 1 и это значение включается в пакеты SYN/ACK и ACK трехэтапного согласования TCP. Это позволяет удаленной точке определить факт поддержки nonce, но не является согласованием и получателю SYN/ACK не требуется проверять наличие флага NS для принятия решения об установке NS в последующем пакете ACK.</p><h2>6. Поведение отправителя (прием)</h2><p>Этот параграф дополняет описание поведения отправителя, рассматривая этап проверки полученных значений суммы nonce. Сумма nonce проверяется при получении подтверждения доставки новых данных за исключением периодов восстановления после перегрузки, когда дополнительные сигналы ECN-Echo будут игнорироваться. Проверка заключается в сравнении корректной суммы nonce, хранящейся в буфере, со значением из подтверждения с учетом рассмотренных ниже корректировок.</p><p>Если флаг ECN-Echo не установлен, это свидетельствует о том, что получатель не принимал пакетов с маркерами и, следовательно, может рассчитать и возвратить корректную сумму nonce. Для сокрытия маркеров получатель должен угадать сумму значений nonce, которые не были получены, поскольку по крайней мере один пакет был промаркирован и значение nonce было удалено. Поскольку nonce может с равной вероятностью принимать значения 0 или 1, сумма этих значений также может с равной вероятностью быть 0 или 1. Иными словами, вероятность угадывания составляет 50%. Благодаря тому, что каждое новое подтверждение является независимой попыткой угадать значений, отправитель может обнаружить подмену после небольшого числа удачных обманов.</p><p>Если флаг ECN-Echo, это говорит о том, что получатель сигнализирует о перегрузки сети и сумму nonce проверять не нужно. Окно насыщения будет уменьшено наполовину, в следующем передаваемом пакете данных будет установлен флаг CWR и флаг ECNEcho будет сброшен после получения сигнала CWR, как описано в [RFC3168]. В течение этого процесса восстановления сумма может быть некорректной, поскольку одно или несколько значений nonce не будут получены. Это не имеет значения на этапе восстановления, поскольку TCP активизирует механизмы контроля насыщения не более одного раза за период RTT (Время кругового обхода), независимо от количества потерь пакетов за этот период.</p><h3>6.1. Ресинхронизация после потери или маркировки</h3><p>После восстановления требуется заново синхронизировать суммы nonce для отправителя и получателя, чтобы была возможность дальнейшей проверки подтверждений. Когда сумма на стороне получателя некорректна, эта некорректность будет сохраняться пока будут продолжаться потери.</p><p>Это позволяет воспользоваться простым механизмом ресинхронизации, когда отправитель сбрасывает свою сумму nonce в то значение, которое получатель указал в подтверждении данных, полученных после снижения размера окна насыщения. При обработке явных сигналов о насыщении это будет первое подтверждение без флага ECN-Echo (подтверждение пакета, содержащего флаг CWR).</p><pre>
Отправитель            Получатель

                       исходная сумаа = 1
-- 1:4 ECT(0)       -&gt; NS = 1 + 0(1:4) = 1(:4)
&lt;- ACK 4, NS=1      --
-- 4:8 ECT(1) -&gt; LOST
-- 8:12 ECT(1)      -&gt; расчет суммы nonce откладывается
                       до восстановления порядка доставки
&lt;- ACK 4, NS=0      --
-- 12:16 ECT(1)     -&gt; расчет суммы nonce отложен
&lt;- ACK 4, NS=0      --
-- 4:8 retransmit   -&gt; NS = 1(:4) + ?(4:8) +
                            1(8:12) + 1(12:16) = 1(:16)
&lt;- ACK 16, NS=1     --
-- 16:20 ECT(1) CWR -&gt;
&lt;- ACK 20, NS=0     -- NS = 1(:16) + 1(16:20) = 0(:20)

Рисунок 4: Расчет сумм nonce на стороне получателя в случае потери
пакетов и ресинхронизация после потери. Сумма nonce не изменяется,
пока не будет кумулятивного подтверждения.</pre><p>На практике ресинхронизация может быть обеспечена за счет сохранения бита, которые имеет значение 1, если хранящееся у отправителя ожидаемое значение суммы отличается от суммы, полученной в подтверждении CWR и 0 в остальных случаях. Этот бит смещения синхронизации может использоваться при сравнении ожидаемой суммы с принятым значением суммы nonce.</p><p>Отправителю следует игнорировать значения суммы nonce, возвращаемые в подтверждениях с флагом ECN-echo.</p><p>Когда подтверждение относится лишь к части сегмента (например, в результате ресегментации TCP на промежуточном узле вместо использования фрагментации пакетов IP), отправителю следует принять сумму nonce, ожидаемую для следующей границы сегмента. Иными словами, подтверждения, относящиеся лишь к части исходного сегмента, будут включать ожидаемую сумму nonce только тогда, когда сегмент подтвержден полностью.</p><p>Следует отметимть, что при использовании ECN отправитель может по той или иной причине не указывать для некоторых пакетов поддержку ECN. Отправитель ECN-nonce должен после передачи таких пакетов выполнять ресинхронизацию путем передачи CWR с первым пакетом данных после не поддерживающих ECN пакетов. Отправитель теряет защиту для всех неподтвержденных пакетов, пока не произойдет ресинхронизация.</p><h3>6.2. Поведение отправителя при получении некорректной суммы Nonce</h3><p>Реакция отправителя на получение некорректной суммы nonce является вопросом политики. Эти действия не связаны с механизмом проверки корректности и необязательно одинаковы для всех отправителей. Более того, проверка корректности полученных сумм nonce не является обязательной и может быть отключена.</p><p>Если получатель никогда не передает отличных от нуля сумм nonce, отправитель может предположить, что получатель не понимает nonce и ограничить скорость соединения, помещая его в очередь с низким приоритетом или прекращая установку ECT в передаваемых сегментах.</p><p>Если принятая сумма nonce была установлена в предыдущем подтверждении, отправитель может предположить, что устройство в сети конфликтует с корректной сигнализацией между поддерживающими ECN-nonce конечными точками. Минимальный отклик на получение некорректной суммы nonce совпадает с откликом на получение ECE. Однако для компенсации скрытых сигналов о насыщении отправитель может снизить размер окна насыщения для одного сегмента и прекратить установку ECT в исходящих сегментах. Некорректная сумма nonce является признаком некорректного поведения или наличия ошибок между парой поддерживающих ECN-nonce конечных точек.</p><h4>6.2.1. Использование ECN-nonce для защиты от некорректного поведения</h4><p>Механизм ECN-nonce может обеспечивать дополнительные средства повышения устойчивости сверх проверки передачи сигналов о маркировке пакетов. Этот механизм также препятствует сокрытию фактов отбрасывания пакетов от их отправителя (поскольку значения nonce из таких пакетов теряются). Отбрасывание пакетов потенциально возможно в дефектных реализациях TCP, во время некоторых атак и даже при использовании гипотетического ускорителя TCP. Такой ускоритель может играть на том, что он способен выполнить процедуру «fast start» для быстрого резервирования полосы и повторить это для другого соединения или обеспечивать гарантии доставки на прикладных уровнях. Если нужно обеспечить устойчивость к такому поведению, не следует отключать ECN-nonce. Вместо этого нужно уменьшить на 1 размер окна насыщения или, используя очередь с низким приоритетом, наказать дефектную реализацию, продолжая проверки и далее.</p><p>ECN-nonce может также детектировать некорректное поведение Eifel [Eifel] — недавно предложенного механизма устранения неопределенности повтора передачи для повышения производительности TCP. Некорректность поведения получателя может выражаться в том, что заявляется только прием исходных передач, для того, чтобы заставить отправителя отказаться от выполненных действий по предотвращению перегрузки. Поскольку повторы передаются без ECT (и, следовательно, без nonce), возврат корректной суммы nonce подтверждает, что были получены только исходные передачи.</p><h2>7. Взаимодействие с другими протоколами</h2><h3>7.1. Path MTU Discovery</h3><p>Как описано в RFC3168, при использовании ECN рекомендуется устанавливать флаг запрета фрагментирования DF. Получатели, которые принимают непомеченные фрагменты могут восстановить исходное значение nonce для сокрытия маркированных фрагментов. ECN-nonce не может обеспечить защиту от некорректного поведения получателей, скрывающих маркированные фрагменты, поэтому часть защитных возможностей теряется в ситуациях, когда запрещено использование Path MTU discovery.</p><p>В ответ на малые значения path MTU отправитель будет повторять передачу в виде мелких кадров взамен одного большого. Поскольку эти более мелкие пакеты передаются повторно, они будут несовместимы с ECN и не будут включать nonce. Отправителю следует выполнять ресинхронизацию при первом заново переданном пакете.</p><h3>7.2. SACK</h3><p>Селективные подтверждения позволяют получателю подтверждать доставку с нарушением порядка в целях оптимизации. Не требуется изменять опцию селективного подтверждения, чтобы использовать суммы nonce, вычисленные для диапазона подтверждаемых байтов, поскольку SACK не может использоваться получателем для сокрытия сигналов насыщения. Сумма nonce соответствует только данным, подтверждаемым кумулятивным пакетом ACK.</p><h3>7.3. IPv6</h3><p>Заголовок IPv4 защищен контрольной суммой, но этого нет в IPv6, что повышает вероятность пропуска битовых ошибок в заголовках IPv6. Битовые ошибки, нарушающие целостность полей уведомления о перегрузке могут приводить к получению некорректных значений nonce и возврату некорректных сумм nonce.</p><h2>8. Вопросы безопасности</h2><p>Для создания случайных однобитовых значений nonce не требуется криптографического качества генерации случайных чисел. Повышение качества генерации случайных чисел будет вести к потере производительности. В силу сказанного, последовательности случайных значений nonce не следует использовать для каких-либо иных целей.</p><p>Псевдослучайную последовательность битов не следует генерировать путем линейного сдвига регистра [Schneier] или с использованием иных подобных этой схем, которые позволяют любому, кто увидел несколько предыдущих битов предсказать функцию генерации и последующие результаты.</p><p>Хотя ECN-nonce защищает от сокрытия сигналов насыщения и чересчур оптимистичных подтверждений, этот механизм не обеспечивает дополнительной защиты целостности соединений.</p><h2>9. Согласование с IANA</h2><p>Флаг NS (Nonce Sum) передается в резервном бите заголовка TCP, который должен быть выделен для этих целей. Данный документ описывает использование бита 7, смежного другим битам заголовка, используемым для ECN.</p><p>Код для флага NS в заголовке TCP задается стандартизацией (Standards Action) данного RFC, как требует RFC 2780. Агентство IANA добавило следующее определение в реестр флагов «TCP Header Flags»:</p><p>RFC 3540 определяет бит 7 из зарезервированного поля для использования в качестве Nonce Sum, следующим образом:</p><pre>
  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|               |           | N | C | E | U | A | P | R | S | F |
| Header Length | Reserved  | S | W | C | R | C | S | S | Y | I |
|               |           |   | R | E | G | K | H | T | N | N |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+</pre><p>Флаги заголовков TCP:</p><table><tr class="b"><td>Бит</td><td>Имя</td><td>Документ</td></tr><tr><td>7</td><td>NS (Nonce Sum)</td><td>[RFC 3540]</td></tr></table><h2>10. Заключение</h2><p>ECN-nonce представляет собой простую модификацию сигнального механизма ECN, которая повышает устойчивость ECN за счет предотвращения сокрытия получателями маркированных (или отброшенных) пакетов. Назначение этой работы заключается в повышении уровня устойчивости системы контроля насыщения в Internet. Модификация сохраняет характер и простоту существующей сигнализации ECN. Она практична для развертывания в сети Internet. Механизм использует коды ECT(0) и ECT(1), а также один флаг в заголовке TCP (так же, как CWR и ECN-Echo) и имеет простые правила обработки.</p><h2>11. Литература</h2><table itemprop="references"><tr><td>[ECN]</td><td>«The ECN Web Page»</td></tr><tr><td>[RFC3168]</td><td>K. Ramakrishnan, S. Floyd, D. Black, <a href="../3168.rfc" title="RFC 3168 - Добавление явных уведомлений о перегрузке (ECN) в IP">«Добавление явных уведомлений о перегрузке (ECN) в IP», RFC 3168</a>, Сентябрь 2001</td></tr><tr><td>[Eifel]</td><td>R. Ludwig, R. Katz. The Eifel Algorithm: Making TCP Robust Against Spurious Retransmissions. Computer Communications Review, January, 2000.</td></tr><tr><td>[B97]</td><td>S. Bradner, «Key words for use in RFCs to Indicate Requirement Levels», BCP 14, RFC 2119, Март 1997.</td></tr><tr><td>[Savage]</td><td>S. Savage, N. Cardwell, D. Wetherall, T. Anderson. TCP congestion control with a misbehaving receiver. SIGCOMM CCR, October 1999.</td></tr><tr><td>[Schneier]</td><td>Bruce Schneier. Applied Cryptography, 2nd ed., 1996</td></tr></table><h2>12. Благодарности</h2><p>Этот документ основан на результатах исследований Stefan Savage, David Ely, David Wetherall, Tom Anderson и Neil Spring. Мы весьма признательны Sally Floyd за его отклики и помощь.</p><h2>Адреса авторов</h2><p>Neil Spring<br />EMail: <bdo dir="rtl">&#117;&#100;&#101;&#46;&#110;&#111;&#116;&#103;&#110;&#105;&#104;&#115;&#97;&#119;&#46;&#115;&#99;&#64;&#103;&#110;&#105;&#114;&#112;&#115;&#110;</bdo></p><p>David Wetherall<br />Department of Computer Science and Engineering, Box 352350<br />University of Washington<br />Seattle WA 98195-2350<br />EMail: <bdo dir="rtl">&#117;&#100;&#101;&#46;&#110;&#111;&#116;&#103;&#110;&#105;&#104;&#115;&#97;&#119;&#46;&#115;&#99;&#64;&#119;&#106;&#100;</bdo></p><p>David Ely<br />Computer Science and Engineering, 352350<br />University of Washington<br />Seattle, WA 98195-2350<br />EMail: <bdo dir="rtl">&#117;&#100;&#101;&#46;&#110;&#111;&#116;&#103;&#110;&#105;&#104;&#115;&#97;&#119;&#46;&#115;&#99;&#64;&#121;&#108;&#101;</bdo></p></div></div><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 3540 - Устойчивый механизм сигнализации насыщения с помощью ECN-nonce",disqus_identifier="3540.rfc",disqus_url="http://rfc2.ru/3540.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true, ut:"noindex"}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>