<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0046)http://www2.research.att.com/~bs/glossary.html -->
<HTML><HEAD><TITLE>Stroustrup: C++ Glossary</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 8.00.6001.23111"></HEAD>
<BODY bgColor=#fffbfb>
<CENTER><A href="http://www.research.att.com/~bs/homepage.html">home</A> | <A 
href="http://www.research.att.com/~bs/C++.html">C++</A> | <A 
href="http://www.research.att.com/~bs/bs_faq.html">FAQ</A> | <A 
href="http://www.research.att.com/~bs/bs_faq2.html">technical FAQ</A> | <A 
href="http://www.research.att.com/~bs/C++0xFAQ.html">C++0x FAQ</A> | <A 
href="http://www.research.att.com/~bs/papers.html">publications</A> | <A 
href="http://www.research.att.com/~bs/3rd.html">TC++PL</A> | <A 
href="http://www.research.att.com/~bs/programming.html">Programming</A> | <A 
href="http://www.research.att.com/~bs/dne.html">D&amp;E</A> | <A 
href="http://www.research.att.com/~bs/bio.html">bio</A> | <A 
href="http://www.research.att.com/~bs/interviews.html">interviews</A> | <A 
href="http://www.research.att.com/~bs/applications.html">applications</A> | <A 
href="http://www.research.att.com/~bs/glossary.html">glossary</A> | <A 
href="http://www.research.att.com/~bs/compilers.html">compilers</A> | <A 
href="http://www.cs.tamu.edu/">Texas A&amp;M University</A> | <A 
href="http://www.research.att.com/">AT&amp;T Research</A> </CENTER>
<CENTER>
<H1><A href="http://www.research.att.com/~bs/homepage.html">Bjarne 
Stroustrup</A>'s C++ Glossary</H1></CENTER>
<P align=right>Modified February 19, 2007 
<P>This is a glossary of C++ terms, organized alphabetically by concept. 
<P>The definitions/explanations of individual terms are necessarily very brief. 
To compensate, each entry includes one or more references to <A 
href="http://www.research.att.com/~bs/3rd.html">The C++ Programming language 
(Special Edition)</A> (<A 
href="http://www.research.att.com/~bs/glossary.html#GTC++PL#">TC++PL</A>) where 
you can find more comprehensive explanations and code examples. I use section 
references, rather than page numbers, so that this glossary can be used together 
with translations of my books. It is always wise to read a whole section rather 
than trying to glean information from a few semi-random sentences. 
<P>For people interested in the reasons behind the design of C++, most entries 
also refer to <A href="http://www.research.att.com/~bs/dne.html">The Design and 
Evolution of C++</A> (<A 
href="http://www.research.att.com/~bs/glossary.html#GD&amp;E#">D&amp;E</A>). 
Some entries contain links other parts of my home pages, especially to my <A 
href="http://www.research.att.com/~bs/bs_faq.html">FAQ</A> and <A 
href="http://www.research.att.com/~bs/bs_faq2.html">C++ Style and Technique 
FAQ</A>. If I find the time, I'll add references to the ISO standard. 
<P>This glossary is specifically "C++ oriented". That is, it defines terms in 
the context of C++. For example, it defines generic programming in terms of 
templates and object-oriented programming in terms of virtual functions, rather 
than trying to be sufficiently abstract and general to cover all languages and 
all usages. 
<P>The entries are meant to be brief explanations, rather than precise 
definitions. 
<P>Suggestions for improved explanations, terms to add, or anything else that 
would make the glossary more useful, are most wellcome: bs@research.att.com. 
<P>
<HR>

<H2>Glossary</H2><A name=G!=><B>!=</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Ginequality-operator">inequality 
operator</A>; compares <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s for 
inequality returning a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A>. TC++PL 
2.3.1, 6.2, 16.3.10, 20.3.8, 22.4.3, 22.5. 
<P><A name=G#define><B>#define</B></A> - a directive that defines a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmacro">macro</A>. 
<P><A name=G#include><B>#include</B></A> - a mechanism for textual inclusion of 
one <A href="http://www.research.att.com/~bs/glossary.html#Gsource-file">source 
file</A> into another. Typically used to compose a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A> out of a <A 
href="http://www.research.att.com/~bs/glossary.html#G.c-file">.c file</A> and 
the <A href="http://www.research.att.com/~bs/glossary.html#Gheader-file">header 
file</A>s it needs to define its view if the rest of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. 
TC++PL 2.7, 13, D&amp;E 18.1. 
<P><A name=G+=><B>+=</B></A> - add-and-assign <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>; 
a+=b is roughly equivalent to a=a+b. Often a useful operation for <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>s. TC++PL 6.1.1, 6.2, 11,3,2, 20.3.9, 22.5. 
<P><A name=G.c-file><B>.c file</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile">file</A> containing 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gdefinition#">definition</A>s. 

<P><A name=G.cpp-file><B>.cpp file</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G.c-file">.c file</A> 
<P><A name=G.cxx-file><B>.cxx file</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G.c-file">.c file</A> 
<P><A name=G.h-file><B>.h file</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader-file">header 
file</A>. 
<P><A name=G14882><B>14882</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A>/IEC 14882 - 
Standard for the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">Programming 
Language</A>. 
<P><A name="G<<"><B>&lt;&lt;</B></A> - (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
TC++PL 3.4, 21.2.1, D&amp;E 8.3.1. (2) integer left-shift operator. TC++PL 6.2. 
<P><A name=G=><B>=</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gassignment-operator">assignment 
operator</A>; <I>not</I> an <A 
href="http://www.research.att.com/~bs/glossary.html#Gequality-operator">equality 
operator</A>. = can be used for non-<A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A>s (except <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A>s), <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>s, 
<A href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s, 
<A href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>s, 
<A href="http://www.research.att.com/~bs/glossary.html#Gcomplex">complex</A>, 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalarray">valarray</A>. For 
a <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>, = is 
by default defined <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>-wise 
assignment; if necessary, the writer of a class can define it differently. 
TC++PL 2.3.1, 6.2, 11.2, 16.3.4, 20.3.6, 22.4.3, 22.5, D&amp;E 2.12.1,11.4.4. 
<P><A name=G=0><B>=0</B></A> - curious notation indicating that a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> is a 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gpure-virtual-function">pure 
virtual function</A>. TC++PL 12.3. D&amp;E 13.2.1. 
<P><A name=G==><B>==</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gequality-operator">equality 
operator</A>; compares <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s for 
equality returning a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#G=">=</A>= can be used for 
<A href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>s, 
<A href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomplex">complex</A>, and 
<A href="http://www.research.att.com/~bs/glossary.html#Gvalarray">valarray</A>. 
== is not by default defined for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>, but a 
user can define it for a <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>. Note that == doesn't have the naively expected meaning for <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-string">C-style 
string</A>s or arrays. TC++PL 2.3.1, 6.2, 16.3.10, 20.3.8, 22.4.3, 22.5. 
<P><A name="G>>"><B>&gt;&gt;</B></A> - (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
TC++PL 3.6, 21.3.2, D&amp;E 8.3.1. (2) integer right-shift operator. TC++PL 6.2. 

<P><A name=Gabstract-class><B>abstract class</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> defining 
an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
only; used as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A>. 
Declaring a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> pure <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> makes 
its class abstract and prevents creation of <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s of the 
abstract class. Use of abstract classes is one of the most effective ways of 
minimizing the impact of changes in a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> and 
for minimizing compilation time. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#abstract-class">Example</A>. 
TC++PL 2.5.4, 12.4.2, D&amp;E 13.2. 
<P><A name=Gabstract-type><B>abstract type</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>. 
<P><A name=Gabstraction><B>abstraction</B></A> - the act of specifying a general 
<A href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Ghiding">hiding</A> 
implementation details. <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">Class</A>es, <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>es, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s are 
the primary abstraction mechanisms in <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gencapsulation">encapsulation</A>. 

<P><A name=Gaccess-control><B>access control</B></A> - access to bases and <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> can be 
controlled by declaring them <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic">public</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected">protected</A>, 
or <A href="http://www.research.att.com/~bs/glossary.html#Gprivate">private</A>. 
TC++PL 15.3, D&amp;E 2.3, 13.9. 
<P><A name=GACCU><B>ACCU</B></A> - <A href="http://www.accu.org/">Association of 
C and C++ Users</A>. A users group that among other things maintains a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of professional book reviews. 
<P><A name=Gadapter><B>adapter</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that takes 
<A href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s 
producing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A> that performs an operation based on those arguments. A simple form of 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Ghigher-order-function">higher-order 
function</A>. For example, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmem_fun()">mem_fun()</A> 
adapts a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> for use by the standard <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gsequence-adapter">sequence 
adapter</A>. TC++PL 18.4.4. 
<P><A name=Gaddress><B>address</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> 
location. TC++PL 5.1. 
<P><A name=Gaggregate><B>aggregate</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A> or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstruct">struct</A> without 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>. 

<P><A name=Galgorithm><B>algorithm</B></A> - a precise definition of a 
computation. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> provides about 60 standard algorithms, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gsort()">sort()</A>, 
search(), and copy_unique(). TC++PL 3.8, 18. 
<P><A name=Galignment><B>alignment</B></A> - placing <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s in <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> to suit 
hardware requirements. On many machines, an object must be aligned on a <A 
href="http://www.research.att.com/~bs/glossary.html#Gword#">word</A> boundary 
for acceptable performance. 
<P><A name=Gallocator><B>allocator</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> used by 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s 
to allocate and deallocate <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>. TC++PL 
19.4. 
<P><A name=Gand#><B>and</B></A> - synonym for &amp;&amp;, the logical and <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
TC++PL C.3.1. 
<P><A name=GANSI><B>ANSI</B></A> - The American national standards organization. 
Cooperates closely with <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A> over the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A>. 
<P><A name=GANSI-C><B>ANSI C</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>. 
<P><A name=GANSI-C++><B>ANSI C++</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> 
<P><A name=Gapplication><B>application</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of <A href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>s 
seen as serving a common purpose (usually providing a common <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> to 
their users). 
<P><A name=Gargument><B>argument</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> passed to 
a <A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>. In 
the case of templates, an argument is often a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. 
<P><A name=Gargument-passing><B>argument passing</B></A> - The <A 
href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> of 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
call is to pass a copy of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>. The 
copy operation is defined by the argument <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A> or by binding to a <A 
href="http://www.research.att.com/~bs/glossary.html#Greference#">reference</A>. 
In either case the semantics is those of <A 
href="http://www.research.att.com/~bs/glossary.html#Ginitialization">initialization</A>. 
TC++PL 7.2. 
<P><A name=Gargument-based-lookup><B>argument-based lookup</B></A> - lookup of a 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
based on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A> of 
the <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s or 
operands. Often called <A 
href="http://www.research.att.com/~bs/glossary.html#GKoenig-lookup">Koenig 
lookup</A> after Andrew Koenig who proposed the scheme to the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandards-committee">standards 
committee</A>. TC++PL 8.2.6, 11.2.4, C.13.8.4. 
<P><A name=GARM><B>ARM</B></A> - <A 
href="http://www.research.att.com/~bs/arm.html">The Annotated C++ Reference 
Manual</A> by Margaret Ellis and <A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>. The 1990 C++ reference manual with detailed <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomment">comment</A>s about 
<A href="http://www.research.att.com/~bs/glossary.html#Gdesign">design</A> 
details and implementation techniques. Now outdated. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A>. 
<P><A name=Garray><B>array</B></A> - contiguous sequence of <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A>s. An 
array doesn't know its own size; the programmer must take care to avoid range 
errors. Where possible use the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>. TC++PL 
5.2-3, C.7. 
<P><A name=Gassignment-operator><B>assignment operator</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G=">=</A>. 
<P><A name=GAT&amp;T-Bell-Labs.><B>AT&amp;T Bell Labs.</B></A> - the industrial 
research and development labs where <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> were invented, 
initially developed, and initially used. D&amp;E 2.14. 
<P><A name=Gauto><B>auto</B></A> - In <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#GC++98">C++98</A> a largely 
useless keyword redundantly indicating <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A> allocation 
for local <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A>s. In 
<A href="http://www.research.att.com/~bs/glossary.html#GC++0x">C++0x</A> a 
keyword indicating that a variable gets its <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> from its 
initializer. For example: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble">double</A> d1 <A 
href="http://www.research.att.com/~bs/glossary.html#G=">=</A> 2; auto d2 = 3*d1; 
(d2 will have type double). Primarily useful in <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>. 
<P><A name=Gautomatic-garbage-collection><B>automatic garbage collection</B></A> 
- see <A 
href="http://www.research.att.com/~bs/glossary.html#Ggarbage-collection">garbage 
collection</A>. 
<P><A name=Gauto_ptr><B>auto_ptr</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass-template">class 
template</A> for representing ownership of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> in a way 
that guarantees proper release (<A 
href="http://www.research.att.com/~bs/glossary.html#Gdelete">delete</A>) even 
when an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> is 
thrown. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-management">resource 
management</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>. TC++PL 14.4.2. 
<P><A name=Gback-end><B>back-end</B></A> - the parts of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> that 
generates code given an internal representation of a correct <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. This 
representation is produced by a compiler <A 
href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A>. 
See also: front-end. 
<P><A name=Gbackslash><B>backslash</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gescape-character">escape 
character</A>. 
<P><A name=Gback_inserter()><B>back_inserter()</B></A> - returns an <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A> that 
can be used to add <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A>s at 
the back of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>. 
TC++PL 19.2.4. 
<P><A name=Gbad_alloc><B>bad_alloc</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
thrown by <A href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A> 
in case of failure to allocate <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free store</A>. 
TC++PL 6.2.6.2, 19.4.5. 
<P><A name=Gbad_cast><B>bad_cast</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
thrown if a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A> 
to a <A 
href="http://www.research.att.com/~bs/glossary.html#Greference#">reference</A> 
fails. TC++PL 15.4.1.1, D&amp;E 14.2.2. 
<P><A name=Gbase-class><B>base class</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> from which 
another is derived. TC++PL 2.6.2, 12, 15, D&amp;E 2.9. 
<P><A name=Gbase-initializer><B>base initializer</B></A> - initializer for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
specified in the <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>. TC++PL 12.2.2, 15.2.4.1, D&amp;E 12.9. 
<P><A name=Gbasic-guarantee><B>basic guarantee</B></A> - the guarantee that 
basic <A 
href="http://www.research.att.com/~bs/glossary.html#Ginvariant">invariant</A>s 
are maintained if an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> is 
thrown and that no <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>s are 
leaked/lost. Provided by all <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> operations. See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnothrow-guarantee">nothrow 
guarantee</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gstrong-guarantee">strong 
guarantee</A>. TC++PL E.2. 
<P><A name=Gbasic_string><B>basic_string</B></A> - general standard-library <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
parameterized by <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-type">character 
type</A>. See also: string, <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-string">C-style 
string</A>. TC++PL 20.3. 
<P><A name=GBCPL><B>BCPL</B></A> - ancestor to <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> designed and 
implemented by Martin Richards. TC++PL 1.4, D&amp;E 1.1, 3.1. 
<P><A name=GBell-labs><B>Bell labs</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GAT&amp;T-Bell-Labs.">AT&amp;T 
Bell Labs.</A> 
<P><A name=Gbinary-operator><B>binary operator</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
taking two operands, such as /, &amp;&amp;, and binary *. 
<P><A name=Gbinder><B>binder</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
taking a function and a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>, returning 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A>; when called, that function object will invoke the function with the 
value as an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> in 
addition to other arguments supplied in the call. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> provides bind1st() and bind2nd() for binding the first and second 
argument of a binary function, respectively. TC++PL 18.4.4. 
<P><A name=Gbit><B>bit</B></A> - a unit of <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> that can 
hold 0 or 1. An individual bit cannot be directly accessed in <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> (the unit of 
addressing is a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A>), but a bit 
can be accessed through a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbitfield">bitfield</A> or 
by using the bitwise logical <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s 
&amp; and |. TC++PL 6.2.4. 
<P><A name=Gbitand#><B>bitand</B></A> - synonym for &amp;, the bitwise and <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
TC++PL C.3.1. 
<P><A name=Gbitfield><B>bitfield</B></A> - a number of <A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gword#">word</A> made 
accessible as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstruct">struct</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>. TC++PL 
C.8.1 
<P><A name=Gbitor#><B>bitor</B></A> - synonym for |, the bitwise or <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
TC++PL C.3.1. 
<P><A name=Gbitset><B>bitset</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> "almost <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>" 
holding N <A href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s 
and providing logical operations on those. TC++PL 17.5.3. 
<P><A name=GBjarne-Stroustrup><B>Bjarne Stroustrup</B></A> - the designer and 
original implementor of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. The author of 
this <A 
href="http://www.research.att.com/~bs/glossary.html#Gglossary">glossary</A>. See 
also: <A href="http://www.research.att.com/~bs/homepage.html">my home page</A>. 
<P><A name=Gblock><B>block</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompound-statement">compound 
statement</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
<P><A name=Gblock-comment><B>block comment</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomment">comment</A> 
started by /* and terminated by */. TC++PL 6.4, D&amp;E 3.11.1. 
<P><A name=Gbool><B>bool</B></A> - the built-in Boolean <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. A bool can 
have the <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s <A 
href="http://www.research.att.com/~bs/glossary.html#Gtrue">true</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gfalse">false</A>. TC++PL 
4.2, D&amp;E 11.7.2. 
<P><A name=Gboost.org><B>boost.org</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of people - many with ties to the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A>s committee - devoted to creating a body of quality - peer reviewed 
- open source libraries designed to interoperate with the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A>. Their central "home" is <A href="http://www.boost.org/">their 
website</A>. 
<P><A name=GBorland-C++-Builder><B>Borland C++ Builder</B></A> - Borland's 
implementation of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> together with 
proprietary libraries for Windows programming in an <A 
href="http://www.research.att.com/~bs/glossary.html#GIDE">IDE</A>. 
<P><A name=Gbug><B>bug</B></A> - colloquial term for error. 
<P><A name=Gbuilt-in-type><B>built-in type</B></A> - A <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> provided 
directly by <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble">double</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gchar*">char*</A>. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gintegral-type">integral 
type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfloating-point-type">floating-point 
type</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Greference#">reference</A>. 
TC++PL 4.1.1, 5.1, 5.2, 5.5, D&amp;E 4.4, 15.11.3. 
<P><A name=Gbyte><B>byte</B></A> - a unit of <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> that can 
hold a character of the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> representation 
<A href="http://www.research.att.com/~bs/glossary.html#Gcharacter-set">character 
set</A>. The smallest unit of memory that can be directly addressed in C++. 
Usually, a byte is 8 <A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s. TC++PL 4.6. 
<P><A name=GC><B>C</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> designed and originally implemented by Dennis <A 
href="http://www.research.att.com/~bs/glossary.html#GRitchie">Ritchie</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> is based on C 
and maintains a high degree of <A 
href="http://www.research.att.com/~bs/bs_faq.html#C-is-subset">compatibility 
with C</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#GK&amp;R-C">K&amp;R C</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#GC89">C89</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#GC99">C99</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#GANSI-C">ANSI C</A>. TC++PL 
B, D&amp;E 3.12. 
<P><A name=GC-standard-library><B>C standard library</B></A> - the library 
defined for <A href="http://www.research.att.com/~bs/glossary.html#GC">C</A> in 
the C standard. Inherited by <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. Most C <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s 
have safer and more convenient alternatived in the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A> library. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gstream-I/O">stream 
I/O</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Glocale">locale</A>. 
<P><A name=GC++><B>C++</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneral-purpose-programming-language">general-purpose 
programming language</A> with a bias towards systems programming that supports 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gprocedural-programming">procedural 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-abstraction">data 
abstraction</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>++ was designed and 
originally implemented by <A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>. C++ is defined by <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A>/IEC <A 
href="http://www.research.att.com/~bs/glossary.html#G14882">14882</A> - Standard 
for the C++ Programming Language. <A 
href="http://www.research.att.com/~bs/glossary.html#GTC++PL#">TC++PL</A> 
describes C++ and the fundamental techniques for its use. A description of the 
design considerations for C++ can be found in <A 
href="http://www.research.att.com/~bs/glossary.html#GD&amp;E#">D&amp;E</A>. Many 
commercial and <A href="http://www.research.att.com/~bs/bs_faq.html#free">free 
implementations</A> exist. TC++PL 1.3,-5, 2.1, D&amp;E 0. 
<P><A name=GC++-standard><B>C++ standard</B></A> - the definition of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> provided by <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A>. Available 
from <A href="http://www.research.att.com/~bs/glossary.html#GANSI">ANSI</A>; see 
<A href="http://www.research.att.com/~bs/C++.html">my C++ page</A>. TC++PL 1.4, 
B.1. D&amp;E 6.1. 
<P><A name=GC++-standards-committees><B>C++ standards committees</B></A> - the 
<A href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A> committee 
for <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> (<A 
href="http://anubis.dkuug.dk/jtc1/sc22/wg21/">WG21</A>) and the various national 
standards committees that closely cooperate with it (BIS, AFNOR, DIN, etc.). <A 
href="http://www.research.att.com/~bs/bs_faq.html#spoil-C++">Did the ANSI/ISO 
standards committee spoil C++?</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
Standard</A>. D&amp;E 6.2. 
<P><A name=GC++-standards-process><B>C++ standards process</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standards-committees">C++ 
standards committees</A> 
<P><A name=GC++/CLI><B>C++/CLI</B></A> - A set of Microsoft <A 
href="http://www.research.att.com/~bs/glossary.html#Gextension">extension</A>s 
to <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> for use 
with their .Net system. See <A 
href="http://www.research.att.com/~bs/bs_faq.html#CppCLI">FAQ comments</A>. 
<P><A name=GC++03><B>C++03</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> for the 
minor revision of the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A> represented by the 2003 corrigenda ("a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbug">bug</A> fix release"). 

<P><A name=GC++0x><B>C++0x</B></A> - the upcoming revision of the <A 
href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO C++</A> 
standard; 'x' is scheduled to be '9'. See <A 
href="http://www.research.att.com/~bs/C++.html">my publicatons page<A>. 
<P><A name=GC++98><B>C++98</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO C++</A> 
standard. See <A href="http://www.research.att.com/~bs/C++.html">my C++ page<A>. 

<P><A name=GC-style-cast><B>C-style cast</B></A> - dangerous form of <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-type-conversion">explicit 
type conversion</A>; prefer <A 
href="http://www.research.att.com/~bs/glossary.html#Gnew-style-cast">new-style 
cast</A> if you must use explicit type conversion. TC++PL 6.2.7, D&amp;E 
14.3.5.1. 
<P><A name=GC-style-string><B>C-style string</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gzero">zero</A>-terminated 
<A href="http://www.research.att.com/~bs/glossary.html#Garray">array</A> of 
characters, supported by <A 
href="http://www.research.att.com/~bs/glossary.html#GC-standard-library">C 
standard library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s. A 
low-level and error-prone mechanism; where possible prefer <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>s. TC++PL 
3.5.1, 20.3.7, 20.4. 
<P><A name=GC/C++><B>C/C++</B></A> - (1) an abbreviation used when discussing 
similarities, differences, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompatibility">compatibility</A> 
issues of <A href="http://www.research.att.com/~bs/glossary.html#GC">C</A> and 
<A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. (2) a 
mythical language referred to by people who cannot or do not want to recognize 
the magnitude of differences between the facilities offered by C and C++ or the 
significant differences in the programming styles supported by the two language. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gmulti-paradigm-programming">multi-paradigm 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A> library. 
<P><A name=GC/C++-compatibility><B>C/C++ compatibility</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> was designed 
to be as compatible as possible to C, but no more. This basically means as 
compatible as can be without compromising C++'s level of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-safety">type 
safety</A>. You can download Appendix B of <A 
href="http://www.research.att.com/~bs/glossary.html#GTC++PL#">TC++PL</A>,. <A 
href="http://www.research.att.com/~bs/3rd_compat.pdf">Compatibility</A>, which 
describes incompatibilities and differences in facilities offered by C and C++. 
TC++PL B. D&amp;E 2.7, 3.12, 4.5. 
<P><A name=GC89><B>C89</B></A> - The 1989 <A 
href="http://www.research.att.com/~bs/glossary.html#GANSI">ANSI</A> standard for 
<A href="http://www.research.att.com/~bs/glossary.html#GC">C</A> based on <A 
href="http://www.research.att.com/~bs/glossary.html#GK&amp;R-C">K&amp;R C</A> 
with a few additions borrowed from <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-prototype">function 
prototype</A>s and <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>. See also: 
K&amp;R C, <A href="http://www.research.att.com/~bs/glossary.html#GC99">C99</A>. 

<P><A name=GC99><B>C99</B></A> - The 1999 <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A> standard for 
<A href="http://www.research.att.com/~bs/glossary.html#GC">C</A> based on <A 
href="http://www.research.att.com/~bs/glossary.html#GC89">C89</A> with additions 
to support Fortran-style numeric computation. It also borrows a few more 
features, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gline-comment">line 
comment</A>s (// comments) and <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>s 
as <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A>s, 
from <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=Gcall-by-reference><B>call-by-reference</B></A> - declaring a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-argument">function 
argument</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> to be a <A 
href="http://www.research.att.com/~bs/glossary.html#Greference#">reference</A>, 
thus passing a reference rather than a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> to the 
called function. See Also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcall-by-value">call-by-value</A>. 
TC++PL 5.5, D&amp;E 3.7. 
<P><A name=Gcall-by-value><B>call-by-value</B></A> - passing a copy of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> to 
the called <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. The 
<A href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> 
of function call is to pass a copy of an argument. The copy operation is defined 
by the argument <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A>. See Also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcall-by-reference">call-by-reference</A>. 
TC++PL 7.2. 
<P><A name=Gcast><B>cast</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> for 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-type-conversion">explicit 
type conversion</A>; most often best avoided. See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#GC-style-cast">C-style 
cast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnew-style-cast">new-style 
cast</A>. TC++PL 6.2.7, D&amp;E 7.2, 14.2.2.1. 
<P><A name=Gcatch><B>catch</B></A> - keyword used to introduce a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch-clause">catch-clause</A>. 

<P><A name=Gcatch(...)><B>catch(...)</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A> every <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>. 
TC++PL 14.3.2, D&amp;E 16.5. 
<P><A name=Gcatch-clause><B>catch-clause</B></A> - a part of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A> 
that <A href="http://www.research.att.com/~bs/glossary.html#Ghandle">handle</A>s 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>s 
of a specified <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. Also called 
a <A href="http://www.research.att.com/~bs/glossary.html#Ghandler">handler</A> 
or an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A>. TC++PL 8.3.1, 14.3, D&amp;E 16.3-4. 
<P><A name=Gcerr><B>cerr</B></A> - standard unbuffered <A 
href="http://www.research.att.com/~bs/glossary.html#Gostream">ostream</A> for 
error or diagnostic <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>. TC++PL 
21.2.1. 
<P><A name=GCfront><B>Cfront</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A> of 
<A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>'s original <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A>. 
D&amp;E 3.3. 
<P><A name=Gchar><B>char</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-type">character 
type</A>; typically an 8-<A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A>. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gwchar_t">wchar_t</A>. 
TC++PL 4.3, C.3.4. 
<P><A name=Gchar*><B>char*</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to a 
<A href="http://www.research.att.com/~bs/glossary.html#Gchar">char</A> or an <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A> of char. 
Typically assumed to point to a <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-string">C-style 
string</A>. Prefer a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> string over a C-style string when you can. TC++PL 2.3.3, 13.5.2. 
<P><A name=Gcharacter-set><B>character set</B></A> - a set of integer <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s with a 
mapping to character representations; for example, ASCII (<A 
href="http://www.research.att.com/~bs/glossary.html#GANSI">ANSI</A>13.4-1968) 
gives meaning to the values 0-127. ASCII is <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>'s 
representation character set, the character set used to represent <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> source 
text. TC++PL C.3. D&amp;E 6.5.3. 
<P><A name=Gcharacter-type><B>character type</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gchar">char</A>, unsigned 
char, and signed char. These are three distinct <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gwchar_t">wchar_t</A>. 
TC++PL 2.3.1, 4.3, C.3.4. 
<P><A name=Gcin><B>cin</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gistream">istream</A>. 
TC++PL 3.6, 21.3.1 D&amp;E 8.3.1. 
<P><A name=Gclass><B>class</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>. A class can have <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-data">member 
data</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-constant">member 
constant</A>s, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-type">member 
type</A>s. A class is thee primary mechanism for representing <A 
href="http://www.research.att.com/~bs/glossary.html#Gconcept">concept</A>s in <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-class">template 
class</A>. TC++PL 2.5.2, 10, D&amp;E 2.3. 
<P><A name=Gclass-hierarchy><B>class hierarchy</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es 
organized into a directed acyclic graph (DAG) by derived/base relationships. 
TC++PL 2.6.2, 12, 15, D&amp;E 1.1, 7.2, 8.2.3. 
<P><A name=Gclass-template><B>class template</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-class">template 
class</A>. 
<P><A name=GClassic-C><B>Classic C</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GK&amp;R-C">K&amp;R C</A>. 
<P><A name=Gclone><B>clone</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> that 
makes a copy of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>; usually 
a clone function relies on run-time information (e.g. a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> 
function call) to correctly copy an object given only a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> or 
reference to a sub-object. 
<P><A name=Gclosure><B>closure</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
representing a context. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> does not have 
general closures, but <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A>s can be efficiently used to hold specific parts of a context relevant 
to a computation. TC++PL 22.4.7, 18.4. 
<P><A name=Gco-variant-return-type><B>co-variant return type</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Greturn-type-relaxation">return 
type relaxation</A>. 
<P><A name=Gcode-generator><B>code generator</B></A> - the part of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> that 
takes the <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A> from the 
<A href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A> 
and generates code from it. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gback-end">back-end</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Goptimizer">optimizer</A>. 
<P><A name=Gcollection><B>collection</B></A> - a term sometimes used as a 
synonym for <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>. 
<P><A name=GComeau-C++><B>Comeau C++</B></A> - a family of ports of the <A 
href="http://www.research.att.com/~bs/glossary.html#GEDG-C++-front-end">EDG C++ 
front-end</A>. 
<P><A name=Gcomment><B>comment</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gblock-comment">block 
comment</A> /* ... */ or <A 
href="http://www.research.att.com/~bs/glossary.html#Gline-comment">line 
comment</A> // ... 
<P><A name=Gcompatibility><B>compatibility</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC/C++-compatibility">C/C++ 
compatibility</A>. 
<P><A name=Gcompiler><B>compiler</B></A> - the part of a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> implementation 
that produces <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-code">object 
code</A> from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gback-end">back-end</A>. 
<P><A name=Gcomplex><B>complex</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> complex number <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
parameterized by scalar <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 
11.3, 22.5, D&amp;E 3.6.1, 8.5, 15.10.2.1. 
<P><A name=Gcompound-statement><B>compound statement</B></A> - sequence of <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A>s 
enclosed in curly braces: { ... } See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
TC++PL 2.3, 6.3. 
<P><A name=Gconcept><B>concept</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> language 
construct, providing <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> chaecking 
for <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>s. 
<P><A name=Gconcept-checking><B>concept checking</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstraint">constraint</A>. 

<P><A name=Gconcrete-type><B>concrete type</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> without <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s, so 
that <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s 
of the type can be allocated on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A> and 
manipulated directly (without a need to use <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>s or 
references to allow the possibility for derived <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es). Often, 
small self-contained classes. See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Glist#">list</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomplex">complex</A>. 
TC++PL 25.2. 
<P><A name=Gconst><B>const</B></A> - attribute of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
that makes the entity to which it refers readonly. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst-member-function">const 
member function</A>. TC++PL 5.4, D&amp;E 3.8. 
<P><A name=Gconst-definition><B>const definition</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a <A href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> 
including an initializer. 
<P><A name=Gconst-member-function><B>const member function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> declared not to modify the state of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> for 
which it is called. Can be called for <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> objects 
only. TC++PL 10.2.6, D&amp;E 13.3. 
<P><A name=Gconstant><B>constant</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gliteral">literal</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> declared 
<A href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>, or <A 
href="http://www.research.att.com/~bs/glossary.html#Genumerator">enumerator</A>. 

<P><A name=Gconstant-expression><B>constant expression</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
of <A 
href="http://www.research.att.com/~bs/glossary.html#Gintegral-type">integral 
type</A> that is evaluated at compile time. TC++PL C.5. 
<P><A name=Gconstraint><B>constraint</B></A> - rule that restricts the set of 
acceptable <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s for 
a <A href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gparameter">parameter</A>. 
For example "the argument must have + and - <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s". 
<A href="http://www.research.att.com/~bs/bs_faq2.html#constraints">Examples</A>. 
D&amp;E 15.4. 
<P><A name=Gconstructor><B>constructor</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> with the same <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> as its <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>, used to 
initialize <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s of its 
class. Often used to establish an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginvariant">invariant</A> 
for the class. Often used to acquire <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>s. A 
constructor establishes a local environment in which member functions execute. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gorder-of-construction">order 
of construction</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>. 
TC++PL 10.2.3, D&amp;E 2.11.1. 
<P><A name=Gconst_cast><B>const_cast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-conversion">type 
conversion</A> operation that conversion between types that differ in <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gvolatile">volatile</A> type 
modifiers only. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>. TC++PL 
15.4.2.1, D&amp;E 14.3.4. 
<P><A name=Gcontainer><B>container</B></A> - (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> that 
holds other objects. (2) <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of object 
that holds other objects. (3) <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> that 
generates types of objects that hold other objects. (4) <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> template such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Glist#">list</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>. TC++PL 16.2, 
16.2.3, 17, D&amp;E 15.3. 
<P><A name=Gcontrolled-variable><B>controlled variable</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> used 
to express the part of the exit condition of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gloop">loop</A> that varies 
each time around the loop. For example ``i'' in for (<A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A> i=0; i&lt;max; 
++i) f(i); 
<P><A name=Gconversion><B>conversion</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-type-conversion">explicit 
type conversion</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gimplicit-type-conversion">implicit 
type conversion</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type-conversion">user-defined 
type conversion</A>. 
<P><A name=Gconversion-operator><B>conversion operator</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-function">operator 
function</A> specifying a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A> 
from a <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A> to either another user-defined type or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A>. Note that <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>s 
cannot define conversions to built-in types. TC++PL 11.4, D&amp;E 3.6.3. 
<P><A name=Gcopy-assignment><B>copy assignment</B></A> - an assignment accepting 
an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of 
the <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> 
itself as its <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>, 
typically Z::<A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>=(<A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> Z&amp;). A 
copy assignment is used for assignment of an object of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> T with an 
object of type T. If a copy assignment is not declared for a class, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemberwise-copy">memberwise 
copy</A> is used. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A>. TC++PL 10.4.4.1, 10.4.6.3 D&amp;E 11.4. 
<P><A name=Gcopy-constructor><B>copy constructor</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
accepting an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of the 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> itself 
as its <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>, 
typically Z::Z(const Z&amp;). A copy constructor is used for <A 
href="http://www.research.att.com/~bs/glossary.html#Ginitialization">initialization</A> 
of objects of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> T with 
objects of type T. If a copy constructor is not declared for a class, memberwise 
initialization is used. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcall-by-value">call-by-value</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gargument-passing">argument 
passing</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue-return">value 
return</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-assignment">copy 
assignment</A>. TC++PL 10.4.4.1, 10.4.6.3, D&amp;E 11.4. 
<P><A name=Gcopy()><B>copy()</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A> 
for copying one sequence into another. The two sequences need not be of the same 
<A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 
18.6.1. 
<P><A name=Gcopying-class-object><B>copying class object</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> is copied 
by the class' <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-assignment">copy 
assignment</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A>s. The default meaning of these operations is <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemberwise-copy">memberwise 
copy</A>. TC++PL 10.4.4.1, 10.4.6.3 D&amp;E 11.4. 
<P><A name=Gcout><B>cout</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gostream">ostream</A>. 
TC++PL 3.4, 21.2.1, D&amp;E 8.3.1. 
<P><A name=Gcpp><B>cpp</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gpreprocessor">preprocessor</A>. 

<P><A name=Gcrosscast><B>crosscast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A> from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> to a <A 
href="http://www.research.att.com/~bs/glossary.html#Gsibling-class">sibling 
class</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gupcast">upcast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdowncast">downcast</A>. 
TC++PL 15.4. 
<P><A name=GCurrying><B>Currying</B></A> - producing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> of 
N-M <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s by 
specifying M arguments for a function of N arguments. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinder">binder</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefault-argument">default 
argument</A>. TC++PL 18.4.4.1. 
<P><A name=GD&amp;E#><B>D&amp;E</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>: <A href="http://www.research.att.com/~bs/dne.html">The Design 
and Evolution of C++</A>. Addison Wesley. 1994. A book describing why C++ looks 
the way it does - the closest to a design rationale that we have for C++. 
<P><A name=Gdata-abstraction><B>data abstraction</B></A> - programming relying 
on <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>s with well-defined <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A>s. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. TC++PL 2.5, 24.2.2, D&amp;E 9.2.1. 
<P><A name=Gdata-hiding><B>data hiding</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Ginformation-hiding">information 
hiding</A> 
<P><A name=Gdata-member><B>data member</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that can 
hold a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. 
A memer can be a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-member">static 
member</A> or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gnon-static-member">non-static 
member</A>. TC++PL 2.5.2-3, 10.2, D&amp;E 2.3, 2.5.2. 
<P><A name=Gdeclaration><B>declaration</B></A> - an introduction of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> into a <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A>. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of the name 
must be specified. If the declaration also specifies the entity to which the 
name refers, the declaration is also a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefinition#">definition</A>. 
TC++PL 4.9, D&amp;E 3.11.5. 
<P><A name=Gdecltype><B>decltype</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>++ox <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
meaning the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of its 
operand. For example: <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble">double</A>&amp; d1 
<A href="http://www.research.att.com/~bs/glossary.html#G=">=</A>2.0; 
decltype(d1) d2; (d2 will also be a const double&amp;). Primarily useful for 
writing forwarding <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s in 
<A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>. 
<P><A name=Gdefault-argument><B>default argument</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> specified 
for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> in a 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-declaration">function 
declaration</A>, to be used if a call of the function doesn't specify a value 
for that argument. This is commonly used to allow a simple <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
for common uses while making it easy to use less common facilities by specifying 
more arguments. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefault-template-argument">default 
template argument</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinder">binder</A>. TC++PL 
7.5, 10.2.3, D&amp;E 2.12.2. 
<P><A name=Gdefault-constructor><B>default constructor</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
requiring no <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s. 
Used for default <A 
href="http://www.research.att.com/~bs/glossary.html#Ginitialization">initialization</A>. 
TC++PL 10.4.2, 10.4.6, D&amp;E 2.12.2, 15.11.3. 
<P><A name=Gdefault-template-argument><B>default template argument</B></A> - a 
<A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> specified 
for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> in a 
<A href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>, 
to be used if a use of the template doesn't provide a type or value for that 
argument. This is commonly used to allow a simple <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
for common uses while making it easy to use less common facilities by specifying 
more arguments. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefault-argument">default 
argument</A>. TC++PL 13.4.1, B.3.5. 
<P><A name=Gdefault-value><B>default value</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> defined by 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefault-constructor">default 
constructor</A>. For <A 
href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A>s, the default value is defined to be 0. TC++PL 4.9.5, 10.3.1, 10.4.2 
D&amp;E 15.11.3. 
<P><A name=Gdefinition#><B>definition</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
that specifies the entity to which the declared <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> refers. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gone-definition-rule">one 
definition rule</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable-definition">variable 
definition</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst-definition">const 
definition</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-definition">template 
definition</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-definition">function 
definition</A>. TC++PL 4.9, D&amp;E 15.11.3. 
<P><A name=Gdelayed-evaluation><B>delayed evaluation</B></A> - technique for 
eliminating temporary <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s, and in 
general to delay a computation until sufficient information is available to do 
it well. TC++PL 21.4.6.3, 22.4.7. 
<P><A name=Gdelete><B>delete</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
destruction <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
Invokes <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>, 
if any. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-management">resource 
management</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory-management">memory 
management</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ggarbage-collection">garbage 
collection</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-delete()">operator 
delete()</A>. TC++PL 6.2.6, D&amp;E 2.3, 10.2. 
<P><A name=Gdeprecated-feature><B>deprecated feature</B></A> - feature left in a 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> for historical reasons only. The standard s committee recommends 
against its use and warns that it may be removed in future revisions of the 
standard. 
<P><A name=Gdeque><B>deque</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble">double</A>-ended <A 
href="http://www.research.att.com/~bs/glossary.html#Gqueue">queue</A> 
(pronounced "deck"). A <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
alowing insertions and deletions at both ends. Use a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> if you 
need insertions and deletions only at one end (as is typical). Use a list if you 
need frequent insertions and deletions in the middle. TC++PL 17.2.3. 
<P><A name=Gderived-class><B>derived class</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> with one 
or more <A href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base 
class</A>es TC++PL 2.6.2, 12, 15, D&amp;E 3.5. 
<P><A name=Gdesign><B>design</B></A> - creating a clean and reasonably simple 
structure of a system TC++PL 23.3. 
<P><A name=Gdesign-of-C++><B>design of C++</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GD&amp;E#">D&amp;E</A>. 
<P><A name=Gdestructor><B>destructor</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> used to 
clean up before deleting an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>. It's <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> is its 
class' name prefixed by '~'. For example, Foo's destructor is ~Foo(). Often used 
to release <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>s. A 
destructor is implicitly called whenever an object goes out of <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> or is 
deleted. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual-destructor">virtual 
destructor</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gorder-of-destruction">order 
of destruction</A>. TC++PL 10.4.2, D&amp;E 2.11.1, 3.11.2. 
<P><A name=Gdigraph><B>digraph</B></A> - alternative representation for <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> representation 
characters that doesn't exist in every national <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-set">character 
set</A>, such as {, }, [, ], and #: &lt;%, %., &lt;:, :&gt;, and %:. TC++PL 
C.3.1. 
<P><A name=Gdouble><B>double</B></A> - double-precision floating-point number. 
TC++PL 4.5. 
<P><A name=Gdouble-dispatch><B>double dispatch</B></A> - a technique for 
selecting a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> to 
be invoked on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic-type">dynamic 
type</A> of two operands. TC++PL 21.2.3.1, D&amp;E 13.8. 
<P><A name=Gdowncast><B>downcast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A> from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
to one of its <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>es. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> reflects the 
fact that in programming, trees tend to be drawn growing downwards from the 
roots. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gupcast">upcast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcrosscast">crosscast</A>. 
TC++PL 15.4. 
<P><A name=Gdynamic-memory><B>dynamic memory</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free store</A>. 

<P><A name=Gdynamic-type><B>dynamic type</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> as 
determined at run-time; e.g. using <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A> 
or typeid. Also known as <A 
href="http://www.research.att.com/~bs/glossary.html#Gmost-derived-type">most-derived 
type</A>. 
<P><A name=Gdynamic-type-safety><B>dynamic type safety</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-safety">type 
safety</A> enforced at run time (typically requiring a programmer to <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>s 
to deal with violations). An example is range checking for <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>s. 
<P><A name=Gdynamic_cast><B>dynamic_cast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-conversion">type 
conversion</A> operation that performs safe conversions using on <A 
href="http://www.research.att.com/~bs/glossary.html#Grun-time-type-information">run 
time type information</A>. Used for navigation of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass-hierarchy">class 
hierarchy</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdowncast">downcast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcrosscast">crosscast</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic_cast">static_cast</A>. 
TC++PL 15.4.1, D&amp;E 14.2.2, 14.3.2.1. 
<P><A name=GEDG-C++-front-end><B>EDG C++ front-end</B></A> - a quality <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A>, 
which is the core of several well-regarded C++ compilers. 
<P><A name=Gelement><B>element</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>. 
<P><A name=Gencapsulation><B>encapsulation</B></A> - the enforcement of <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstraction">abstraction</A> 
by mechanisms that prevent access to implementation details of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> or a 
group of objects except through a well-defined <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A>. 
<A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> enforces 
encapsulation of <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate">private</A> and 
proteced <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> as long as 
users do not violate the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-system">type 
system</A> using <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>s. See also: 
interface and <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A>. TC++PL 15.3, 24.3.7.4, D&amp;E 2.10. 
<P><A name=Genum><B>enum</B></A> - keyword for declaring <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>s. 
TC++PL 4.8, D&amp;E 11.7. 
<P><A name=Genumeration><B>enumeration</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A> consisting of a set of named <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s. TC++PL 
4.8, D&amp;E 11.7. 
<P><A name=Genumerator><B>enumerator</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> identifying 
a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> of an 
<A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>. 
TC++PL 4.8, D&amp;E 11.7. 
<P><A name=Gequality-operator><B>equality operator</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G==">==</A>. 
<P><A name=Gerror-handling><B>error handling</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handling">exception 
handling</A>. 
<P><A name=Gescape-character><B>escape character</B></A> - the character \, also 
called <A 
href="http://www.research.att.com/~bs/glossary.html#Gbackslash">backslash</A>, 
sed an initial character in representations of characters that cannot be 
represented by a single ASCII character, such as newline ('\n') and horizontal 
tab ('\t'). TC++PL C.3.2. 
<P><A name=Gexception><B>exception</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> thrown 
by a throw-<A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
and (potentially) caught by an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A> associated by a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtermination-semantics">termination 
semantics</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A>. TC++PL 
8.3, 14.2, D&amp;E 16. 
<P><A name=Gexception-handler><B>exception handler</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch-clause">catch-clause</A> 
associated with a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A> 
for handling <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>s 
of a specified <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 
8.3.1, 14.3, D&amp;E 16.3-4. 
<P><A name=Gexception-handling><B>exception handling</B></A> - the primary way 
of reporting an error that cannot be handled locally. An <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> is 
thrown and will be caught by an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gterminate()">terminate()</A> 
will be called. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtermination-semantics">termination 
semantics</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>, 
throw, <A href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A>. 
TC++PL 8.3, 14, E, D&amp;E 16. 
<P><A name=Gexception-safety><B>exception safety</B></A> - the notion that a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> is 
structured so that throwing an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
doesn't cause unintended side effects. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic-guarantee">basic 
guarantee</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstrong-guarantee">strong 
guarantee</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gnothrow-guarantee">nothrow 
guarantee</A>. You can download Appendix E <A 
href="http://www.research.att.com/~bs/3rd_safe.pdf">Standard-Library Exception 
Safety</A> of <A 
href="http://www.research.att.com/~bs/glossary.html#GTC++PL#">TC++PL</A> 
describing techniques for <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handling">exception 
handling</A>. TC++PL E.2. 
<P><A name=Gexecutable-file><B>executable file</B></A> - the result of linking 
the <A href="http://www.research.att.com/~bs/glossary.html#Gobject-file">object 
file</A>s of a complete <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Glinker">linker</A>. 
<P><A name=Gexplicit><B>explicit</B></A> - keyword used to define a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
so that it isn't used for implicit <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A>s. 
TC++PL 11.7.1. 
<P><A name=Gexplicit-call-of-constructor><B>explicit call of constructor</B></A> 
- See <A 
href="http://www.research.att.com/~bs/glossary.html#Gplacement-new">placement 
new</A>. 
<P><A name=Gexplicit-call-of-destructor><B>explicit call of destructor</B></A> - 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>s 
are implicitly called when an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> goes out 
of <A href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> or 
is deleted. However, if a user have taken over construction (using <A 
href="http://www.research.att.com/~bs/glossary.html#Gplacement-new">placement 
new</A>) and destruction, a destructor must be explicitly called. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#placement-delete">Example</A>. 
For example, explicit call of destructor is used in the implementation of <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s. 
See also: placement new. TC++PL 10.4.11, E.3.1, D&amp;E 10.5.1. 
<P><A name=Gexplicit-constructor><B>explicit constructor</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
so that will not be used for implicit <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A>s. 
TC++PL 11.7.1. 
<P><A name=Gexplicit-instantiation><B>explicit instantiation</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit">explicit</A> 
request to instantiate a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> in a 
specific context. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-instantiation">template 
instantiation</A>. TC++PL C.13.10, D&amp;E 15.10.1. 
<P><A name=Gexplicit-qualification><B>explicit qualification</B></A> - (1) by <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A> 
name, see <A 
href="http://www.research.att.com/~bs/glossary.html#Gqualified-name">qualified 
name</A>. (2) by <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>. TCP++L 13.3.2. 
<P><A name=Gexplicit-type-conversion><B>explicit type conversion</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-conversion">type 
conversion</A> (explicitly) requested by the use of a <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-cast">C-style 
cast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnew-style-cast">new-style 
cast</A>, or functional notation. See also, <A 
href="http://www.research.att.com/~bs/glossary.html#Gimplicit-type-conversion">implicit 
type conversion</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type-conversion">user-defined 
type conversion</A>. TC++PL 6.2.7, D&amp;E 14.3.2. 
<P><A name=Gexpression><B>expression</B></A> - combination of <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s and 
<A href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>s 
producing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. TC++PL 
6.2. 
<P><A name=Gextended-type-information><B>extended type information</B></A> - any 
scheme that provides additional information base on the standard <A 
href="http://www.research.att.com/~bs/glossary.html#Grun-time-type-information">run 
time type information</A>. TC++PL 15.4.4.1, D&amp;E 14.2.5.2. 
<P><A name=Gextension><B>extension</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Glanguage-extension">language 
extension</A> 
<P><A name=Gextern><B>extern</B></A> - a keyword used to indicate that the 
definition of an entity being declared is defined elsewhere. Because "extern: is 
only necessary for global <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A>s it 
is largely redundant. 
<P><A name=Gextracter><B>extracter</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#G>>">&gt;&gt;</A> (put to) 
function. TC++PL 21.2,21.3, D&amp;E 8.3.1. 
<P><A name=Gfacet><B>facet</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> 
representing a primitive aspect of a <A 
href="http://www.research.att.com/~bs/glossary.html#Glocale">locale</A>, such as 
a way of writing an integer or a character encoding. TC++PL D.3. 
<P><A name=Gfalse><B>false</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>; converts 
to 0. TC++PL 4.2, D&amp;E 11.7.2. 
<P><A name=Gfat-interface><B>fat interface</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
with more <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>s and <A 
href="http://www.research.att.com/~bs/glossary.html#Gfriend">friend</A>s than 
are logically necessary. TC++PL 24.4.3. 
<P><A name=Gfield><B>field</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gbitfield">bitfield</A>. 
<P><A name=Gfile><B>file</B></A> - a sequence of <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A>s or words 
holding information in a computer. The term "file" is usually reserved to 
information placed on disk or elsewhere outside the main <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>. The <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> part 
of the <A href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A> library provides <A 
href="http://www.research.att.com/~bs/glossary.html#Gifstream">ifstream</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gofstream">ofstream</A>, and 
fstream as <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstraction">abstraction</A> 
for accessing files. TC++PL 21.5. 
<P><A name=Gfile-stream><B>file stream</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream">stream</A> attached 
to a <A href="http://www.research.att.com/~bs/glossary.html#Gfile">file</A>. See 
also, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfstream">fstream</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gifstream">ifstream</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gofstream">ofstream</A>. 
TC++PL 21.5.1. 
<P><A name=Gfinally><B>finally</B></A> - a language construct supporting ad hoc 
cleanup in some languages. Similar, but not identical to <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch(...)">catch(...)</A>. 
Use the "<A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>" technique instead. 
<P><A name=Gfind()><B>find()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> linear search <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A> 
for a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> 
in a sequence. TC++PL 18.5.2. 
<P><A name=Gfind_if()><B>find_if()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> linear search <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A> 
for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A> 
meeting a search criterion in a sequence. TC++PL 18.5.2. 
<P><A name=Gfloat><B>float</B></A> - single-precision floating-point number. 
TC++PL 4.5. 
<P><A name=Gfloating-point-literal><B>floating-point literal</B></A> - the 
source text representation of a floating point <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. For 
example, 0.314e1. TC++PL 4.5.1. 
<P><A name=Gfloating-point-type><B>floating-point type</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfloat">float</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble">double</A>, or <A 
href="http://www.research.att.com/~bs/glossary.html#Glong-double">long 
double</A>. A floating-point number is typically represented as a mantissa and 
an exponent. TC++PL 4.5. 
<P><A name=Gfor-statement><B>for-statement</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Giteration">iteration</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
specifying an initializer, an iteration condition, a "next-iteration" operation, 
and a controlled statement. TC++PL 6.3.3. 
<P><A name=Gfree-store><B>free store</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> 
allocated by <A 
href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A>; also called 
<A href="http://www.research.att.com/~bs/glossary.html#Gdynamic-memory">dynamic 
memory</A>. Often <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> facilities, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, can be 
used to avoid <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit">explicit</A> use 
of free store. TC++PL 6.2.6, 10.4.3, D&amp;E 2.11.2, 11.4.2. 
<P><A name="Gfree()&#9;"><B>free() </B></A>- <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> standard 
deallocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. Use 
<A href="http://www.research.att.com/~bs/glossary.html#Gdelete">delete</A> 
instead. 
<P><A name=Gfree-standing-function><B>free-standing function</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> that 
is not a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>. Useful for decreasing coupling between representation and <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>. 
TC++PL 7, 18. 
<P><A name=Gfriend><B>friend</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> or 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> 
explicitly granted access to <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s of a 
class by that class. TC++PL 11.5, C.11.4, D&amp;E 2.10, 3.6.1-2. 
<P><A name=Gfriend-function><B>friend function</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
declared as <A 
href="http://www.research.att.com/~bs/glossary.html#Gfriend">friend</A> in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> so that it 
has the same access as the class' <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s without 
having to be within the <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> of the 
class. And, no, friends do not "violate <A 
href="http://www.research.att.com/~bs/glossary.html#Gencapsulation">encapsulation</A>". 
TC++PL 11.5, 11.2.3, C.11.4, D&amp;E 2.10, 3.6.1. 
<P><A name=Gfront-end><B>front-end</B></A> - the parts of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> that 
perform lexical and <A 
href="http://www.research.att.com/~bs/glossary.html#Gsyntax">syntax</A> 
checking, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-checking">type 
checking</A>, and initial semantic checking of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>. Typically all compiler error messages comes from the front-end. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gback-end">back-end</A>. 
D&amp;E 3.3. 
<P><A name=Gfront_inserter()><B>front_inserter()</B></A> - returns an <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A> that 
can be used to add <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A>s at 
the front of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A> . 
TC++PL 19.2.4. 
<P><A name=Gfstream><B>fstream</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile-stream">file 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>. 
<P><A name=Gfunction><B>function</B></A> - a named sequence of <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A>s 
that can be invoked/called given <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s and 
that might return a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of the 
function <A 
href="http://www.research.att.com/~bs/glossary.html#Ginclude">include</A>s the 
number and types of argument and the type of the value returned, if any. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-declaration">function 
declaration</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-body">function 
body</A>. TC++PL 2.3, 7, D&amp;E 2.6. 
<P><A name=Gfunction-argument><B>function argument</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> to a 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. 
<P><A name=Gfunction-body><B>function body</B></A> - the outermost <A 
href="http://www.research.att.com/~bs/glossary.html#Gblock">block</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-definition">function 
definition</A>. TC++PL 2.7, 13. 
<P><A name=Gfunction-declaration><B>function declaration</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>, 
including its <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s, and return 
type. 
<P><A name=Gfunction-definition><B>function definition</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-declaration">function 
declaration</A> including a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-body">function 
body</A>. 
<P><A name=Gfunction-member><B>function member</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>. 
<P><A name=Gfunction-object><B>function object</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> with the 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gapplication">application</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>, 
operator()(), defined so that it can be called like a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. A 
function object is more general than a function because it can hold data and 
provide additional operations. Sometimes called a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunctor">functor</A>. Given 
current <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> 
technology, simple function objects inline better than <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>s to 
functions, so that parameterization with function objects can be far more 
efficient than use of pointers to functions or <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> 
functions. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinder">binder</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gadapter">adapter</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ginlining">inlining</A>. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#function-object">Example</A>. 
TC++PL 18.4. 
<P><A name=Gfunction-parameter><B>function parameter</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gparameter">parameter</A> of 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. 
<P><A name=Gfunction-prototype><B>function prototype</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> term for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-declaration">function 
declaration</A> that isn't also a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-definition">function 
definition</A>. D&amp;E 2.6. 
<P><A name=Gfunction-template><B>function template</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-function">template 
function</A>. 
<P><A name=Gfunction-try-block><B>function try-block</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A> 
associated with the outmost block of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>, the 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction-body">function 
body</A>. TC++PL 3.7.2. 
<P><A name=Gfunctor><B>functor</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A>. 
<P><A name=GG++><B>G++</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GGNU-C++">GNU C++</A>. 
<P><A name=Ggarbage-collection><B>garbage collection</B></A> - techniques for 
reclaiming unused <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> without 
relying on user-supplied <A 
href="http://www.research.att.com/~bs/glossary.html#Gdelete">delete</A> or 
free() commands. A permitted but not required technique for <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. Commercial 
and free garbage collectors exist for C++: See <A 
href="http://www.research.att.com/~bs/C++.html">my C++ page</A>. Use of <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es that 
control their own storage, such as the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>, reduces the 
need for garbage <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>. 
TC++PL C.9.1. D&amp;E 10.7. 
<P><A name=Ggeneral-purpose-programming-language><B>general-purpose programming 
language</B></A> - (1) a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> intended for use in a wide range of <A 
href="http://www.research.att.com/~bs/glossary.html#Gapplication">application</A> 
areas without restrictions that make it totally unsuitable for traditional major 
uses of computers, such as mathematical computations, data processing, text 
processing, graphics, and communications. (2) a language that can do what at 
least as much as other languages called "general purpose" can do. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=Ggeneric-programming><B>generic programming</B></A> - programming 
using <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s to 
express <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s 
and data structures parameterized by data <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s, 
operations, and polices. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gpolymorphism">polymorphism</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gmulti-paradigm-programming">multi-paradigm 
programming</A>. TC++PL 2.7, 24.4.1, D&amp;E 15.11.2. 
<P><A name=Gget-function><B>get function</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G>>">&gt;&gt;</A>. 
<P><A name=Gglobal-data><B>global data</B></A> - data defined in the <A 
href="http://www.research.att.com/~bs/glossary.html#Gglobal-scope">global 
scope</A>. This is usually best avoided because a programmer can't easily know 
what code manipulates it and how. It is therefore a common source of errors. 
Global <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstant">constant</A>s are 
usually ok. 
<P><A name=Gglobal-scope><B>global scope</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> containing 
all <A href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>s 
defined outside any <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>, or <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A>. 
Names in the global scope can be prefixed by ::. For example, ::<A 
href="http://www.research.att.com/~bs/glossary.html#Gmain()">main()</A>. TC++PL 
2.9.4. 
<P><A name=Gglossary><B>glossary</B></A> - "<A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of glosses; lists and explanations of special words." - The Advanced Learners 
Dictionary of Current English. A pain to compile. 
<P><A name=GGNU-C++><B>GNU C++</B></A> - GNU's implementation of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=Ggoto><B>goto</B></A> - the infamous goto. Primarily useful in 
machine generated <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> code. TC++PL 
6.3.4. 
<P><A name=Ggrammar><B>grammar</B></A> - a systematic description of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gsyntax">syntax</A> of a 
language. The <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> grammar is 
large and rather messy. Some of the syntactic complexity was inherited from C. 
TC++PL A, D&amp;E 2.8. 
<P><A name=GGUI><B>GUI</B></A> - Graphical User <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">Interface</A>. 
There are many <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> libraries and 
tools for building GUI-based <A 
href="http://www.research.att.com/~bs/glossary.html#Gapplication">application</A>s, 
but no <A 
href="http://www.research.att.com/~bs/glossary.html#GStandard-C++">standard 
C++</A> GUI. 
<P><A name=Ghandle><B>handle</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> that 
controls access to another. Often, a handle also controls the acquisition and 
release of <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>s. A 
common use is for a handle to control access to a variably-sized data structure. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gsmart-pointer">smart 
pointer</A>. TC++PL 25.7, D&amp;E 11.5.2. 
<P><A name=Ghandle-class><B>handle class</B></A> - a small <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that 
provides <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> to 
an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of 
another class. A <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandle">handle</A> is the 
standard way of providing <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> 
sized data structures in <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. Examples are 
<A href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A> and 
<A href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>. 
TC++PL 25.7. 
<P><A name=Ghandler><B>handler</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A> 
<P><A name=Ghash_map><B>hash_map</B></A> - hashed contained based on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> framework. Not (yet) part of the standard but very common in 
libraries based on the standard library. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, list. 
TC++PL 17.6. 
<P><A name=Gheader><B>header</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader-file">header 
file</A> 
<P><A name=Gheader-file><B>header file</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile">file</A> holding <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>s 
used in more than one <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>. Thus, a <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader">header</A> file 
acts as an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
between <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparately-compiled">separately 
compiled</A> parts of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. A 
header file often contains <A 
href="http://www.research.att.com/~bs/glossary.html#Ginline-function">inline 
function</A> definitions, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst-definition">const 
definition</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>s, 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-definition">template 
definition</A>s, but it cannot be #included from for than one <A 
href="http://www.research.att.com/~bs/glossary.html#Gsource-file">source 
file</A> if it contain non-inline function definitions or <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable-definition">variable 
definition</A>s. TC++PL 2.4.1, 9.2.1. D&amp;E 2.5, 11.3.3. 
<P><A name=Ghiding><B>hiding</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Ginformation-hiding">information 
hiding</A> 
<P><A name=Ghierarchy><B>hierarchy</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass-hierarchy">class 
hierarchy</A>. 
<P><A name=Ghigher-order-function><B>higher-order function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s 
that produce other functions. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> does not have 
general higher-order functions, but by returning <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A>s a function can efficiently emulate some techniques traditionally 
relying of higher-order functions. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinder">binder</A>. TC++PL 
18.4.4. 
<P><A name=Ghistory-of-C++><B>history of C++</B></A> - The work on what became 
<A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> started by 
<A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A> in AT&amp;T <A 
href="http://www.research.att.com/~bs/glossary.html#GBell-labs">Bell Labs</A> in 
1979. The first commercial release was in 1985. Standards work stared in 1990 
leading to ratification of the <A 
href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A> standard in 
1998. TC++PL 1.4. D&amp;E Part 1. 
<P><A name=GHungarian-notation><B>Hungarian notation</B></A> - a coding 
convention that encodes <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> information 
in <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>s. Its main 
use is to compensate for lack of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-checking">type 
checking</A> in weakly-typed or untyped languages. It is totally unsutable for 
<A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> where it 
complicates <A 
href="http://www.research.att.com/~bs/glossary.html#Gmaintenance">maintenance</A> 
and gets in the way of <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstraction">abstraction</A>. 

<P><A name=Ghybrid-language><B>hybrid language</B></A> - derogative term for a 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> that supports more programming styles (<A 
href="http://www.research.att.com/~bs/glossary.html#Gparadigm">paradigm</A>s) 
rather than just <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. 
<P><A name=GI/O><B>I/O</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> 
<P><A name=GIDE><B>IDE</B></A> - Integrated (or Interactive) Development 
Enviornment. A <A 
href="http://www.research.att.com/~bs/glossary.html#Gsoftware">software</A> 
development environment (<A 
href="http://www.research.att.com/~bs/glossary.html#GSDE">SDE</A>) emphasizing a 
<A href="http://www.research.att.com/~bs/glossary.html#GGUI">GUI</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
centered around a source code editor. There are many IDEs for <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, but no 
standard SDE. 
<P><A name=Gidentifier><B>identifier</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>. 
<P><A name=Gif-statement><B>if-statement</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
selecting between two alternatives based on a condition. TC++PL 6.3.2. 
<P><A name=Gifstream><B>ifstream</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile-stream">file 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A>. 
<P><A name=Gimplementation-defined><B>implementation defined</B></A> - an aspect 
of <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> 
that is defined for each implementation rather than specified in the standard 
for every implementation. An example is the size of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A> (which must be 
at least 16 <A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s but can be 
longer). Avoid implementation defined behavior whenever possible. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gundefined">undefined</A>. 
TC++PL C.2. 
<P><A name=Gimplementation-inheritance><B>implementation inheritance</B></A> - 
see <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate-base">private 
base</A>. 
<P><A name=Gimplicit-type-conversion><B>implicit type conversion</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A> 
applied implicitly based on an expected <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> and the type 
of a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. 
See also, <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-type-conversion">explicit 
type conversion</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type-conversion">user-defined 
type conversion</A>. TC++PL 11.3.3, 11.3.5, 11.4, C.6, D&amp;E 2.6.2, 3.6.1, 
3.6.3, 11.2. 
<P><A name=Gin-class><B>in-class</B></A> - lexically within the <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. 
TC++PL 10.2.9, 10.4.6.2. 
<P><A name=Ginclude><B>include</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G#include">#include</A>. 
<P><A name=Gincomplete-type><B>incomplete type</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> that allows 
an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> to 
be copied, but not otherwise used. A <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to an 
undeclared type is the typical example of an incomplete type. 
<P><A name=Ginequality-operator><B>inequality operator</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G!=">!=</A>. 
<P><A name=Ginfix-operator><B>infix operator</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinary-operator">binary 
operator</A> where the operator appears between the operands. For example, a+b. 
<P><A name=Ginformation-hiding><B>information hiding</B></A> - placing 
information where it can be accessed only through a well-defined <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparate-compilation">separate 
compilation</A>. TC++PL 2.4. 
<P><A name=Ginheritance><B>inheritance</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> is said to inherit the <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s of its 
<A href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base 
class</A>es. TC++PL 2.6.2, 12.2, 23.4.3.1, D&amp;E 3.5, 7.2, 12. 
<P><A name=Ginitialization><B>initialization</B></A> - giving an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> an 
initial <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. 
Initialization differs from assignment in that there is no previous value 
involved. Initialization is done by <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>s. 

<P><A name=Ginitializer-list><B>initializer list</B></A> - comma-separated list 
of <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A>s 
enclosed in curly braces, e.g. { 1, 2, 3 } used to initialize a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstruct">struct</A> or an <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A>. TC++PL 
5.2.1, 5.7, 11.3.3. 
<P><A name=Ginline-function><B>inline function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
declared inline using the inline keyword or by being a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> defined <A 
href="http://www.research.att.com/~bs/glossary.html#Gin-class">in-class</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">Compiler</A>s are 
encouraged to generate inline code rather than function calls for inline 
functions. Most benefits from <A 
href="http://www.research.att.com/~bs/glossary.html#Ginlining">inlining</A> 
comes with very <A 
href="http://www.research.att.com/~bs/glossary.html#Gshort">short</A> functions. 
TC++PL 7.1.1, 9.2, 10.2.9, D&amp;E 2.4.1 . 
<P><A name=Ginlining><B>inlining</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Ginline-function">inline 
function</A>. 
<P><A name=Ginput><B>input</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A>. 
<P><A name=Ginserter><B>inserter</B></A> - (1) an <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#G<<">&lt;&lt;</A> (put to) 
function. (2) an STL operation yielding an iterator to be used for adding 
elements to a containter. TC++PL 19.2.4, 21.2, D&amp;E 8.3.1. See also: 
extracter, back_inserter, front_inserter. 
<P><A name=Ginstantiation><B>instantiation</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-instantiation">template 
instantiation</A>. 
<P><A name=Gint><B>int</B></A> - basic signed <A 
href="http://www.research.att.com/~bs/glossary.html#Ginteger-type">integer 
type</A>; its precision is implementation-defined, but an int has at least 32 <A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s. TC++PL 
2.3.1, 4.4. 
<P><A name=Ginteger-type><B>integer type</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gshort">short</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A>, or long. <A 
href="http://www.research.att.com/~bs/glossary.html#GStandard-C++">Standard 
C++</A> doesn't support long long. TC++PL 4.4. 
<P><A name=Gintegral-type><B>integral type</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-type">character 
type</A>, or <A 
href="http://www.research.att.com/~bs/glossary.html#Ginteger-type">integer 
type</A>. Supports arithmetic and logical operations. TC++PL 4.1.1. 
<P><A name=Ginterface><B>interface</B></A> - a set of <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>s 
that defines how a part of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> can be 
accessed. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-member">public 
member</A>s and the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfriend">friend</A>s of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> defines 
that class' interface for other code to use. A class without <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-member">data 
member</A>s defines a pure interface. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected-member">protected 
member</A>s provide an additional interface for use by members of <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>es. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>. 
<P><A name=Ginterface-function><B>interface function</B></A> - A <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> that 
can access the representation of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gfriend">friend</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected">protected</A>. 
<P><A name=Ginterface-inheritance><B>interface inheritance</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-base">public 
base</A>. 
<P><A name=Ginvariant><B>invariant</B></A> - a condition of the representation 
of an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
(the object's state) that should hold each time an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface-function">interface 
function</A> is called; usually established by a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
TC++PL 24.3.7, E.3.5. 
<P><A name=Giostream><B>iostream</B></A> - (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> flexible, extensible, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>-safe <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A> 
framework. (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream">stream</A> that can 
be used for both input and output. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile-stream">file 
stream</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring-stream">string 
stream</A>. TC++PL 3.4, 3.6, 21, D&amp;E 3.11.4.1, 8.3.1. 
<P><A name=GISO><B>ISO</B></A> - the international standards organization. It 
defines and maintains the standards of the major non-proprietary <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A>s, notably <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=GISO-C><B>ISO C</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>. 
<P><A name=GISO-C++><B>ISO C++</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=Gistream><B>istream</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream">stream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 3.6, 
21.3. 
<P><A name=Gistringstream><B>istringstream</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring-stream">string 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A>. 
<P><A name=Giteration><B>iteration</B></A> - traversal of data structure, 
directly or indirectly using an <A 
href="http://www.research.att.com/~bs/glossary.html#Giteration-statement">iteration-statement</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Grecursion">recursion</A>. 
The <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> offer <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s, 
such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy()">copy()</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gfind()">find()</A>, that 
can be effective alternatives to <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit">explicit</A> 
iteration. TC++PL 6.3.3. 18. 
<P><A name=Giteration-statement><B>iteration-statement</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfor-statement">for-statement</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gwhile-statement">while-statement</A>, 
or do-statement. 
<P><A name=Giterator><B>iterator</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstraction">abstraction</A> 
for <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s 
referring to <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A>s of a 
sequence. TC++PL 3.8.1, 19.2-3. 
<P><A name=GK&amp;R-C><B>K&amp;R C</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> as defined by <A 
href="http://www.research.att.com/~bs/glossary.html#GKernighan">Kernighan</A> 
and <A 
href="http://www.research.att.com/~bs/glossary.html#GRitchie">Ritchie</A>. 
<P><A name=GKernighan><B>Kernighan</B></A> - Brian Kernighan is a co-author of 
Kernighan &amp; <A 
href="http://www.research.att.com/~bs/glossary.html#GRitchie">Ritchie</A>: "The 
<A href="http://www.research.att.com/~bs/glossary.html#GC">C</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
Language</A>". 
<P><A name=GKoenig-lookup><B>Koenig lookup</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument-based-lookup">argument-based 
lookup</A>. 
<P><A name=Glanguage-extension><B>language extension</B></A> - (1) relatively 
new feature that people haven't yet gotten used to. (2) proposed new feature. 
(3) feature provided by one or more implementations, but not adopted by the 
standard; the use of some such features implies lock-in to a particular <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> 
supplier. 
<P><A name=Glearning-C++><B>learning C++</B></A> - focus on <A 
href="http://www.research.att.com/~bs/glossary.html#Gconcept">concept</A>s and 
techniques. <A 
href="http://www.research.att.com/~bs/bs_faq.html#prerequisite">You don't need 
to learn C first</A>. See also "Learning <A 
href="http://www.research.att.com/~bs/glossary.html#GStandard-C++">Standard 
C++</A> as a New Language", available from <A 
href="http://www.research.att.com/~bs/papers.html">my papers page</A>. <A 
href="http://www.research.att.com/~bs/bs_faq.html#how-to-start">How do I 
start?</A>. TC++PL 1.2, 1.7, D&amp;E 7.2. 
<P><A name=GLibrary-TR><B>Library TR</B></A> - technical report from the <A 
href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO C++</A> 
standards committee defining a set of new standard library components, including 
regular <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
matching (regexp), hashedcontainers (ordered_<A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>), and <A 
href="http://www.research.att.com/~bs/glossary.html#Gsmart-pointer">smart 
pointer</A>s. See <A href="http://www.research.att.com/~bs/C++.html">my C++ 
page<A>. 
<P><A name=Gline-comment><B>line comment</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomment">comment</A> 
started by // and terminated by end-of-line. TC++PL 6.4, D&amp;E 3.11.1. 
<P><A name=Glinkage><B>linkage</B></A> - the process of merging code from <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparately-compiled">separately 
compiled</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>s into a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> or 
part of a program. TC++PL 9. 
<P><A name=Glinker><B>linker</B></A> - the part of a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> implementation 
that merge the code generated from <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparately-compiled">separately 
compiled</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>s into a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> or 
part of a program. TC++PL 9.1, D&amp;E 4.5, 11.3. 
<P><A name=GLiskov-Substitution-Principle><B>Liskov Substitution 
Principle</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdesign">design</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es so that 
any <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> will be acceptable where its <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
is. <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-base">public 
base</A>s enforce that as far as the <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
provided by the base class. TC++PL 24.3.4, D&amp;E 2.10. 
<P><A name=Glist#><B>list</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> linked <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>. TC++PL 3.7.3, 
17.2.2. 
<P><A name=Gliteral><B>literal</B></A> - notation for <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s of <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-type">character 
type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Ginteger-type">integer 
type</A>s, or <A 
href="http://www.research.att.com/~bs/glossary.html#Gfloating-point-type">floating-point 
type</A>s. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Genumerator">enumerator</A>s. 
TC++PL 4.2, 4.3.1, 4.4.1, 4.5.1, 5.2.2, D&amp;E 11.2.1. 
<P><A name=Glocal-class><B>local class</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> defined 
within a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. 
Most often, the use of a local class is a sign that a function is too large. 
Beware that a local class cannot be a valid <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>. 
<P><A name=Glocal-function><B>local function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
defined within a function. Not supported by <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. Most often, 
the use of a local function is a sign that a function is too large. 
<P><A name=Glocale><B>locale</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> for 
representing culture dependencies relating to <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>, such as 
floating-point output formats, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-set">character 
set</A>s, and collating rules. A locale is a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A> of 
<A href="http://www.research.att.com/~bs/glossary.html#Gfacet">facet</A>s. 
TC++PL 21.1, D. 
<P><A name=Glong-double><B>long double</B></A> - extended-precision 
floating-point number. TC++PL 4.5. 
<P><A name=Glong-int><B>long int</B></A> - integer of a size greater than or 
equal to the size of an int. TC++PL 4.4. 
<P><A name=Gloop><B>loop</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
that expresses the notion of doing something <A 
href="http://www.research.att.com/~bs/glossary.html#Gzero">zero</A> or more 
times, such as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfor-statement">for-statement</A> 
and a <A 
href="http://www.research.att.com/~bs/glossary.html#Gwhile-statement">while-statement</A>. 

<P><A name=GLSP><B>LSP</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GLiskov-Substitution-Principle">Liskov 
Substitution Principle</A>. 
<P><A name=Glvalue><B>lvalue</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
that may appear on the left-hand side of an assignment; for example, v[7] if v 
is an <A href="http://www.research.att.com/~bs/glossary.html#Garray">array</A> 
or a <A href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>. 
An lvalue is modifiable unless it is <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>. TC++PL 
4.9.6, D&amp;E 3.7.1. 
<P><A name=Gmacro><B>macro</B></A> - facility for character substitution; 
doesn't obey <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> rules. C++ 
provides alternatives to most uses of macros; see <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>, 
inline, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A>. 
Don't use macros unless you absolutely have to. TC++PL 7.8, D&amp;E 2.9.2, 4.4, 
18. 
<P><A name=Gmain()><B>main()</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
called by the system to start a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. 
TC++PL 3.2, 6.1.7, 9.4 . 
<P><A name=Gmaintenance><B>maintenance</B></A> - work on a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> after 
its initial release. Typical maintenance activities <A 
href="http://www.research.att.com/~bs/glossary.html#Ginclude">include</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gbug">bug</A> fixing, minor 
feature enhancements, porting to new systems, improvements of <A 
href="http://www.research.att.com/~bs/glossary.html#Gerror-handling">error 
handling</A>, modification to use different natural languages, improvements to 
documentation, and performance tuning. Maintenance typically consumes more than 
80% of the total effort and cost expended on a program. 
<P><A name=Gmalloc()><B>malloc()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> standard 
allocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. Use 
<A href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> instead. 

<P><A name=Gmap><B>map</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> associative <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>, 
based on "less than" ordering. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Ghash_map">hash_map</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, list. 
TC++PL 3.7.4, 17.4.1. 
<P><A name=GMax-Munch><B>Max Munch</B></A> - (1) mythical participant in the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standards-process">C++ 
standards process</A>. (2) the rule that says that while parsing C++ always 
chooses the lexically or syntactically longest alternative. Thus ++ is the 
increment operation, not two additions, and <A 
href="http://www.research.att.com/~bs/glossary.html#Glong-int">long int</A> is a 
single <A 
href="http://www.research.att.com/~bs/glossary.html#Ginteger-type">integer 
type</A> rather than the long integer followed by an int. Cross references in 
this <A 
href="http://www.research.att.com/~bs/glossary.html#Gglossary">glossary</A> 
follow this rule. 
<P><A name=Gmember><B>member</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstant">constant</A>, or 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
declared in the <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
5.7, 10.2, D&amp;E 2.3, 2.5.2, 2.11. 
<P><A name=Gmember-class><B>member class</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that is a 
<A href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> of 
another; also called a <A 
href="http://www.research.att.com/~bs/glossary.html#Gnested-class">nested 
class</A>. TC++PL 11.12, D&amp;E 3.12, 13.5. 
<P><A name=Gmember-constant><B>member constant</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A> 
declared as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>. If 
initialized <A 
href="http://www.research.att.com/~bs/glossary.html#Gin-class">in-class</A>, 
such a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstant">constant</A> can 
be used in <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstant-expression">constant 
expression</A>s within the class. TC++PL 10.4.6.2. 
<P><A name=Gmember-data><B>member data</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-member">data 
member</A>. 
<P><A name=Gmember-function><B>member function</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
declared in the <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. A <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> function 
that is not a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-member-function">static 
member function</A> must be called for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of its 
class. TC++PL 10.2.1, D&amp;E 2.3, 3.5. 
<P><A name=Gmember-initializer><B>member initializer</B></A> - initializer for a 
<A href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> 
specified in the <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
for its <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
10.4.6, 12.2.2, D&amp;E 12.9. 
<P><A name=Gmember-type><B>member type</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-class">member 
class</A>, member <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>, 
or member <A 
href="http://www.research.att.com/~bs/glossary.html#Gtypedef">typedef</A>. 
<P><A name=Gmemberwise-copy><B>memberwise copy</B></A> - copying a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> by 
copying each of its <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s in 
turn, using proper <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A>s or <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-assignment">copy 
assignment</A>s. That's the default meaning of copy. TC++PL 10.4.4.1, 10.4.6.3, 
D&amp;E 11.4.4. 
<P><A name=Gmemory><B>memory</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-memory">static 
memory</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A>, or <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free store</A>. 

<P><A name=Gmemory-management><B>memory management</B></A> - a way of allocating 
and freeing <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>. In <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> memory is 
either <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic">static</A>, 
allocated on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A>, or 
allocated on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free store</A>. 
When people talk about memory management, they usually think of free store or 
even specifically about <A 
href="http://www.research.att.com/~bs/glossary.html#Ggarbage-collection">garbage 
collection</A>. Memory can often be effectively managed through <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s, 
such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>, or 
through general <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-management">resource 
management</A> techniques. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gauto_ptr">auto_ptr</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>. TC++PL C.9, D&amp;E 3.9, 10. 
<P><A name=Gmem_fun()><B>mem_fun()</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gadapter">adapter</A> that 
allows a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> to be used as an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> to a 
standard <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A> 
requiring a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-standing-function">free-standing 
function</A>. TC++PL 18.4.4.2. 
<P><A name=Gmethod><B>method</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual-member-function">virtual 
member function</A>. 
<P><A name=GMicrosoft-C++><B>Microsoft C++</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GVisual-C++">Visual C++</A> 
<P><A name=Gmodifiable-lvalue><B>modifiable lvalue</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Glvalue">lvalue</A> that is 
not <A href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>. 
TC++PL 4.9.6. 
<P><A name=Gmost-derived-type><B>most-derived type</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> used to 
create an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> (before 
any <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A>s). 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic-type">dynamic 
type</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-type">static 
type</A>. 
<P><A name=Gmulti-method><B>multi-method</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> that 
selects the function to be called based on more than one operand. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gmultiple-dispatch">multiple 
dispatch</A>. D&amp;E 13.8. 
<P><A name=Gmulti-paradigm-design><B>multi-paradigm design</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdesign">design</A> focussed 
on applying the various <A 
href="http://www.research.att.com/~bs/glossary.html#Gparadigm">paradigm</A>s to 
their best advantage. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gmulti-paradigm-programming">multi-paradigm 
programming</A>. 
<P><A name=Gmulti-paradigm-programming><B>multi-paradigm programming</B></A> - 
programming applying different styles of programming, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A> where they are most appropriate. In particular, programming 
using combinations of different programming styles (<A 
href="http://www.research.att.com/~bs/glossary.html#Gparadigm">paradigm</A>s) to 
express code more clearly than is possible using only one style. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. 
<P><A name=Gmultimap><B>multimap</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A> that allows 
multiple <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s for a 
key. TC++PL 17.4.2. 
<P><A name=Gmultiple-dispatch><B>multiple dispatch</B></A> - the generalization 
of <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble-dispatch">double 
dispatch</A> to more operands. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gsingle-dispatch">single 
dispatch</A>. 
<P><A name=Gmultiple-inheritance><B>multiple inheritance</B></A> - the use of 
more than one immediate <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>. One typical use is to have one base define an <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> 
and another providing help for the implementation. TC++PL 12.2.4, 12.4, 15.2.5, 
D&amp;E 12. 
<P><A name=Gmutable><B>mutable</B></A> - an attribute of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> that 
makes it possible to change its <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> even if 
its <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
is declared to be <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> TC++PL 
10.2.7.2, D&amp;E 13.3.3. 
<P><A name=Gname><B>name</B></A> - sequence of letters and digits started by a 
letter, used to identify ("name") user-defined entities in <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> text. 
An underscore is considered a letter. Names are case sensitive. The standard 
imposes no upper limit on the length of names. TC++PL 4.9.3. 
<P><A name=Gnamespace><B>namespace</B></A> - a named <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A>. TC++PL 
2.5.1, 8.1, C.10. D&amp;E 17. 
<P><A name=Gnamespace-alias><B>namespace alias</B></A> - alternative <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A>; 
often a shorter name. TC++PL 8.2.7, D&amp;E 17.4.3. 
<P><A name=GNCITS><B>NCITS</B></A> - <A href="http://www.ncits.org/">National 
Committee for Information Technology Standards</A>. The part of <A 
href="http://www.research.att.com/~bs/glossary.html#GANSI">ANSI</A> that deals 
with <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> standards, notably <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, and sells 
copies of the <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A>. Formerly known as X3. 
<P><A name=Gnested-class><B>nested class</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-class">member 
class</A>. 
<P><A name=Gnested-function><B>nested function</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Glocal-function">local 
function</A>. 
<P><A name=Gnew#><B>new</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> creation 
<A href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gplacement-new">placement 
new</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-new()">operator 
new()</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-management">resource 
management</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory-management">memory 
management</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ggarbage-collection">garbage 
collection</A>. TC++PL 6.2.6, 19.4.5, D&amp;E 2.3, 10.2. 
<P><A name=Gnew-style-cast><B>new-style cast</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic_cast">static_cast</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gconst_cast">const_cast</A>, 
or <A 
href="http://www.research.att.com/~bs/glossary.html#Greinterpret_cast">reinterpret_cast</A>. 
D&amp;E 14.3. 
<P><A name=Gnew_handler><B>new_handler</B></A> - a (possibly user-defined) <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
called by <A href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A> 
if <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-new()">operator 
new()</A> fails to allocate sufficient <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>. See 
also: std::<A 
href="http://www.research.att.com/~bs/glossary.html#Gbad_alloc">bad_alloc</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>. 
TC++PL 6.2.6.2, 14.4.5., 19.4.5. 
<P><A name=Gnon-static-member><B>non-static member</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that is 
not declared to be a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-member">static 
member</A>. An <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of a 
class has its own space for each non-static <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-member">data 
member</A>. 
<P><A name=Gnot#><B>not</B></A> - synonym for !, the logical negation <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
TC++PL C.3.1. 
<P><A name=Gnothrow-guarantee><B>nothrow guarantee</B></A> - the guarantee that 
an operation will not <A 
href="http://www.research.att.com/~bs/glossary.html#Gthrow">throw</A> an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>. 
See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic-guarantee">basic 
guarantee</A>, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gstrong-guarantee">strong 
guarantee</A>. TC++PL E.2. 
<P><A name=GNULL><B>NULL</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gzero">zero</A>. 0. 0 is an 
integer. 0 can be implicitly converted to every <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gnullptr">nullptr</A>. 
TC++PL 5.1.1, D&amp;E 11.2.3. 
<P><A name=Gnullptr><B>nullptr</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC++0x">C++0x</A> keyword 
for the <A href="http://www.research.att.com/~bs/glossary.html#GNULL">null</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>. It 
is not an integer. It can be assigned only to pointers. 
<P><A name=Gobject><B>object</B></A> - (1) a contiguous region of <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> holding 
a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> of 
some <A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. (2) 
a named or unnamed <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> of 
some type; an object of a type with a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
is not considered an object before the constructor has completed and is no 
longer considered an object once a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A> 
has started executing for it. Objects can be allocated in <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-memory">static 
memory</A>, on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A>, on on the 
<A href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free 
store</A>. TC++PL 4.9.6, 10.4, 10.4.3, D&amp;E 2.3, 3.9. 
<P><A name=Gobject-code><B>object code</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-file">object 
file</A>. 
<P><A name=Gobject-file><B>object file</B></A> - the result of compiling a <A 
href="http://www.research.att.com/~bs/glossary.html#Gsource-file">source 
file</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A>. 
<P><A name=Gobject-oriented-design><B>object-oriented design</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdesign">design</A> focussed 
on <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. TC++PL 23.2, D&amp;E 7.2. 
<P><A name=Gobject-oriented-programming><B>object-oriented programming</B></A> - 
programming using <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> 
hierarchies and <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s to 
allow manipulation of <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s of a 
variety of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s through 
well-defined <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A>s 
and allow a program to be extended incrementally through derivation. See also: 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gpolymorphism">polymorphism</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gdata-abstraction">data 
abstraction</A>. TC++PL 2.6, 12, D&amp;E 3.5, 7.2. 
<P><A name=Gobject-oriented-programming-language><B>object-oriented programming 
language</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> designed to support or enforce some notion of <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> supports <A 
href="http://www.research.att.com/~bs/glossary.html#GOOP">OOP</A> and other 
effective forms of programming, but does not try to enforce a single style of 
programming. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmulti-paradigm-programming">multi-paradigm 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ghybrid-language">hybrid 
language</A>. 
<P><A name=GODR><B>ODR</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gone-definition-rule">one 
definition rule</A> 
<P><A name=Gofstream><B>ofstream</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gfile-stream">file 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>. 
<P><A name=Gold-style-cast><B>old-style cast</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-cast">C-style 
cast</A>. 
<P><A name=Gone-definition-rule><B>one definition rule</B></A> - there must be 
exactly one <A 
href="http://www.research.att.com/~bs/glossary.html#Gdefinition#">definition</A> 
of each entity in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. If 
more than one definition appears, say because of replication through <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader-file">header 
file</A>s, the meaning of all such duplicates must be identical. TC++PL 9.2.3, 
D&amp;E 2.5, 15.10.2. 
<P><A name=GOOD><B>OOD</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-design">object-oriented 
design</A>. 
<P><A name=GOOP><B>OOP</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. 
<P><A name=GOOPL><B>OOPL</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming-language">object-oriented 
programming language</A>. 
<P><A name=Goperator><B>operator</B></A> - conventional notation for built-in 
operation, such as +, *, and &amp;. A programmer can define meanings for 
operators for <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>s. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-overloading">operator 
overloading</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gunary-operator">unary 
operator</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbinary-operator">binary 
operator</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gternary-operator">ternary 
operator</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprefix-operator">prefix 
operator</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gpostfix-operator">postfix 
operator</A>. TC++PL 6.2. 
<P><A name=Goperator-delete()><B>operator delete()</B></A> - deallocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> used 
by <A href="http://www.research.att.com/~bs/glossary.html#Gdelete">delete</A>#. 
Possibly defined by user. TC++PL 6.2.6.2, 19.4.5. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-new()">operator 
new()</A>. 
<P><A name=Goperator-delete[]()><B>operator delete[]()</B></A> - deallocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> used 
by <A href="http://www.research.att.com/~bs/glossary.html#Gdelete">delete</A>#. 
Possibly defined by user. TC++PL 6.2.6.2, 19.4.5. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-new[]()">operator 
new[]()</A>. 
<P><A name=Goperator-function><B>operator function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
defining one of the standard <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s; 
e.g. operator+(). See also: operator, <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-overloading">operator 
overloading</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion-operator">conversion 
operator</A>. 
<P><A name=Goperator-new()><B>operator new()</B></A> - allocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> used 
by <A href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A>. 
Possibly defined by user. TC++PL 6.2.6.2, 19.4.5. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-delete()">operator 
delete()</A>. 
<P><A name=Goperator-new[]()><B>operator new[]()</B></A> - allocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> used 
by <A href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A>. 
Possibly defined by user. TC++PL 6.2.6.2, 19.4.5. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-delete[]()">operator 
delete[]()</A>. 
<P><A name=Goperator-overloading><B>operator overloading</B></A> - having more 
than one <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> with 
the same <A href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> 
in the same <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A>. Built-in 
operators, such as + and *, are overloaded for <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gfloat">float</A>. Users can 
define their own additional meanings for <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>s. It is not possible to define new operators or to give new meanings to 
operators for <A 
href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A>s. The <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> 
picks the operator to be used based on <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> 
types based <A 
href="http://www.research.att.com/~bs/glossary.html#Goverload-resolution">overload 
resolution</A> rules. See also: overload resolution. TC++PL 6.2, D&amp;E 3.6, 
11.7.1. 
<P><A name=Goptimizer><B>optimizer</B></A> - a part of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> that 
eliminates redundant operations from code and adjusts code to perform better on 
a given computer. See also, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfront-end">front-end</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gback-end">back-end</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gcode-generator">code 
generator</A>. D&amp;E 3.3.3. 
<P><A name=Gor#><B>or</B></A> - synonym for ||, the logical or <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
TC++PL C.3.1. 
<P><A name=Gorder-of-construction><B>order of construction</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> is 
constructed from the bottom up: first bases in <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
order, then <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s in 
declaration order, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gfinally">finally</A> the 
body of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
itself. TC++PL 10.4.6, 12.2.2, 15.2.4.1, 15.4.3. D&amp;E 2.11.1, 13.2.4.2. 
<P><A name=Gorder-of-destruction><B>order of destruction</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> is 
destroyed in the reverse <A 
href="http://www.research.att.com/~bs/glossary.html#Gorder-of-construction">order 
of construction</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A>. 

<P><A name=Gostream><B>ostream</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream">stream</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 3.4, 
21.2. 
<P><A name=Gostringstream><B>ostringstream</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring-stream">string 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>. 
<P><A name=Goutput><B>output</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A>. 
<P><A name=Gout_of_range><B>out_of_range</B></A> - standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
thrown by <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> if an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> to 
at() is out of range. TC++PL 16.3.3. 
<P><A name=Goverload><B>overload</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Goverloading">overloading</A>. 

<P><A name=Goverload-resolution><B>overload resolution</B></A> - a set of rules 
for selecting the best version of an <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
based on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s of its 
operands. A set of rules for selecting the best version of an overloaded <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
based on the types of its <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s. 
The intent of the overload resolution rules is to reject ambiguous uses and to 
select the simplest function or operator for each use. TC++PL 6.2, D&amp;E 11.2. 

<P><A name=Goverloaded-function><B>overloaded function</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Goverloading">overloading</A>. 

<P><A name=Goverloaded-operator><B>overloaded operator</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-overloading">operator 
overloading</A> 
<P><A name=Goverloading><B>overloading</B></A> - having more than one <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> with 
the same <A href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> 
in the same <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> or having 
more than one <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> with 
the same name in the same scope. It is not possible to <A 
href="http://www.research.att.com/~bs/glossary.html#Goverload">overload</A> 
across different scopes. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gusing-declaration">using-declaration</A>. 
TC++PL 6.2, D&amp;E 3.6, 11.2. 
<P><A name=Goverride><B>override</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Goverriding">overriding</A>. 

<P><A name=Goverriding><B>overriding</B></A> - declaring a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> in a 
<A href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> with the same <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> and a 
matching <A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> 
as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> 
function in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A>. 
The <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> 
types must match exactly. The return types must match exactly or be co-variant. 
The overriding function will be invoked when the virtual function is called. 
TC++PL 15.6.2, 6.2, D&amp;E 3.5.2-3, 13.7. 
<P><A name=Gparadigm><B>paradigm</B></A> - pretentious and overused term for a 
way of thinking. Often used with the erroneous assumption that "paradigms" are 
mutually exclusive, and often assuming that one paradigm is inherently superior 
to all others. Derived from Kuhn's theory of science. TC++PL 2.2. 
<P><A name=Gparameter><B>parameter</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> 
declared in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> or 
<A href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s 
for representing an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>. 
Also called a formal argument. Similarly, for templates. 
<P><A name=Gpartial-specialization><B>partial specialization</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> used 
(only) for the subset of its <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-parameter">template 
parameter</A>s that matches a <A 
href="http://www.research.att.com/~bs/glossary.html#Gspecialization">specialization</A> 
pattern. TC++PL 13.5. 
<P><A name=GPerformance-TR><B>Performance TR</B></A> - technical report from the 
<A href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO C++</A> 
standards committee discussing issues related to perfoemance, especially as 
concerns embedded systems programming and hardware access. See <A 
href="http://www.research.att.com/~bs/C++.html">my C++ page<A>. 
<P><A name=Gplacement-delete><B>placement delete</B></A> - See <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-call-of-destructor">explicit 
call of destructor</A>. 
<P><A name=Gplacement-new><B>placement new</B></A> - a version of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gnew#">new</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
where the user can add <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s to 
guide allocation. The simplest form, where the <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> is 
placed in a specific location, is supported by the <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A>. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#placement-delete">Example</A>. 
For example, placement new is used in the implementation of standard library <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit-call-of-destructor">explicit 
call of destructor</A>. TC++PL 10.4.11, E.3.1, D&amp;E 10.4. 
<P><A name=GPOD><B>POD</B></A> - "Plain Old Data" - (roughly) a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that 
doesn't contain <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-member">data 
member</A>s that would be illegal in <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>. A POD can 
therefore be used for data that needs to be share with C <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s. A 
POD can have non-<A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual-member-function">virtual 
member function</A>s. 
<P><A name=Gpointer><B>pointer</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> holding 
an <A href="http://www.research.att.com/~bs/glossary.html#Gaddress">address</A> 
or 0. TC++PL 2.3.3, 5.1, D&amp;E 9.2.2.1, 11.4.4. 
<P><A name=Gpolicy-object><B>policy object</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> used to 
specify guide decisions (e.g. the meaning of "less than") or implementation 
details (e.g. how to access <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>) for an 
object or an <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>. 
See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gtrait">trait</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gfacet">facet</A>. TC++PL 
13.4, 24.4.1. 
<P><A name=Gpolymorphism><B>polymorphism</B></A> - providing a single <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> to 
entities of different <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s. <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s 
provide dynamic (run-time) polymorphism through an interface provided by a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A>. 
<A 
href="http://www.research.att.com/~bs/glossary.html#Goverloaded-function">Overloaded 
function</A>s and <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s 
provide <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic">static</A> 
(compile-time) polymorphism. TC++PL 12.2.6, 13.6.1, D&amp;E 2.9. 
<P><A name=Gpostfix-operator><B>postfix operator</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gunary-operator">unary 
operator</A> that appears after its operand. For example var++. 
<P><A name=Gprefix-operator><B>prefix operator</B></A> - a unary operato that 
appears before its operand. For example, &amp;var. 
<P><A name=Gpreprocessor><B>preprocessor</B></A> - the part of a <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> implementation 
that removes <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomment">comment</A>s, 
performs <A 
href="http://www.research.att.com/~bs/glossary.html#Gmacro">macro</A> 
substitution and <A 
href="http://www.research.att.com/~bs/glossary.html#G#include">#include</A>s. 
Avoid using the preprocessor whenever possible. See also: macro, #include, 
inline, <A 
href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A>. 
TC++PL 7.8, 9.2.1, D&amp;E 18. 
<P><A name=Gpriority_queue><B>priority_queue</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gqueue">queue</A> where a 
priority determines the order in which an <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A> 
reaches the head of the queue. TC++PL 17.3.3. 
<P><A name=Gprivate><B>private</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A> keyword. See <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate-member">private 
member</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate-base">private 
base</A>. 
<P><A name=Gprivate-base><B>private base</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
declared <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate">private</A> in a 
<A href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>, so that the base's <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-member">public 
member</A>s are accessible only from that derived class. TC++PL 15.3.2, D&amp;E 
2.10. 
<P><A name=Gprivate-member><B>private member</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> 
accessible only from its own <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
2.5.2, 10.2.2, 15.3, D&amp;E 2.10. 
<P><A name=Gprocedural-programming><B>procedural programming</B></A> - 
programming using <A 
href="http://www.research.att.com/~bs/glossary.html#Gprocedure">procedure</A>s 
(<A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s) 
and data structures (structs). See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-abstraction">data 
abstraction</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gmulti-paradigm-programming">multi-paradigm 
programming</A>. TC++PL 2.3. 
<P><A name=Gprocedure><B>procedure</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. 
<P><A name=Gprogram><B>program</B></A> - a set of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>s complete enough to be made executable by a <A 
href="http://www.research.att.com/~bs/glossary.html#Glinker">linker</A>. TC++PL 
9.4. 
<P><A name=Gprogramming-language><B>programming language</B></A> - artificial 
language for expressing <A 
href="http://www.research.att.com/~bs/glossary.html#Gconcept">concept</A>s and 
general <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s 
in a way that lends itself to solving problems using computers. There do not 
appear to be a general consensus on what a programming language is or should be. 
TC++PL 1.3.2, 2.1-2, D&amp;E page 7. 
<P><A name=Gprohibiting-operations><B>prohibiting operations</B></A> - 
operations can be rendered inaccessible by declaring them <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate">private</A>; in 
this way default operations, such as construction, destruction, and copying can 
be disallowed for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
11.2.2, D&amp;E 11.4. 
<P><A name=Gproprietary-language><B>proprietary language</B></A> - language 
owned by an organization that is not an official standards organization, such as 
<A href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A>; usually 
manipulated by its owner for commercial advantage. 
<P><A name=Gprotected><B>protected</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A> keyword. See <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected-member">protected 
member</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected-base">protected 
base</A>. 
<P><A name=Gprotected-base><B>protected base</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
declared <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected">protected</A> in 
a <A href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>, so that the base's <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic">public</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected-member">protected 
member</A>s are accessible only in that derived class and classes derived from 
that. TC++PL 15.3.2, D&amp;E 13.9. 
<P><A name=Gprotected-member><B>protected member</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> 
accessible only from <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es derived 
from its class. TC++PL 15.3.1, D&amp;E 13.9. 
<P><A name=Gprotection><B>protection</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gencapsulation">encapsulation</A>. 

<P><A name=Gprotection-model><B>protection model</B></A> - the mechanisms for <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A>. See <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic">public</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprivate">private</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gprotected">protected</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gfriend">friend</A>. 
TC++PL 15.3, D&amp;E 2.10. 
<P><A name=Gpublic><B>public</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gaccess-control">access 
control</A> keyword. See <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-member">public 
member</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-base">public 
base</A>. 
<P><A name=Gpublic-base><B>public base</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A> 
declared <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic">public</A> in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>, so that the base's <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-member">public 
member</A>s are accessible to the users of that derived class. TC++PL 15.3.2, 
D&amp;E 2.3. 
<P><A name=Gpublic-member><B>public member</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> 
accessible to all users of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
2.5.2, 10.2.2, 15.3, D&amp;E 2.10. 
<P><A name=Gpure-object-oriented-language><B>pure object-oriented 
language</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A> claiming to support only <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject-oriented-programming">object-oriented 
programming</A>. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> is designed to 
support several programming <A 
href="http://www.research.att.com/~bs/glossary.html#Gparadigm">paradigm</A>s, 
including traditional C-style programming, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdata-abstraction">data 
abstraction</A>, object-oriented programming, and <A 
href="http://www.research.att.com/~bs/glossary.html#Ggeneric-programming">generic 
programming</A>. For a longer explanation, read <A 
href="http://www.research.att.com/~bs/oopsla.pdf">Why C++ isn't just an 
object-oriented programming language</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Ghybrid-language">hybrid 
language</A>. 
<P><A name=Gpure-virtual-function><B>pure virtual function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> that 
must be overridden in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>. Indicated by the curious <A 
href="http://www.research.att.com/~bs/glossary.html#G=0">=0</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gsyntax">syntax</A>. A pure 
virtual function can be defined in the class where it is declared pure, but 
needn't be and usually isn't. A class with at least one pure virtual function is 
an <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstract-class">abstract 
class</A>. TC++PL 12.3. D&amp;E 13.2.1. 
<P><A name=Gpush_back()><B>push_back()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> that adds an <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A> at the 
end of a standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>, 
such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>, thereby 
increasing the container's size by one. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#realloc">Example</A>. TC++PL 
3.7.3, 16.3.5, E.3.4. 
<P><A name=Gput-function><B>put function</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#G<<">&lt;&lt;</A>. 
<P><A name=Gqualified-name><B>qualified name</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> qualified by 
the name of its enclosing <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A> 
using the <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A> resolution 
<A href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
::. For example, std::<A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> or 
::main. TC++PL 4.9.3, 8.2.1, 10.2.4, 15.2.1, 15.2.2, D&amp;E 3.11.3. 
<P><A name=Gqueue><B>queue</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> first-in-first-out sequence. TC++PL 17.3.2. 
<P><A name=GRAII><B>RAII</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>. 
<P><A name=Grandom-number-generator><B>random number generator</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> or 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-object">function 
object</A> producing a series of pseudorandom numbers according to some 
distribution. TC++PL 22.7. 
<P><A name=Graw-memory><B>raw memory</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Guninitialized-memory">uninitialized 
memory</A>. 
<P><A name=Grealloc()><B>realloc()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A> standard 
allocation <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. Use 
<A href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> and 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gpush_back()">push_back()</A> 
instead. 
<P><A name=Grecursion><B>recursion</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
calling itself, hopefully with different <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A>s so 
that the recursion eventually ends with a call for which the function doesn't 
call itself. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Giteration">iteration</A>. 
TC++PL 7.1.1. 
<P><A name=Greference#><B>reference</B></A> - an alternative <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-overloading">operator 
overloading</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcall-by-reference">call-by-reference</A>. 
TC++PL 5.4.1, D&amp;E 3.7. 
<P><A name=Gregression-testing><B>regression testing</B></A> - systematically 
checking that a new version of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> 
doesn't break correct uses of a previous version of the program. 
<P><A name=Greinterpret_cast><B>reinterpret_cast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-conversion">type 
conversion</A> operation that reinterprets the <A 
href="http://www.research.att.com/~bs/glossary.html#Graw-memory">raw memory</A> 
of an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
as a <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> of 
another type. The result of a reinterpret_<A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A> can only be 
portably used after being converted back into its original type. Use only as a 
last resort. See also: cast. TC++PL 6.2.7, D&amp;E 14.3.3. 
<P><A name=Gresource><B>resource</B></A> - any entity that a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> 
acquires and releases. Typical examples are <A 
href="http://www.research.att.com/~bs/glossary.html#Gfree-store">free store</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gfile">file</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandle">handle</A>s, 
threads, sockets. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic-guarantee">basic 
guarantee</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-management">resource 
management</A>. TC++PL 14.4, E.2-3 D&amp;E 16.5. 
<P><A name=Gresource-acquisition-is-initialization><B>resource acquisition is 
initialization</B></A> - A simple technique for handling <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>s in 
<A href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>s 
using <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>s. 
One of the keys to <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#finally">Example</A>. TC++PL 
14.4, E.3 D&amp;E 16.5. 
<P><A name=Gresource-leak><B>resource leak</B></A> - programming error causing a 
<A href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A> 
not to be released. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic-guarantee">basic 
guarantee</A>. TC++PL 14.4, E.2-3 D&amp;E 16.5. 
<P><A name=Gresource-management><B>resource management</B></A> - a way of 
acquiring and releasing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource">resource</A>, 
such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A>, thread, 
or <A href="http://www.research.att.com/~bs/glossary.html#Gfile">file</A>. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresource-acquisition-is-initialization">resource 
acquisition is initialization</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gauto_ptr">auto_ptr</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>. TC++PL 
14.4, D&amp;E 10.4. 
<P><A name=Gresumption-semantics><B>resumption semantics</B></A> - In some 
languages, but not <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A> can respond by telling the thrower to resume (``just carry on as if 
the problem hadn't happened"). This looks like a good idea in some cases, but in 
general leads to contorted code because of unfortunate dependencies between 
separate levels of <A 
href="http://www.research.att.com/~bs/glossary.html#Gabstraction">abstraction</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gtermination-semantics">termination 
semantics</A>. TC++PL 14.4.5, D&amp;E 16.6. 
<P><A name=Greturn-type-relaxation><B>return type relaxation</B></A> - Allowing 
a <A href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
returning a B* or a B&amp; to be overridden by a function with a return <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> D* or 
D&amp;, provided B is a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-base">public 
base</A> of D. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goverriding">overriding</A>. 
TC++PL 15.6.2, D&amp;E 13.7. 
<P><A name=Greverse-iterator><B>reverse iterator</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A> for 
iterating through a sequence in reverse order. TC++PL 19.2.5. 
<P><A name=GRitchie><B>Ritchie</B></A> - Dennis Ritchie is the designer and 
original implementer of <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>. Co-author of <A 
href="http://www.research.att.com/~bs/glossary.html#GKernighan">Kernighan</A> 
&amp; Ritchie: "The C <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
Language</A>". 
<P><A name=GRTFM><B>RTFM</B></A> - "Read The Manual" (The 'F' is silent). 
Usually a very good idea. 
<P><A name=GRTTI><B>RTTI</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Grun-time-type-information">Run 
Time Type Information</A>. 
<P><A name=Grun-time-type-information><B>run time type information</B></A> - 
information about a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> available at 
run time through operations on an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of that 
type. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gtypeid()">typeid()</A>, 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype_info">type_info</A>. 
TC++PL 15.4, D&amp;E 14.2. 
<P><A name=Grvalue><B>rvalue</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
that may appear on the right-hand side of an assignment, but not of the 
left-hand side; for example, 7. D&amp;E 3.7.1. 
<P><A name=Gscope><B>scope</B></A> - a region of source text delimited by curly 
braces: { ... }, a list of <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> or 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-parameter">template 
parameter</A>s, or all of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A> outside other scopes. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gblock">block</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gglobal-scope">global 
scope</A>. TC++PL 2.9.4. 
<P><A name=GSDE><B>SDE</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gsoftware">Software</A> 
Development Environment. An environment of editors, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A>s, 
tools, libraries, etc. used by a programmer to produce software. There are many 
SDEs for <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>, 
but no standard SDE. 
<P><A name=Gselection-statement><B>selection-statement</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gif-statement">if-statement</A> 
or <A 
href="http://www.research.att.com/~bs/glossary.html#Gswitch-statement">switch-statement</A>. 
TC++PL 6.3.2. 
<P><A name=Gself#><B>self</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gthis#">this</A>. 
<P><A name=Gsemantics><B>semantics</B></A> - the rules specifying the meaning of 
a syntactically correct construct of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. For 
example, specifying the actions taken to perform a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfor-statement">for-statement</A> 
or an <A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
definition. 
<P><A name=Gseparate-compilation><B>separate compilation</B></A> - the practice 
of compiling parts of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>, 
called <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>s, separately and then later linking the results together using a <A 
href="http://www.research.att.com/~bs/glossary.html#Glinker">linker</A>. This is 
essential for larger programs. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Glinkage">linkage</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader-file">header 
file</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gone-definition-rule">one 
definition rule</A>. TC++PL 2.4.1, 9.1. D&amp;E 2.5. 
<P><A name=Gseparately-compiled><B>separately compiled</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparate-compilation">separate 
compilation</A>. 
<P><A name=Gsequence-adapter><B>sequence adapter</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> that 
provides a modified <A 
href="http://www.research.att.com/~bs/glossary.html#Ginterface">interface</A> to 
another. For example, a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gstack">stack</A> is an <A 
href="http://www.research.att.com/~bs/glossary.html#Gadapter">adapter</A> for a 
more flexible data structure such as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>. See 
also: adapter, stack, <A 
href="http://www.research.att.com/~bs/glossary.html#Gqueue">queue</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gpriority_queue">priority_queue</A>. 
TC++PL 17.3. 
<P><A name=Gset#><B>set</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> associative <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A> 
<P><A name=Gshort><B>short</B></A> - integer of a size less than or equal to the 
size of an int. TC++PL 4.4. 
<P><A name=Gsibling-class><B>sibling class</B></A> - two <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es are 
siblings if a class is (directly or indirectly) derived from them both and one 
is not derived from the other. Note that this is a rather inclusive definition 
of "sibling class" in that is does not require that the siblings have the same 
immediate <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> (I didn't want to introduce a notion of "cousin classes"). See also: 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gcrosscast">crosscast</A>. 
<P><A name=Gsignature><B>signature</B></A> - the set of <A 
href="http://www.research.att.com/~bs/glossary.html#Gparameter">parameter</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>; 
that is, the function's type ignoring its return type. This is a confusingly 
specialized definition compared to other <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogramming-language">programming 
language</A>s where "signature" means "function type". 
<P><A name=GSimula><B>Simula</B></A> - ancestor of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> designed by 
Ole-Johan Dahl and Kristen Nygaard; the source of the C++ <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gconcept">concept</A>. 
TC++PL 1.4, 2.6.2, D&amp;E 1.1, 3.1. 
<P><A name=Gsingle-dispatch><B>single dispatch</B></A> - the technique of 
choosing the <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> to be invoked based on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> used in 
the call. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble-dispatch">double 
dispatch</A>. 
<P><A name=Gsize-of-an-object><B>size of an object</B></A> - the number of <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A>s required to 
represent an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>. See 
also <A href="http://www.research.att.com/~bs/glossary.html#Gsizeof">sizeof</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Galignment">alignment</A>. 
TC++PL 4.6. 
<P><A name=Gsizeof><B>sizeof</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
yielding the <A 
href="http://www.research.att.com/~bs/glossary.html#Gsize-of-an-object">size of 
an object</A>. 
<P><A name=Gsmart-pointer><B>smart pointer</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A> providing <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s 
like a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>, 
such as * and ++, and with a <A 
href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> 
similar to <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>s. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>. 
Sometimes smart a pointer is called a <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandle">handle</A>. TC++PL 
11.10-11, 13.6.3.1, 19.3, 25.7, D&amp;E 11.5.1 
<P><A name=Gsoftware><B>software</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcollection">collection</A> 
of <A href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>s 

<P><A name=Gsort()><B>sort()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A> 
for sorting a random access sequence, such as a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> or an <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A>. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#sort">Example comparing 
sort() to qsort()</A>. TC++PL 18.7.1. 
<P><A name=Gsource-file><B>source file</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#G.c-file">.c file</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader">header</A>. 
<P><A name=Gspecialization><B>specialization</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
generated from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> by 
supplying a complete set of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>s. TC++PL 13.2.2, 13.5, D&amp;E 15.10.3. 
<P><A name=Gstack><B>stack</B></A> - (1) <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> used to 
hold local <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A>s for 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. (2) 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> first-in-last-out sequence. TC++PL 10.4.3, 17.3.1, D&amp;E 2.3, 3.9. 

<P><A name=GStandard-C++><B>Standard C++</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> as defined by 
<A href="http://www.research.att.com/~bs/glossary.html#GISO">ISO</A>. 
<P><A name=Gstandard-header><B>standard header</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gheader">header</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> facility. Included using the "<A 
href="http://www.research.att.com/~bs/glossary.html#G#include">#include</A>&lt; 
... &gt;" syntax. TC++PL 9.2.2, 16.1.2. 
<P><A name=Gstandard-library><B>standard library</B></A> - The library defined 
in the <A href="http://www.research.att.com/~bs/glossary.html#GC++-standard">C++ 
standard</A>. Contains <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream-I/O">stream I/O</A>, 
a framework of <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s, 
support for numerical computation, support for internationalization, the <A 
href="http://www.research.att.com/~bs/glossary.html#GC-standard-library">C 
standard library</A>, and some language support facilities. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcomplex">complex</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalarray">valarray</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Glocale">locale</A>. TC++PL 
16-22, D, E. 
<P><A name=Gstandards-committee><B>standards committee</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GC++-standards-committees">C++ 
standards committees</A>. 
<P><A name=Gstatement><B>statement</B></A> - the basic unit controlling the 
execution flow in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>, 
such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gif-statement">if-statement</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gwhile-statement">while-statement</A>, 
do-statement, <A 
href="http://www.research.att.com/~bs/glossary.html#Gswitch-statement">switch-statement</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
statement, and <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>. 
TC++PL 6.3. 
<P><A name=Gstatic><B>static</B></A> - (1) keyword used to declare a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> static; 
meaning allocated in <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-memory">static 
memory</A>. For a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>, this implies that there is no this <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>. (2) 
keyword used to specify that a local <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> 
should be allocated in static memory. (3) deprecated: keyword used to specify 
that a global <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> should not 
be visible from other <A 
href="http://www.research.att.com/~bs/glossary.html#Gtranslation-unit">translation 
unit</A>s. TC++PL 7.1.2, 10.2.4, 10.4.8-9. 
<P><A name=Gstatic-member><B>static member</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> for which 
there is only one copy for the whole <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> rather 
than one per <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>. TC++PL 
10.2.4, D&amp;E 13.4. 
<P><A name=Gstatic-member-function><B>static member function</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> that need not be called for an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of the 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. TC++PL 
10.2.4, D&amp;E 13.4. 
<P><A name=Gstatic-memory><B>static memory</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> 
allocated by the <A 
href="http://www.research.att.com/~bs/glossary.html#Glinker">linker</A>. TC++PL 
10.4.3, D&amp;E 2.3, 2.11.1, 3.9, 11.4.2. 
<P><A name=Gstatic-type><B>static type</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> as known 
to the <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> 
based on its <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic-type">dynamic 
type</A>. 
<P><A name=Gstatic-type-safety><B>static type safety</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-safety">type 
safety</A> enforced before a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> starts 
executing (at compile time or at <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic">static</A> link 
time). 
<P><A name=Gstatic-variable><B>static variable</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A> 
allocated in <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatic-memory">static 
memory</A>. TC++PL 7.1.2, 10.2.4, 10.4.3, D&amp;E 3.9. 
<P><A name=Gstatic_cast><B>static_cast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-conversion">type 
conversion</A> operation that converts between related types, such as <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> types 
within a <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Ghierarchy">hierarchy</A> 
and between <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>s 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gintegral-type">integral 
type</A>s. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gdynamic_cast">dynamic_cast</A>. 
TC++PL 6.2.7, 15.4.2.1, D&amp;E 14.3.2. 
<P><A name=GStepanov><B>Stepanov</B></A> - Alex Stepanov is the original 
designer and implementer of the <A 
href="http://www.research.att.com/~bs/glossary.html#GSTL">STL</A>. D&amp;E 
11.15.2. 
<P><A name=GSTL><B>STL</B></A> - the "Standard <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">Template</A> 
Library" by Alex <A 
href="http://www.research.att.com/~bs/glossary.html#GStepanov">Stepanov</A>, 
which became the basis for the <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>s, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Galgorithm">algorithm</A>s, 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>s 
part of the <A href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO 
C++</A> standard library. TC++PL 15-19. 
<P><A name=Gstrcmp()><B>strcmp()</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#GC">C</A>-style <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> for 
comparing <A 
href="http://www.research.att.com/~bs/glossary.html#GC-style-string">C-style 
string</A>s. 
<P><A name=Gstream><B>stream</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A>. 
<P><A name=Gstream-I/O><B>stream I/O</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Giostream">iostream</A>. 
<P><A name=Gstring><B>string</B></A> - standard-library <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> representing 
a sequence of characters, support by convenient <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s, 
such as <A href="http://www.research.att.com/~bs/glossary.html#G==">==</A> and 
<A href="http://www.research.att.com/~bs/glossary.html#G+=">+=</A>. The general 
form of of strings, <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic_string">basic_string</A>, 
supports strings of different kinds of characters. TC++PL 3.5, 20. 
<P><A name=Gstring-stream><B>string stream</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstream">stream</A> attached 
to a <A href="http://www.research.att.com/~bs/glossary.html#Gstring">string</A>. 
See also, <A 
href="http://www.research.att.com/~bs/glossary.html#Gstringstream">stringstream</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gistringstream">istringstream</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gostringstream">ostringstream</A>. 
TC++PL 21.5.3. 
<P><A name=Gstringstream><B>stringstream</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstring-stream">string 
stream</A> for <A 
href="http://www.research.att.com/~bs/glossary.html#Ginput">input</A> and <A 
href="http://www.research.att.com/~bs/glossary.html#Goutput">output</A>. 
<P><A name=Gstrong-guarantee><B>strong guarantee</B></A> - the guarantee that an 
<A href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
thrown by an operation leaves every <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> in the 
state in which it was before the start of the operation. Builds on the <A 
href="http://www.research.att.com/~bs/glossary.html#Gbasic-guarantee">basic 
guarantee</A>. See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-safety">exception 
safety</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gnothrow-guarantee">nothrow 
guarantee</A>, and basic guarantee. TC++PL E.2. 
<P><A name=GStroustrup><B>Stroustrup</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>. 
<P><A name=Gstrstream><B>strstream</B></A> - deprecated ancestor of <A 
href="http://www.research.att.com/~bs/glossary.html#Gstringstream">stringstream</A>. 

<P><A name=Gstruct><B>struct</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> with <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic">public</A> by 
default. Most often used for data structures without <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A>s or class <A 
href="http://www.research.att.com/~bs/glossary.html#Ginvariant">invariant</A>s, 
as in <A href="http://www.research.att.com/~bs/glossary.html#GC">C</A>-style 
programming. TC++PL 5.7, 10.2.8, D&amp;E 3.5.1. 
<P><A name=Gsubclass><B>subclass</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>. 
<P><A name=Gsubtype><B>subtype</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A>. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gpublic-base">public 
base</A>. 
<P><A name=Gsuffix-operator><B>suffix operator</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpostfix-operator">postfix 
operator</A>. 
<P><A name=Gsuperclass><B>superclass</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base class</A>. 

<P><A name=Gswitch-statement><B>switch-statement</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
selecting among many alternatives based on an integer <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. TC++PL 
6.3.2. 
<P><A name=Gsyntax><B>syntax</B></A> - the set of gramatical rules specifying 
how the text of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> must 
be composed. For example, specifying the form of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
or the form of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfor-statement">for-statement</A>. 

<P><A name=GTC++PL#><B>TC++PL</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#GBjarne-Stroustrup">Bjarne 
Stroustrup</A>: <A href="http://www.research.att.com/~bs/3rd.html">The C++ 
Programming Language (Special Edition)</A>. Addison Wesley. 2000. 
<P><A name=Gtemplate><B>template</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
parameterized by a set of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s, or 
templates. See also <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-instantiation">template 
instantiation</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gspecialization">specialization</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gtemplate-class">template 
class</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-function">template 
function</A>. TC++PL 2.7, 13, D&amp;E 15. 
<P><A name=Gtemplate-argument><B>template argument</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument">argument</A> to a 
<A href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>. 
<P><A name=Gtemplate-argument-constraint><B>template argument constraint</B></A> 
- see <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstraint">constraint</A>. 

<P><A name=Gtemplate-class><B>template class</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> 
parameterized by <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s, or <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s. 
The <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>s necessary to identify the class to be generated for the <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass-template">class 
template</A> must be provided where a template class is used. For example "<A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>&lt;<A 
href="http://www.research.att.com/~bs/glossary.html#Gint">int</A>&gt; v;" 
generates a vector of ints from the vector template. See also template. TC++PL 
13.2, D&amp;E 15.3. 
<P><A name=Gtemplate-definition><B>template definition</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-class">template 
class</A> or of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-function">template 
function</A> including a <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-body">function 
body</A>. 
<P><A name=Gtemplate-function><B>template function</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
parameterized by <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s, <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>s, or <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s. 
The function to be generated from a template function can usually be deduced 
from the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction-argument">function 
argument</A>s in a call. For example, "sort(b,e)" generates "sort&lt;<A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A>::<A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>&gt;(b,e)" 
from the sort() template function if b and e are standard library vector 
iterators. If a template argument cannot be deduced, it must be provided through 
explicit qualification. See also template. TC++PL 13,3, D&amp;E 15.6. 
<P><A name=Gtemplate-instantiation><B>template instantiation</B></A> - the 
process of creating a <A 
href="http://www.research.att.com/~bs/glossary.html#Gspecialization">specialization</A> 
from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>. 
TC++PL 13.2.2, D&amp;E 15.10. 
<P><A name=Gtemplate-parameter><B>template parameter</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gparameter">parameter</A> of 
a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>. 
<P><A name=Gterminate()><B>terminate()</B></A> - If an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> is 
thrown but no <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandler">handler</A> is 
found, terminate() is called. By default, terminate() terminates the <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. If 
program termination is unacceptable, a user can provide an alternative 
terminate() <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>. If 
you are worried about <A 
href="http://www.research.att.com/~bs/glossary.html#Guncaught-exception">uncaught 
exception</A>s, make the body of <A 
href="http://www.research.att.com/~bs/glossary.html#Gmain()">main()</A> a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
TC++PL 14.7. 
<P><A name=Gtermination-semantics><B>termination semantics</B></A> - a somewhat 
ominous terminology for the idea that throwing an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A> 
"terminates" an operation and returns through the <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> call 
chain to a <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandler">handler</A>. The 
handler can initiate any <A 
href="http://www.research.att.com/~bs/glossary.html#Gerror-handling">error 
handling</A> it likes, including calling the function that caused the exception 
again (presumably after fixing the problem that caused the problem). What a 
handler can't do is simply tell the thrower to just carry on; by the time the 
handler is invoked we have returned from the <A 
href="http://www.research.att.com/~bs/glossary.html#Gblock">block</A>/function 
that threw and all blocks/functions that led to it from the handler's <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gresumption-semantics">resumption 
semantics</A>. TC++PL 14.4.5, D&amp;E 16.6. 
<P><A name=Gternary-operator><B>ternary operator</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
taking three operands, such as ?:. 
<P><A name=Gtesting><B>testing</B></A> - systematically verifying that a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> meets 
its specification and systematically searching for error. 
<P><A name=Gthis#><B>this</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to the 
<A href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> for 
which a <A 
href="http://www.research.att.com/~bs/glossary.html#Gnon-static-member">non-static 
member</A> function is called. TC++PL 10.2.7, D&amp;E 2.5.2. 
<P><A name=Gthrow><B>throw</B></A> - operation for interrupting the normal flow 
of control and returning to an appropriate <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handler">exception 
handler</A> identifyed by the <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> of the 
exception throw. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handling">exception 
handling</A>. TC++PL 8.3.1, 14.3, D&amp;E 16.3. 
<P><A name=Gtrait><B>trait</B></A> - a small <A 
href="http://www.research.att.com/~bs/glossary.html#Gpolicy-object">policy 
object</A>, typically used to describe aspects of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. For 
example, <A 
href="http://www.research.att.com/~bs/glossary.html#Giterator">iterator</A>_trait<T> 
specifies the types resulting from operations on an iterator T. TC++PL 19.2.2. 
<P><A name=Gtranslation-unit><B>translation unit</B></A> - a part of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A> that 
can be <A 
href="http://www.research.att.com/~bs/glossary.html#Gseparately-compiled">separately 
compiled</A>. TC++PL 9.1. 
<P><A name=Gtrigraph><B>trigraph</B></A> - alternative representation for <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> representation 
characters that doesn't exist in every national <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-set">character 
set</A>, such as {, }, [, ], and #: ??&lt;, ??&gt;, ??(, ??), and ??=. TC++PL 
C.3.1. 
<P><A name=Gtrue><B>true</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gbool">bool</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>; converts 
to 1. TC++PL 4.2, D&amp;E 11.7.2. 
<P><A name=Gtry#><B>try</B></A> - keyword used to start a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry-block">try-block</A>. 
<P><A name=Gtry-block><B>try-block</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gblock">block</A>, prefixed 
by the keyword <A 
href="http://www.research.att.com/~bs/glossary.html#Gtry#">try</A>, specifying 
<A href="http://www.research.att.com/~bs/glossary.html#Ghandler">handler</A>s 
for <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">exception</A>s. 
See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gcatch">catch</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception-handling">exception 
handling</A>. TC++PL 8.3.1,14.3, D&amp;E 16.3. 
<P><A name=Gtwo-phase-lookup><B>two-phase lookup</B></A> - a somewhat 
complicated mechanism used in compilation of <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A>s. <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">Name</A>s that do not 
depend on a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-parameter">template 
parameter</A> are looked up (and bound) early, i.e., when the template <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-definition">template 
definition</A> is first seen ("phase 1 lookup"). Names that depend on a template 
parameter are looked up late, i.e. during template <A 
href="http://www.research.att.com/~bs/glossary.html#Ginstantiation">instantiation</A> 
("phase 2 lookup") so that the lookup can find names relating to actual <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>s. TC++PL C::13.8. 
<P><A name=Gtype><B>type</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbuilt-in-type">built-in 
type</A> or a <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type">user-defined 
type</A>. A type defines the proper use of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> or an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A>. 
TC++PL 2.3.1, 4.1. 
<P><A name=Gtype-checking><B>type checking</B></A> - the process of checking 
that every <A 
href="http://www.research.att.com/~bs/glossary.html#Gexpression">expression</A> 
is used according to its <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. the <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> 
checks every expression based on the declared types of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>s involved. 
TC++PL 7.2-3, 24.2.3, D&amp;E 2.3, 2.6, 3.10, 3.15, 9.2.2.1. 
<P><A name=Gtype-conversion><B>type conversion</B></A> - producing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> of one <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> from a value 
of another type. A type <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A> 
can be an implicit conversion or an <A 
href="http://www.research.att.com/~bs/glossary.html#Gexplicit">explicit</A> 
conversion. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Guser-defined-type-conversion">user-defined 
type conversion</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>. TC++PL 
6.2.7. 
<P><A name=Gtype-safety><B>type safety</B></A> - the property that an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> can be 
accessed only according to its definition. <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> approximates 
this ideal. A programmer can violate <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> safety by 
explicitly using a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>, by using an 
uninitialized <A 
href="http://www.research.att.com/~bs/glossary.html#Gvariable">variable</A>, by 
using a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> that 
doesn't point to an object, by accessing beyond the end of an <A 
href="http://www.research.att.com/~bs/glossary.html#Garray">array</A>, and by 
misusing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gunion">union</A>. For 
low-level systems code, it can be necessary to violate type safety (e.g. to 
write out the <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A> 
representation of some objects), but generally type safety must be preserved for 
a program to be correct and maintainable. 
<P><A name=Gtype-system><B>type system</B></A> - the set of rules for how <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>s can be 
used according to their <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s. See also: 
<A href="http://www.research.att.com/~bs/glossary.html#Gtype-checking">type 
checking</A>. 
<P><A name=Gtypedef><B>typedef</B></A> - synonym for some <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> declared 
using the keyword <B>typedef</B>. 
<P><A name=Gtypeid()><B>typeid()</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
returning basic <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> information. 
TC++PL 15.4.4, D&amp;E 14.2.5. 
<P><A name=Gtypename><B>typename</B></A> - (1) an alternative to "<A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>" when 
declaring <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate-argument">template 
argument</A>s; for example, "template&lt;typename T&gt; void f(T);" (2) a way of 
telling a compiler that a name is meant to name a type in template code; for 
example "template&lt;class T&gt; void f(T a) { typename T::diff_type x = 0; ... 
}". TC++PL C::13.5. 
<P><A name=Gtype_info><B>type_info</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A> containing 
basic <A 
href="http://www.research.att.com/~bs/glossary.html#Grun-time-type-information">run 
time type information</A>. TC++PL 15.4.4, D&amp;E 14.2.5.1. 
<P><A name=Gunary-operator><B>unary operator</B></A> - an <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
taking one operand, such as ! and unary *. 
<P><A name=Guncaught-exception><B>uncaught exception</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gexception">Exception</A> 
for which no <A 
href="http://www.research.att.com/~bs/glossary.html#Ghandler">handler</A> was 
found. Invokes <A 
href="http://www.research.att.com/~bs/glossary.html#Gterminate()">terminate()</A>, 
which by default terminates the <A 
href="http://www.research.att.com/~bs/glossary.html#Gprogram">program</A>. 
TC++PL 14.7. 
<P><A name=Gundefined><B>undefined</B></A> - an aspect of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> 
for which no reasonable behavior is required. An example is dereferencing a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> with 
the <A href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gzero">zero</A>. Avoid 
undefined behavior. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gimplementation-defined">implementation 
defined</A>. TC++PL C.2. 
<P><A name=Guninitialized-memory><B>uninitialized memory</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gmemory">memory</A> that 
hasn't been initialized to hold a specific <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. TC++PL 
19.4.4. 
<P><A name=Gunion><B>union</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gstruct">struct</A> with all 
<A href="http://www.research.att.com/~bs/glossary.html#Gmember">member</A>s 
allocated at the same offset within an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>. The 
language does not guarantee <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype-safety">type 
safety</A> for all uses of unions. Primarily used to save space. TC++PL C.8.2. 
<P><A name=Gupcast><B>upcast</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A> from a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> to one of its bases. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gdowncast">downcast</A>, <A 
href="http://www.research.att.com/~bs/glossary.html#Gcrosscast">crosscast</A>. 
TC++PL 15.4. 
<P><A name=Guser-defined-type><B>user-defined type</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gclass">Class</A> or <A 
href="http://www.research.att.com/~bs/glossary.html#Genumeration">enumeration</A>. 
A programmer can define meanings for <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A>s for 
user-defined <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>s. See also: 
<A 
href="http://www.research.att.com/~bs/glossary.html#Goperator-overloading">operator 
overloading</A>. TC++PL 6.2, 11, D&amp;E 3.6, 11.7.1. 
<P><A name=Guser-defined-type-conversion><B>user-defined type conversion</B></A> 
- a user can define <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion">conversion</A>s 
either as <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A>s 
or <A 
href="http://www.research.att.com/~bs/glossary.html#Gconversion-operator">conversion 
operator</A>s. These conversions are applied explicitly or implicitly just like 
built-in conversions. TC++PL 11.3.5, 11.4, D&amp;E 3.6.1, 3.6.3. 
<P><A name=Gusing#><B>using</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gusing-directive">using-directive</A> 
and <A 
href="http://www.research.att.com/~bs/glossary.html#Gusing-declaration">using-declaration</A>. 

<P><A name=Gusing-declaration><B>using-declaration</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a local synonym for a <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> in another 
<A href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A> 
or <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#overloadderived">Example of 
using-declaration used to simplify overloading</A>. See also: overloading, <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument-based-lookup">argument-based 
lookup</A>. TC++PL 8.2.2. D&amp;E 17.4. 
<P><A name=Gusing-directive><B>using-directive</B></A> - directive making a <A 
href="http://www.research.att.com/~bs/glossary.html#Gnamespace">namespace</A> 
accessible. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Gargument-based-lookup">argument-based 
lookup</A>. TC++PL 8.2.3. D&amp;E 17.4. 
<P><A name=Gvalarray><B>valarray</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> numeric <A 
href="http://www.research.att.com/~bs/glossary.html#Gvector">vector</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> supporting 
vector operations. TC++PL 22.4. 
<P><A name=Gvalue><B>value</B></A> - the <A 
href="http://www.research.att.com/~bs/glossary.html#Gbit">bit</A>s of an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> 
interpreted according to the objects <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. 
<P><A name=Gvalue-return><B>value return</B></A> - The <A 
href="http://www.research.att.com/~bs/glossary.html#Gsemantics">semantics</A> of 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
return is to pass a copy of the return <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A>. The copy 
operation is defined by the return <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>'s <A 
href="http://www.research.att.com/~bs/glossary.html#Gcopy-constructor">copy 
constructor</A>. TC++PL 7.4. 
<P><A name=Gvariable><B>variable</B></A> - named <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> in a <A 
href="http://www.research.att.com/~bs/glossary.html#Gscope">scope</A>. TC++PL 
2.3.1, 10.4.3, D&amp;E 2.3. 
<P><A name=Gvariable-definition><B>variable definition</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
of a named <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of a 
data <A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A> 
without an <A 
href="http://www.research.att.com/~bs/glossary.html#Gextern">extern</A> 
specifier. 
<P><A name=Gvector><B>vector</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gstandard-library">standard 
library</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gtemplate">template</A> 
providing contiguous storage, re-sizing and the useful <A 
href="http://www.research.att.com/~bs/glossary.html#Gpush_back()">push_back()</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s 
for adding <A 
href="http://www.research.att.com/~bs/glossary.html#Gelement">element</A>s at 
the end. Vector is the default <A 
href="http://www.research.att.com/~bs/glossary.html#Gcontainer">container</A>. 
See also: <A href="http://www.research.att.com/~bs/glossary.html#Gmap">map</A>, 
<A href="http://www.research.att.com/~bs/glossary.html#Gmultimap">multimap</A>, 
list, <A href="http://www.research.att.com/~bs/glossary.html#Gdeque">deque</A>. 
TC++PL 3.7.1, 16.3. 
<P><A name=Gvirtual><B>virtual</B></A> - keyword used to declare a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> virtual. 
<P><A name=Gvirtual-base><B>virtual base</B></A> - a base that is shared by all 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>es in a 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass-hierarchy">class 
hierarchy</A> that has declared it <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A>. 
TC++PL 15.2.4, D&amp;E 12.3, 12.4.1. 
<P><A name=Gvirtual-constructor><B>virtual constructor</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gconstructor">constructor</A> 
cannot be <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A>, 
because to create an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A>, we need 
complete information of its <A 
href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>. "virtual 
constructor" is the <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> of a 
technique for calling a virtual <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> to 
create an object of an appropriate type. <A 
href="http://www.research.att.com/~bs/bs_faq2.html#virtual-ctor">Example</A>. 
TC++PL 12.4.4, 15.6.2. 
<P><A name=Gvirtual-destructor><B>virtual destructor</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdestructor">destructor</A> 
declared <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> to 
ensure that the proper <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> destructor is called if an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of a 
derived class is deleted through a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to a 
<A href="http://www.research.att.com/~bs/glossary.html#Gbase-class">base 
class</A>. If a class has any virtual <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s, it 
should have a virtual destructor. <A 
href="http://www.research.att.com/~bs/bs_faq.html#virtual-dtor">Example</A>. 
TC++PL 12.4.2, D&amp;E 10.5. 
<P><A name=Gvirtual-member-function><B>virtual member function</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmember-function">member 
function</A> that a <A 
href="http://www.research.att.com/~bs/glossary.html#Gderived-class">derived 
class</A> can <A 
href="http://www.research.att.com/~bs/glossary.html#Goverride">override</A>; the 
primary mechanism for run-time <A 
href="http://www.research.att.com/~bs/glossary.html#Gpolymorphism">polymorphism</A> 
in <A href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A>. A <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> member 
function is sometimes called a <A 
href="http://www.research.att.com/~bs/glossary.html#Gmethod">method</A>. See 
also: <A 
href="http://www.research.att.com/~bs/glossary.html#Goverriding">overriding</A>, 
<A 
href="http://www.research.att.com/~bs/glossary.html#Gpure-virtual-function">pure 
virtual function</A>. TC++PL 2.5.4, 2.5.5, 12.2.6, D&amp;E 3.5, 12.4. 
<P><A name=Gvirtual-function-pointer><B>virtual-function pointer</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to a 
<A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>' <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A> 
table. 
<P><A name=Gvirtual-function-table><B>virtual-function table</B></A> - table of 
all <A href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> 
<A href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s 
for a <A href="http://www.research.att.com/~bs/glossary.html#Gclass">class</A>. 
The most common way of implementing virtual functions is to have each <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of a 
class with virtual functions contain a virtual function <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> 
pointing to the class' virtual function table. 
<P><A name=Gvisitor-pattern><B>visitor pattern</B></A> - a way of using <A 
href="http://www.research.att.com/~bs/glossary.html#Gdouble-dispatch">double 
dispatch</A> to simulate <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual">virtual</A> calls 
without adding new virtual <A 
href="http://www.research.att.com/~bs/glossary.html#Gfunction">function</A>s. 
<P><A name=GVisual-C++><B>Visual C++</B></A> - Microsoft's implementation of <A 
href="http://www.research.att.com/~bs/glossary.html#GC++">C++</A> together with 
proprietary libraries for Windows programming in an <A 
href="http://www.research.att.com/~bs/glossary.html#GIDE">IDE</A>. 
<P><A name=Gvoid><B>void</B></A> - a keyword used to indicate an absence of 
information. TC++PL 4.1.1, 4.7. 
<P><A name=Gvoid*><B>void*</B></A> - <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A> to <A 
href="http://www.research.att.com/~bs/glossary.html#Gvoid">void</A>; that is, a 
pointer to an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> of 
unknown <A href="http://www.research.att.com/~bs/glossary.html#Gtype">type</A>; 
also called pointer to <A 
href="http://www.research.att.com/~bs/glossary.html#Graw-memory">raw memory</A>. 
A void* cannot be used or assigned without a <A 
href="http://www.research.att.com/~bs/glossary.html#Gcast">cast</A>. TC++PL 5.6, 
D&amp;E 11.2.1, 11.2.3. 
<P><A name=Gvolatile><B>volatile</B></A> - attribute of a <A 
href="http://www.research.att.com/~bs/glossary.html#Gdeclaration">declaration</A> 
telling the <A 
href="http://www.research.att.com/~bs/glossary.html#Gcompiler">compiler</A> that 
an entity can have its <A 
href="http://www.research.att.com/~bs/glossary.html#Gvalue">value</A> changed by 
extralinguistic means; for example, a real time clock: "<A 
href="http://www.research.att.com/~bs/glossary.html#Gextern">extern</A> volatile 
<A href="http://www.research.att.com/~bs/glossary.html#Gconst">const</A> long 
clock;". Limits optimizations. TC++PL A.7.1. 
<P><A name=Gvptr><B>vptr</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual-function-pointer">virtual-function 
pointer</A>. 
<P><A name=Gvtbl><B>vtbl</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#Gvirtual-function-table">virtual-function 
table</A>. 
<P><A name=Gwchar_t><B>wchar_t</B></A> - wide <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-type">character 
type</A>. Used to hold characters of <A 
href="http://www.research.att.com/~bs/glossary.html#Gcharacter-set">character 
set</A>s that require more than a <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A> to 
represent, such as unicode. TC++PL 4.3, C.3.3. See also: large character sets, 
universal character <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A>. 
<P><A name=GWG21><B>WG21</B></A> - a common abbreviation of the <A 
href="http://www.research.att.com/~bs/glossary.html#Gname">name</A> of the <A 
href="http://www.research.att.com/~bs/glossary.html#GISO-C++">ISO C++</A> 
standards committee. 
<P><A name=Gwhile-statement><B>while-statement</B></A> - a <A 
href="http://www.research.att.com/~bs/glossary.html#Gloop">loop</A> <A 
href="http://www.research.att.com/~bs/glossary.html#Gstatement">statement</A> 
presenting its condition "at the top". For example, while (<A 
href="http://www.research.att.com/~bs/glossary.html#Gcin">cin</A>&gt;&gt;var) 
vec.push_back(var); 
<P><A name=Gwhitespace><B>whitespace</B></A> - characters that a represented 
only by the space they take up on a page or screen. The most common examples are 
space (' '), newline ('\n'), and tab ('\t'). 
<P><A name=Gword#><B>word</B></A> - a number of <A 
href="http://www.research.att.com/~bs/glossary.html#Gbyte">byte</A>s that on a 
given machine is particularly suied to holding an integers or a <A 
href="http://www.research.att.com/~bs/glossary.html#Gpointer">pointer</A>. On 
many machines, an <A 
href="http://www.research.att.com/~bs/glossary.html#Gobject">object</A> must be 
aligned on a word boundary for acceptable performance. An int is typically a 
stored in a word. Often, a word is 4 bytes. See also: <A 
href="http://www.research.att.com/~bs/glossary.html#Galignment">alignment</A>. 
TC++PL 4.6. 
<P><A name=Gxor#><B>xor</B></A> - synonym for ^, the bitwise exclusive or <A 
href="http://www.research.att.com/~bs/glossary.html#Goperator">operator</A> 
TC++PL C.3.1. 
<P><A name=Gzero><B>zero</B></A> - see <A 
href="http://www.research.att.com/~bs/glossary.html#GNULL">NULL</A> 
<P>
<CENTER><A href="http://www.research.att.com/~bs/homepage.html">home</A> | <A 
href="http://www.research.att.com/~bs/C++.html">C++</A> | <A 
href="http://www.research.att.com/~bs/bs_faq.html">FAQ</A> | <A 
href="http://www.research.att.com/~bs/bs_faq2.html">technical FAQ</A> | <A 
href="http://www.research.att.com/~bs/C++0xFAQ.html">C++0x FAQ</A> | <A 
href="http://www.research.att.com/~bs/papers.html">publications</A> | <A 
href="http://www.research.att.com/~bs/3rd.html">TC++PL</A> | <A 
href="http://www.research.att.com/~bs/programming.html">Programming</A> | <A 
href="http://www.research.att.com/~bs/dne.html">D&amp;E</A> | <A 
href="http://www.research.att.com/~bs/bio.html">bio</A> | <A 
href="http://www.research.att.com/~bs/interviews.html">interviews</A> | <A 
href="http://www.research.att.com/~bs/applications.html">applications</A> | <A 
href="http://www.research.att.com/~bs/glossary.html">glossary</A> | <A 
href="http://www.research.att.com/~bs/compilers.html">compilers</A> | <A 
href="http://www.cs.tamu.edu/">Texas A&amp;M University</A> | <A 
href="http://www.research.att.com/">AT&amp;T Research</A> 
</CENTER></BODY></HTML>
