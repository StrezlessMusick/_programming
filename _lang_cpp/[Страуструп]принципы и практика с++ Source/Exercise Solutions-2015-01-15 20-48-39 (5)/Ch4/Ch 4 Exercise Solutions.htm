<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<!-- saved from url=(0056)http://www.stroustrup.com/Programming/Solutions/Ch4.html -->
<HTML><HEAD><TITLE>Stroustrup: Programming - Ch 4 Exercise Solutions</TITLE>
<META content="text/html; charset=utf-8" http-equiv=Content-Type>
<META name=GENERATOR content="MSHTML 8.00.6001.23111"></HEAD>
<BODY>
<CENTER>
<H1>Programming - Ch 4 Exercise Solutions</H1></CENTER>
<P align=right>Modified January 17, 2010. 
<UL>
  <LI><B>Exercise 3</B>: Read a sequence of doubles into a vector. Think of each 
  value as the distance between two cities along a given route. Compute and 
  print the total distance (the sum of all distances). Find and print the 
  smallest and greatest distance between two neighboring cities. Find and print 
  the mean distance between two neighboring cities. 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-3.cpp">Solution 
  code</A>. </P>
  <LI><B>Exercise 5</B>: Write a program that performs as a very simple 
  calculator. Your calculator should be able to handle the five basic math 
  operations: add, subtract, multiply, and divide on two input values. Your 
  program should prompt the user to enter three arguments: two <B>double</B> 
  values and a character to represent an operation. If the entry arguments are 
  <B>35.6</B>, <B>24.1</B>, and <B>+</B>; the program output should be <B>"The 
  sum of 35.6 and 24.1 is 59.7."</B> In chapter 6, we look at a much more 
  sophisticated simple calculator. 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-5.cpp">Solution 
  code</A>. </P>
  <LI><B>Exercise 6</B>: Make a <B>vector</B> holding the ten <B>string</B> 
  values <B>"zero"</B>, <B>"one"</B>, .. <B>"nine"</B>. Use that in a program 
  that converts a digit to its corresponding spelled out value; e.g., the input 
  <B>7</B> gives the output <B>seven</B>. Have the same program, using the same 
  input loop, convert spelled out numbers into their digit form; e.g., the input 
  <B>seven</B> gives the output <B>7</B>. 
  <P>See Exercise 7. </P>
  <LI><B>Exercise 7</B>: Modify the ``mini calculator'' from exercise 5 to 
  accept (just) single-digit numbers written as either digits or spelled out. 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-7.cpp">Solution 
  code</A>. </P>
  <LI><B>Exercise 10</B>: Write a program that plays the game "Rock, paper, 
  scissors." If you are not familiar with the game do some research (e.g. on the 
  web using Google). Research is a common task for programmers. Use a switch 
  statement to solve this exercise. Also, the machine should give random answers 
  (i.e., select the next Rock, paper, or scissors randomly). Real randomness is 
  too hard to provide just now, so just build a vector with a sequence of values 
  to be used as "the next value." If you build the vector into the program, it 
  will always play the same game, so maybe you should let the user enter some 
  values). Try variations to make it less easy for the user to guess which move 
  the machine will do next. 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-10.cpp">Solution 
  code</A>. </P>
  <LI><B>Exercise 11</B>: Compute the prime numbers between 1 and 100. See the 
  book for details. 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-11.cpp">Solution 
  code</A>. </P>
  <LI><B>Exercise 19</B>: read and write (name,value) pairs 
  <P><A 
  href="http://www.stroustrup.com/Programming/Solutions/Ch4/e4-19.cpp">Solution 
  code</A>. </P></LI></UL></BODY></HTML>
