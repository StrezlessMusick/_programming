не описано трауструпом
    Динамическая инициализация и разрушение в многопоточной среде
    Локальная память потока (thread_local)
    Юникодные символы
    Метапрограммирование и характеристики типов
    Атомарные операции
    Завершение процесса
must have
    __cplusplus	- макрос определения типа с++
    Правые угловые скобки
    Атрибуты - компиляторно-зависимы
    Возможности С99 ...
    Встроенные пространства имен (Inline namespace) - для версионирования
atomic типы и литералы
    long long -- более длинное целое
    Предотвращение сужения (narrowing) типов
    POD типы
    Расширенные целочисленные типы
    Выравнивание (alignment)
    nullptr -- литерал для задания нулевого указателя
    Сырые строковые литералы
    Пользовательские литералы
функции
    Лямбда-выражения, с замыканиями
    Диапазонный for
исключения
    noexcept – предотвращение проброса исключений
    Копирование и повторная генерация исключений
классы и enum и union
    enum class (строго типизированные перечисления с ограниченной областью видимости)
    Объединения
классы и инициализация
    Единообразный синтаксис и семантика инициализации
    Операторы явного преобразования explicit operator type()
    Списки инициализации (универсальный способ инициализации)
    Инициализация членов класса при объявлении
кдассы и конструкторы
    Rvalue ссылки
    Управление поведением по умолчанию: копирование и перемещение
    Управление поведением по умолчанию: default и delete
    Делегирующие конструкторы
классы и наследование
    Унаследованные конструкторы
    Управление переопределением функций: override
    Управление переопределением функций: final
авто выведение типов
    Auto (вывод типа из инициализатора)
    decltype – тип выражения
    Суффиксный синтаксис возвращаемого значения
шаблоны
    extern инсанцирование шаблонов 
    template alias
    	template typedef; см. template alias
    Локальные типы в шаблонных аргументах - bugfix
    Шаблоны с переменным числом параметров (Variadic Templates)
вычисления компиляции
    Константные выражения (обобщенные гарантировано константные выражения)
    Статические утверждения (утверждения времени компиляции) (static_assert)




    Улучшения алгоритмов
    regex; библиотека регулярных выражений 
    Генерация случайных чисел

    Улучшения контейнеров
    array
    forward_list
    Неупорядоченные контейнеры хеш-таблицы

    tuple - улучшение pair
    function и bind - классы с operator()

    Аллокаторы с дополнительным состоянием
    unique_ptr	
    shared_ptr	указатель на объект со счетчиком таких указтелей
    weak_ptr	хз...
    Сборка мусора

    Модель памяти 
    Потоки
    Взаимное исключение mutex
    Блокировки
    Условные переменные

    Работа со временем

    future и promise
    async - может быть не описана в черновом стандарте
