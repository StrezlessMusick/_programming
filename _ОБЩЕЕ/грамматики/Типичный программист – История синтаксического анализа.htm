<!DOCTYPE html>
<!--[if IE 8]><html id="ie8" lang="ru-RU"> <![endif]-->
<!--[if !(IE 8) ]><!-->
<html lang="ru-RU"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1"><link type="text/css" media="all" href="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/autoptimize_ba9956ec226967fa387ca643a232b555.css" rel="stylesheet"><title>Типичный&nbsp;программист  –  История синтаксического анализа</title><meta name="description" content="В настоящее время все процессы, где применяется синтаксический анализ, используют парсеры&nbsp;— программы для проведение визуального или программно-автоматизированного синтаксического и лексического анализа или разбора какого-либо документа с целью извлечения из него необходимых данных. Это и различные автоматизированные переводчики с одного языка на другой, и трансляторы языков программирования, которые формируют программный код на машинно-ориентированный язык, это и…"><link rel="profile" href="http://gmpg.org/xfn/11"><link rel="pingback" href="http://tproger.ru/xmlrpc.php"><!--[if lt IE 9]> <script src="http://cdn.tproger.ru/wp-content/themes/bliss/assets/js/html5.js" type="text/javascript"></script> <![endif]--><link rel="alternate" type="application/rss+xml" title="Типичный&nbsp;программист » Лента" href="http://tproger.ru/feed/"><link rel="alternate" type="application/rss+xml" title="Типичный&nbsp;программист » Лента комментариев" href="http://tproger.ru/comments/feed/"><link rel="stylesheet" id="bluth-googlefonts-css" href="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/css.css" type="text/css" media="all"><meta name="generator" content="WordPress 4.1.1"><link rel="canonical" href="http://tproger.ru/translations/parsing-a-timeline/"><link rel="shortlink" href="http://tproger.ru/?p=1719"><link rel="Shortcut Icon" type="image/x-icon" href="http://cdn.tproger.ru/wp-content/uploads/2014/12/favicon1.png"><meta property="og:site_name" content="Типичный&nbsp;программист"><meta property="og:title" content="  История синтаксического анализа"><meta property="og:image" content="http://cdn.tproger.ru/wp-content/uploads/2015/02/Parsing_watch_new.jpg"><meta property="og:description" content="В настоящее время все процессы, где применяется синтаксический анализ, используют парсеры&nbsp;— программы для проведение визуального или программно-автоматизир"><meta property="og:type" content="article"><meta property="og:url" content="http://tproger.ru/translations/parsing-a-timeline/"></head><body class="single single-post postid-1719 single-format-standard"><div class="bl_search_overlay"></div><div id="page" class="site"> <header id="masthead" role="banner" class="header_normal"><div class="image-overflow"><div class="header-background-image"></div></div><div class="row-fluid top-banner"><div class="container"><div class="banner-overlay"></div> <a class="brand brand-image" href="http://tproger.ru/" title="Типичный&nbsp;программист" rel="home"><img src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/headline3.png" alt="Типичный&nbsp;программист"><h1></h1></a><div class="top-banner-social pull-right" style="top:15px;"></div></div></div><div class="row-fluid bluth-navigation fixed shrunk"><div class="container"><div class="mini-logo"> <a class="mini mini-image" href="http://tproger.ru/" title="Типичный&nbsp;программист" rel="home"><img src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/avatar_small4.png" alt="Типичный&nbsp;программист"></a></div><div class="navbar navbar-inverse"><div class="navbar-inner"><div class="nav-collapse collapse"><ul id="menu-%d0%bc%d0%b5%d0%bd%d1%8e-1" class="nav visible-desktop"><li id="menu-item-27" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home"><a href="http://tproger.ru/">Главная</a></li><li id="menu-item-28" class="menu-item menu-item-type-post_type menu-item-object-page"><a href="http://tproger.ru/about/">О проекте</a></li></ul></div><div class="menu-%d0%bc%d0%b5%d0%bd%d1%8e-1-container"><div id="mobile-menu" class="pull-right visible-tablet visible-phone mobile-menu"><form style="margin-top: 15px; margin-bottom: 5px;"><select style="max-width:150px;" onchange="if (this.value) window.location.href=this.value"><option selected="selected">-- Menu --</option><option value="http://tproger.ru/">Главная</option><option value="http://tproger.ru/about/">О проекте</option> </select></form></div></div></div><div style="width: 0px;" class="nav-line"></div></div></div></div> </header><div style="padding-top: 71px;" id="main" class="container"><div id="primary" class="row right_side"><div id="content" class="span8" role="main"> <article id="post-1719" class="post-1719 post type-post status-publish format-standard has-post-thumbnail hentry category-translations tag-parsing"><div class="post-title box"><h1 class="entry-title">История синтаксического анализа</h1><div class="post-meta"><ul><li><time class="entry-date updated" datetime="2015-02-20T19:34:11+00:00">20 февраля 2015 в 19:34</time>, <a href="http://tproger.ru/category/translations/" title="Все посты категории Переводы">Переводы</a></li></ul></div><div class="post-format-badge post-format-standard"> <i style="height: 32px; line-height: 104px;"><img title="Поделиться ВКонтакте" onclick="var left=(screen.width/2)-(621/2); var top=(screen.height/2)-(517/2); window.open('https://vk.com/share.php?url=http://tproger.ru/translations/parsing-a-timeline/', 'Поделиться ВКонтакте', 'width=621, height=517, menubar=no, status=no top='+top+', left='+left); return false;" style="cursor: pointer;" alt="Поделиться" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/vk.png"></i></div></div><div class="entry-image" style=""> <a href="http://cdn.tproger.ru/wp-content/uploads/2015/02/Parsing_watch_new.jpg" class="lightbox" title="История синтаксического анализа" rel="bookmark"> <img src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/Parsing_watch_new.jpg" class="attachment-gallery-large wp-post-image" alt="Parsing_watch_new" height="270" width="770"> </a></div><div class="entry-container "><div class="entry-content"><p>В
 настоящее время все процессы, где применяется синтаксический анализ, 
используют парсеры&nbsp;— программы для проведение визуального или 
программно-автоматизированного синтаксического и лексического анализа 
или разбора какого-либо документа с целью извлечения из него необходимых
 данных. Это и различные автоматизированные переводчики с одного языка 
на другой, и трансляторы языков программирования, которые формируют 
программный код на машинно-ориентированный язык, это и язык SQL-запросов
 и тому подобные применения.</p><p>В этой статье мы в хронологическом порядке перечислим важнейшие этапы развития парсеров как инструмента анализа данных.</p><p><span id="more-1719"></span></p><h3 style="text-align: center;">1960</h3><p>Выпущена
 спецификация ALGOL 60, в которой впервые описан язык с блочной 
структурой. Комитету ALGOL хорошо известно, что никто не знает, как 
парсить такой язык. Но они считают, что, если они детально описали язык с
 блочной структурой, то для него будет изобретен анализатор/парсер. 
Рискованный подход, который впоследствии окупился.</p><h3 style="text-align: center;">&nbsp;1961</h3><p>Нед
 Айронс выпускает свой парсер ALGOL. Фактически, алгоритм Айронса 
является первым подобным анализатором, который был описан в печати. 
Парсер&nbsp;Неда является лево-рекурсивным (<em>форма рекурсивного спуска</em>)
 парсером . В отличие от современного рекурсивного спуска, алгоритм 
Айронса&nbsp;носит общий характер и является синтаксически-управляемым. <strong>«</strong>Общий<strong>»</strong>
 означает, что они могут разобрать что написано в БНФ (форма Бэкуса – 
Наура — формальная система описания синтаксиса, в которой одни 
синтаксические категории последовательно определяются через другие 
категории). <strong>«</strong>Синтаксически-управляемый<strong>»</strong> (декларативный) означает, что анализатор фактически создается из БНФ — парсер не нужно создавать самому.</p><h3 style="text-align: center;">1961</h3><p>Почти
 одновременно, появляются самокодируемые (т.е. с возможностью внесения 
изменений в исходный код) подходы к реализации 
леворекурсивных&nbsp;алгоритмов. Сейчас их рассматривают как рекурсивный
 спуск. В течение следующих лет самокодируемые подходы становятся все 
более популярными для леворекурсивных анализаторов, чем 
синтаксически-управляемые алгоритмы. Важную роль сыграли следующие три 
фактора:</p><ul><li>&nbsp;В 1960-х память и CPU очень ограничены. Ручное кодирование (<em>hand-coding</em>) окупается даже тогда, когда выигрыш от его применения мал.</li><li>Чистый
 леворекурсивный анализ&nbsp;— очень слабый метод синтаксического 
анализа. Ручному кодированию часто приходится преодолевать эти 
ограничения. Это утверждение верно как в 1961, так и в наши дни.</li><li>Леворекурсивный анализ&nbsp;хорошо работает в сочетании с ручным кодированием — они дополняют друг друга.</li></ul><h3 style="text-align: center;">1965</h3><p>Дональд
 Кнут (Don Knuth) изобретает алгоритм LR. Ученый в первую очередь 
заинтересован в математической стороне задачи. Кнут описывает алгоритм 
анализа, но его подход считается непрактичным.</p><h3 style="text-align: center;">1968</h3><p>Джей
 Эрли (Jay Earley) изобретает алгоритм, названный в его честь. Как и 
алгоритм Irons, алгоритм Эрли является синтаксически-управляемым и носит
 общий характер. В отличие от алгоритма Irons, не использует метод 
поиска с возвратом. Основная идея Эрли состоит в том, чтобы отслеживать 
этапы работы алгоритма в таблицах. Алгоритм Эрли заманчив, но имеет три 
основных недостатка:</p><ul><li>Во-первых, есть ошибка в обработке правил нулевой длины.</li><li>Во-вторых, при право-сторонней рекурсии необходимо применять алгоритм дважды.</li><li>В-третьих,
 чтобы создать таблицы, необходимо вести учёт системных ресурсов, что, 
по меркам аппаратных средств 1968 года, является довольно сложной 
задачей.</li></ul><h3 style="text-align: center;">1969</h3><p>Фрэнк 
ДеРемер (Frank DeRemer) описывает новый вариант LR Кнута. Для алгоритма 
LALR ДеРемера необходим только стек и таблица состояний, размер которой 
можно легко изменить.</p><h3 style="text-align: center;">1972</h3><p>Ахо
 (Aho) и Алманн (Ullmann) описали простой способ исправить ошибку 
правила нулевой длины в оригинальном алгоритме Эрли. К сожалению, это 
исправление требует даже больше системных ресурсов, чем алгоритм Эрли.</p><h3 style="text-align: center;">1975</h3><p>Белл Лэбс (Bell Labs) преобразует свой компилятор языка C из самокодируемого рекурсивного спуска в алгоритм LALR ДеРемера.</p><h3 style="text-align: center;">&nbsp;1977</h3><p>Выходит первая <strong>«</strong>Книга дракона<strong>»</strong>.
 Этот, вскоре ставший классическим, учебник назван так из-за обложки, на
 которой изображен рыцарь, бросающий вызов дракону. На копье рыцаря 
выгравированы буквы <strong>«</strong>LALR<strong>»</strong>. Впредь, говорить легкомысленно LALR — значит запятнать герб теории синтаксического анализа.</p><h3 style="text-align: center;">1979</h3><p>Bell
 Labs выпустила новую версию UNIX — седьмую. V7 включает в себя 
безусловно наиболее полный, полезный и доступный инструментарий для 
разработки компиляторов. Центральное место занимает инструментарий Yacc,
 генератор синтаксических анализаторов на основе LALR. С небольшим 
трудом Yacc парсит свой собственный язык ввода, а также язык основного 
компилятора V7 — переносимого компилятора языка&nbsp;C. Кажется, что 
после двух десятилетий исследований, проблема синтаксического анализа 
наконец решается.</p><h3 style="text-align: center;">1987</h3><p>Ларри 
Уолл (Larry Wall) представляет Perl 1. Perl позволяет решать более 
сложные задачи, чем отличается от уже существующих языков. Ларри активно
 использует LALR — насколько известно автору, чаще, чем кто-либо до или 
после него.</p><h3 style="text-align: center;">&nbsp;1991</h3><p>Джуп 
Лео (Joop Leo) обнаруживает способ ускорить правосторонние рекурсии в 
алгоритме Эрли. Алгоритм Лео является линейным практически для любой: 
как однозначной, так и&nbsp;неоднозначной грамматики, представляющей 
практический интерес. Аппаратное обеспечение в 1991 на шесть порядков 
быстрее, чем в 1968 году, так что вопрос учёта системных ресурсов стал 
не столь важен. Однако, если дело касается скорости, то выигрывает 
алгоритм Эрли. Алгоритм Лео оказался важным открытием, но его 
практическая реализация появится лишь через 20 лет.</p><h3 style="text-align: center;">1990-е</h3><p>Алгоритм
 Эрли забыт. Все приверженцы LALR довольны, не так ли? Нет. Пользователи
 LALR делают неприятные открытия. В то время как LALR автоматически 
генерирует свои анализаторы, их отладка настолько трудна, что проще 
написать парсер самому. После отладки их LALR анализаторы при правильных
 входных данных работают быстро. Но почти все, что они говорят 
пользователям о некорректных входных данных — лишь сообщение о неверном 
формате без указания дополнительной информации. По словам Ларри, LALR 
«быстр, но глуп».</p><h3 style="text-align: center;">2000</h3><p>Ларри 
Уолл принимает решение о радикальном переопределении Perl — издании Perl
 6. Он&nbsp;даже не рассматривает вопрос о повторном использовании LALR.</p><h3 style="text-align: center;">2002</h3><p>Эйкок
 (Aycock) и Хоспул (Horspool) опубликовали результаты своих опытов по 
созданию быстрого, практичного парсера Эрли. Однако при этом не 
использовалось улучшение, предложенное Джупом Лео — они, кажется, не 
знают о нем. Их собственный метод ускорения ограничен в своих 
показателях и сложности, которые он несет с собой, они могут быть даже 
контрпродуктивными при оценке времени. Но в этой работе ценным оказалось
 решение ошибки правила нулевой длины. И на этот раз оно не требует 
никакого дополнительного учета системных ресурсов.</p><h3 style="text-align: center;">2006</h3><p>GNU
 объявляет, что был переписан парсер компилятора GCC. В течение трех 
десятилетий, компиляторы языка C промышленного флагмана использовали 
LALR в качестве парсера — доказательство утверждения, что LALR и 
серьезный алгоритм&nbsp;эквивалентны. Теперь GNU заменяет LALR 
технологией, которую тот заменил четверть века назад: рекурсивным 
спуском.</p><h3 style="text-align: center;">&nbsp;С 2000 и до сегодняшнего дня</h3><p>С
 отступлением от LALR приходит крах престижа теории синтаксического 
анализа. Спустя полтора века, мы пришли к тому, с чего начали. Если вы 
возьмете оригинальный алгоритм Ned Irons 1961 года, измените имена и 
даты и переведете код из смеси ассемблера и ALGOL в Haskell, то вы бы 
легко смогли выпустить его в наши дни и представить как новый и 
революционный подход.</p><h3 style="text-align: center;">Парсер Marpa</h3><p>Оригинальное,
 давно заброшенное представление алгоритма Эрли —&nbsp;эффективный, 
практичный, общий и синтаксически-управляемый парсер — теперь, по сути, 
вполне возможно применять на практике. Все кусочки мозаики встали на 
свои места.</p><p>Эйкок и Хоспул решили проблему правила нулевой длины. 
Джуп Лео разработал ускорение для правосторонней рекурсии. И вопрос 
учета системных ресурсов разрешился сам по себе: машинные операции в 
настоящее время в миллиард раз быстрее, чем в 1968 году, и скорость, 
вероятно, уже не столь значима — в настоящее время главной проблемой 
стали кэш-промахи.</p><p>Но в то же время как разрешились проблемы 
оригинального алгоритма Эрли, появился новый метод. С таким же мощным, 
как алгоритм Эрли, синтаксически-управляемый подход будет работать 
намного эффективнее, чем с левосторонним парсером. В настоящее время не 
так много программистов используют чисто декларативный парсер из-за 
печального опыта работы с LALR. Как говорится, раз обожжешься, другой 
раз остережешься.</p><p>Чтобы зарекомендовать себя в IT-сообществе Marpa
 необходимо осуществлять не только декларативный, но и процедурный 
синтаксический анализ. Так Marpa позволяет пользователю указывать 
события — вхождения символов и правил&nbsp;— во время которых работа 
декларативных алгоритмов приостанавливается. В это время приложение 
может вызвать процедурную логику и продолжить пошагово продвигаться от 
токена к токену. Процедурная логика позволяет в любой момент вернуться к
 синтаксически-управляемому анализу. В таблицах Эрли сохраняются все 
данные о состоянии: все правила и все 
возможные&nbsp;ожидаемые&nbsp;символы распознаются при анализе&nbsp;во 
всех возможных вариантах.&nbsp;В настоящее время&nbsp;алгоритм Эрли 
более эффективен при разработки процедурной логики, чем рекурсивный 
спуск.<br> <sub><br> </sub></p><p style="text-align: right;">Перевод статьи <a title="Parsing: a timeline" href="http://jeffreykegler.github.io/Ocean-of-Awareness-blog/individual/2014/09/chron.html" target="_blank">«Parsing: a timeline»</a></p> <footer class="entry-meta clearfix"><ul><li><a href="http://tproger.ru/tag/parsing/" rel="tag">Синтаксический анализ</a></li></ul> </footer></div></div> <span class="vcard" style="display: none;"> <span class="fn"> <a href="http://tproger.ru/author/tproger/" class="author">Типичный программист</a> </span> </span> </article><div class="author-meta box"><div class="author-header" style="background-image:url(http://cdn.tproger.ru/wp-content/uploads/2015/02/tp-bg-desktop.png); background-size:cover;"><div class="author-image"> <img src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/avatar.png"></div></div><div class="author-body"> <span class="vcard author"><h2> <span class="fn"> <a href="http://tproger.ru/author/tproger/">Типичный программист</a> </span></h2><p></p> </span></div></div></div> <aside id="side-bar" class="span4 widget-area"><div id="search-2" class="box widget_search"><form action="http://tproger.ru/" method="get" class="searchform" role="search"><fieldset> <a href="#"><i class="icon-search-1"></i></a> <input name="s" placeholder="Поиск" type="text"></fieldset></form></div><div id="recent-posts-2" class="box widget_recent_entries"><h3 class="widget-head">Свежие записи</h3><ul><li> <a href="http://tproger.ru/translations/parsing-a-timeline/">История синтаксического анализа</a></li><li> <a href="http://tproger.ru/translations/create-a-hockey-game-ai-using-steering-behaviors-defense/">Написание ИИ для хоккея. Часть 3</a></li><li> <a href="http://tproger.ru/translations/learn-basic-c-coding-rules-from-open-source-projects/">Учимся правильно оформлять код на C на примере open source проектов</a></li><li> <a href="http://tproger.ru/problems/working-of-the-virtual-functions-in-c-plus-plus/">Работа виртуальных функций в C++</a></li><li> <a href="http://tproger.ru/problems/can-you-swim-faster-in-water-or-syrup/">Где вы будете плыть быстрее — в воде или сиропе?</a></li></ul></div><div id="bl_html-5" class="box box bl_html"><div class="widget-body"><div style="width: 340px; background: none repeat scroll 0% 0% transparent; height: 290px;" class="vk_group" id="vk_groups"><iframe style="overflow: hidden; height: 290px;" id="vkwidget1" scrolling="no" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/widget_community.htm" name="fXD8342f" frameborder="0" height="200" width="340"></iframe></div></div></div><div id="tag_cloud-3" class="box widget_tag_cloud"><h3 class="widget-head">Темы</h3><div class="tagcloud"><a href="http://tproger.ru/tag/api/" class="tag-link-15" title="1 запись" style="font-size: 8pt;">API</a> <a href="http://tproger.ru/tag/assembler/" class="tag-link-44" title="2 записи" style="font-size: 11.405405405405pt;">Assembler</a> <a href="http://tproger.ru/tag/c-and-cpp/" class="tag-link-35" title="10 записей" style="font-size: 22pt;">C и C++</a> <a href="http://tproger.ru/tag/java/" class="tag-link-26" title="2 записи" style="font-size: 11.405405405405pt;">Java</a> <a href="http://tproger.ru/tag/linux/" class="tag-link-50" title="2 записи" style="font-size: 11.405405405405pt;">Linux</a> <a href="http://tproger.ru/tag/opensource/" class="tag-link-51" title="4 записи" style="font-size: 15.567567567568pt;">OpenSource</a> <a href="http://tproger.ru/tag/seo/" class="tag-link-53" title="1 запись" style="font-size: 8pt;">SEO</a> <a href="http://tproger.ru/tag/web/" class="tag-link-54" title="2 записи" style="font-size: 11.405405405405pt;">Web</a> <a href="http://tproger.ru/tag/algorithms/" class="tag-link-24" title="5 записей" style="font-size: 17.081081081081pt;">Алгоритмы</a> <a href="http://tproger.ru/tag/safe-code/" class="tag-link-41" title="1 запись" style="font-size: 8pt;">Безопасный код</a> <a href="http://tproger.ru/tag/%d0%b2%d0%b8%d1%80%d1%82%d1%83%d0%b0%d0%bb%d0%b8%d0%b7%d0%b0%d1%86%d0%b8%d1%8f/" class="tag-link-64" title="1 запись" style="font-size: 8pt;">Виртуализация</a> <a href="http://tproger.ru/tag/brain-teasers/" class="tag-link-38" title="5 записей" style="font-size: 17.081081081081pt;">Головоломки</a> <a href="http://tproger.ru/tag/for-beginners/" class="tag-link-40" title="3 записи" style="font-size: 13.675675675676pt;">Для начинающих</a> <a href="http://tproger.ru/tag/%d0%b7%d0%b0%d0%b4%d0%b0%d1%87%d0%b8-%d0%bf%d0%be%d0%b2%d1%8b%d1%88%d0%b5%d0%bd%d0%bd%d0%be%d0%b9-%d1%81%d0%bb%d0%be%d0%b6%d0%bd%d0%be%d1%81%d1%82%d0%b8/" class="tag-link-58" title="3 записи" style="font-size: 13.675675675676pt;">Задачи повышенной сложности</a> <a href="http://tproger.ru/tag/%d0%b7%d0%b0%d0%b4%d0%b0%d1%87%d0%b8-%d1%83%d0%bc%d0%b5%d1%80%d0%b5%d0%bd%d0%bd%d0%be%d0%b9-%d1%81%d0%bb%d0%be%d0%b6%d0%bd%d0%be%d1%81%d1%82%d0%b8/" class="tag-link-57" title="1 запись" style="font-size: 8pt;">Задачи умеренной сложности</a> <a href="http://tproger.ru/tag/internet/" class="tag-link-2" title="1 запись" style="font-size: 8pt;">Интернет</a> <a href="http://tproger.ru/tag/success-story/" class="tag-link-52" title="2 записи" style="font-size: 11.405405405405pt;">История успеха</a> <a href="http://tproger.ru/tag/good-hack/" class="tag-link-46" title="3 записи" style="font-size: 13.675675675676pt;">Красивый хак</a> <a href="http://tproger.ru/tag/best-practice/" class="tag-link-62" title="4 записи" style="font-size: 15.567567567568pt;">Лучшая практика</a> <a href="http://tproger.ru/tag/arrays-and-strings/" class="tag-link-27" title="1 запись" style="font-size: 8pt;">Массивы и строки</a> <a href="http://tproger.ru/tag/math-and-probability/" class="tag-link-39" title="1 запись" style="font-size: 8pt;">Математика и теория вероятностей</a> <a href="http://tproger.ru/tag/low-level-coding/" class="tag-link-45" title="5 записей" style="font-size: 17.081081081081pt;">Низкоуровневое программирование</a> <a href="http://tproger.ru/tag/%d0%be%d0%b1%d1%83%d1%87%d0%b5%d0%bd%d0%b8%d0%b5-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8e/" class="tag-link-65" title="1 запись" style="font-size: 8pt;">Обучение программированию</a> <a href="http://tproger.ru/tag/%d0%be%d0%bf%d0%b5%d1%80%d0%b0%d1%86%d0%b8%d0%be%d0%bd%d0%bd%d1%8b%d0%b5-%d1%81%d0%b8%d1%81%d1%82%d0%b5%d0%bc%d1%8b/" class="tag-link-55" title="1 запись" style="font-size: 8pt;">Операционные системы</a> <a href="http://tproger.ru/tag/optimization/" class="tag-link-67" title="2 записи" style="font-size: 11.405405405405pt;">Оптимизация</a> <a href="http://tproger.ru/tag/bit-manipulation/" class="tag-link-30" title="1 запись" style="font-size: 8pt;">Поразрядная обработка</a> <a href="http://tproger.ru/tag/threads-and-locks/" class="tag-link-36" title="1 запись" style="font-size: 8pt;">Потоки и блокировки</a> <a href="http://tproger.ru/tag/gamedev/" class="tag-link-68" title="3 записи" style="font-size: 13.675675675676pt;">Разработка игр</a> <a href="http://tproger.ru/tag/retro/" class="tag-link-48" title="1 запись" style="font-size: 8pt;">Ретро</a> <a href="http://tproger.ru/tag/parsing/" class="tag-link-69" title="1 запись" style="font-size: 8pt;">Синтаксический анализ</a> <a href="http://tproger.ru/tag/sorting-and-searching/" class="tag-link-32" title="1 запись" style="font-size: 8pt;">Сортировка и поиск</a> <a href="http://tproger.ru/tag/testing/" class="tag-link-34" title="2 записи" style="font-size: 11.405405405405pt;">Тестирование</a> <a href="http://tproger.ru/tag/%d1%8f%d0%b7%d1%8b%d0%ba%d0%b8-%d0%bf%d1%80%d0%be%d0%b3%d1%80%d0%b0%d0%bc%d0%bc%d0%b8%d1%80%d0%be%d0%b2%d0%b0%d0%bd%d0%b8%d1%8f/" class="tag-link-56" title="1 запись" style="font-size: 8pt;">Языки программирования</a></div></div> </aside></div></div> <footer id="colophon" class="site-footer" role="contentinfo"><div class="container"><div class="row-fluid" id="footer-body"><div id="text-5" class="span6 widget_text"><div class="textwidget"><div style="padding-top:4px"><a class="footer_a" href="http://tproger.ru/translations/parsing-a-timeline/about">О проекте</a><a class="footer_a" href="http://tproger.ru/translations/parsing-a-timeline/about">Реклама</a><a class="footer_a" href="mailto:admin@tproger.ru">admin@tproger.ru</a></div></div></div><div id="text-7" class="span6 widget_text"><div class="textwidget"><a href="http://vk.com/tproger"><img title="ВКонтакте" alt="vk" class="social_b" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/vk.png"></a><a href="http://twitter.com/tproger"><img title="Твиттер" alt="twitter" class="social_b" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/tw.png"></a><a href="http://tproger.ru/rss"><img title="RSS" alt="rss" class="social_b" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/rs.png"></a></div></div></div></div> </footer></div> <script src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/watch.js" async="" type="text/javascript"></script><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter27485085 = new Ya.Metrika({id:27485085, webvisor:true, clickmap:true, trackLinks:true, accurateTrackBounce:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="//mc.yandex.ru/watch/27485085" style="position:absolute; left:-9999px;" alt="" /></div></noscript> <script type="text/javascript" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/jquery.js"></script><script type="text/javascript" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/openapi.js"></script><script type="text/javascript" defer="defer" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/autoptimize_18c735eab81cf5a958a8633ff327fcb2.js"></script><script type="text/javascript" src="%D0%A2%D0%B8%D0%BF%D0%B8%D1%87%D0%BD%D1%8B%D0%B9%C2%A0%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82%20%E2%80%93%20%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F%20%D1%81%D0%B8%D0%BD%D1%82%D0%B0%D0%BA%D1%81%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%BE%D0%B3%D0%BE%20%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7%D0%B0_files/jquery-ui.js"></script>




<style class="ublock-postload-1ae7a5f130fc79b4fdb8a4272d9426b5">#content > #center > .dose > .dosesingle,
#content > #right > .dose > .dosesingle
{display:none !important;}</style></body></html>
<!-- Dynamic page generated in 0.207 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-02-22 07:03:25 -->
<!-- Compression = gzip -->
<!-- super cache -->