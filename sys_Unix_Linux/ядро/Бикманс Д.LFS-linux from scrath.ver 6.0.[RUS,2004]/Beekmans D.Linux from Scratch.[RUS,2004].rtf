{\rtf1\ansi\ansicpg1251\deff0\deflang1049\deflangfe1049\deftab708{\fonttbl{\f0\fswiss\fprq2\fcharset204{\*\fname Arial CYR;}Arial;}{\f1\froman\fprq2\fcharset204{\*\fname Times New Roman CYR;}Times New Roman;}{\f2\fmodern\fprq1\fcharset204{\*\fname Courier New CYR;}Courier New;}}{\info
{\title Linux From Scratch}
{\author Gerard Beekmans }
}{\fet0 \ftnbj \ftnrstpg \ftnnar}{\stylesheet
{\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0  Normal;}
{\s1 \qc\snext0\b\f0\fs32\fi0\li0\ri0  heading 1;}
{\s2 \qc\snext0\b\f0\fs28\fi0\li0\ri0  heading 2;}
{\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0  heading 3;}
{\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0  heading 4;}
{\s5 \qc\snext0\i\fs24\f1\b\fi0\li0\ri0  heading 5;}
{\s6 \qc\snext0\s6\f1\b\fs24\fi0  heading 6;}
{\s10 \qj\snext\f1\fs22\b0\i1\li3000\fi400\ri0  Epigraph;}
{\s11 \qj\snext0\f1\fs22\b1\i0\li3000\fi400\ri0  Epigraph Author;}
{\s12 \qj\snext0\f1\fs24\b0\i1\fi567\li0\ri0  Annotation;}
{\s13 \qj\snext0\f1\fs22\b0\i0\li1134\ri600  Cite;}
{\s14 \qj\snext0\f1\fs22\b1\i1\li1701\ri600  Cite Author;}
{\s15 \ql\snext0\f1\fs24\b1\i0\li2000\ri600\sb12  Poem Title;}
{\s16 \ql\snext0\f1\fs24\b0\i0\li2000\ri600  Stanza;}
{\s17 \qj\snext0\f1\fs20\b0\i0\fi200\li0\ri0  FootNote;}
{\s18 \qj\snext\f1\fs18\b0\i1\li1500\fi400\ri0  FootNote Epigraph;}
{\s18 \qj\snext0\f1\fs18\b1\i0\li1500\fi400\ri0  FootNote Epigraph Author;}
{\s19 \ql\snext0\f1\fs18\b0\i0\li500\ri600  FootNote Stanza;}
{\s20 \qj\snext0\f1\fs18\b0\i0\li300\ri600  FootNote Cite;}
{\s21 \qj\snext0\f1\fs18\b1\i1\li350\ri600  FootNote Cite Author;}
{\s22 \ql\snext0\f1\fs20\b1\i0\li2000\ri600\sb12  FootNote Poem Title;}

}\paperw11906\paperh16838\margl1417\margr850\margt1134\margb1134
\s1 \qc\snext0\b\f0\fs32\fi0\li0\ri0 Gerard Beekmans \par
\s1 \qc\snext0\b\f0\fs32\fi0\li0\ri0 Linux From Scratch\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par
\s2 \qc\snext0\b\f0\fs28\fi0\li0\ri0 Пролог\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Вступление\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Я перепробовал некоторое количество дистрибутивов Linux, но ни один из них полностью не удовлетворял моим потребностям. Мне не нравилось расположение загрузочных скриптов. Мне не нравилось, как некоторые программы были сконфигурированы по умолчанию. Это мне порядком надоело. В итоге я осознал, что только построив собственную систему из исходников, я буду доволен. Я твердо решил отказаться от использования прекомпилированных пакетов и от загрузочного диска, который мог бы установить основу системы. Я буду использовать свою текущую систему Linux для построения своей собственной.\par
В то время эта сумасбродная идея казалась невыполнимой. Однако после разрешения различного рода проблем, таких как например проблемы зависимости и ошибки при компиляции, моя новая система стала полностью работоспособной. Я назвал ее Linux From Scratch < Linux из ничего >, сокращенно LFS.T\par
Надеюсь, вы получите удовольствие, работая над системой LFS.\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Кому эта книга будет интересна\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Существует ряд причин, по которым эта книга может представлять интерес. Основная из них – установка системы LFS. Возникает резонный вопрос, «Зачем мучаться, собирая Linux систему по частям, в то время как можно скачать и установить уже готовую?». Хороший вопрос.\par
Важное назначение LFS – помочь людям познать функционирование Linux изнутри. Построение системы LFS показывает, что заставляет Linux работать, как работают ее компоненты и как они друг от друга зависят. И наконец, вероятно важнее всего, как настроить Linux под себя, в соответствии со своими вкусами и потребностями.\par
Основное преимущество LFS состоит в том, что вы получаете больше контроля над системой, не полагаясь на чью\_то Linux разработку. Использую LFS, вы определяете ее структуру и ее компоненты, в частности структуру директорий и загрузочные скрипты. Вы указываете как, куда и для чего устанавливать программы.\par
Другое преимущество системы LFS – возможность собрать наиболее компактную систему. Обычные дистрибутивы зачастую устанавливают на вашем компьютере огромное количество программ, которые навряд ли будут использоваться впоследствии. Они будут просто\_напросто занимать (драгоценное?) место на диске, в то время как не составляет труда уместить систему LFS на разделе в 100MB. Все равно слишком много? Некоторые участники проекта разработали сверхкомпактную систему LFS. Была собрана система, позволяющая работу вебсервера Apache, которая занимала лишь 8 мегабайт. Дальнейшее урезание системы позволит сократить ее объем до 5 мегабайт. Вряд ли этого удастся достичь, используя обычный дистрибутив.\par
Давайте сравним дистрибутив Linux с гамбургером из закусочной, когда вы точно не знаете, что именно едите. LFS, в свою очередь, дает вам не гамбургер, а рецепт его приготовления. Внимательно изучив его, можно убрать ненужные ингредиенты и для насыщения вкуса добавить свои. Как только вы довольны рецептом, можете смело приступать к приготовлению гамбургера. На этом этапе также есть выбор: можно его поджарить на огне, во фритюре, запечь, или съесть сырым.\par
Также LFS можно сравнить с построенным домом. LFS предоставляет план дома, а строить его вам. Разумеется, можно изменять план по ходу дела.\par
Немаловажное преимущество индивидуальной системы Linux – безопасность. При компиляции всей системы из исходных кодов вы получаете возможность проверять все компоненты системы и по мере необходимости инсталлировать патчи. Больше нет необходимости ждать, пока кто\_то выпустит бинарный пакет, устраняющий дыру в безопасности системы. Нет гарантии, что новый пакет был собран корректно и адекватно устраняет проблему, если вы самостоятельно не изучили и не собрали патч. Чтобы быть уверенным в том, что дыра в безопасности устранена, необходимо установить патч вручную.\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Кому будет неинтересно читать эту книгу\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если у вас нет желания собирать Linux с нуля, тогда, наверное, эта книга не для вас. Наша цель – построение полной и практичной фундаментальной системы. Если все что вас интересует, это узнать, что происходит при загрузке системы, рекомендуем «From Power Up To Bash Prompt» HOWTO. Это руководство описывает процесс построения голой системы, похожей на нашу, но ставит задачу лишь создать систему, способную загрузиться в оболочку BASH.\par
Выбирая что читать, ясно определите для себя цель. Если вы хотите построить Linux систему, изучая ее по ходу дела, эта книга для вас. Если ваша цель сугубо познавательная, и вы не планируете создать готовую систему, тогда ваш выбор «From Power Up To Bash Prompt» HOWTO.\par
«From Power Up To Bash Prompt» HOWTO находится по адресу http://www.netspace.net.au/~gok/power2bash/.\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Организация\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Значительное число приложений включены в Часть 2 (это немного увеличивает объем книги). Это облегчает чтение. Таким образом, не нужно все время заглядывать в Приложения при прочтении Части 2. Это очень неудобно, особенно если читать txt версию книги. Данная книга поделена на разделы следующим образом:\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Часть 1 – Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Часть 1 содержит информацию о содержании книги (исправления, где скачать книгу, Changelog, списки рассылки и иную контактную информацию). Часть 1 также дает информацию о литературе, рекомендуемой для прочтения перед установкой LFS.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Часть 2 – Установка базовой системы LFS\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Часть 2 будет служить ориентиром при построении и инсталляции LFS системы. Получившаяся система будет служить фундаментом, ядром для установки остальных компонентов системы.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Часть 3 – Приложения\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Часть 3 содержит различные приложения.\par
\par
\par
\par
\s2 \qc\snext0\b\f0\fs28\fi0\li0\ri0 Часть I – Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 1. Вступление\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Благодарности\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Мы благодарим всех людей и организации за их вклад в развитие проекта Linux From Scratch:\par
Mark Stone <mstone@linux.com> за предоставление сервера linuxfromscratch.org\par
VA Linux Systems за серверное пространство и канал для сервера linuxfromscratch.org.\par
Fredrik Danerklint за зеркало se.linuxfromscratch.org.\par
Tim Jackson <tim@idge.net> за зеркало linuxfromscratch.idge.net.\par
Hagen Herrschaft <hrx@hrxnet.de> за зеркала de.linuxfromscratch.org, и за предоставление P4\_2.2GHz для проекта LFS.\par
UK Mirror Service за зеркало linuxfromscratch.mirror.ac.uk.\par
Guido Passet <guido@primerelay.net> за зеркала www.nl.linuxfromscratch.org и ftp.snt.utwente.nl.\par
Timothy Bauscher <timothy@linuxfromscratch.org> за помощь в редактировании этой книги.\par
Mark Hymers <markh@linuxfromscratch.org> за помощь в редактировании этой книги.\par
Marc Heerdink <marc_heerdink@softhome.net> за помощь в редактировании этой книги.\par
DREAMWVR.COM за предоставление ресурсов проекту LFS и другим подпроектам, связанным с ним.\par
Jan Niemann <jan.niemann@tu.bs.de> за зеркало www.de.linuxfromscratch.org mirror.\par
Torsten Westermann <westermann@linux\_provider.net> за зеркало lfs.linux\_provider.net mirror.\par
Ian Chilton <ian@ichilton.co.uk> за зеркала www.us.linuxfromscratch.org и www.linuxfromscratch.co.uk.\par
Dag Stenstad <dag@stenstad.net> за предоставление зеркала www.no.linuxfromscratch.org, и Ian Chilton <ian@ichilton.co.uk> за его администрирование.\par
Antonin Sprinzl <Antonin.Sprinzl@tuwien.ac.at> за зеркало www.at.linuxfromscratch.org.\par
Jason Andrade <jason@dstc.edu.au> за зеркало www.au.linuxfromscratch.org.\par
Ian Cooper <ian@wpi.edu> за зеркало www.us2.linuxfromscratch.org.\par
VA Linux Systems , которые от имени Linux.com, предоставили рабочую станцию VA Linux 420 (бывшая StartX SP2) для проекта.\par
Johan Lenglet <johan@linuxfromscratch.org> за осуществление руководства проекта перевода LFS на французский язык.\par
Jesse Tie\_Ten\_Quee highos@linuxfromscratch.org за предоставление пишущего привода Yamaha CDRW 8824E.\par
O'Reilly за предоставление книг по SQL и PHP.\par
Robert Briggs за предоставление доменов linuxfromscratch.org linuxfromscratch.com.\par
Frank Skettino <bkenoah@oswd.org> из OSWD за первоначальный дизайн вебсайта LFS.\par
Garrett LeSage <garrett@linux.com> за создание баннера LFS.\par
Dean Benson <dean@vipersoft.co.uk> за финансовую помощь в образовании некоммерческой организации LFS.\par
Бесчисленное количество людей в различных списках рассылки LFS за советы, тестирование книги и за сообщение об ошибках.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Как мы будем работать\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Мы собираемся построить систему LFS, используя заранее установленный дистрибутив Linux, как например Debian, SuSE, Slackware, Mandrake, RedHat, и т.д. Мы будем использовать установленную систему как платформу для разработки, т.к. нам понадобится компилятор, линкер, текстовый редактор и другие средства разработки, необходимые для построения нашей системы. Обычно эти инструменты доступны по умолчанию, если выбрать опцию «development» при инсталляции дистрибутива Linux.\par
После скачивания необходимых для построения системы LFS пакетов, мы создадим раздел Linux native и файловую систему на нем. Там будет скомпилирована и установлена система LFS.\par
Затем, в Главе 5, мы опишем процесс инсталляции различных пакетов, которые сформируют среду разработки, которую мы используем для построения самой системы и для решения проблемы зависимостей. Например, для сборки нового компилятора необходим компилятор, а для установки оболочки необходима оболочка. Пакеты в этой главе будут слинкованы статически.\par
Использование статических ссылок позволяет нам избежать необходимости в наличии библиотек на момент завершения сборки. Собранная программа самодостаточна, т.к. части программы, которые обычно находятся в библиотеках, в нашем случае копируются из библиотек и вставляются в программу. Обычно программы компилируются с использованием динамических ссылок. Это позволяет сэкономить место на диске и повышает эффективность многих программ. В Главе 5 мы используем статические ссылки, т.к. теоретически мы перемещаем нашу систему разработки в виртуальную среду, где указанные библиотеки отсутствуют. Если скомпилировать программы на данном этапе с динамическими ссылками, то средства разработки не будут работать. Так как необходимые библиотеки предоставлены нам установленным дистрибутивом Linux, цель Главы 5 – создание среды разработки, в которой эти библиотеки не требуются, что делает эту среду независимым дистрибутивом.\par
В Главе 6 мы скомпилируем и инсталлируем конечную систему. Мы используем программу chroot, для того, чтобы войти в виртуальную среду и запустить оболочку, для которой корневой каталог будет тот раздел, куда мы установили программы из Главы 5. Это похоже на то, когда при перезагрузке системы мы даем указание ядру монтировать раздел LFS как корневой. Почему мы используем chroot вместо того, чтобы перезагрузиться? Дело в том, что создание загрузочной системы LFS со статическими ссылками подразумевает выполнение дополнительных шагов, которые сейчас излишни. А также мы хотим иметь возможность использовать наш базовый дистрибутив во время установки LFS. Пока компилируется LFS, вы сможете переключиться в другую виртуальную консоль и сессию Х и заняться своими делами.\par
Когда все пакеты из Главы 6 проинсталлированы, Главы 7, 8 и 9 опишут завершающую стадию установки. Следуя указаниям Главы 7, мы напишем загрузочные скрипты. С помощью Главы 8 мы скомпилируем ядро Linux и установим загрузчик. Глава 9 содержит дополнительные указания по доводке системы после прочтения книги. И, наконец, можно будет перезагрузить систему и начать использовать LFS.\par
Это краткое изложение процесса установки. Более конкретную информацию вы можете найти в соответствующих главах и описаниях программных пакетов. Если сейчас вам что\_то непонятно, ничего страшного. Скоро все приобретет смысл.\par
Прочтите Главу 2 внимательно. Она объясняет некоторые важные моменты, необходимые для понимания перед тем, как приступить к Главе 5 и далее.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Условные обозначения, используемые в книге\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для облегчения понимания книги, ознакомьтесь с условными обозначениями, используемыми в дальнейшем:\par
\b ./configure –prefix=/usr\b0  \par
Текст такого формата предназначен для набора в командной строке в точности как на экране, помимо случаев, когда даны иные указания. Также он используется в пояснительных разделах для определения команды, о которой идет речь.\par
install\_info: unknown option `–dir\_file=/mnt/lfs/usr/info/dir'\par
Текст такого формата (с фиксированной шириной) показывает вывод на экране, как результат выполнения той или иной команды. Также он используется для обозначения имени файла, например /etc/lilo.conf.\par
\i Emphasis\i0  \par
Текст такого формат имеет несколько назначений в книге. В основном он используется для подчеркивания наиболее важных моментов, а также для примеров.\par
http://www.linuxfromscratch.org/\par
Текст такого формата используется для ссылок, как по книге, так и для ссылок на внешние ресурсы – на руководства, вебсайты и т.д.\par
\b cat > $LFS/etc/group << «EOF»\b0  \par
root:x:0:\par
bin:x:1:\par
......\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Данный раздел используется в основном для создания конфигурационных файлов. Первая команда (выделенная жирным шрифтом) создает файл $LFS/etc/group, наполняя его строчками до EOF. В командной строке данная секция печатается в точности как на экране.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Версия книги\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Перед вами Книга LFS версии 4.0 от 5 октября 2002 г. В случае, если данная версия старше месяца, наверняка обновленная версия книги доступна для скачивания с нижеперечисленных зеркал.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Зеркала\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Ниже приведен список HTTP и FTP зеркал по состоянию на 10 апреля 2002 г. Для обновления этой информации, посетите http://www.linuxfromscratch.org.\par
Зеркала HTTP\par
Северная Америка\par
Fremont, California, USA [8 Mbit] – http://www.linuxfromscratch.org/lfs/intro.shtml\par
Lufkin, Texas, USA [6 Mbit] – http://linuxfromscratch.idge.net/lfs/intro.shtml\par
Columbus, Ohio, United States [1 Mbit] – http://www.us.linuxfromscratch.org/lfs/intro.shtml\par
Европа\par
Mainz, Germany [100 Mbit] – http://lfs.linux\_provider.net/lfs/intro.shtml\par
Amsterdam, The Netherlands [100 Mbit] – http://www.nl.linuxfromscratch.org/lfs/intro.shtml\par
Oslo, Norway [100 Mbit] – http://www.no.linuxfromscratch.org/lfs/intro.shtml\par
Lancaster, United Kingdom [100 Mbit] – http://linuxfromscratch.mirror.ac.uk/lfs/intro.shtml\par
Vienna Univ. of Technology, Austria [64 Mbit] – http://www.at.linuxfromscratch.org/lfs/intro.shtml\par
Karlskrona, Sweden [10 Mbit] – http://www.se.linuxfromscratch.org/lfs/intro.shtml\par
Freising, Germany [4 Mbit] – http://www.de.linuxfromscratch.org/lfs/intro.shtml\par
Teeside, United Kingdom [256 Kbit] – http://www.linuxfromscratch.co.uk/lfs/intro.shtml\par
Австралия\par
Brisbane, Australia [155 Mbit] – http://www.au.linuxfromscratch.org/lfs/intro.shtml\par
Зеркала FTP\par
Северная Америка\par
Fremont, California, USA [FTP] [8 Mbit] – ftp://ftp.linuxfromscratch.org\par
Fremont, California, USA [HTTP] [8 Mbit] – http://ftp.linuxfromscratch.org\par
Lufkin, Texas, USA [FTP] [6 Mbit] – ftp://linuxfromscratch.idge.net/linuxfromscratch\par
Lufkin, Texas, USA [HTTP] [6 Mbit] – http://ftp.idge.net/linuxfromscratch\par
Европа\par
Univ. of Twente, The Netherlands [HTTP] [100 Mbit] – http://ftp.snt.utwente.nl/linux/lfs/\par
Univ. of Twente, The Netherlands [FTP] [100 Mbit] – ftp://ftp.snt.utwente.nl/pub/linux/lfs/\par
Oslo, Norway [FTP] [100 Mbit] – ftp://ftp.no.linuxfromscratch.org/mirrors/lfs/\par
Lancaster, United Kingdom [HTTP] [100 Mbit] – http://www.mirror.ac.uk/sites/ftp.linuxfromscratch.org/\par
Vienna Univ. of Tech., Austria [FTP] [64 Mbit] – ftp://ftp.at.linuxfromscratch.org/pub/lfs/\par
Vienna Univ. of Tech., Austria [HTTP] [64 Mbit] – http://ftp.at.linuxfromscratch.org/pub/lfs\par
Karlskrona, Sweden [FTP] [10 Mbit] – ftp://ftp.se.linuxfromscratch.org/lfs\par
Freising, Germany [HTTP] [4 Mbit] – http://ftp.de.linuxfromscratch.org/\par
Freising, Germany [FTP] [4 Mbit] – ftp://ftp.de.linuxfromscratch.org/mirrors/ftp.linuxfromscratch.org/\par
Австралия\par
Brisbane, Australia [FTP] [155 Mbit] – ftp://ftp.planetmirror.com/pub/lfs/\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Changelog\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 4.0 – 5 октября 2002 г.\par
3 октября 2002 [gerard]: Глава 06 – Linuxthreads: Вместо \b cd man\b0   используйте опцию \i –C\i0   для \b make\b0  . В этом больше смысла, и так короче.\par
29 сентября 2002 [gerard]: Глава 05 – GCC: Исправлен и заново инсталлирован старый патч nofixincludes.\par
29 сентября 2002 [markh]: Глава 05 – Bash: Правильная ссылка к предыдущему стабильному релизу Debian (potato), т.к. он не подходит к нынешнему (woody). Сообщил h2k1 на канале #lfs.\par
4.0\_RC1 – 28 сентября 2002\par
Обновления:\par
automake\_1.6.3\par
bin86\_0.16.3\par
binutils\_2.13\par
bison\_1.35\par
diffutils\_2.8.1\par
file\_3.39\par
gawk\_3.1.1\par
gcc\_3.2\par
gettext\_0.11.5\par
groff\_1.18\par
gzip\_1.2.4b.patch\par
lfs\_bootscripts\_1.10\par
linux\_2.4.19\par
MAKEDEV\_1.7\par
man\_1.5k\par
man\_pages\_1.52\par
modutils\_2.4.19\par
ncurses\_5.2\_2.patch\par
perl\_5.8.0\par
psmisc\_21\par
texinfo\_4.2\par
textutils\_2.1\par
util\_linux\_2.11u\par
Добавления:\par
ed\_0.2.patch\par
fileutils\_4.1.patch\par
gawk\_3.1.1\_2.patch\par
gcc\_3.2.patch\par
gcc\_3.2\_nofixincludes.patch\par
glibc\_2.2.5\_2.patch\par
gzip\_1.2.4b.patch\par
kbd\_1.06\_3.patch\par
man\_1.5k.patch\par
ncurses\_5.2.patch\par
procps\_2.0.7.patch\par
sh\_utils\_2.0\_hostname.patch\par
vim\_6.1.patch\par
zlib\_1.1.4\par
Удалено:\par
gzip\_1.2.4a.patch\par
kbd\_1.06\_2.patch\par
reiserfsprogs\_3.x.1b\par
28 сентября 2002 [gerard]: Глава 05 – GCC: Добавлен патч nofixincludes, чтобы предотвратить запуск этого скрипта в Главе 05. Он должен запускаться в Главе 06, для этого нужен отдельный патч.\par
28 сентября 2002 [gerard]: Глава 06 – Man: Удалена конструкция sed, теперь используется патч.\par
28 сентября 2002 [gerard]: Глава 06 – Bzip2: Удалено \i PREFIX=/usr\i0   из команды \b make install\b0  , т.к. \i PREFIX\i0   уже указывает на \i /usr\i0   по умолчанию.\par
28 сентября 2002 [gerard]: Глава 06 – Vim: Удалены записи о соответствии с FHS. Они не имеют смысла, т.к. Vim вообще не использует localstatedir.\par
28 сентября 2002 [timothy]: Применен грамматический патч от Bill Maltby. Изменен «$LFS» на «LFS», в случаях когда речь идет о переменной среды LFS.\par
23 сентября 2002 [timothy]: Применены различные грамматические патчи от Bill Maltby.\par
23 сентября 2002 [timothy]: Добавлено \b \_\b0   опции \b tar\b0   (для ясности).\par
22 сентября 2002 [timothy]: Глава 06: Применен грамматический патч от Alex.\par
21 сентября 2002 [timothy]: Глава 02: Применены различные грамматические патчи от Bill Maltby.\par
21 сентября 2002 [timothy]: Глава 06 – Zlib: \b mv\b0   общую библиотеку в /lib.\par
20 сентября 2002 [timothy]: Глава 05 – GCC: Удалена опция \b –enable\_threads=posix\b0  , т.к. компилятор С++ не собирается в данной главе.\par
18 сентября 2002 [timothy]: Глава 05 – Вступление: Удален параграф о статических ссылках, т.к. темы лучше раскрыта в разделе «Почему статические ссылки?»\par
18 сентября 2002 [timothy]: Глава 08 – Linux: Удалена команда \b cd\b0  .\par
18 сентября 2002 [timothy]: Глава 06 – Ncurses: Удалены старые пояснения команд \b mv /lib/*.a /usr/lib\b0  .\par
13 сентября 2002 [gerard]: Глава 06 – Shadow: Добавлено –libdir=/usr/lib к опциям скрипта configure. This way a proper libshadow.la is generated. Also changed the \b mv\b0   command to move all the libshadow.so* files to the /lib directory. The lib*a files are already in the /usr/lib directory.\par
September 13th, 2002 [gerard]: Chapter 06 – Man: Added another regex to the \b sed\b0   command that modifies the man.conf file. The added regex comments out the \i MANPATH /usr/man\i0   line which causes for duplicate results when using the \b whatis\b0   command\par
September 13th, 2002 [gerard]: Chapter 06: Added the \i Linux Threads Man Pages\i0   installation after the Perl installation.\par
September 12th, 2002 [gerard]: Chapter 06 – Create mtab link: Made the \b ln\b0   command an \b ln \_sf\b0   so the existing /etc/mtab file, created by the \b mount\b0   command, will be removed before re\_creating it as a symlink.\par
September 12th, 2002 [gerard]: Chapter 06 – Sh\_utils: Added the sh\_utils\_hostname patch that supresses the build of the hostname program. This is done because the hostname program from the net\_tools package is superior over this version.\par
September 12th, 2002 [gerard]: Chapter 06 – Gawk: Updated the Gawk patch. It also changes the \i DDEFPATH\i0   directory location now.\par
September 12th, 2002 [gerard]: Chapter 06 – Procps: Added patch that fixes a locale problem that makes \b top\b0   crash under certain locale settings.\par
September 12th, 2002 [timothy]: Chapter 04 – Creating a file system: Referenced alternative filesystems in BLFS.\par
September 12th, 2002 [gerard]: Removed all superfluous /usr/lib/*.so symbolic links from library installations.\par
September 12th, 2002 [gerard]: Upgraded to lfs\_bootscripts\_1.10\par
September 12th, 2002 [gerard]: Chapter 06 – Configure Sysvinit: Changed the sulogin line to \i once\i0   instead of having it respawn. This way it'll behave as expected (ie: a CTRL+D will continue instead of restart sulogin).\par
September 12th, 2002 [gerard]: Chapter 06 – GCC: Added the \i –enable\_clocale=gnu\i0   option to ensure the proper locale mode is used by the C++ libraries.\par
September 11th, 2002 [timothy]: Preface: Grammatic changes.\par
September 8th, 2002 [timothy]: Chapter 06: Applied Alex's grammar changes patch.\par
September 7th, 2002 [timothy]: Chapter 06 – Gzip: Added gzip\_1.2.4b.patch.\par
September 7th, 2002 [timothy]: Chapter 05 – Textutils: Added re_max_failures2 for old host systems.\par
September 2nd, 2002 [timothy]: Chapter 06 – Bash: Removed creation of sh symlink. Creating the bash and sh symlinks: Added /bin/bash symlink, symlinked sh to bash. Gzip, Sysvinit, Util\_Linux: Shortened cp command. Makedev: Removed /bin/bash creation and removal. Man: Modified sed statement to edit less call, so SGR will work.\par
September 1st, 2002 [timothy]: Chapter 06 – About debugging symbols: Removed info. about stripping /static. Man: Added sed statement to prevent groff from using SGR escape sequences.\par
September 1st, 2002 [timothy]: Chapter 05 – Install all software as an unprivileged user: Added $CC='gcc \_s' to omit the compilation of symbols in static packages.\par
August 30th, 2002 [timothy]: Chapter 06 – Makedev: Put rm /bin/bash after device creation. Perl: Removed information about the old patch.\par
August 30th, 2002 [timothy]: Chapter 05 – GCC: Re\_added HAVE_GAS_HIDDEN; removed –enable\___cxa\_atexit which was incorrect and not needed in this chapter; added information about the patch.\par
August 26th, 2002 [gerard]: Added a new Glibc patch and introducted a GCC patch.\par
August 26th, 2002 [gerard]: Updated to automake\_1.6.3, gcc\_3.2, groff\_1.18, makedev\_1.7, perl\_5.8.0, util\_linux\_2.11u\par
August 22nd, 2002 [timothy]: Appendix: Added missing URLs to patches.\par
August 18th, 2002 [timothy]: Chapter 05 & 06: Changed ln \_sf to ln \_s wherever possible.\par
August 18th, 2002 [timothy]: Chapter 06 – Binutils: cp libiberty.h after install, as it is needed by certain software. Shadow: added command to remove the groups program installed by Shadow because Sh\_utils installs a (better) groups program.\par
August 18th, 2002 [timothy]: Chapter 05 – Sh\_utils: Re\_added sh\_utils\_2.0.patch.\par
August 16th, 2002 [markh]: Chapter 06 – Move man\_pages to just after the kernel headers installation.\par
August 15th, 2002 [markh]: Chapter 06 – Move the MAKEDEV installation to before glibc and remove the temporary creation of /dev/null as we don't need it anymore.\par
August 15th, 2002 [timothy]: Chapter 04 – Preparing a new partition: mentioned that a swap partition can be shared between the LFS and host systems, grammatic changes.\par
August 13th, 2002 [gerard]: Chapter 06: Removed the \i –with\_curses\i0   switch from the Bash installation as it's unnecessary here.\par
August 9th, 2002 [timothy]: Updated to modutils\_2.4.19, linux\_2.4.19, gettext\_0.11.5, binutils\_2.13, textutils\_2.1.\par
August 9th, 2002 [timothy]: Chapter 06 – Vim: changed alternative editors link from hints to BLFS.\par
August 8th, 2002 [gerard]: Chapter 06 – Ncurses: removed the \i –disable\_termcap\i0   configure option. Termcap is disabled by default now, so no need for this option (left over from a long time ago when it was needed).\par
August 8th, 2002 [gerard]: Chapter 06 – Linux: Added the command \b cp include/asm\_generic /usr/include\b0  . There are programs which use the files in there, as well as headers in the asm directory may be split up in the future, and put in the asm\_generic.\par
August 8th, 2002 [gerard]: Appendix A – Gettext: added the missing program description of msgcat.\par
August 4th, 2002 [timothy]: Added zlib\_1.1.4.\par
August 3rd, 2002 [timothy]: Updated to man\_pages\_1.52, man\_1.5k, gettext\_0.11.4, modutils\_2.4.18.\par
July 29th, 2002 [timothy]: Removed Reiserfsprogs. Updated to util\_linux\_2.11t and file\_3.39.\par
July 29th, 2002 [timothy]: Chapter 04 & 05 – Creating a new partition, Introduction, Why static: grammatic changes. Diffutils, Fileutils, Grep, Texinfo: set LDFLAGS=\_static before configure instead of as an argument to make. GCC: appended HAVE_GAS_HIDDEN to auto\_host.h.\par
July 29th, 2002 [timothy]: Chapter 06 – Glibc: added –disable\_profile flag.\par
July 29th, 2002 [timothy]: Chapter 08 – Linux: added information about modules and kernel documentation.\par
July 29th, 2002 [timothy]: Chapter 09 – Rebooting the system: added a command to remove the static directory.\par
July 8th, 2002 [timothy]: Chapter 09 – Rebooting the system: Pointed to BLFS as the next step.\par
July 3rd, 2002 [timothy]: Chapter 06 – Sysvinit: Simplified the sed command and updated the installation description because init now prints «Sending processes» instead of «Sending all processes».\par
July 2nd, 2002 [markh]: Internal change – Made all patches use a &package\_patch\_version; entity and removed all hardcoding of patch versions.\par
June 30th, 2002 [timothy]: Updated to man\_pages\_1.51 and automake\_1.6.2\par
June 24th, 2002 [timothy]: Chapter 06 – Shadow, Util\_linux, LFS\_Bootscripts: Updated package contents.\par
June 23rd, 2002 [timothy]: Chapter 05 & 06 – Net\_tools, Perl, Texinfo, Autoconf, Automake, File, Libtool, Bin86, Vim, Linux, Bison, Less, Man\_pages, Groff, Bzip2, E2fsprogs, Grep, Lilo, Modutils, Procps, Psmisc, Reiserfsprogs: Updated package contents.\par
June 23rd, 2002 [timothy] Chapter 05 & 06 – M4, Bzip2, File, E2fsprogs: Added «last checked against» for uniformity. GCC: Removed i686\_specific programs.\par
June 16th, 2002 [timothy]: Chapter 06 – Gettext: Updated package contents.\par
June 14th, 2002 [timothy]: Chapter 05 & 06 – Binutils, Bzip2, Diffutils, Grep: Updated package contents. GCC: Updated description of c++filt.\par
June 13th, 2002 [timothy]: Chapter 09 – The End: Changed $LFS/etc/lfs\_4.0 to $LFS/etc/lfs and put the version number inside this file.\par
June 12th, 2002 [timothy]: Chapter 05 – GCC: Modified the build instructions and command explanations to only build the C compiler. The C++ compiler is not needed until after the second GCC build.\par
June 12th, 2002 [timothy]: Chapter 06 – Shadow: grammatic changes.\par
June 11th, 2002 [timothy]: Chapter 05 & 06 – Gawk: Created a list of package contents and descriptions. Fileutils: Removed a confusing paragraph about the fileutils patch. GCC: Updated the package contents.\par
June 11th, 2002 [timothy] All software: Updated the estimated required disk space.\par
June 9th, 2002 [markh]: Chapter 06 – Creating Directories: Changed usr,usr/local to just usr/local as we use the \_p option to mkdir which will create the usr directory anyways.\par
June 7th, 2002 [timothy] Chapter 06 – Reiserfsprogs: added a description for unpack.\par
June 7th, 2002 [timothy] Chapter 02 – How to ask for help: mentioned the FAQ.\par
June 6th, 2002 [markh] – Chapter 05 – Tidy up explanations following the /static change.\par
June 5th, 2002 [timothy]: Preface – Who would not want to read this book: applied a revised version of Scot's grammar patch.\par
June 5th, 2002 [timothy]: Chapter 09 – Rebooting the system, Lilo, Bootscripts: named the hint authors. Chapter 06 – Vim: updated the hint URL. Chapter 05 – Gawk: to avoid confusion, mentioned that the patch will be applied in Chapter 06.\par
June 3rd, 2002 [timothy] Chapter 01 – FAQ: edited to include reporting typos.\par
May 31st, 2002 [gerard] Chapter 05 – Findutils: Added the CPPFLAGS...re_max_failures fix which is needed on Glibc\_2.1 systems.\par
May 30th, 2002 [markh]: Chapter 05 & 06 – Update to binutils\_2.12.1.\par
May 30th, 2002 [markh]: Chapter 05 – Bash: Removed section about «last two commands executing anyways» because we no longer have the commands referred to there.\par
May 30th, 2002 [gerard]: Chapter 06 – Glibc: Replaced the various sed fixes with a regular patch.\par
May 30th, 2002 [gerard]: Chapter 06 – Gawk: Replaced the sed fix with a regular patch.\par
May 30th, 2002 [gerard]: Chapter 05 – Fileutils: Replaced the sed fix with a regular patch.\par
May 30th, 2002 [gerard]: Chapter 06 – Ed: Replaced the sed fix with a regular patch.\par
May 28th, 2002 [gerard]: Chapter 06 – Changing ownership: removed the explicit command to chown /lost+found. This is done by the first command now that proc isn't mounted anymore in chapter 5.\par
May 27th, 2002 [gerard]: Upgraded to ncurses\_5.2\_2.patch (this patch is smaller than the previously used one).\par
May 26th, 2002 [gerard]: Upgraded to: automake\_1.6.1, bin86\_0.16.3, file\_3.38, gawk\_3.1.1, gcc\_3.1, gettext\_0.11.2, modutils\_2.4.16, psmisc\_21 and util\_linux\_2.11r. Added gcc\_3.1 compile fix patches for ncurses, perl and vim.\par
May 26th, 2002 [gerard]: Chapter 05+06 – Binutils: Removed the tooldir setting from chapter 05\_binutils, moved its description to chapter 06\_binutils.\par
May 26th, 2002 [gerard]: Chapter 05 – Gawk & Findutils: simplified the installation by removing the libexecdir modifications. We can live with a $LFS/static/libexecdir being created. The whole $LFS/static directory is temporarily anyways, so we're not all that concerned with what it looks like.\par
May 26th, 2002 [gerard]: Chapter 06 – Creating Directories: removed the \b cd /\b0   command and changed the two \b chmod\b0   commands to use absolute paths instead.\par
May 25th, 2002 [markh]: Chapter 06 – Some minor corrections dealing with removing the $LFS variable where it isn't wanted.\par
May 23rd, 2002 [gerard]: Implemented the keep_chap5_and_chap6_sep lfs\_hint. Highlights of the change: added findutils and util\_linux to chapter 5, installed everything from chapter 5 into $LFS/static and re\_ordered the installation of packages in chapter 6 to prevent hard\_wiring the wrong path (files from $LFS/static).\par
May 23rd, 2002 [gerard]: Appendix A – E2fsprogs: Added some more descriptions.\par
May 23rd, 2002 [gerard]: Appendix A – Bin86: Added some descriptions.\par
May 23rd, 2002 [gerard]: Appendix A – Flex: Added some descriptions.\par
May 23rd, 2002 [gerard]: Appendix A – Glibc: Added some more descriptions.\par
May 18th, 2002 [gerard]: Appendix A – E2fsprogs: Added some descriptions.\par
May 18th, 2002 [gerard]: Appendix A – Glibc: Added some more descriptions.\par
May 17th, 2002 [markh]: Changed all chown X.X's to chown X:X's which is less likely to run into problems (according to info chown).\par
May 16th, 2002 [gerard]: Chapter 01 – Mirror sites: Added http interface to FTP mirror at idge.net\par
May 16th, 2002 [gerard]: Appendix A – Glibc: Added some more descriptions.\par
May 15th, 2002 [markh]: Chapter 05 – Bzip2. Changed the instructions to deal with hard links in older distros a'la the Chapter 05 gzip instructions.\par
May 11th, 2002 [markh]: Various XML fixups; mainly altering <ulink> tags to remove erroneous &#13; in the HTML output.\par
May 9th, 2002 [gerard]: Appendix A – Glibc: Filled in the missing descriptions.\par
May 6th, 2002 [gerard]: Chapter 06 – Shadow: Fixed the symlink location of vigr to /usr/sbin\par
May 2nd, 2002 [gerard]: Chapter 06 – Procps: Changed the two single quotes to two double quotes (the two single quotes can be mistaken for one double quote which will cause an error).\par
May 2nd, 2002 [gerard]: Changed the \b cd dir && ln \_sf\b0   commands to one single command (such as \b ln \_sf bash $LFS/bin/sh\b0   Same goes for \b cd dir && mv/cp\b0   constructions which are now replaced with constructions like \b mv $LFS/usr/bin/\'7bbzcat,bzip2\'7d $LFS/bin\b0  \par
May 2nd, 2002 [markh]: Removed the «Removing old NSS library files» section.\par
1 мая 2002 [gerard]: Removed all Glibc\_2.0 workarounds – gzip patch, sh\_utils patch, copying of libnss files. Also removed the \b export VAR=VALUE...unset VAR\b0   constructions and changed them to \b VAR=VALUE ./configure\b0   constructions.\par
26 апреля 2002 [marcheerdink]: Глава 06 Findutils: добавлен libexecdir=/usr/bin к команде make. Исправляет неверный путь libexecdir в updatedb.\par
25 апреля 2002 [gerard]: Глава 06 Glibc: добавлена заметка от том, что вручную можно установить только нужные локали, а не все. Для этого необходимо создать директорию /usr/lib/locale.\par
21 апреля 2002 [gerard & markh]: Обновлен пакет MAKEDEV\_1.5\par
12 апреля 2002 [markh]: Добавлена организация директорий к cvs и разделен index.xml.\par
10 апреля 2002 [marcheerdink]: Обновлены следующие пакеты: bison\_1.35, diffutils\_2.8.1, texinfo\_4.2, util\_linux\_2.11q\par
9 апреля 2002 [marcheerdink]: Добавлено –disable\_perl\_regexp к configure\_опциям grep, чтобы избежать ссылки на несуществующую статическую библиотеку pcre.\par
8 апреля 2002 [gerard]: Добавлено зеркало http://ftp.de.linuxfromscratch.org (в дополнение к ftp://ftp.de).\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Списки рассылки и архивы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 На сервере linuxfromscratch.org размещены следующие списки рассылки общего доступа:\par
lfs\_support\par
lfs\_dev\par
lfs\_announce\par
lfs\_security\par
lfs\_book\par
lfs\_chat\par
alfs\_discuss\par
blfs\_dev\par
blfs\_book\par
blfs\_support\par
lfs\_support\par
Список рассылки lfs\_support предоставляет поддержку пользователям, собирающим систему LFS в рамках данной книги. Поддержку по дальнейшим этапам работы с LFS ищите в списке blfs\_support.\par
lfs\_dev\par
В списке рассылки lfs\_dev обсуждаются вопросы, строго связанные с книгой LFS. Если у вас есть проблемы с книгой, если вы хотите сообщить об ошибке в ней, или хотите дать совет по улучшению данной книги, этот список для вас.\par
Все просьбы о поддержке направляйте в lfs\_support или blfs\_support.\par
lfs\_announce\par
lfs\_announce – модерируемый список. На него можно подписаться, но нельзя отправлять сообщения. Он используется в основном для сообщения о выходе новых стабильных релизов. Список lfs\_dev сообщает о выходе нестабильных релизов, релизов в разработке. Если вы подписались на lfs\_dev, особого смысла подписываться на lfs\_announce нет, т.к. все сообщения из него дублируются в lfs\_dev..\par
lfs\_security\par
В списке lfs\_security обсуждаются проблемы безопасности. Все вопросы по безопасности системы и отдельных пакетов направляйте в этот список.\par
lfs\_book\par
Список lfs\_book используют редакторы Книги LFS для координирования вопросов эксплуатации, например проблемы XML и т.д. Однако дискуссии о том, что добавлять и что удалять из книги, проводятся в списке lfs\_dev.\par
lfs\_chat\par
Список lfs\_chat – место отдыха членов группы LFS (вы один из них) и разной болтовни, необязательно связанной с компьютерами. Оффтопиков не существует.\par
alfs\_discuss\par
Список alfs\_discuss обсуждает развитие Автоматизированной Linux From Scratch, сокращенно ALFS. Цель этого проекта – создание автоматического инсталлятора системы LFS, позволяющего значительно ускорить процесс компиляции, т.к. не нужно вводить команды вручную..\par
blfs\_dev\par
Список blfs\_devобсуждает развитие книги BLFS (Beyond <После>LFS). Направляйте сообщения об ошибках и ваши советы по улучшению Книги BLFS в этот список.\par
Просьбы помочь со сборкой программ вне книги LFS направляйте в список blfs\_support.\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s16 \ql\snext0\f1\fs24\b0\i0\li2000\ri600 blfs\_book\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Список blfs\_book используют редакторы Книги BLFS для координирования вопросов эксплуатации, например проблемы XML и т.д. Однако дискуссии о том, что добавлять и что удалять из книги, проводятся в списке blfs\_dev.\par
blfs\_support\par
Список blfs\_support предоставляет помощь по установке программ, не вошедших в Книгу LFS. Разрешается обсуждать любые программы, не являющиеся базовыми программами системы LFS.\par
Архивы\par
Все списки рассылки архивируются и могут быть просмотрены на http://archive.linuxfromscratch.org/mail\_archives или скачены с http://ftp.linuxfromscratch.org/mail\_archives или ftp://ftp.linuxfromscratch.org/mail\_archives.\par
Как отправить сообщение в список\par
Совсем необязательно подписываться на список для того, чтобы отправить в него сообщение. В таком случае, не забудьте указать в сообщении, что вы не подписаны на этот список рассылки, чтобы при ответе участники списка указали ваш адрес в поле CC:. (это позволит вам получать ответы на ваше сообщение).\par
Адрес списка рассылки выгляди следующим образом: \i listname@linuxfromscratch.org\i0   где \i listname\i0   – один из списков, описанных выше. Например, \i lfs\_dev@linuxfromscratch.org, lfs\_support@linuxfromscratch.org and blfs\_support@linuxfromscratch.org\i0  .\par
Как подписаться на список рассылки\par
Для того чтобы подписаться на список рассылки, пошлите email по адресу listar@linuxfromscratch.org. В поле заголовка впишите \i subscribe listname\i0  , где \i listname\i0   – имя списка.\par
Если вы хотите подписаться сразу на несколько списков рассылки, оставьте поле заголовка сообщения пустым, а команды перенесите в тело сообщения, например:\par
To: listar@linuxfromscratch.org Subject: subscribe lfs\_dev subscribe blfs\_support subscribe alfs\_discuss\par
После отправки сообщения, программа Listar пришлет вам письмо с просьбой подтвердить подписку. После отправки подтверждения подписки, Listar вышлет вам письмо, уведомляющее о том, что вы подписаны на соответствующий список рассылки, и приветствие от данного списка.\par
Как отменить подписку\par
Для отмены подписки пошлите email по адресу listar@linuxfromscratch.org. В поле заголовка введите \i unsubscribe listname\i0  .\par
Если вы хотите отменить подписку нескольких списков рассылки, оставьте поле заголовка сообщения пустым, а команды перенесите в тело сообщения, например:\par
To: listar@linuxfromscratch.org Subject: unsubscribe lfs\_dev unsubscribe blfs\_support unsubscribe alfs\_discuss\par
После отправки сообщения, программа Listar пришлет вам письмо с просьбой подтвердить отмену подписки. После отправки подтверждения отмены подписки, Listar вышлет вам письмо, уведомляющее о том, что подписка аннулирована.\par
Другие режимы списка\par
Для установления режимов списка, пользователь должен отправить email по адресу listar@linuxfromscratch.org. Режимы задаются командами, прописанными в поле заголовка сообщения.\par
Команда \i Set command\i0   включает режим. Команда \i Unset command\i0   его выключает.\par
Слово «listname» в примере, приведенном ниже, следует заменить на имя списка, для которого необходимо установить режим. Если необходимо установить несколько режимов (для одного или нескольких списков) с помощью одного сообщения, оставьте заголовок сообщения пустым и перенесите все команды в тело сообщения.\par
Режим обзора\par
Включить режим: \i set listname digest\i0   Выключить режим: \i unset listname digest\i0  \par
После подписки на список рассылки, пользователь может включить режим обзора. В данном случае вместо получения отдельных сообщений из списка, пользователь будет ежедневно получать email, содержащий все сообщения списка за этот день.\par
Существует другой режим обзора, digest2. В этом случае, пользователь будет получать как обзорное сообщение, так и все сообщения списка отдельно. Режим включается командой set listname digest2, и выключается командой unset digest2.\par
Режим «Vacation»\par
Включить режим: \i set listname vacation\i0   Выключить режим \i unset listname vacation\i0  \par
В случае вашего временного отсутствия, вы вероятно не захотите получать сообщения от списка рассылки. Для этого, вам не обязательно отменять подписку, вы можете включить режим «vacation». В отличие от аннулирования подписки, данный режим позволит вам избежать необходимости подтверждать подписку и отмену от подписки.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Сервер новостей\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Все списки рассылки linuxfromscratch.org доступны также через сервер NNTP. Все сообщения, посланные в список, копируются в соответствующую группу новостей и наоборот.\par
Адрес сервера новостей – \i news.linuxfromscratch.org\i0  .\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 FAQ\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы столкнетесь с трудностями, если у вас возникнут вопросы или вы найдете опечатку в книге, обратитесь к странице ЧАсто задаваемых ВОпросов.\par
http://www.linuxfromscratch.org/faq/\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Как с нами связаться\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Убедительная просьба направлять все сообщения в списки рассылки. См. Глава 1 – Списки рассылки и архивы для получения информации об имеющихся списках.\par
Если вам необходимо связаться с Герардом Бикмансом лично, пишите на gerard@linuxfromscratch.org\par
Прим. переводчика – Все вопросы по переводу просьба направлять Денису Каледину, hannibal@nline.ru\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 2. Важная информация\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Про $LFS\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Убедительная просьба прочесть этот раздел внимательно: переменная LFS будет часто использоваться далее. $LFS всегда необходимо заменять на путь директории, где монтирован раздел LFS. Как создать такой раздел и куда его монтировать, описано в Главе 4. Допустим, например, что раздел LFS монтирован на /mnt/lfs.\par
Когда вас просят выполнить \b ./configure –prefix=$LFS/static\b0   , на самом деле вам необходимо исполнить \b ./configure –prefix=/mnt/lfs/static\b0  .\par
Необходимо запомнить, что так следует поступать везде, где вы видите переменную $LFS – как в командной строке, так и в создаваемых или редактируемых файлах.\par
Однако можно существенно облегчить задачу. Для того чтобы использовать $LFS, а не прописывать каждый раз путь к директории, создайте переменную среды LFS следующей командой:\par
\b export LFS=/mnt/lfs\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь, если вас просят выполнить команду \b ./configure –prefix=$LFS/static\b0  , можно печатать как есть, не заменяя $LFS на путь к директории. После нажатия клавиши Enter, оболочка сама подставит вместо $LFS значение этой переменной, как мы ее определили командой \b export\b0  .\par
Если вы собираетесь использовать $LFS, никогда не забывайте задавать переменную LFS. В случае если она не задана, оболочка проигнорирует $LFS и выполнит остаток команды. Например, если выполнить команду \b echo «root:x:0:0:root:/root:/bin/bash» > $LFS/etc/passwd\b0   , не задав переменную LFS, оболочка заново создаст файл /etc/passwd. Иными словами, уничтожит текущую базу паролей системы.\par
Для того чтобы всегда быть уверенным в том, что переменная LFS задана, добавьте ее в файлы /root/.bash_profile и /root/.bashrc. Теперь каждый раз когда вы входите в систему под учетной записью root, или получаете его права с помощью команды \b su\b0   , переменная LFS будет задана автоматически.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Про SBU\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 SBU или \i Static Bash Units\i0   <Статические единицы Bash> используются для определения времени, необходимого для компиляции программы. Почему мы не используем привычные единицы времени, такие как секунды, минуты, часы?\par
Проблема заключается в том, что использование привычных единиц времени в данном случае дает слишком неточные результаты. Люди инсталлируют LFS на множестве различных систем, и время, затраченное на компиляцию определенной программы будет разным для каждой системы. На одной системе пакет компилируется за 20 минут, на другой системе тот же самый пакет собирается за 3 дня (заметьте, это не преувеличение). Поэтому мы решили использовать \i SBU\i0  .\par
Как это работает: первым пакетом, который вам будет предложено скомпилировать в Главе 5 будет оболочка Bash со статическими ссылками. Время, потраченное на его компиляцию, будет взято за базис и названо SBU. Время компиляции других программ попадет в прямую зависимость от времени, затраченного на компиляцию Bash. К примеру, компиляция GCC\_3.2 занимает примерно 9.5 SBU, и проверено, что это число довольно постоянно на разных системах. Теперь мы умножим 9.5 на число секунд, потраченных на компиляцию Bash (значение SBU), и получим приблизительное время в секундах, необходимое для компиляции GCC.\par
Примечание: Использование SBU не подходит для многопроцессорных систем. В случае если вы счастливый обладатель такого компьютера, время компиляции, подсчитанное с помощью SBU будет неточным.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Где хранить загруженные программы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 На протяжении этой книги мы допускаем, что все скаченные пакеты находятся в директории $LFS/usr/src.\par
Несмотря на то, что не имеет принципиального значения, где сохранены пакеты, убедительная просьба расположить их по крайней мере на разделе LFS, т.к необходимо иметь доступ к ним, когда вы входите в $LFS с помощью команды chroot или когда вы загружаетесь в систему LFS. Директория $LFS/usr/src – довольно логичное место для хранения исходных кодов, однако это не является необходимым условием. Можно создать подкаталог в $LFS/usr/src для хранения tar\_архивов, отделив таким образом tar\_архивы от временных директорий компиляции. Опять же, решать вам.\par
Следующая глава содержит список программ для скачивания. Так как раздел LFS еще не создан, сохранить их там мы пока не можем. На данном этапе сохраните их в другом месте, и переместите на раздел LFS, когда его создадите.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Как инсталлировать программы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Прежде чем начать, примите к сведению, что все команды в этой книге подразумевают, что вы используете оболочку Bash. Команды могут работать и с другими оболочками, но этого мы гарантировать не можем. Не хотите проблем – используйте Bash.\par
Перед тем как инсталлировать пакет, его надо распаковать. Обычно пакеты заархивированы в формате gzip или bzip2. Мы не собираемся каждый раз объяснять, как распаковать пакет. Мы объясним это в данном разделе раз и навсегда.\par
Для начала перейдите в каталог $LFS/usr/src:\par
\b cd $LFS/usr/src\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если файл запакован в tar и gzip, разархивируйте его следующим образом, в зависимости от имени файла:\par
\b tar \_xvzf filename.tar.gz\b0  \par
\b tar \_xvzf filename.tgz\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если файл запакован в tar и bzip2:\par
\b bzcat filename.tar.bz2 | tar \_xv\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Большинство программ tar способны использовать файлы формата bzip2 напрямую. Они используют параметры \_I, \_y, или \_j, которые аналогичны параметру \_z для файлов в формате gzip. Команда, приведенная выше, универсальна и не зависит от того, как ваша система интерпретирует tar.\par
Если файл запакован просто в формате tar, выполните\par
\b tar \_xvf filename.tar\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 При распаковке архива в текущем каталоге создается подкаталог (мы подразумеваем, что архивы распаковываются в директории $LFS/usr/src). Войдите в созданный подкаталог перед выполнением инсталляционных инструкций. Повторим еще раз: каждый раз при установке программы, вы должны распаковать ее архив и перейти в созданный архиватором подкаталог.\par
Иногда вы столкнетесь с патчами. Обычно они просто запакованы с использованием gzip или bzip2. Перед тем как ими воспользоваться, распакуйте их.\par
Если файл запакован в формате gzip, распакуйте его следующей командой:\par
\b gunzip filename.gz\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если файл запакован в формате bzip2, распакуйте его следующей командой:\par
\b bunzip2 filename.bz2\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 После инсталляции пакета можно либо удалить директорию его исходных кодов, либо сохранить ее. Настоятельно рекомендуем удалять эту директорию. Если этого не сделать и повторно использовать директорию исходников (например, повторно использовать исходники из Главы 5 в Главе 6), получится не совсем то, чего вы ожидали. Деревья исходных кодов в Главе 5 содержат настройки базового дистрибутива, которые не всегда подойдут к системе LFS, после того как вы войдете в среду chroot. Даже выполнение \i make clean\i0   не гарантирует чистого дерева исходников.\par
Так что просто удаляйте каталог исходных кодов сразу же после их инсталляции, однако на будущее сохраняйте скаченный tar\_архив.\par
Исключение их этого правила – дерево исходных кодов ядра. Не удаляйте ее, т.к. она понадобится в дальнейшем. До того момента никакая программа не будет использовать это дерево, так что оно не помешает. Однако если у вас дефицит дискового пространства, можете смело удалить каталог с исходниками ядра и повторно распаковать этот архив позже.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Поддерживаемые платформы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Мы стараемся сделать LFS как можно более универсальной. Однако, примите к сведению, что основная разработка ведется на платформе x86. Мы постараемся включить информацию о различиях компиляции для других платформ, например для PPC. Если вы столкнетесь с проблемой компиляции на платформе, отлично от x86, в любом случае отправьте сообщение об этом в список рассылки. Более того, если вам удастся решить проблему, дайте нам знать – пошлите сообщение в список lfs\_dev. Проверив правильность решения, мы включим его в книгу.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Как попросить о помощи\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В том случае, если при прочтении этой книги вы столкнетесь с проблемой, недокументированной в FAQ, многие участники проекта LFS в списках рассылки и на канале IRC будут рады помочь. Получить общее представление о списках рассылки LFS вы можете в разделе Глава 1 – Списки рассылки и архивы. Чтобы нам было легче диагностировать и решать вашу проблему, постарайтесь привести как можно больше деталей в запросе.\par
Что необходимо указать\par
Помимо краткого описания проблемы, не забудьте указать нижеприведенные вещи:\par
версию используемой книги,\par
название пакета или секции, с которой у вас проблемы,\par
сообщение об ошибке или симптомы проблемы,\par
отклонялись ли вы от шагов, описанных в книге\par
(Заметьте, что если вы отклонялись от книги, это не значит, что мы не попытаемся помочь, ведь весь смысл LFS – в возможности выбора. Просто напросто ваше признание поможет нам найти решение.)\par
Проблемы configure\par
Если при выполнении скрипта configure, что\_то прошло не так как надо, обратите внимание на последние строки в файле config.log. Обычно этот файл содержит сообщения об ошибках, которые не были выведены на экран. Если вы задумали попросить нас о помощи, не забудьте включить эти строки в ваше сообщение.\par
Проблемы при компиляции\par
Для того чтобы помочь нам найти причину проблемы, важен как вывод на экране, так и содержание некоторых файлов. Вывод на экране скрипта ./configure и команды make содержат много полезной информации. Не стоит слепо включать в свое сообщение весь вывод, но и не следует включать слишком мало информации. Ниже приведен вывод на экран команды make:\par
gcc \_DALIASPATH=\'5c"/mnt/lfs/usr/share/locale:.\'5c" \_DLOCALEDIR=\'5c"/mnt/lfs/usr/share/locale\'5c" \_DLIBDIR=\'5c"/mnt/lfs/usr/lib\'5c" \_DINCLUDEDIR=\'5c"/mnt/lfs/usr/include\'5c" \_DHAVE_CONFIG_H \_I. \_I. \_g \_O2 \_c getopt1.c gcc \_g \_O2 \_static \_o make ar.o arscan.o commands.o dir.o expand.o file.o function.o getopt.o implicit.o job.o main.o misc.o read.o remake.o rule.o signame.o variable.o vpath.o default.o remote\_stub.o version.o opt1.o \_lutil job.o: In function `load_too_high': /lfs/tmp/make\_3.79.1/job.c:1565: undefined reference to `getloadavg' collect2: ld returned 1 exit status make[2]: *** [make] Error 1 make[2]: Leaving directory `/lfs/tmp/make\_3.79.1' make[1]: *** [all\_recursive] Error 1 make[1]: Leaving directory `/lfs/tmp/make\_3.79.1' make: *** [all\_recursive\_am] Error 2\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В таком случае, большинство просто включают в сообщении с просьбой помочь строку:\par
make [2]: *** [make] Error 1\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 и все, что идет после нее. Однако это недостаточно для решения проблемы. Это показывает, что что\_то не так, но не говорит, что именно не так. В сообщение с просьбой помочь необходимо включить всю секцию вывода, т.к. она содержит выполненные команды и их сообщения об ошибках.\par
В Интернете есть замечательная статья от том, как правильно задавать вопросы, написанная Эриком С. Реймондом. Она находится по адресу http://www.tuxedo.org/~esr/faqs/smart\_questions.html. Следую советам статьи, вы научитесь правильно задавать вопросы и ваши шансы получить квалифицированный ответ возрастут.\par
\par
\par
\par
\s2 \qc\snext0\b\f0\fs28\fi0\li0\ri0 II. Часть II – Установка системы LFS\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 3. Необходимые пакеты\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Ниже приведен список пакетов программ, необходимых для построения базовой системы. Указанные номера версий соответствуют стабильным версиям программ, на которых основана эта книга.\par
Все ссылки указаны на главный сервер LFS. Можно также воспользоваться FTP\_зеркалами, см. Глава 1 – Зеркала.\par
LFS FTP\_архив содержит версии программ, используемые в книге. Для того чтобы узнать о появлении новой версии, посетите официальные места загрузки программ, см. Приложение A. Если вам удастся установить новую версию программы, используя инструкции этой книги, мы будем рады узнать об этом.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Необходимые пакеты\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Сервер FTP: ftp://ftp.linuxfromscratch.org/ Сервер HTTP: http://ftp.linuxfromscratch.org/ Загрузите все необходимые пакеты для компиляции системы LFS в одном tar\_архиве: Все пакеты LFS – 105,560 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/lfs\_packages\_4.0.tar http://ftp.linuxfromscratch.org/lfs\_packages/4.0/lfs\_packages\_4.0.tar Или все пакеты по отдельности: Autoconf (2.53) – 739 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/autoconf\_2.53.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/autoconf\_2.53.tar.bz2 Automake (1.6.3) – 465 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/automake\_1.6.3.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/automake\_1.6.3.tar.bz2 Bash (2.05a) – 1,400 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/bash\_2.05a.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/bash\_2.05a.tar.bz2 Bin86 (0.16.3) – 113 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/bin86\_0.16.3.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/bin86\_0.16.3.tar.bz2 Binutils (2.13) – 9,651 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/binutils\_2.13.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/binutils\_2.13.tar.bz2 Bison (1.35) – 613 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/bison\_1.35.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/bison\_1.35.tar.bz2 Bzip2 (1.0.2) – 610 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/bzip2\_1.0.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/bzip2\_1.0.2.tar.bz2 Diffutils (2.8.1) – 642 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/diffutils\_2.8.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/diffutils\_2.8.1.tar.bz2 E2fsprogs (1.27) – 1,176 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/e2fsprogs\_1.27.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/e2fsprogs\_1.27.tar.bz2 Ed (0.2) – 158 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ed\_0.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/ed\_0.2.tar.bz2 Ed Patch (0.2) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ed\_0.2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/ed\_0.2.patch.bz2 File (3.39) – 151 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/file\_3.39.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/file\_3.39.tar.bz2 Fileutils (4.1) – 1,217 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/fileutils\_4.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/fileutils\_4.1.tar.bz2 Fileutils Patch (4.1) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/fileutils\_4.1.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/fileutils\_4.1.patch.bz2 Findutils (4.1) – 226 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/findutils\_4.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/findutils\_4.1.tar.bz2 Findutils Patch (4.1) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/findutils\_4.1.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/findutils\_4.1.patch.bz2 Flex (2.5.4a) – 278 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/flex\_2.5.4a.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/flex\_2.5.4a.tar.bz2 Gawk (3.1.1) – 1,420 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gawk\_3.1.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gawk\_3.1.1.tar.bz2 Gawk Patch (3.1.1\_2) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gawk\_3.1.1\_2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gawk\_3.1.1\_2.patch.bz2 GCC (3.2) – 20,043 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2.tar.bz2 GCC Patch (3.2) – 4 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2.patch.bz2 GCC nofixincludes Patch (3.2) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2\_nofixincludes\_2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gcc\_3.2\_nofixincludes\_2.patch.bz2 Gettext (0.11.5) – 2,489 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gettext\_0.11.5.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gettext\_0.11.5.tar.bz2 Glibc (2.2.5) – 12,114 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_2.2.5.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_2.2.5.tar.bz2 Glibc Patch (2.2.5\_2) – 8 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_2.2.5\_2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_2.2.5\_2.patch.bz2 Glibc\_linuxthreads (2.2.5) – 164 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_linuxthreads\_2.2.5.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/glibc\_linuxthreads\_2.2.5.tar.bz2 Grep (2.5) – 545 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/grep\_2.5.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/grep\_2.5.tar.bz2 Groff (1.18) – 1,739 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/groff\_1.18.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/groff\_1.18.tar.bz2 Gzip (1.2.4a) – 179 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gzip\_1.2.4a.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gzip\_1.2.4a.tar.bz2 Gzip Patch (1.2.4b) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/gzip\_1.2.4b.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/gzip\_1.2.4b.patch.bz2 Kbd (1.06) – 559 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/kbd\_1.06.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/kbd\_1.06.tar.bz2 Kbd Patch (1.06\_3) – 3 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/kbd\_1.06\_3.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/kbd\_1.06\_3.patch.bz2 Less (374) – 189 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/less\_374.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/less\_374.tar.bz2 LFS\_Bootscripts (1.10) – 27 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/lfs\_bootscripts\_1.10.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/lfs\_bootscripts\_1.10.tar.bz2 Libtool (1.4.2) – 653 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/libtool\_1.4.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/libtool\_1.4.2.tar.bz2 Lilo (22.2) – 292 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/lilo\_22.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/lilo\_22.2.tar.bz2 Linux (2.4.19) – 25,432 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/linux\_2.4.19.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/linux\_2.4.19.tar.bz2 M4 (1.4) – 249 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/m4\_1.4.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/m4\_1.4.tar.bz2 Make (3.79.1) – 794 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/make\_3.79.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/make\_3.79.1.tar.bz2 MAKEDEV (1.7) – 8 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/MAKEDEV\_1.7.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/MAKEDEV\_1.7.bz2 Man (1.5k) – 168 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_1.5k.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_1.5k.tar.bz2 Man Patch (1.5k) – 1 KB ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_1.5k.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_1.5k.patch.bz2 Man\_pages (1.52) – 569 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_pages\_1.52.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/man\_pages\_1.52.tar.bz2 Modutils (2.4.19) – 213 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/modutils\_2.4.19.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/modutils\_2.4.19.tar.bz2 Ncurses (5.2) – 1,308 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ncurses\_5.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/ncurses\_5.2.tar.bz2 Ncurses Patch (5.2\_2) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ncurses\_5.2\_2.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/ncurses\_5.2\_2.patch.bz2 Netkit\_base (0.17) – 49 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/netkit\_base\_0.17.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/netkit\_base\_0.17.tar.bz2 Net\_tools (1.60) – 194 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/net\_tools\_1.60.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/net\_tools\_1.60.tar.bz2 Patch (2.5.4) – 149 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/patch\_2.5.4.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/patch\_2.5.4.tar.bz2 Perl (5.8.0) – 8,416 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/perl\_5.8.0.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/perl\_5.8.0.tar.bz2 Procinfo (18) – 22 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/procinfo\_18.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/procinfo\_18.tar.bz2 Procps (2.0.7) – 153 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/procps\_2.0.7.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/procps\_2.0.7.tar.bz2 Procps Patch (2.0.7) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/procps\_2.0.7.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/procps\_2.0.7.patch.bz2 Psmisc (21) – 172 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/psmisc\_21.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/psmisc\_21.tar.bz2 Sed (3.02) – 221 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sed\_3.02.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sed\_3.02.tar.bz2 Shadow (4.0.3) – 760 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/shadow\_4.0.3.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/shadow\_4.0.3.tar.bz2 Sh\_utils (2.0) – 824 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0.tar.bz2 Sh\_utils Hostname Patch (2.0\_hostname) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0\_hostname.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0\_hostname.patch.bz2 Sh\_utils Patch (2.0) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sh\_utils\_2.0.patch.bz2 Sysklogd (1.4.1) – 67 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sysklogd\_1.4.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sysklogd\_1.4.1.tar.bz2 Sysvinit (2.84) – 76 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/sysvinit\_2.84.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/sysvinit\_2.84.tar.bz2 Tar (1.13) – 730 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/tar\_1.13.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/tar\_1.13.tar.bz2 Tar Patch (1.13) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/tar\_1.13.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/tar\_1.13.patch.bz2 Texinfo (4.2) – 1,175 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/texinfo\_4.2.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/texinfo\_4.2.tar.bz2 Textutils (2.1) – 1,847 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/textutils\_2.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/textutils\_2.1.tar.bz2 Util\_linux (2.11u) – 1,073 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/util\_linux\_2.11u.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/util\_linux\_2.11u.tar.bz2 Vim (6.1) – 2,823 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/vim\_6.1.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/vim\_6.1.tar.bz2 Vim Patch (6.1) – 1 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/vim\_6.1.patch.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/vim\_6.1.patch.bz2 Zlib (1.1.4) – 144 KB: ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/zlib\_1.1.4.tar.bz2 http://ftp.linuxfromscratch.org/lfs\_packages/4.0/zlib\_1.1.4.tar.bz2 Общий объем пакетов: 105,560 KB (103.88 MB)\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 4. Готовим новый раздел\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В этой главе речь пойдет о создании раздела для системы LFS. Мы создадим сам раздел, файловую систему на нем, и монтируем его.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создаем новый раздел\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Возможно построить систему LFS на одном разделе с уже установленным дистрибутивом. Несмотря на то, что для первой установки LFS данный шаг не рекомендуется, это удобно, если у вас дефицит дискового пространства. Если вы решили рискнуть, см. совет по \i Инсталляции LFS на один раздел с сосуществующими системами\i0   на http://hints.linuxfromscratch.org/hints/lfs_next_to_existing_systems.txt.\par
Перед тем как перейти к установке LFS необходимо иметь пустой Linux native раздел. Для установки LFS рекомендуется раздел размеров не менее 1 GB. Это дает возможность хранить tar\_архивы с программами и компилировать пакеты. Если вы планируете использовать LFS в качестве основной Linux\_системы, вам придется отвести для нее больше места для инсталляции дополнительного программного обеспечения. Если Linux\_native раздел для LFS уже существует, можете смело пропустить эту подсекцию.\par
В связи с тем, что оперативная память компьютера может одновременно уместить ограниченное количество информации, рекомендуется отвести место на диске для файлов swap. Файл swap – это место, где хранится информация из памяти, которую можно вызвать в любой момент. LFS и ваш дистрибутив могут совместно использовать это дисковое пространство. Другими словами, если у вас уже есть swap\_раздел, нет особого смысла создавать еще один. Если же у вас его нет, создайте его программой fdisk. В любом случае, запомните обозначение swap\_раздела (например, hda2), это понадобится при создании файла /etc/fstab.\par
Программа cfdisk (аналогичная fdisk) запускается с соответствующим обозначением жесткого диска в качестве аргумента (например /dev/hda, в случае если новый раздел следует создать на жестком диске primary master с IDE интерфейсом). С помощью этой программы создайте раздел Linux native. Обратитесь к документации программы fdisk ( руководства man обычно неплохое начало для поиска информации) для получения информации о создании разделов Linux native и записи таблиц разделов.\par
Запомните обозначение раздела, оно будет выглядеть как например hda11. Этот раздел мы впоследствии будем называть разделом LFS.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создаем файловую систему на новом разделе\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 После того как новый раздел создан, создадим на нем файловую систему. На данный момент стандартная файловая система – ext2, однако так называемые журналируемые файловые системы становятся очень популярными. Мы будем подразумевать, что вы собираетесь использовать ext2. Инструкции по созданию других файловых систем см. на http://beyond.linuxfromscratch.org/view/cvs/postlfs/filesystems.html.\par
Для создания файловой системы ext2, используйте команду mke2fs. Наименование раздела LFS – единственная опция к команде, и файловая система создана.\par
\b mke2fs /dev/xxx\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замените «xxx» на наименование раздела LFS (например hda11).\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Монтируем раздел\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Итак, файловая система создана и готова к эксплуатации. Для того чтобы получить доступ к разделу (возможность чтения и записи информации на нем), необходимо его монтировать. Если точка монтирования /mnt/lfs, перейти к этому разделу можно с помощью команды cd /mnt/lfs. Мы будем подразумевать, что точка монтирования раздела – /mnt/lfs. Выбор директории для точки монтирования не принципиален, просто запомните, что вы выбрали.\par
Создайте директорию /mnt/lfs:\par
\b mkdir \_p /mnt/lfs\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Монтируем LFS раздел:\par
\b mount /dev/xxx /mnt/lfs\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замените «xxx» наименованием раздела (например hda11).\par
Эта директория (/mnt/lfs) и есть значение переменной LFS variable из Главы 2. Если вы планируете использовать переменную среды LFS, самое время выполнить \b export LFS=/mnt/lfs\b0  .\par
Если вы решили выделить LFS несколько разделов (к примеру $LFS и $LFS/usr), монтируйте их следующим образом:\par
\b mkdir \_p /mnt/lfs && mount /dev/xxx /mnt/lfs && mkdir /mnt/lfs/usr && mount /dev/yyy /mnt/lfs/usr\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Естественно, замените /dev/xxx и /dev/yyy на соответствующие наименования разделов.\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 5. Подготовка системы LFS\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В этой главе мы скомпилируем и установим минимальную Linux\_систему. Эта система будет располагать инструментами, необходимыми для сборки окончательной системы LFS в следующей главе.\par
Файлы, скомпилированные в данной главе, будут инсталлированы в директорию $LFS/static, для того, чтобы отделить их от тех файлов, которые будут установлены в следующей главе. Так как эти программы можно рассматривать как временные, нет необходимости засорять ими нашу будущую систему LFS.\par
Ключ к пониманию работы Linux – четкое знание о том, для чего нужен системе и пользователю каждый пакет программ, и что он делает. Для этого после инструкций по установке по каждому пакету приведены короткие описания входящих в него программ.\par
Перед использованием ко многим пакетам необходимо применить патчи. Мы будем делать это только там и тогда, где необходимо, так что не стоит волноваться, если инструкции по применению патча отсутствуют.\par
Во время инсталляции некоторых пакетов, на экран будут выводиться многочисленные предупреждения компилятора. В них нет ничего страшного, не обращайте на них внимание. Это просто предупреждения – в основном, связанные с некорректным, но не запрещенным использованием синтаксиса C или C++. Дело в том, что стандарты C довольно часто менялись, а некоторые пакеты все еще используют старый стандарт, однако это не проблема.\par
Прежде чем начать, убедитесь, что переменная LFS задана корректно. Для проверки выполните:\par
\b echo $LFS\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Убедитесь, что вывод на экране соответствует точке монтирования раздела LFS (например /mnt/lfs).\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Почему мы используем статические ссылки?\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 (Спасибо Plasmatic'у за разъяснение этого вопроса в одном из списков рассылки LFS.)\par
При компиляции программы, вместо того, чтобы при создании нового файла каждый раз переписывать все функции работы с ядром, аппаратными средствами, файлами, все базовые функции хранятся в библиотеках. glibc, которую мы установим позже, является одной из главных библиотек такого рода. Она содержит код для всех основных функций, таких как открытие файлов, печать информации на экран, получение ввода от пользователя. После компиляции программы эти библиотеки связываются ссылками с новой программой, чтобы она могла использовать любую функцию этих библиотек.\par
Однако такие библиотеки могут оказаться довольно большими (например, libc.a обычно занимает 2.5 MB), и держать отдельную копию каждой библиотеки прикрепленной к программе не очень то и логично. Представьте себе простую команду вроде ls с лишними 2.5 MB, прикрепленными к ней! Вместо того, чтобы делать библиотеку частью программы, или связывать статической ссылкой, библиотеку можно хранить в отдельном файле, который будет подгружаться по мере необходимости. Это называется динамическими ссылками, т.к. библиотека загружается и выгружается динамически, по мере необходимости программы.\par
Итак, у нас есть файл размером 1 KB и файл размером 2.5 MB. Пока мы не сэкономили дискового пространства (разве что освободили оперативную память до того, как библиотека понадобится). \i Настоящая\i0   выгода от использования динамических ссылок состоит в том, что нам необходимо хранить лишь одну копию библиотеки. Если ls и rm используют одну и ту же библиотеку, то нам не нужно иметь две копии этой библиотеки. Обе команды могут пользоваться кодом из одного файла. Также и с оперативной памятью – две программы используют один код вместо того, чтобы загружать в память его дубликаты. Таким образом экономится не только место на диске, но и драгоценная оперативная память.\par
Если динамические ссылки позволяют сэкономить столько места, почему же мы везде используем статические ссылки? Потому что, когда вы входите в новую (и далекую от совершенства) систему LFS с помощью команды chroot, динамические библиотеки будут недоступны, т.к. они находятся в дереве старого дистрибутива (например в /usr/lib). Эти каталоги будут недоступны из корневой директории системы LFS ($LFS).\par
Для того чтобы скомпилированные программы работали в среде chroot, при компиляции убедитесь, что библиотеки связаны статическими ссылками, отсюда возникают опции \b –enable\_static\_link\b0  , \b –disable\_shared\b0  , и \b \_static\b0   в Главе 5. Первое, что описывает Глава 6, это компиляция основных библиотек системы, glibc. После этого, мы перекомпилируем все программы, собранные в Главе 5, но в этот раз с динамическими ссылками, чтобы воспользоваться всеми преимуществами экономии дискового пространства.\par
Именно поэтому мы и используем эти странные опции \b \_static\b0  . Если скомпилировать пакеты без них, вы довольно быстро увидите, что случится, после того как вы войдете в парализованную систему LFS при помощи команды chroot.\par
Для получения более детальной информации по динамически связанным библиотекам, обратитесь к книгам и Linux\_ориентированным сайтам по программированию.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создаем директорию $LFS/static\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Как уже говорилось во вступлении в данную главу, все, что будет инсталлировано в этой главе, попадет в директорию $LFS/static, чтобы не загрязнять раздел LFS кучей временных файлов. Нам необходимо лишь создать эту директорию:\par
\b mkdir $LFS/static\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для удобства можно поместить загруженные пакеты в директорию $LFS/static, например сохранить их в подкаталоге $LFS/static/src.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка всех компонентов в режиме непривилегированного пользователя\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если при выполнении шагов, описанных в Главе 5, вы будете зарегистрированы в системе как root, есть вероятность, что некоторые файлы системы будут заменены файлами, которые будут скомпилированы в Главе 5. На это есть ряд причин, неопределенная переменная $LFS – одна из них. Замена файлов на вашей системе скорее всего приведет к возникновению всякого рода проблем, поэтому рекомендуется выполнять шаги Главы 5 от имени непривилегированного пользователя. Для чистоты эксперимента создадим новую учетную запись «lfs», которую будем использовать на стадии компиляции со статическими ссылками. Для добавления новой учетной записи, выполните следующие команды в режиме пользователя root:\par
\b useradd \_s /bin/bash \_m lfs && passwd lfs\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь скорректируем права на директорию $LFS/static, чтобы пользователь «lfs» имел к ней доступ на запись:\par
\b chown \_R lfs $LFS/static\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь войдите в систему под учетной записью «lfs». Это можно сделать двумя способами: через новую виртуальную консоль или оконный менеджер, или командой \b su – lf\b0  \b s\b0  . После этого выполните следующие команды от имени пользователя «lfs» для создания благоприятной среды:\par
\b cat > ~/.bash_profile << «EOF» umask 022 LFS=/mnt/lfs LC_ALL=POSIX CC='gcc \_s' export LFS LC_ALL CC EOF source ~/.bash_profile\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Этот профиль устанавливает umask равным 022, чтобы созданные файлы и директории автоматически получали правильные права. Настоятельно рекомендуется использование этой установки на протяжении всей инсталляции LFS. Также были заданы переменные $LFS, $LC_ALL, и $CC. Про переменную $LFS мы уже не раз говорили. Переменная $LC_ALL используется для интернационализации.\par
Если на вашем базовом дистрибутиве установлена библиотека glibc версии 2.2.4 и ранее, и на протяжении Главы 5 переменная $LC_ALL определена не как "C" или «POSIX», могут возникнуть проблемы при выходе повторном входе в среду chroot в Главе 6. Для того чтобы быть уверенным в том, что в среде chroot все будет работать корректно, присвойте этой переменной значение «POSIX» ("C" is an alias for «POSIX»).\par
Использование переменной $CC вызвано необходимостью предотвратить компиляцию отладочных символов в статические пакеты. Таким образом экономится дисковое пространство и существенно сокращается время компиляции.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bash\_2.05a\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 1 SBU Необходимое дисковое пространство: 24 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка Bash\par
Перед тем как установить Bash, убедитесь, что в вашем базовом дистрибутиве есть файлы /usr/lib/libcurses.a и usr/lib/libncurses.a. Если ваш дистрибутив – LFS system, оба файла должны быть на месте при условии, что вы в точности следовали инструкциям книги.\par
Если этих файлов нет, следует установить пакет разработки Ncurses, его иногда называют \i ncurses\_dev\i0  . Если этот пакет уже установлен, или вы только что его установили, проверьте наличие этих двух файлов еще раз. Зачастую файл libcurses.a отсутствует. В таком случае, создайте символическую ссылку libcurses.a, выполнив следующую команду в режиме пользователя root:\par
\b ln \_s libncurses.a /usr/lib/libcurses.a\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь можно продолжить инсталляцию Bash:\par
\b ./configure –enable\_static\_link \'5c –prefix=$LFS/static –with\_curses && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если стадия \b make instal\b0  \b l\b0   выдает следующие сообщения об ошибках:\par
install\_info: unknown option `–dir\_file=/mnt/lfs/usr/info/dir' usage: install\_info [–version] [–help] [–debug] [–maxwidth=nnn] [–section regexp title] [–infodir=xxx] [–align=nnn] [–calign=nnn] [–quiet] [–menuentry=xxx] [–info\_dir=xxx] [–keep\_old] [–description=xxx] [–test] [–remove] [–] filename make[1]: *** [install] Error 1 make[1]: Leaving directory `/mnt/lfs/usr/src/bash\_2.05a/doc' make: [install] Error 2 (ignored)\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 это означает, что у вас Debian\_2.2 (potato), в котором используется старая версия пакета texinfo. Данная ошибка не критична: страницы документации будут заново установлены в Главе 6, при перекомпиляции bash с динамическими ссылками. В текущем релизе Debian (3.0; известном под названием Woody) эта проблема отсутствует.\par
Пояснения команд\par
\b –enable\_static\_link:\b0   Эта опция configure указывает на использование статических ссылок.\par
\b –prefix=$LFS/static:\b0   Эта опция configure инсталлирует все файлы Bash в директорию $LFS/static, которая будет именоваться /static после того, как мы войдем в систему LFS с помощью команды chroot или перезагрузки.\par
\b –with\_curses:\b0   Эта опция связывает bash с библиотекой curses вместо устаревающей библиотеки termcap.\par
Совершенно необязательно связывать статическую версию bash с libncurses (можно связать ее с termcap, т.к. в любом случае мы перекомпилируем Bash в Главе 6 с использованием libncurses), однако это хороший способ убедиться, что пакет Ncurses установлен корректно. В обратном случае, это повлечет за собой сбои при инсталляции пакета Texinfo, которому необходима библиотека ncurses, т.к. с termcap он ведет себя нестабильно.\par
Символы \b &&\b0   в конце каждой строки указывают на то, что следующая команда должна быть выполнена лишь в том случае, если предыдущая команда возвратила значение 0 на выходе, т.е. успешно завершила операцию. В том случае если вы копируете и вставляете эти команды в оболочку, не забывайте убедиться, что если скрипт ./configure дал сбой, не выполняется команда make, а также, если команда make дала сбой, не выполняется команда make install, и т.д.\par
Содержание Bash\par
Последняя проверка: версия 2.05a.\par
Программы\par
bash, sh (ссылка на bash) и bashbug\par
Описания\par
bash\par
bash – Bourne\_Again SHell, широко используемый в Unix системах командный интерпретатор. Bash считывает данные со стандартного ввода, с клавиатуры. Пользователь вводит что\_либо, интерпретатор распознает введенное и выполняет это, например запускает программу.\par
bashbug\par
bashbug – скрипт, помогающий пользователю составлять и отправлять сообщения об ошибках bash в стандартном формате.\par
sh\par
sh – символическая ссылка на bash. Будучи вызванным как sh, bash имитирует запуск старых версий sh для лучшего соответствия стандартам POSIX.\par
Зависимости Bash\par
Последняя проверка: версия 2.05a.\par
Bash: bash, sh Binutils: ar, as, ld, ranlib, size Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Binutils\_2.13\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 2.05 SBU Необходимое дисковое пространство: 160 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка Binutils\par
Этот пакет известен своим нестабильным поведением при компиляции с измененными опциями оптимизации (включая опции \_march и \_mcpu). Binutils рекомендуется компилировать с настройками по умолчанию. Следовательно, если вы задали переменные такие как CFLAGS или CXXFLAGS, изменяющие уровень оптимизации по умолчанию, рекомендуется убрать их при сборке пакета binutils. Изменяя оптимизации для binutils, вы действуете на свой страх и риск.\par
Для инсталляции Binutils выполните:\par
\b mkdir ../binutils\_build && cd ../binutils\_build && ../binutils\_2.13/configure –prefix=$LFS/static –disable\_nls && make LDFLAGS=\_all\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b mkdir ../binutils\_build:\b0   В инструкциях установки Binutils рекомендуется создать отдельную директорию для сборки, вместо того, чтобы компилировать программу в директории исходников. Итак, мы создаем директорию binutils\_build и будем работать из нее.\par
\b –disable\_nls:\b0   Эта опция выключает поддержку интернационализации (или i18n), которая не нужна нам на стадии статически связанных программ, т.к. часто дает сбои при использовании статических ссылок.\par
\b LDFLAGS=\_all\_static:\b0   Присваиваем переменной LDFLAGS значение \_all\_static для того, чтобы использовать статические ссылки.\par
Содержимое Binutils\par
Последняя проверка: версия 2.12.1.\par
Программы\par
addr2line, ar, as, gasp, gprof, ld, nm, objcopy, objdump, ranlib, readelf, size, strings and strip\par
Описания\par
addr2line\par
addr2line переводит программные адреса в имена файлов и номера строк. Given an address and an executable, используется отладочная информация исполняемого файла, чтобы определить, какое имя файла и номер строки связаны с данным адресом.\par
ar\par
ar создает и изменяет архивы, а также производит их распаковку. Архив – файл, содержащий несколько файлов в виде, позволяющем восстановить оригинал.\par
as\par
as используется для ассемблирования вывода the GNU C Compiler, gcc для использования с линкером ld.\par
gasp\par
gasp – Assembler Macro Preprocessor.\par
gprof\par
gprof отображает статистику системных вызовов.\par
ld\par
ld объединяет несколько объектных и архивных файлов и устанавливает символьные отношения. Последний шаг в сборке скомпилированной программы – запуск ld.\par
nm\par
nm перечисляет символы из объектных файлов.\par
objcopy\par
objcopy utility копирует содержимое одного объектного файла в другой. objcopy использует библиотеку GNU BFD для чтения/записи объектных файлов. Возможна запись конечного объектного файла в формате, отличном от исходного.\par
objdump\par
objdump выводит информацию об одном или нескольких объектных файлах. Опции указывают, какую информацию выводить. Эта информация полезна для программистов, разрабатывающих компиляторы, в противоположность тем, кому нужно просто скомпилировать и запустить программу.\par
ranlib\par
ranlib генерирует оглавление содержимого архива и сохраняет его в архиве. Список будет содержать все символы, определенные членами архива, that is a relocatable object file.\par
readelf\par
readelf выводит информацию об бинарных файлах типа elf.\par
size\par
size выводит размеры секций –и общий размер– каждого указанного объектного файла. По умолчанию, генерируется одна строка для каждого объектного файла или модуля в архиве.\par
strings\par
Для каждого заданного файла strings выводит последовательность отображаемых символов длиной минимум 4 знака (или указанной длины), завершающуюся непечатным символом. По умолчанию, выводятся лишь строки из инициализированных и загруженных частей объектных файлов. Для других типов файлов выводятся строки из всего файла.\par
strings зачастую используется для определения содержимого нетекстовых файлов.\par
strip\par
strip удаляет все или указанные символы из объектных файлов. Список объектных файлов может включать архивы. Должен быть задан как минимум один объектный файл. Модификация указанных файлов приоритетнее, чем запись модифицированных копий под другими именами.\par
Библиотеки\par
libbfd.[a,so] и libopcodes.[a,so]\par
Описания\par
libbfd\par
libbfd – библиотека Binary File Descriptor.\par
li\b b\b0  opcodes\par
libopcodes – библиотека для работы с опкодами, используется в сборке утилит вроде objdump. Опкоды – «читаемые» версии инструкций процессора.\par
Зависимости Binutils\par
Последняя проверка: версия 2.11.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, rmdir, touch Flex: flex Gcc: cc, cc1, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, true, uname Texinfo: install\_info, makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bzip2\_1.0.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.07 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка Bzip2\par
Для инсталляции Bzip2 выполните:\par
\b make CC="gcc \_static" && make PREFIX=$LFS/static install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Стоит заметить, что имеет смысл загрузить патч для программы Tar, который позволяет ей без труда запаковывать и распаковывать архивы с помощью bzip2/bunzip2. Однако этот патч не является частью базовой системы LFS. С обычной версией tar, для работы с bzip2/bunzip2 используются конструкции вида \b bzcat file.tar.bz | tar \_xv\b0   или \b tar –use\_compress\_prog=bunzip2 \_xvf file.tar.bz2\b0  . Вышеупомянутый патч предоставляет возможность использования опции \b \_j\b0  , при помощи которой распаковать архив bzip2 командой \b tar \_xvfj file.tar.bz2\b0  . Применение данного патча будет рассмотрено далее, при установке пакета Tar.\par
Пояснения команд\par
\b make CC="gcc \_static":\b0   Таким образом мы сообщаем gcc, что компиляция bzip2 должна быть выполнена с использованием статических ссылок.\par
Содержимое Bzip2\par
Последняя проверка: версия 1.0.2\par
Программы\par
bunzip2 (ссылка на bzip2), bzcat (ссылка на bzip2), bzcmp, bzdiff, bzegrep, bzfgrep, bzgrep, bzip2, bzip2recover, bzless и bzmore\par
Описания\par
bunzip2\par
bunzip2 распаковывает файлы, сжатые bzip2.\par
bzcat\par
bzcat (или bzip2 \_dc) распаковывает указанные файлы на стандартный вывод.\par
bzcmp, bzdiff\par
bzcmp и bzdiff позволяют использовать cmp и diff для файлов, сжатых bzip2.\par
bzegrep, bzfgrep, bzgrep\par
bzegrep, bzfgrep, и bzgrep позволяют использовать egrep, fgrep, or grep для файлов, сжатых bzip2.\par
bzip2\par
bzip2 сжимает файлы, используя Burrows\_Wheeler block sorting алгоритм сжатия текста и код Huffman. Сжатие, обычно: значительно лучше, чем достигаемое традиционными архиваторами, основанными на LZ77/LZ78, и достигает производительности PPM семейства статистических архиваторов.\par
bzip2recover\par
bzip2recover восстанавливает данные из поврежденных файлов bzip2.\par
bzless\par
bzless – подобный less фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
bzmore\par
bzmore – подобный more фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
Библиотеки\par
libbz2.a, libbz2.so (ссылка на libbz2.so.1.0), libbz2.so.1.0 (ссылка на libbz2.so.1.0.2) и libbz2.so.1.0.2\par
libbz2\par
libbz2 – библиотека, реализующая сжатие данных без потерь, используя block\_sorting алгоритм Burrows\_Wheeler.\par
Зависимости Bzip2\par
Последняя проверка: версия 1.0.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Fileutils: cp, ln, rm Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Diffutils\_2.8.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.39 SBU Необходимое дисковое пространство: 10 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Diffutils\par
Для инсталляции Diffutils выполните:\par
\b LDFLAGS=\_static CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ./configure –prefix=$LFS/static –disable\_nls && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b CPPFLAGS=\_Dre_max_failures=re_max_failures2:\b0   Переменная CPPFLAGS считывается программой cpp (препроцессор Си). Значение этой переменной дает указание препроцессору заменить re_max_failures на re_max_failures2 во всех случаях перед тем, как передать файл исходного кода компилятору для компиляции. Известны случаи, когда этот пакет ведет себя некорректно при попытке использовать статические ссылки на системах со старой версией Glibc. Данная конструкция устраняет проблему.\par
Содержимое Diffutils\par
Последняя проверка: версия 2.8.1.\par
Программы\par
cmp, diff, diff3 и sdiff\par
Описания\par
cmp и diff\par
cmp и diff сравнивают пару файлов и сообщают об их различиях. Обе программы имеют дополнительные опции сравнения файлов в различных ситуациях.\par
diff3\par
Разница между diff и diff3 состоит в том, что diff сравнивает 2 files, а diff3 – 3.\par
sdiff\par
sdiff выполняет слияние 2 файлов и интерактивно выводит результаты.\par
Зависимости Diffutils\par
Последняя проверка: версия 2.7.\par
Bash: sh Binutils: ld, as Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: date, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Fileutils\_4.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.94 SBU Необходимое дисковое пространство: 40 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Fileutils\par
Некоторые программы из статически слинкованного пакета Fileutils могут вызвать ошибку сегментации на системах, где используется Glibc\_2.2.3. Чаще всего эта проблема встречается на системах с процессорами AMD, однако было зафиксировано несколько случаев на Intel\_системах. Если ваша система попадает под данную категорию, примените патч.\par
В некоторых случаях после применения патча компиляция пакета будет невозможна, даже если у вас процессор AMD и библиотеки Glibc\_2.2.3 (или новее). В таком случае удалите директорию fileutils\_4.1 и заново распакуйте tar\_архив. Предполагается, что это связано с тем, что ваш базовый дистрибутив каким\_то образом изменил библиотеки Glibc\_2.2.3, однако на данный момент подробности недоступны.\par
Для того чтобы данный пакет корректно компилировался на системах с процессорами AMD и библиотеками Glibc\_2.2.3, выполните следующую команду. Не делайте этого, если у вас не установлена Glibc\_2.2.3. Более чем вероятно, это вызовет различные сбои при компиляции.\par
\b patch \_Np1 \_i ../fileutils\_4.1.patch\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для инсталляции Fileutils выполните:\par
\b LDFLAGS=\_static \'5c ./configure –disable\_nls –prefix=$LFS/static && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь можно проверить, удалось ли избежать проблемы с ошибкой сегментации. Выполните \b $LFS/static/bin/ls\b0  . Если программа работает, все в порядке. Если нет, повторите инсталляцию с применением патча, если вы инсталлировали пакет без него, или без применения патча, если до этого вы инсталлировали пакет с его применением.\par
Пояснения команд\par
\b patch \_Np1 \_i ../fileutils\_4.1.patch:\b0   Эта команда решает проблему компиляции fileutils с использованием статических ссылок на системах с библиотеками glibc 2.2.3. Если этого не сделать, то впоследствии вы вероятно столкнетесь с ошибками сегментации при выполнении программ из пакета fileutils, когда войдете в систему LFS с помощью chroot в Главе 6.\par
\b Содержимое\b0   Fileutils\par
Последняя проверка: версия 4.1.\par
Программы\par
chgrp, chmod, chown, cp, dd, df, dir, dircolors, du, install, ln, ls, mkdir, mkfifo, mknod, mv, rm, rmdir, shred, sync, touch и vdir\par
\b Описания\b0  \par
\b chgrp\b0  \par
chgrp группу владельца указанных файлов, возможно указание как имени группы, так и ее номера.\par
chmod\par
chmod изменяет права доступа к указанному файлу, в соответствии с параметрами, заданными символьно или в восьмеричном представлении двоичного выражения новых прав.\par
chown\par
chown изменяет владельца и/или группу указанных файлов.\par
cp\par
cp копирует файлы.\par
dd\par
dd копирует файл (по умолчанию, со стандартного ввода на стандартный вывод) с указанным размером блока и опциональными преобразованиями.\par
df\par
df показывает количество свободного места на файловых системах, содержащих указанные файлы. Если файлы не заданы, показывается свободное место на всех смонтированных файловых системах.\par
dir, ls and vdir\par
dir и vdir – версии ls с разными форматами вывода по умолчанию. Эти программы выводят список заданных файлов и каталогов. Содержимое каталога сортируется по алфавиту. ls, по умолчанию, перечисляет файлы в столбцах если стандартный вывод – терминал, иначе идет перечисление по одному в строке. dir, по умолчанию, перечисляет файлы в столбцах. vdir, по умолчанию перечисляет файлы в полном формате.\par
dircolors\par
dircolors выводит значение LS_COLOR. Переменная LS_COLOR используется для установки цветовой схемы, используемой ls и прочими утилитами.\par
du\par
du выводит количество дискового пространства, занятого указанными файлами и каталогами (включая подкаталоги).\par
install\par
install копирует файлы, устанавливает права доступа и, если возможно, владельца и группу.\par
ln\par
ln создает жесткие или мягкие (символические) ссылки на файлы.\par
mkdir\par
mkdir создает каталог с заданным именем.\par
mkfifo\par
mkfifo создает FIFO с заданным именем.\par
mknod\par
mknod создает FIFO, символьный или блочный файл с заданным именем.\par
mv\par
mv перемещает файлы из одного каталога в другой или переименовывает их, в зависимости от заданных параметров.\par
rm\par
rm удаляет файлы или каталоги.\par
rmdir\par
rmdir удаляет пустые каталоги.\par
shred\par
shred безопасно удаляет файл, перезаписывая занимаемые им блоки, так что содержимое невозможно восстановить.\par
sync\par
sync принудительно записывает изменившиеся блоки на диск и обновляет superblock.\par
touch\par
touch изменяет время доступа и изменения каждого заданного файла на текущее время. Если файл не существует, то создается пустой файл.\par
Зависимости Fileutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Findutils\_4.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.12 SBU Необходимое дисковое пространство: 8 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Findutils\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Findutils выполните:\par
\b patch \_Np1 \_i ../findutils\_4.1.patch && CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ./configure –prefix=$LFS/static && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../findutils\_4.1.patch\b0  : Этот патч исправляет некоторые ошибки при компиляции, избегая конфликта переменных и исправляя синтаксис.\par
Содержимое Findutils\par
Последняя проверка: версия 4.1.\par
Программы\par
bigram, code, find, frcode, locate, updatedb и xargs\par
Описания\par
bigram\par
bigram используется вместе с code для создания поисковых баз старого типа. Больше информации об этих программах приведено на locatedb.5 man page.\par
code\par
code – предшественник frcode. Он использовался в старых поисковых базах.\par
find\par
find ищет файлы, отвечающие заданному критерию. Если критерий не задан, выводится список файлов в текущем каталоге и каталогах нижнего уровня.\par
frcode\par
frcode вызывается updatedb для сжатия списка файлов, используя front\_compression и уменьшая размер базы данных в 4\_5 раз.\par
locate\par
locate просматривает базу данных, содержащую сведения обо всех файлах и каталогах на файловой системе. Программа выводит имена файлов и каталогов в базе, совпадающие с заданным критерием. Если пользователь ищет файлы, программа просмотрит базу и сообщит, где находятся запрошенные файлы. Поиск даст результаты, только если база часто обновляется, иначе будет выдана устаревшая информация.\par
updatedb\par
updatedb обновляет поисковую базу. Просматривается вся файловая система (включая все смонтированные, если не указано обратное), каждый найденный файл и каталог записывается в базу, используемую locate. Неплохо обновлять базу хотя бы раз в день, чтобы избежать ее устаревания.\par
xargs\par
xargs выполняет команду относительно списка файлов. Список должен содержать одно имя в строке.\par
Зависимости Findutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Grep: egrep, grep Gcc: cc1, collect2, cpp0, gcc Make: make Patch: patch Sed: sed Sh\_utils: basename, date, echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Gawk\_3.1.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.39 SBU Необходимое дисковое пространство: 17 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Gawk\par
Для инсталляции Gawk выполните:\par
\b CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ./configure –prefix=$LFS/static –disable\_nls && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Gawk\par
Последняя проверка: версия 3.1.1.\par
Программы\par
awk, gawk, gawk\_3.1.1, grcat, igawk, pgawk, pgawk\_3.1.1, pwcat\par
Описания\par
awk\par
awk – символьная ссылка на gawk.\par
gawk, gawk\_3.1.1\par
gawk – GNU реализация awk, языка поиска и обработки текстовых образцов.\par
grcat\par
grcat выполняет слияние базы групп, /etc/group.\par
igawk\par
igawk – скрипт, дающий gawk возможность включения файлов.\par
pgawk, pgawk\_3.1.1\par
pgawk – профильная версия gawk.\par
pwcat\par
pwcat выполняет слияние базы паролей, /etc/passwd.\par
Зависимости Gawk\par
Последняя проверка: версия 3.1.0.\par
(Зависимости пока не проверены)\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка GCC\_3.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 9.48 SBU Необходимое дисковое пространство: 326 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция GCC\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Этот пакет известен своим нестабильным поведением при компиляции с измененными опциями оптимизации (включая опции \_march и \_mcpu). GCC рекомендуется компилировать с настройками по умолчанию. Следовательно, если вы задали переменные такие как CFLAGS или CXXFLAGS, изменяющие уровень оптимизации по умолчанию, рекомендуется убрать их при сборке пакета GCC. Изменяя оптимизации для GCC, вы действуете на свой страх и риск.\par
Для инсталляции GCC выполните:\par
\b patch \_Np1 \_i ../gcc\_3.2.patch && patch \_Np1 \_i ../gcc\_3.2\_nofixincludes\_2.patch && mkdir ../gcc\_build && cd ../gcc\_build && ../gcc\_3.2/configure –prefix=/static –enable\_languages=c \'5c –disable\_nls –disable\_shared && echo «#define HAVE_GAS_HIDDEN 1» >> gcc/auto\_host.h && make BOOT_LDFLAGS=\_static bootstrap && make prefix=$LFS/static install && ln \_s gcc $LFS/static/bin/cc\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Объяснения команд\par
\b patch \_Np1 \_i ../gcc\_3.2.patch:\b0   Этот патч исправляет некоторые ошибки, в частности содержит «copy fix» и «var fix», документированные на сайте http://www.zipworld.com.au/~gschafer/lfs\_tweaks.html.\par
\b patch \_Np1 \_i ../gcc\_3.2\_nofixincludes\_2.patch:\b0   Предотвращает запуск скрипта fixincludes.\par
\b –prefix=/static:\b0   Это НЕ опечатка. При компиляции, GCC жестко прописывает пути, и нам необходимо передать путь /static в качестве префикса к скрипту ./configure. Реальный путь инсталляции мы укажем команде make install.\par
\b –enable\_languages=c:\b0   Указание собрать компилятор Си. Компилятор C++ будет собран позже, в Главе 6, когда мы будем перекомпилировать GCC. Для сборки других компиляторов, опустите параметр –enable\_languages.\par
\b echo «#define HAVE_GAS_HIDDEN 1»:\b0   Определим директиву ассемблера .hidden, для того чтобы впоследствии скомпилировать Glibc правильно.\par
\b make BOOT_LDFLAGS=\_static:\b0   Это эквивалент опции LDFLAGS=\_static, который мы задаем для использования статических ссылок при компиляции.\par
\b ln \_s gcc $LFS/static/bin/cc:\b0   Создание символической ссылки $LFS/static/bin/gcc, необходимой для некоторых пакетов.\par
Содержимое GCC\par
Последняя проверка: версия 3.1.\par
Программы\par
c++, c++filt, cc (link to gcc), cc1, cc1plus, collect2, cpp, cpp0, g++, gcc, gccbug, gcov и tradcpp0\par
Описания\par
cc, cc1, cc1plus, gcc\par
Компилятор C. Компилятор переводит код из текстового формата в формат, понятный компьютеру. После того, как исходный код скомпилирован в объектный файл, линкер создаст исполняемый файл из одного или нескольких объектных.\par
c++, cc1plus, g++\par
Компилятор C++, эквивалент cc, gcc etc.\par
c++filt\par
Язык C++ позволяет осуществлять перезагрузку функций, делая возможным написание многих функций с одним именем (с разным набором параметром). Все имена функций C++ закодированы в низкоуровневые метки ассемблера (этот процесс известен как mangling). c++filt совершает обратное действие: низкоуровневые имена переводятся (demangling) в имена, понятные пользователю, так что линкер избегает конфликта между перезагруженными функциями.\par
collect2\par
collect2 помогает в компиляции конструкторов.\par
cpp, cpp0\par
cpp осуществляет препроцессинг исходных файлов, например включает в них содержимое заголовочных файлов. Просто добавьте в ваш исходный файл строку вроде #include <filename>. Препроцессор вставит содержимое заголовочного файла.\par
gccbug\par
gccbug – скрипт, облегчающий создание сообщений об ошибках.\par
gcov\par
gcov анализирует программы, чтобы помочь в создании более эффективного и быстрого кода путем его оптимизации.\par
tradcpp0\par
На данный момент описания нет.\par
Библиотеки\par
libgcc.a, libgcc_eh.a, libgcc_s.so, libiberty.a, libstdc++.[a,so], libsupc++.a\par
Описания\par
libgcc, libgcc_eh, libgcc_s\par
Файлы поддержки gcc времени исполнения.\par
libiberty\par
libiberty – коллекция подпрограмм, используемых различными программами GNU, включая getopt, obstack, strerror, strtol и strtoul.\par
libstdc++\par
libstdc++ – библиотека C++. Она используется программами на C++ и содержит часто используемые функции. Таким образом, программисту не нужно писать стандартные функции (например, вывод строки текста на экран) с нуля при каждом создании программы.\par
libsupc++\par
libsupc++ предоставляет поддержку языка программирования C++. Помимо прочего, libsupc++ содержит функции для обработки исключений.\par
Зависимости GCC\par
Последняя проверка: версия 2.95.3.\par
Bash: sh Binutils: ar, as, ld, nm, ranlib Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, touch Find: find Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Patch: patch Sed: sed Sh\_utils: basename, dirname, echo, expr, hostname, sleep, true, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tail, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Grep\_2.5\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Estimated build time: 0.26 SBU Estimated required disk space: 5 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка Grep\par
Установка Grep осуществляется следующей командой:\par
\b LDFLAGS=\_static CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ./configure –prefix=$LFS/static –disable\_nls \'5c –disable\_perl\_regexp && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Grep\par
Последняя проверка: версия 2.5.\par
Программы\par
egrep (ссылка на grep), fgrep (ссылка на grep) и grep\par
Описания\par
egrep\par
egrep выводит строки файлов, совпадающие с образцом, заданном в виде расширенного регулярного выражения.\par
fgrep\par
fgrep выводит строки файлов, соответствующие списку заданных строк.\par
grep\par
grep выводит строки файлов, соответствующие регулярному выражению.\par
Зависимости Grep\par
Последняя проверка: версия 2.4.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Gzip\_1.2.4a\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.04 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Gzip\par
Для инсталляции Gzip выполните:\par
\b ./configure –prefix=$LFS/static && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Gzip\par
Последняя проверка: версия 1.2.4a.\par
Программы\par
gunzip (ссылка на gzip), gzexe, gzip, uncompress (ссылка на gunzip), zcat (ссылка на gzip), zcmp, zdiff, zforce, zgrep, zmore и znew\par
Описание\par
gunzip, uncompress\par
gunzip и uncompress распаковывают файлы, сжатые gzip.\par
gzexe\par
gzexe позволяет сжать исполняемые файлы и автоматически распаковывать их при запуске (уменьшается производительность ).\par
gzip\par
gzip уменьшает размер указанных файлов используя код Lempel\_Ziv (LZ77).\par
zcat\par
zcat распаковывает и выводит на стандартный вывод либо файлы из заданного списка, либо файл со стандартного ввода.\par
zcmp\par
zcmp применяет cmp к сжатым файлам.\par
zdiff\par
zdiff применяет diff к сжатым файлам.\par
zforce\par
zforce присваивает расширение .gz всем файлам gzip, так что они не будут сжаты дважды. Может быть полезно для файлов, чьи имена были изменены после их передачи.\par
zgrep\par
zgrep применяет grep к сжатым файлам.\par
zmore\par
zmore – фильтр, позволяющий поэкранный просмотр (не)сжатых текстовых файлов (вроде more).\par
znew\par
znew конвертирует файлы формата .Z (compress) в .gz (gzip).\par
Зависимости Gzip\par
Последняя проверка: версия 1.2.4a.\par
Bash: sh Binutils: as, ld, nm Fileutils: chmod, cp, install, ln, mv, rm Gcc: cc1, collect2, cpp, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Make\_3.79.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.26 SBU Необходимое место на диске: 8 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Make\par
Для инсталляции Make выполните:\par
\b ./configure –prefix=$LFS/static –disable\_nls && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Во время стадии make install на экран будет выведено следующее предупреждение:\par
chgrp: changing group of `/mnt/lfs/static/bin/make': Operation not permitted /mnt/lfs/static/bin/make needs to be owned by group kmem and setgid; otherwise the `\_l' option will probably not work. You may need special privileges to complete the installation of /mnt/lfs/static/bin/make.\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Не обращайте на него внимания. Программа make не должна принадлежать группе kmem и setgid для выполнения опции \i –l\i0   . (Данная опция говорит команде make не начинать новых заданий, если загрузка системы достигла определенного уровня.)\par
Содержимое Make\par
Последняя проверка: версия 3.79.1.\par
Программы\par
make\par
Описания\par
make\par
make автоматически определяет, какие части объемной программы нуждаются в рекомпиляции, и выполняет все необходимые для этого команды.\par
Зависимости Make\par
Последняя проверка: версия 3.79.1.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, install, ls, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Patch\_2.5.4\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.10 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Patch\par
Для инсталляции Patch выполните:\par
\b CPPFLAGS=\_D_GNU_SOURCE \'5c ./configure –prefix=$LFS/static && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b CPPFLAGS=\_D_GNU_SOURCE:\b0   Установка этого параметра исправляет ошибки инсталляции на платформах PPC и m68k. Этот параметр не помешает компиляции на других платформах, например на x86, поэтому мы устанавливаем его по умолчанию.\par
Содержимое Patch\par
Последняя проверка: версия 2.5.4.\par
Программы\par
patch\par
Описания\par
patch\par
patch модифицирует файл в соответствии с патчем. Патч обычно является списком, созданным diff, содержащим инструкции к изменению. Patch часто используется для исправлений в исходном коде, поскольку сохраняет время и место на диске. Например, имеется пакет объемом 1 MB. Следующая версия пакета имеет изменения только в 2 файлах. Новая версия может быть как новым пакетом в 1 MB или патчем в 1 KB. Таким образом, патчи позволяют избежать объемных загрузок.\par
Зависимости Patch\par
Последняя проверка: версия 2.5.4.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, grep Make: make Sed: sed Sh\_utils: echo, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sed\_3.02\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.09 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sed\par
Для инсталляции Sed выполните:\par
\b CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ====./configure –prefix=$LFS/static && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Sed\par
Последняя проверка: версия 3.02.\par
Программы\par
sed\par
Описания\par
sed\par
sed – редактор потоков. Он используется для основных преобразований текста на потоке ввода (файл или ввод из другого процесса).\par
Зависимости Sed\par
Последняя проверка: версия 3.02.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gcc: cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sh\_utils\_2.0\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.47 SBU Необходимое дисковое пространство: 42 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sh\_utils\par
Перед инсталляцией Sh\_utils необходимо применить патч, необходимый для избегания конфликта имен переменных с некоторыми версиями Glibc (обычно glibc\_2.1.x) при компиляции sh\_utils с использованием статических ссылок. Рекомендуем воспользоваться данным патчем вне зависимости от используемой версии glibc.\par
\b patch \_Np1 –I ../sh\_utils\_2.0.patch\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для инсталляции Sh\_utils выполните:\par
\b ./configure –prefix=$LFS/static \'5c –disable\_nls && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 На стадии make install следующее предупреждение будет выведено на экран:\par
WARNING: insufficient access; not installing su NOTE: to install su, run 'make install\_root' as root\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Не обращайте на него внимание. В соответствии с требованиями Sh\_utils для установки программы su, вы должны находиться в системе в режиме пользователя root. Смело проигнорируйте это предупреждение, т.к. на данном этапе команда su не нужна, мы установим ее должным образом при перекомпилировании пакета Sh\_utils в Главе 6.\par
Содержимое Sh\_utils\par
Последняя проверка: версия 2.0.\par
Программы\par
basename, chroot, date, dirname, echo, env, expr, factor, false, groups, hostid, id, logname, nice, nohup, pathchk, pinky, printenv, printf, pwd, seq, sleep, stty, su, tee, test, true, tty, uname, uptime, users, who, whoami и yes\par
Описания\par
basename\par
basename удаляет каталоги и суффиксы из имен файлов.\par
chroot\par
chroot запускает команду или оболочку в указанном корневом каталоге.\par
date\par
date выводит текущее время в указанном формате или устанавливает.\par
dirname\par
dirname удаляет суффиксы, не относящиеся к каталогам, из имен файлов.\par
echo\par
echo выводит строку текста.\par
env\par
env запускает программу в измененном окружении.\par
expr\par
expr вычисляет выражения.\par
factor\par
factor выводит разложение на простые множители всех указанных целых чисел.\par
false\par
false всегда завершается с кодом «ошибка».\par
groups\par
groups выводит группу, к которой принадлежит пользователь.\par
hostid\par
hostid выводит числовой идентификатор (шестнадцатеричный) текущего хоста.\par
id\par
id выводит пользовательский и групповой ID текущего или заданного пользователя.\par
logname\par
logname выводит регистрационное имя текущего пользователя.\par
nice\par
nice запускает программу с заданным приоритетом.\par
nohup\par
nohup выполняет команду, защищенную от зависаний, с выводом в журнальный файл.\par
pathchk\par
pathchk проверяет наличие файла.\par
pinky\par
pinky – простая утилита finger, показывающая информацию о конкретном пользователе.\par
printenv\par
printenv выводит значения переменных окружения.\par
printf\par
printf выводит форматированные данные (аналогично функции printf в C).\par
pwd\par
pwd выводит имя текущего каталога.\par
seq\par
seq выводит числа в заданном диапазоне с заданным шагом.\par
sleep\par
sleep делает задержку на указанное количество времени.\par
stty\par
stty выводит и изменяет настройки терминала.\par
su\par
su запускает командный интерпретатор с правами указанного пользователя и группы.\par
tee\par
tee считывает данные со стандартного ввода и записывает их на стандартный вывод и в файлы.\par
test\par
test проверяет типы файлов и сравнивает значения.\par
true\par
true всегда завершается с кодом «успех».\par
tty\par
tty выводит файловое имя терминала, подключенного к стандартному вводу.\par
uname\par
uname выводит информацию о системе.\par
uptime\par
uptime сообщает, как долго активна система.\par
users\par
users выводит имена пользователей, зарегистрированных на локальном хосте.\par
who\par
who показывает зарегистрированных пользователей.\par
whoami\par
whoami выводит имя пользователя, ассоциированное с текущим пользовательским ID.\par
yes\par
yes выводит 'y' или заданную строку до принудительного завершения.\par
Зависимости Sh\_utils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, chown, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Tar\_1.13\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.25 SBU Необходимое дисковое пространство: 10 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Tar\par
Для того чтобы использовать tar с файлами формата bzip2 напрямую, примените патч с FTP\_сервера LFS. Этот патч добавляет опцию \_j, которая работает с командой tar также как опция \_z (которая используется с файлами gzip).\par
Примените патч следующим образом:\par
\b patch \_Np1 \_i ../tar\_1.13.patch\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для инсталляции Tar выполните:\par
\b ./configure –prefix=$LFS/static –disable\_nls && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Tar\par
Последняя проверка: версия 1.13.\par
Программы\par
rmt и tar\par
Описания\par
rmt\par
rmt используется другими программами для удаленного управления приводом магнитных лент.\par
tar\par
tar – программа архивации, сохраняющая и извлекающая файлы из архивов tar.\par
Зависимости Tar\par
Последняя проверка: версия 1.13.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Patch: patch Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Texinfo\_4.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.47 SBU Необходимое дисковое пространство: 19 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Texinfo\par
Для установки Texinfo выполните:\par
\b LDFLAGS=\_static ./configure –prefix=$LFS/static \'5c –disable\_nls && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Texinfo\par
Последняя проверка: версия 4.2.\par
Программы\par
info, infokey, install\_info, makeinfo, texi2dvi и texindex\par
Описания\par
info\par
info читает документы Info, обычно находящиеся в /usr/share/info. Документы Info documents схожи с man pages, но содержат больше, чем простое объяснение опций программы.\par
infokey\par
infokey компилирует в бинарный формат исходный файл персонализаций Info.\par
install\_info\par
install\_info обновляет записи info. Когда запускается info, выводится список тем (т.е. доступных документов info). install\_info обновляет этот список. Если файлы info удалены вручную, необходимо также удалить тему в оглавлении. Для этого и используется данная программа. Она работает аналогично в случае добавления новых документов.\par
makeinfo\par
makeinfo транслирует документы Texinfo в различные форматы. Доступны: файлы info, простой текст и HTML.\par
texi2dvi\par
texi2dvi выводит документы Texinfo\par
texindex\par
texindex используется для сортировки оглавлений Texinfo.\par
Зависимости Texinfo\par
Последняя проверка: версия 4.0.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Textutils\_2.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.95 SBU Необходимое дисковое пространство: 49 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Textutils\par
Для инсталляции Textutils выполните:\par
\b CPPFLAGS=\_Dre_max_failures=re_max_failures2 \'5c ./configure –prefix=$LFS/static \'5c –disable\_nls && make LDFLAGS=\_static && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Textutils\par
Последняя проверка: версия 2.0.\par
Программы\par
cat, cksum, comm, csplit, cut, expand, fmt, fold, head, join, md5sum, nl, od, paste, pr, ptx, sort, split, sum, tac, tail, tr, tsort, unexpand, uniq и wc\par
Описание\par
cat\par
cat выводит файлы на стандартный вывод.\par
cksum\par
cksum выводит контрольную сумму CRC и объем в байтах каждого указанного файла.\par
comm\par
comm построчно сравнивает два отсортированных файла.\par
csplit\par
csplit выводит части файла, разделенные заданными строками, в файлы xx01, xx02, ..., и размер каждой части на стандартный вывод.\par
cut\par
cut выводит указанные строки из указанных файлов на стандартный вывод.\par
expand\par
expand конвертирует знаки табуляции в файле в пробелы и выводит результат на стандартный вывод.\par
fmt\par
fmt форматирует каждый абзац в указанных файлах и выводит результат на стандартный вывод.\par
fold\par
fold делает переносы вводимых строк из указанных файлов (по умолчанию, со стандартного ввода) и выводит результат на стандартный вывод.\par
head\par
head выводит первые x (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
join\par
join соединяет строки двух файлов в поля.\par
md5sum\par
md5sum выводит или проверяет контрольные суммы MD5.\par
nl\par
nl выводит каждый указанный файл на стандартный вывод, добавляя номера строк.\par
od\par
od выводит файл в различных форматах, по умолчанию в восьмеричном, на стандартный вывод.\par
paste\par
paste выводит строки, соответствующие заданным образцам из указанных файлов и разделенные символами табуляции, на стандартный вывод.\par
pr\par
pr разделяет файлы на страницы или колонки для распечатки.\par
ptx\par
ptx составляет оглавление файла.\par
sort\par
sort выводит на стандартный вывод построчно отсортированное слияние файлов.\par
split\par
split разбивает входной файл на части заданного размера PREFIXaa, PREFIXab, ...\par
sum\par
sum выводит контрольную сумму и количество занимаемых блоков каждого указанного файла.\par
tac\par
tac выводит каждый указанный файл на стандартный вывод last line first.\par
tail\par
tail выводит последние xx (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
tr\par
tr заменяет, вставляет, и/или удаляет символы из стандартного ввода, выводя результат на стандартный вывод.\par
tsort\par
tsort выводит полностью упорядоченные списки, учитывая уже проведенную сортировку указанных файлов.\par
unexpand\par
unexpand конвертирует пробелы в каждом файле в символы табуляции, выводя результат на стандартный вывод.\par
uniq\par
uniq удаляет повторяющиеся строки из отсортированного файла.\par
wc\par
wc выводит количество строк, слов и размер в байтах каждого указанного файла и сумму результатов, если указано более одного файла.\par
Зависимости Textutils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Perl: perl Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Util\_linux\_2.11u\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.09 SBU Необходимое дисковое пространство: 9 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Util\_linux\par
Мы не собираемся компилировать весь пакет целиком, т.к. на данном этапе нам нужны только программы mount и umount.\par
Для инсталляции Util\_linux выполните:\par
\b ./configure && make \_C lib && make \_C mount LDFLAGS=\_static mount umount && cp mount/\'7bmount,umount\'7d $LFS/static/bin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Зависимости Util\_linux\par
Последняя проверка: версия 2.11n.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, cp, install, ln, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp, cpp0 Glibc: rpcgen Grep: grep Make: make Sed: sed Sh\_utils: uname, whoami Textutils: cat\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 6. Установка основных компонентов системы\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В этой главе мы всерьез займемся установкой системы LFS. Сначала мы войдем в созданную в предыдущей главе мини\_систему Linux, создадим несколько вспомогательных вещей и перейдем к поочередной инсталляции всех пакетов.\par
Инсталляция программ довольно однообразна. Вероятно, можно было бы дать общие инструкции установки, а более подробно пояснять установку тех пакетов, которые требуют иного подхода. Однако мы решили предоставить полное руководство по установке для каждого пакета с целью минимизации возможных ошибок.\par
Если вы собираетесь воспользоваться оптимизациями компилятора в данной главе, см. соответствующее руководство по адресу http://hints.linuxfromscratch.org/hints/optimization.txt. Оптимизации компилятора позволяют ускорить выполнение той или иной программы, однако иногда они создают трудности при компиляции. В случае если пакет не компилируется с использованием оптимизаций, попробуйте скомпилировать его без них.\par
Настоятельно рекомендуется строго соблюдать порядок инсталляции пакетов в данной главе для того, чтобы не включить в программу ссылку на каталог /static. По той же причине, ни в коем случае не компилируйте несколько пакетов одновременно. Параллельная компиляция хоть и позволяет сэкономить время (особенно на двухпроцессорных системах), однако в этом случае в программу может быть встроена ссылка на каталог /static. После удаления данного каталога, программа будет давать сбои.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Отладочные символы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Большинство программ и библиотек по умолчанию компилируются с символами отладки. ( с опцией gcc \_g).\par
При отладке программы или библиотеки, скомпилированной с отладочной информацией, отладчик предоставляет не только адреса в памяти, но и имена алгоритмов и переменных.\par
Однако включение символов отладки значительно увеличивает размер программы или библиотеки. Для того, чтобы получить представление о размере отладочных символов, взглянем на пример:\par
оболочка bash, скомпилированная с отладочными символами: 1200 KB\par
оболочка bash, скомпилированная без отладочных символов: 480 KB\par
файлы glibc и gcc (/lib и /usr/lib) с отладочными символами: 87 MB\par
файлы glibc и gcc скомпилированная без отладочных символов: 16 MB\par
Размеры могут различаться в зависимости от использованного компилятора Си и библиотеки. При сопоставлении размера программы, скомпилированной с отладочными символами и без них, разница составляет примерно 2 – 5 раз.\par
Так как большинство пользователей никогда не используют отладчик, удаление этих символов позволит значительно сэкономить дисковое пространство.\par
Для удаления символов отладки из бинарного файла (файл a.out или бинарный файл ELF), выполните \b strip –strip\_debug filename\b0  . Допускается использование символа \b *\b0   для обработки нескольких файлов (например, \b strip –strip\_debug $LFS/static/bin/*\b0  ).\par
Для удобства, в главе 9 описана программа, удаляющая отладочные символы со всех программ и библиотек системы. Для получения дополнительных сведений по оптимизации, см. руководство: http://hints.linuxfromscratch.org/hints/optimization.txt.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вход в среду chroot\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для последующей инсталляции пакетов необходимо войти в среду chroot. Для этого войдите в систему в режиме пользователя root, т.к. только root он имеет право выполнять команду \b chroot\b0  .\par
После перехода в режим пользователя root, выполните следующую команду для входа в среду chroot:\par
\b chroot $LFS /static/bin/env \_i \'5c\b0  \par
\b HOME=/root TERM=$TERM PS1='\'5cu:\'5cw\'5c$ ' \'5c\b0  \par
\b PATH=/bin:/usr/bin:/sbin:/usr/sbin:/static/bin \'5c\b0  \par
\b /static/bin/bash –login\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Команда \b env\b0   с опцией \b \_i\b0   очистит значения всех переменных среды chroot. Затем только переменные HOME, TERM, PS1 и PATH будут заданы. Конструкция TERM=$TERM устанавливает значение TERM для среды chroot равным значению TERM вне этой среды; эта переменная необходима для корректной работы программ типа vim и less. Если вы нуждаетесь в других переменных, например CFLAGS или CXXFLAGS, самое время задать их снова.\par
Отныне нет необходимости использовать переменную LFS, т.к. все действия выполняются в файловой системе LFS (то, что оболочка считает / , на самом деле является /mnt/lfs).\par
Обратите внимание, что все команды, начиная с данной главы, следует выполнять из среды chroot. Если по какой\_то причине (например, перезагрузка системы) вы вышли из этой среды, прежде чем возобновить инсталляцию, заново войдите в нее и монтируйте файловую систему proc (см. далее).\par
Заметьте, что приглашение bash выглядит следующим образом: «I have no name!» Это нормально, т.к. пакет Glibc еще не был установлен.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Изменение прав\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Первое что мы сделаем в режиме пользователя \i root\i0   – передадим права файлов и директорий, установленных в Главе 5, пользователю \i root\i0  . Это необходимо, т.к. когда в дальнейшем мы оставим директорию /static добавим несколько пользователей, один из них может оказаться владельцем программы со статическими ссылками, а это не самая лучшая идея.\par
Выполните следующую команду для передачи прав на все программы, скомпилированные с использованием статических ссылок:\par
\b chown \_R 0:0 /static\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Эта команда использует «0:0» вместо «root:root», т.к. оболочка не может резольвировать имя «root», т.к. пакет glibc еще не был установлен.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание директорий\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Давайте создадим структуру файловой системы LFS. Начнем с создания более или менее стандартного дерева с помощью следующих команд:\par
\b mkdir \_p /\'7bbin,boot,dev/pts,etc/opt,home,lib,mnt,proc\'7d &&\b0  \par
\b mkdir \_p /\'7broot,sbin,tmp,usr/local,var,opt\'7d &&\b0  \par
\b for dirname in /usr /usr/local\b0  \par
\b do\b0  \par
\b mkdir $dirname/\'7bbin,etc,include,lib,sbin,share,src\'7d\b0  \par
\b ln \_s share/\'7bman,doc,info\'7d $dirname\b0  \par
\b mkdir $dirname/share/\'7bdict,doc,info,locale,man\'7d\b0  \par
\b mkdir $dirname/share/\'7bnls,misc,terminfo,zoneinfo\'7d\b0  \par
\b mkdir $dirname/share/man/man\'7b1,2,3,4,5,6,7,8\'7d\b0  \par
\b done &&\b0  \par
\b mkdir /var/\'7block,log,mail,run,spool\'7d &&\b0  \par
\b mkdir \_p /var/\'7btmp,opt,cache,lib/misc,local\'7d &&\b0  \par
\b mkdir /opt/\'7bbin,doc,include,info\'7d &&\b0  \par
\b mkdir \_p /opt/\'7blib,man/man\'7b1,2,3,4,5,6,7,8\'7d\'7d &&\b0  \par
\b ln \_s ../var/tmp /usr\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 По умолчанию директории создаются с правами доступа 755, однако это подходит не для всех директорий. Мы сделаем два изменения: для домашнего каталога root и для каталога временных файлов.\par
\b chmod 0750 /root &&\b0  \par
\b chmod 1777 /tmp /var/tmp\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Первое изменение гарантирует, что не все пользователи имеют доступ к директории /root directory – аналогичные действия выполняет обычный пользователь со своим домашним каталогом. Второе изменение дает любому пользователю право на запись в директории /tmp и /var/tmp, однако не разрешает удалять из них файлы других пользователей. Удаление чужих файлов определяется параметром «sticky bit» – наивысший двоичный знак в двоичной маске 1777.\par
Итак, после создания директорий переместите tar\_архивы исходных кодов пакетов, загруженных по инструкциям Главы 3, в некоторый самостоятельно созданный подкаталог в /usr/src.\par
Соответствие FHS\par
При создании директорий мы основывались на стандарте FHS (см. http://www.pathname.com/fhs/). Помимо созданных каталогов данный стандарт ставит условием наличие каталогов /usr/local/games и /usr/share/games, но, по нашему мнению, для базовой системы они не нужны. Однако можете смело привести свою систему к полному соответствию с FHS. Что касается структуры каталога /usr/local/share, стандарт FHS строго не оговаривает его содержимое, так что мы решили создать в нем необходимые, по нашему убеждению, подкаталоги.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Монтирование файловой системы proc\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для обеспечения корректной работы некоторых программ, необходимо установить файловую систему proc в среде chroot. Так как файловая система может быть монтирована сколько угодно раз и в каких угодно местах, проблем с тем, что файловая система proc уже монтирована в вашем базовом дистрибутиве, возникнуть не должно. Тем более, что proc – виртуальная файловая система.\par
Для монтирования файловой системы proc в /proc, выполните:\par
\b mount proc /proc \_t proc\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Вероятно, следующие предупреждения команды mount будут выведены на экран:\par
warning: can't open /etc/fstab: No such file or directory\par
not enough memory\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Не обращайте на них особого внимания – наша система полностью не установлена, и некоторые файлы отсутствуют. Само монтирование файловой системы будет выполнено, и на данном этапе нам больше ничего не требуется.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание символической ссылки mtab\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Следующий шаг – создание символической ссылки /etc/mtab на /proc/mounts. Для этого выполните:\par
\b ln \_sf /proc/mounts /etc/mtab\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Создание этой символической ссылки предотвращает возможные проблемы при монтировании / только для чтения, когда информация в /etc/mtab устарела. Символическая ссылка на /proc/mounts позволяет всегда иметь свежую информацию о монтированных устройствах.\par
Примечание: Использование данной символической ссылки предполагает, что в ядро вашей системы встроена поддержка файловой системы proc. Данная поддержка встроена по умолчанию, не удаляйте ее, если вы не уверены в своих действиях, т.к. множество других вещей кроме символической ссылки /etc/mtab зависят от нее. Вкратце, убедитесь, что поддержка файловой системы proc включена в ядре.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание символических ссылок bash и sh\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Некоторые программы при компиляции прописывают ссылки на пока не существующие программы. Для предотвращения связанных с этим проблем, создадим символические ссылки /bin/bash и /bin/sh, указывающие на программу bash, скомпилированную с использованием статических ссылок.\par
Для создания символических ссылок /bin/bash и /bin/sh, выполните:\par
\b ln \_s /static/bin/bash /bin/bash &&\b0  \par
\b ln \_s bash /bin/sh\b0  \par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание файлов passwd и group\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для возможности входа в систему под учетной записью root и для распознавания оболочкой имени «root», необходимо создать соответствующие записи в файлах /etc/passwd и /etc/group.\par
Для создания файла /etc/passwd, выполните:\par
\b echo «root:x:0:0:root:/root:/bin/bash» > /etc/passwd\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пароль для root ( "x" всего лишь метка заполнения) будет задан позже.\par
Для создания файла /etc/group, выполните:\par
\b cat > /etc/group << «EOF»\b0  \par
root:x:0:\par
bin:x:1:\par
sys:x:2:\par
kmem:x:3:\par
tty:x:4:\par
tape:x:5:\par
daemon:x:6:\par
floppy:x:7:\par
disk:x:8:\par
lp:x:9:\par
dialout:x:10:\par
audio:x:11:\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Созданные группы не относятся ни к какому стандарту – их использует скрипт MAKEDEV, см. след. секцию. Помимо группы «root», стандарт LSB рекомендует наличие только группы «bin», с GID <идентификатор группы> равным 1. Все остальные названия групп и их GID пользователю разрешается выбирать произвольно, т.к. грамотно написанные программы не зависят от номеров GID, а используют название группы.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание устройств (Makedev\_1.7)\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.07 SBU Необходимое дисковое пространство: 50 KB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Создание файлов устройств\par
Примите к сведению, что при распаковке архива MAKEDEV\_1.7.bz2 не создается директория для перехода, т.к. архив содержит только файл скрипта.\par
Подготовим создание файлов устройств следующей командой:\par
\b cp MAKEDEV\_1.7 /dev/MAKEDEV && cd /dev && chmod 754 MAKEDEV\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Большинство пользователей захотят сразу же создать файлы устройств командой:\par
\b ./MAKEDEV \_v generic\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Однако, если вы планируете использовать devpts, выполните:\par
\b ./MAKEDEV \_v generic\_nopty\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы не уверены в своих действиях, для создания всех необходимых устройств лучше выполнить команду \b ./MAKEDEV \_v generic\b0  . В случае, если вы уверены, что собираетесь использовать devpts, вторая команда пропускает создание ненужных устройств.\par
MAKEDEV создает устройства с hda[1\_20] по hdh[1\_20] и многие другие подобные файлы дисковых узлов, однако имейте ввиду, что из\_за ограничений ядра на максимальное количество разделов многие из них будут недоступны.\par
Пояснения команд\par
\b ./MAKEDEV \_v generic:\b0   Эта команда создает огромное количество файлов устройств. Обычно, это все, что вам нужно. Однако существует вероятность, что некоторые специфические файлы для ваших аппаратных устройств отсутствуют. Их можно создать командой ./MAKEDEV \_v <устройство>. Опция \b generic\_nopty\b0   в создает, в основном, те же устройства, что и опция \b generic\b0  , за исключением тех, которые не нужны при использовании devpts.\par
Содержимое MAKEDEV\par
Последняя проверка: версия 1.5.\par
Программы\par
MAKEDEV\par
Описания\par
MAKEDEV\par
MAKEDEV – скрипт, создающий необходимые статические связи с устройствами, обычно располагающимися в каталоге /dev. Детальная информация о связях с устройствами может быть найдена в дереве исходных кодов ядра Linux в Documentation/devices.txt.\par
Зависимости MAKEDEV\par
Последняя проверка: версия 1.5.\par
Bash: sh Fileutils: chmod, chown, cp, ln, mknod, mv, rm Grep: grep Sh\_utils: expr, id\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Linux\_2.4.19\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.02 Необходимое место на диске: 142 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка заголовочных файлов ядра\par
На данном этапе мы не будем компилировать ядро – мы сделаем это после установки всех пакетов. Однако, в связи с тем, что некоторые пакеты требуют заголовочных файлов ядра, мы распакуем ядро, настроим его и скопируем заголовки туда, где их будут искать пакеты при компиляции.\par
Скопируем заголовки ядра, выполнив следующие команды:\par
\b ln \_s /static/bin/pwd /bin/pwd && make mrproper && make include/linux/version.h && make symlinks && mkdir /usr/include/asm && cp include/asm/* /usr/include/asm && cp \_R include/asm\_generic /usr/include && cp \_R include/linux /usr/include && touch /usr/include/linux/autoconf.h && rm /bin/pwd\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b ln \_s /static/bin/pwd /bin/pwd\b0  : В исходных кодах ядра путь к программе pwd прописан как /bin/pwd, поэтому создадим временную символическую ссылку, а в конце удалим ее.\par
\b make mrproper\b0  : Выполнение данной команды обеспечивает чистое дерево исходников ядра. Команда разработчиков ядра рекомендует выполнять эту команду перед каждой компиляцией ядра, даже если вы только что распаковали исходные коды из tar\_архива.\par
\b make include/linux/version.h\b0   и \b make symlinks\b0  : Создадим файл include/linux/version.h file и символическую ссылку include/asm для конкретной платформы.\par
\b mkdir /usr/include/asm\b0   , \b cp include/asm/* /usr/include/asm\b0   и \b cp \_R include/asm\_generic /usr/include\b0  : Эти команды копируют заголовочные файлы ядра ассемблера для конкретной платформы в /usr/include/asm и /usr/include/asm\_generic.\par
\b cp \_R include/linux /usr/include\b0  : Эта команда копирует кросс\_платформенные файлы заголовков в /usr/include.\par
\b touch /usr/include/linux/autoconf.h\b0  : Создаем пустой файл autoconf.h. Так как на данном этапе мы не конфигурируем ядро, необходимо вручную создать этот файл для некоторых заголовочных файлов ядра, использующих его, чтобы избежать ошибок при компиляции.\par
Почему мы копируем заголовки ядра, а не создаем для них символические ссылки?\par
Раньше было принято создавать символические ссылки директорий /usr/include/\'7blinux,asm\'7d на /usr/src/linux/include/\'7blinux,asm\'7d. Однако, это была плохая идея, как объясняет Линус Торвальдс в списке рассылки ядра Linux (Linux Kernel Mailing List, отрывок):\par
Тем, кто компилирует новые ядра, настоятельно рекомендую: – не создавать символических ссылок (кроме той, которую создает само ядро, «linux/include/asm», символическая ссылка, которая используется при внутренней компиляции ядра.) Да, именно так делаю я. В моем каталоге /usr/src/linux есть заголовки старого ядра 2.2.13, несмотря на то, что я не использовал ядро 2.2.13 уже очень давно. Однако именно с этими заголовками компилировался пакет glibc, соответственно именно эти заголовки соответствуют файлам объектов библиотеки. Также именно такое положение вещей являлось рекомендуемым на протяжении последних пяти лет. Я не могу понять, почему вся эта заморочка с символическими ссылками все еще существует, как зомби. Практически во всех дистрибутивах есть эта неработающая символическая ссылка, и люди до сих пор помнят, что исходники ядра Linux должны находится в «/usr/src/linux», несмотря на то, что это уже давно не так.\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Наиболее важная часть сообщения Линуса заключается в том, что файлы заголовков должны быть именно теми, \i с которыми компилировался пакет glibc\i0  . Это те заголовки, которые следует использовать в будущем при компиляции других пакетов, т.к. именно они соответствуют файлам библиотек объектного кода. Копируя заголовки, мы удостоверяемся, что они останутся доступными, если позже мы решим обновить ядро.\par
Заметьте, что нет ничего страшного в том, что исходные коды ядра находятся в директории /usr/src/linux. Главное, чтобы у вас не было символических ссылок /usr/include/\'7blinux,asm\'7d.\par
Содержимое Linux\par
Последняя проверка: версия 2.4.18.\par
Файлы поддержки\par
Ядро Linux и его заголовочные файлы\par
Описания\par
Ядро Linux\par
Ядро – основа любой системы Linux. Когда компьютер включается и загружает Linux, первое, что загружается – ядро. Ядро инициализирует аппаратные компоненты системы: последовательные и параллельные порты, звуковые и сетевые карты, контроллеры IDE и SCSI и многое другое. In a nutshell the kernel makes the hardware available so that the software can run.\par
linux kernel headers\par
Это файлы, которые мы копируем в /usr/include/\'7blinux,asm\'7d в 5\_й главе. Они должны соответствовать тем, с которым был скомпилирован glibc, и поэтому \i не\i0   должны быть заменены при смене ядра. Они имеют ключевое значение для компиляции многих программ.\par
Зависимости Linux\par
Последняя проверка: версия 2.4.17.\par
Bash: sh Binutils: ar, as, ld, nm, objcopy Fileutils: cp, ln, mkdir, mv, rm, touch Findutils: find, xargs Gcc: cc1, collect2, cpp0, gcc Grep: grep Gzip: gzip Make: make Gawk: awk Modutils: depmod, genksyms Net\_tools: dnsdomainname, hostname Sed: sed Sh\_utils: basename, date, expr, pwd, stty, uname, whoami, yes Textutils: cat, md5sum, sort, tail\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Man\_pages\_1.52\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.01 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Man\_pages\par
Для инсталляции Man\_pages выполните:\par
\b make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Man\_pages\par
Последняя проверка: версия 1.52.\par
Файлы поддержки\par
Различные страницы руководства, не поставляемые с пакетами\par
Описания\par
Страницы руководства\par
Примеры предоставляемых страниц руководства – описания всех функций C and C++, файлов /dev/ и многое другое.\par
Зависимости Man\_pages\par
Последняя проверка: версия 1.47.\par
Bash: sh Fileutils: install Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Glibc\_2.2.5\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 14.71 SBU Необходимое дисковое пространство: 369 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Glibc\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Перед выполнением инсталляционных инструкций войдите в каталог glibc\_2.2.5 и распакуйте архив glibc\_linuxthreads в каталоге glibc\_2.2.5, а не в /usr/src.\par
Этот пакет известен своим нестабильным поведением при компиляции с измененными опциями оптимизации (включая опции \_march и \_mcpu). Glibc рекомендуется компилировать с настройками по умолчанию. Следовательно, если вы задали переменные такие как CFLAGS или CXXFLAGS, изменяющие уровень оптимизации по умолчанию, рекомендуется убрать их при сборке пакета Glibc. Изменяя оптимизации для Glibc, вы действуете на свой страх и риск.\par
Также не стоит запускать скрипт configure с опцией –enable\_kernel. Это может вызвать ошибки сегментации при ссылке на него пакетов вроде fileutils, make и tar.\par
Вообще, чтобы не рисковать, рекомендуем компилировать Glibc в точности как указано в этом разделе.\par
Для инсталляции Glibc выполните:\par
\b patch \_Np1 \_i ../glibc\_2.2.5\_2.patch && touch /etc/ld.so.conf && mkdir ../glibc\_build && cd ../glibc\_build && ../glibc\_2.2.5/configure –prefix=/usr –disable\_profile \'5c –enable\_add\_ons –libexecdir=/usr/bin && echo «cross\_compiling = no» > configparms && make && make install && make localedata/install\_locales && exec /static/bin/bash –login\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Вместо выполнения \b make localedata/install\_locales\b0   можно установить только те локали, которые вам необходимы с помощью команды localedef. Более подробную информацию можно найти в файле INSTALL в директории glibc\_2.2.5. Не забудьте создать директорию /usr/lib/local, т.к. \b localedef\b0   предполагает ее наличие.\par
На данном этапе мы не будем инсталлировать страницы руководства потоков (The Linux Threads man pages), т.к. они требуют функционирующего пакета Perl. Мы вернемся к их инсталляции после установки Perl.\par
Во время стадии configure на экран будет выведено следующее предупреждение:\par
configure: warning: *** These auxiliary programs are missing or too old: msgfmt *** some features will be disabled. *** Check the INSTALL file for required versions.\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Отсутствие файла msgfmt (из пакета gettext, который мы установим позже в данной главе) не вызовет никаких проблем. Файл msgfmt используется для генерирования бинарных файлов перевода, которые позволяют системе общаться на другом языке. Так как эти файлы перевода уже сгенерированы, в использовании msgfmt нет необходимости. Нам понадобился бы msgfmt лишь в том случае, если мы изменили исходники файлов перевода (файлы *.po в подкаталоге po), т.к. нам пришлось бы заново генерировать бинарные файлы.\par
Пояснения команд\par
\b patch \_Np1 \_i ../glibc\_2.2.5\_2.patch:\b0   Этот патч переводит все упоминания о $(PERL) на /usr/bin/perl в файле malloc/Makefile. Это необходимо, т.к. Glibc не может определить местонахождение программ Perl, так как пакет Perl еще не был установлен. Данный патч также заменяет все упоминания о \i root\i0   на \i 0\i0   в файле login/Makefile. Это необходимо, потому что сам пакет Glibc еще не установлен, и выявление идентификационного номера пользователя <userid> из имени пользователя невозможно. К примеру, команда \b chown root file\b0   не будет работать, в то время как при замене имени пользователя на userid, программа будет выполнена.\par
Данный патч также устраняет некоторые другие ошибки, например, «errlist», «dns resolver», «xdr_array», «calloc», «thread exit», «udivdi3», «math test», «restrict_arr» и «divbyzero». Для получения более подробной информации, см. http://www.zipworld.com.au/~gschafer/lfs\_tweaks.html.\par
\b touch /etc/ld.so.conf:\b0   Один из заключительных шагов установки Glibc installation – выполнение команды ldconfig для обновления динамического кэша загрузки. Если этот файл не существует, инсталляция завершится с ошибкой, что не может прочесть файл. Для избегания подобной ошибки, мы просто создаем пустой файл (в случае пустого файла, Glibc будет по умолчанию использовать каталоги /lib и /usr/lib).\par
\b –disable\_profile:\b0   Отменяет компиляцию библиотек с профильной информацией. Если вы собираетесь использовать профили, пропустите эту опцию.\par
\b –enable\_add\_ons:\b0   Включает дополнительные модули, в нашем случае linuxthreads.\par
\b –libexecdir=/usr/bin:\b0   Инсталлирует программу pt_chown в каталог /usr/bin.\par
\b echo «cross\_compiling = no» > configparms:\b0   Этой командой мы даем понять, что компилируем пакет только для нашей системы. Кросс\_компиляция используется, например, для того, чтобы скомпилировать пакет для системы Apple Power PC на Intel\_совместимом компьютере. Glibc по умолчанию полагает, что мы кросс\_компилируем, потому что не может скомпилировать тестовую программу для проверки, т.к. сам пакет Glibc еще не установлен.\par
\b exec /static/bin/bash –login:\b0   Данная программа запустит новый сеанс оболочки bash вместо текущего. Мы, таким образом, избавимся от приглашения «I have no name!» командной строки, которое было вызвано невозможностью bash получить имя пользователя из userid (из\_за отсутствия Glibc).\par
Содержимое Glibc\par
Последняя проверка: версия 2.2.5.\par
Программы\par
catchsegv, gencat, getconf, getent, glibcbug, iconv, iconvconfig, ldconfig, ldd, lddlibc4, locale, localedef, mtrace, nscd, nscd_nischeck, pcprofiledump, pt_chown, rpcgen, rpcinfo, sln, sprof, tzselect, xtrace, zdump и zic\par
Описания\par
catchsegv\par
catchsegv может быть использования для слежения за состоянием стека, когда выполнение программы прерывается из\_за ошибки распределения памяти.\par
gencat\par
gencat генерирует каталоги сообщений.\par
getconf\par
getconf отображает значения переменных, зависящих от системной конфигурации.\par
getent\par
getent позволяет получить записи административной базы данных.\par
glibcbug\par
glibcbug создает сообщение об ошибке в glibc и отправляет по указанному адресу сообщения об ошибках.\par
iconv\par
iconv осуществляет преобразование наборов символов.\par
iconvconfig\par
iconvconfig создает конфигурационные файлы для модулей iconv.\par
ldconfig\par
ldconfig настраивает привязки времени исполнения динамического линкера.\par
ldd\par
ldd выводит список разделяемых библиотек, необходимых заданным программам.\par
lddlibc4\par
lddlibc4 используется ldd при работе с объектными файлами.\par
locale\par
locale – скрипт на Perl, разрешающий (или запрещающий) компилятору использование локалей POSIX для встроенных операций.\par
localedef\par
localedef компилирует спецификации локалей.\par
mtrace\par
mtrace выводит путь multicast от источника к получателю (запрос IP trace).\par
nscd\par
nscd – демон, предоставляющий кэш для большинства запросов DNS.\par
nscd_nischeck\par
nscd_nischeck проверяет нужен или нет защищенный режим для запроса NIS+.\par
pcprofiledump\par
pcprofiledump выводит информацию, полученной из профиля PC.\par
pt_chown\par
pt_chown устанавливает владельца, группу и права доступа подчиненного псевдотерминала в соответствии с основным псевдотерминалом, переданном в описании `3'. Это вспомогательная программа для функции `grantpt'. Не предназначается для прямого запуска из командной строки.\par
rpcgen\par
rpcgen генерирует код C для реализации протокола RPC.\par
rpcinfo\par
rpcinfo делает запрос RPC к серверу.\par
sln\par
sln символически связывает dest и source. Программа собрана статически. Использование sln полезно для создания символических ссылок на динамические библиотеки, если система динамического связывания по какой\_то причине нефункциональна.\par
sprof\par
sprof выводит информацию о разделяемом объекте.\par
tzselect\par
tzselect получает от пользователя информацию от его местоположении и выводит на стандартный вывод значение текущей временной зоны.\par
xtrace\par
xtrace отслеживает исполнение программы, выводя исполняемые в данный момент функции.\par
zdump\par
zdump – сохраняет значение временной зоны.\par
zic\par
zic – компилятор временных зон.\par
Библиотеки\par
ld.so, libBrokenLocale.[a,so], libBrokenLocale_p.a, libSegFault.so, libanl.[a,so], libanl_p.a, libbsd\_compat.a, libc.[a,so], libc_nonshared.a, libc_p.a, libcrypt.[a,so], libcrypt_p.a, libdl.[a,so], libdl_p.a, libg.a, libieee.a, libm.[a,so], libm_p.a, libmcheck.a, libmemusage.so, libnsl.a, libnsl_p.a, libnss_compat.so, libnss_dns.so, libnss_files.so, libnss_hesiod.so, libnss_nis.so, libnss_nisplus.so, libpcprofile.so, libpthread.[a,so], libpthread_p.a, libresolv.[a,so], libresolv_p.a, librpcsvc.a, librpcsvc_p.a, librt.[a,so], librt_p.a, libthread_db.so, libutil.[a,so] и libutil_p.a\par
Описания\par
ld.so\par
ld.so – вспомогательная программа для исполняемых файлов разделяемых библиотек.\par
libBrokenLocale, libBrokenLocale_p\par
Используется многими программами, например Mozilla, для использования поврежденных локалей.\par
libSegFault\par
libSegFault управляет сигналами ошибок распределения памяти, также пытается их перехватить.\par
libanl, libanl_p\par
libanl – библиотека асинхронных запросов DNS.\par
libbsd\_compat\par
libbsd\_compat предоставляет переносимость, необходимую для запуска некоторых программ в Linux.\par
libc, libc_nonshared, libc_p\par
Эти файлы образуют основную библиотеку C. Библиотека C – набор часто используемых в программах функций. Таким образом, программисту не нужно писать свои функции для каждой задачи. Большинство стандартных операций вроде вывода строки на экран уже готовы к использованию.\par
Библиотека C (в общем случае, любая библиотека) существует как в динамическом, так и статическом виде. Вкратце, когда программа использует статическую библиотеку, код из библиотеки копируется в исполняемый файл. При использовании динамической библиотеки, код из библиотеки не добавляется в исполняемый файл, а загружается только во время исполнения программы. Это позволяет уменьшить размер программ. За подробностями обращайтесь к документации библиотеки C.\par
libcrypt, libcrypt_p\par
libcrypt – криптографическая библиотека.\par
libdl, libdl_p\par
libdl – библиотека интерфейсов динамической линковки.\par
libg\par
libg – библиотека времени исполнения g++.\par
libieee\par
libieee – IEEE библиотека операций с числами с плавающей запятой.\par
libm, libm_p\par
libm – математическая библиотека.\par
libmcheck\par
libmcheck – содержит код, выполняемый при загрузке.\par
libmemusage\par
libmemusage – используется memusage для сбора информации о памяти, используемой программой.\par
libnsl, libnsl_p\par
libnsl – библиотека сетевых сервисов.\par
libnss_compat, libnss_dns, libnss_files, libnss_hesiod, libnss_nis, libnss_nisplus\par
Основная идея – поместить реализацию различных сервисов доступа к базам данных в отдельные модули. Преимущества:\par
поставщики могут добавлять новые сервисы, не включая их в C библиотеку GNU,\par
модули могут быть независимо обновлены,\par
Библиотека C имеет меньший размер.\par
libpcprofile\par
Код, используемый ядром для отслеживания времени, затрачиваемого процессором на исполнение функций, отдельных строк кода и инструкций.\par
libpthread, libpthread_p\par
POSIX библиотека потоков.\par
libresolv, libresolv_p\par
Библиотека позволяет DNS\_серверам создавать, посылать и интерпретировать пакеты.\par
librpcsvc, librpcsvc_p\par
Библиотека предоставляет различные сервисы RPC.\par
librt, librt_p\par
Библиотека предоставляет большинство интерфейсов, описанных POSIX.1b Realtime Extension.\par
libthread_db\par
Библиотека полезна для создания отладчиков для многопотоковых приложений.\par
libutil, libutil_p\par
Содержит код «стандартных» функций, используемых многими утилитами Unix.\par
Зависимости Glibc\par
Последняя проверка: версия 2.2.5.\par
Bash: sh Binutils: ar, as, ld, ranlib, readelf Diffutils: cmp Fileutils: chmod, cp, install, ln, mknod, mv, mkdir, rm, touch Gcc: cc, cc1, collect2, cpp, gcc Grep: egrep, grep Gzip: gzip Make: make Gawk: gawk Sed: sed Sh\_utils: date, expr, hostname, pwd, uname Texinfo: install\_info, makeinfo Textutils: cat, cut, sort, tr\par
Установка GCC\_3.2\par
Приблизительное время компиляции: 13.26 SBU Необходимое дисковое пространство: 221 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция GCC\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Этот пакет известен своим нестабильным поведением при компиляции с измененными опциями оптимизации (включая опции \_march и \_mcpu). GCC рекомендуется компилировать с настройками по умолчанию. Следовательно, если вы задали переменные такие как CFLAGS или CXXFLAGS, изменяющие уровень оптимизации по умолчанию, рекомендуется убрать их при сборке пакета GCC. Изменяя оптимизации для GCC, вы действуете на свой страх и риск.\par
Для инсталляции GCC выполните приведенные ниже команды, собирающие компиляторы языка Си и С++. Также можно установить компиляторы других языков программирования из пакета GCC. В случае, если вы хотите инсталлировать все компиляторы из пакета GCC, уберите опцию –enable\_languages=c,c++ из команды configure. Для получения информации о доступных компиляторах, см документацию пакета GCC.\par
Примечание: инсталляция других компиляторов не тестировалась разработчиками проекта LFS.\par
\b patch \_Np1 \_i ../gcc\_3.2.patch && mkdir ../gcc\_build && cd ../gcc\_build && ../gcc\_3.2/configure –prefix=/usr –enable\_shared \'5c –enable\_languages=c,c++ –enable\_threads=posix \'5c –with\_slibdir=/lib –enable\___cxa_atexit \'5c –enable\_clocale=gnu && make bootstrap && make install && ln \_s ../usr/bin/cpp /lib && ln \_s ../bin/cpp /usr/lib && ln \_s gcc /usr/bin/cc\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснение команд\par
\b –enable\_threads=posix:\b0   Эта опция включает обработку исключений в многопоточном коде на С++.\par
\b –enable\___cxa_atexit:\b0   Эта опция позволит использовать shared\_библиотеки C++ и программы, написанные на C++, с другими дистрибутивами Linux.\par
\b –enable\_clocale=gnu:\b0   Существует опасность, что у некоторых пользователей будут компилироваться ABI\_несовместимые библиотеки С++, если glibc localedata не установлен полностью. Использование опции –enable\_clocale=gnu гарантирует корректную компиляцию во всех случаях. Если вы не хотите использовать эту опцию, удостоверьтесь, что по крайней мере, устанавливается локаль \i de_DE\i0  . Когда GCC находит эту конкретную локаль, выполняется верный режим локали (\i gnu\i0  ).\par
Содержимое GCC\par
Последняя проверка: версия 3.1.\par
Программы\par
c++, c++filt, cc (link to gcc), cc1, cc1plus, collect2, cpp, cpp0, g++, gcc, gccbug, gcov и tradcpp0\par
Описания\par
cc, cc1, cc1plus, gcc\par
Компилятор C. Компилятор переводит код из текстового формата в формат, понятный компьютеру. После того, как исходный код скомпилирован в объектный файл, линкер создаст исполняемый файл из одного или нескольких объектных.\par
c++, cc1plus, g++\par
Компилятор C++, эквивалент cc, gcc etc.\par
c++filt\par
Язык C++ позволяет осуществлять перезагрузку функций, делая возможным написание многих функций с одним именем (с разным набором параметром). Все имена функций C++ закодированы в низкоуровневые метки ассемблера (этот процесс известен как mangling). c++filt совершает обратное действие: низкоуровневые имена переводятся (demangling) в имена, понятные пользователю, так что линкер избегает конфликта между перезагруженными функциями.\par
collect2\par
collect2 помогает в компиляции конструкторов.\par
cpp, cpp0\par
cpp осуществляет препроцессинг исходных файлов, например включает в них содержимое заголовочных файлов. Просто добавьте в ваш исходный файл строку вроде #include <filename>. Препроцессор вставит содержимое заголовочного файла.\par
gccbug\par
gccbug – скрипт, облегчающий создание сообщений об ошибках.\par
gcov\par
gcov анализирует программы, чтобы помочь в создании более эффективного и быстрого кода путем его оптимизации.\par
tradcpp0\par
На данный момент описания нет.\par
Библиотеки\par
libgcc.a, libgcc_eh.a, libgcc_s.so, libiberty.a, libstdc++.[a,so], libsupc++.a\par
Описания\par
libgcc, libgcc_eh, libgcc_s\par
Файлы поддержки gcc времени исполнения.\par
libiberty\par
libiberty – коллекция подпрограмм, используемых различными программами GNU, включая getopt, obstack, strerror, strtol и strtoul.\par
libstdc++\par
libstdc++ – библиотека C++. Она используется программами на C++ и содержит часто используемые функции. Таким образом, программисту не нужно писать стандартные функции (например, вывод строки текста на экран) с нуля при каждом создании программы.\par
libsupc++\par
libsupc++ предоставляет поддержку языка программирования C++. Помимо прочего, libsupc++ содержит функции для обработки исключений.\par
Зависимости GCC\par
Последняя проверка: версия 2.95.3.\par
Bash: sh Binutils: ar, as, ld, nm, ranlib Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, touch Find: find Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Patch: patch Sed: sed Sh\_utils: basename, dirname, echo, expr, hostname, sleep, true, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tail, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Zlib\_1.1.4\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.07 SBU Необходимое дисковое пространство: 1 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Zlib\par
Для инсталляции Zlib выполните:\par
\b ./configure –prefix=/usr –shared && make LIBS="libz.so.1.1.4 libz.a" && make LIBS="libz.so.1.1.4 libz.a" install && mv /usr/lib/libz.so.* /lib && ln \_sf ../../lib/libz.so.1 /usr/lib/libz.so && cp zlib.3 /usr/share/man/man3\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Zlib\par
Последняя проверка: версия 1.1.4.\par
Библиотеки\par
libz[a,so]\par
Описания\par
libz\par
Библиотека zlib, используемая многими программами, и реализующая методы (де)компрессии данных.\par
Зависимости Zlib\par
Зависимости еще не проверялись.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Findutils\_4.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.10 SBU Необходимое место на диске: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Findutils\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Findutils выполните:\par
\b patch \_Np1 \_i ../findutils\_4.1.patch && ./configure –prefix=/usr && make libexecdir=/usr/bin && make libexecdir=/usr/bin install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замечания по соответствию FHS\par
По умолчанию, база данных updatedb находится /usr/var. Если вы хотите полного соответствия со стандартом FHS, установите ее в другом месте. Приведенные ниже команды используют совместимый с FHS файл базы данных /var/lib/misc/locatedb.\par
\b patch \_Np1 \_i ../findutils\_4.1.patch && ./configure –prefix=/usr && make localstatedir=/var/lib/misc libexecdir=/usr/bin && make localstatedir=/var/lib/misc libexecdir=/usr/bin install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../findutils\_4.1.patch\b0  : Этот патч исправляет некоторые ошибки при компиляции, избегая конфликта переменных и поправляя синтаксис.\par
Содержимое Findutils\par
Последняя проверка: версия 4.1.\par
Программы\par
bigram, code, find, frcode, locate, updatedb и xargs\par
Описания\par
bigram\par
bigram используется вместе с code для создания поисковых баз старого типа. Больше информации об этих программах приведено на locatedb.5 man page.\par
code\par
code – предшественник frcode. Он использовался в старых поисковых базах.\par
find\par
find ищет файлы, отвечающие заданному критерию. Если критерий не задан, выводится список файлов в текущем каталоге и каталогах нижнего уровня.\par
frcode\par
frcode вызывается updatedb для сжатия списка файлов, используя front\_compression и уменьшая размер базы данных в 4\_5 раз.\par
locate\par
locate просматривает базу данных, содержащую сведения обо всех файлах и каталогах на файловой системе. Программа выводит имена файлов и каталогов в базе, совпадающие с заданным критерием. Если пользователь ищет файлы, программа просмотрит базу и сообщит, где находятся запрошенные файлы. Поиск даст результаты, только если база часто обновляется, иначе будет выдана устаревшая информация.\par
updatedb\par
updatedb обновляет поисковую базу. Просматривается вся файловая система (включая все смонтированные, если не указано обратное), каждый найденный файл и каталог записывается в базу, используемую locate. Неплохо обновлять базу хотя бы раз в день, чтобы избежать ее устаревания.\par
xargs\par
xargs выполняет команду относительно списка файлов. Список должен содержать одно имя в строке.\par
Зависимости Findutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Grep: egrep, grep Gcc: cc1, collect2, cpp0, gcc Make: make Patch: patch Sed: sed Sh\_utils: basename, date, echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Gawk\_3.1.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.39 SBU Необходимое дисковое пространство: 15 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Gawk\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Предупреждение: Ни в коем случае не выполняйте команду \b make uninstall\b0   для этого пакета, если вы установили патч, изменяющий определение директории libexec. Правило \i uninstall\i0   в скрипте Makefile выполнит команду \b rm \_rf <libexecdir>/*\b0   . Так как мы определили директорию libexec как /usr/bin, скрипт выполнит \b rm \_rf /usr/bin/*\b0  \par
Для инсталляции Gawk выполните:\par
\b patch \_Np1 \_i ../gawk\_3.1.1\_2.patch && ./configure –prefix=/usr –libexecdir=/usr/bin && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснение команд\par
\b patch \_Np1 \_i ../gawk\_3.1.1\_2.patch:\b0   Этот патч изменяет определение местоположения директории libexec. Он позволит нам переопределить ее с помощью опции \i –libexecdir\i0   к скрипту configure.\par
Содержимое Gawk\par
Последняя проверка: версия 3.1.1.\par
Программы\par
awk, gawk, gawk\_3.1.1, grcat, igawk, pgawk, pgawk\_3.1.1, pwcat\par
Описания\par
awk\par
awk – символьная ссылка на gawk.\par
gawk, gawk\_3.1.1\par
gawk – GNU реализация awk, языка поиска и обработки текстовых образцов.\par
grcat\par
grcat выполняет слияние базы групп, /etc/group.\par
igawk\par
igawk – скрипт, дающий gawk возможность включения файлов.\par
pgawk, pgawk\_3.1.1\par
pgawk – профильная версия gawk.\par
pwcat\par
pwcat выполняет слияние базы паролей, /etc/passwd.\par
Зависимости Gawk\par
Последняя проверка: версия 3.1.0.\par
(Зависимости пока не проверены)\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Ncurses\_5.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 1.88 SBU Необходимое дисковое пространство: 22 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Ncurses\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Ncurses выполните:\par
\b patch \_Np1 \_i ../ncurses\_5.2\_2.patch && ./configure –prefix=/usr –with\_shared && make && make install && chmod 755 /usr/lib/*.5.2 && mv /usr/lib/libncurses.so.5* /lib && ln \_s libncurses.a /usr/lib/libcurses.a && ln \_sf ../../lib/libncurses.so.5 /usr/lib/libncurses.so && ln \_sf ../../lib/libncurses.so.5 /usr/lib/libcurses.so\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../ncurses\_5.2\_patch:\b0   Этот патч устраняет проблему компиляции пакета с GCC\_3.2, т.к. Ncurses использует конструкции, более недействительные в новом стандарте С++.\par
\b –with\_shared:\b0   Эта опция указывает компилировать библиотеки ncurses совместного пользования.\par
\b chmod 755 *.5.2:\b0   Библиотеки совместного пользования должны быть исполняемыми. Однако процедура инсталляции Ncurses неверно устанавливает права, и приходится изменять их вручную.\par
\b ln \_sf libncurses.a libcurses.a:\b0   Некоторые программы для компоновки используют \_lcurses вместо \_lncurses. Создание этой символической ссылки устраняет проблему.\par
Содержимое Ncurses\par
Последняя проверка: версия 5.2.\par
Программы\par
captoinfo (ссылка на tic), clear, infocmp, infotocap (ссылка на tic), reset (ссылка на tset), tack, tic, toe, tput и tset.\par
Описания\par
captoinfo\par
captoinfo конвертирует описания termcap в описания terminfo.\par
clear\par
clear очищает экран, если это возможно. Тип терминала ищется в переменных окружения и базе terminfo, процедура очистки экрана зависит от найденного типа.\par
infocmp\par
infocmp используется для сравнения бинарной записи terminfo с другими записями, перезаписать описание terminfo, использовать поле terminfo use=, или вывести описание terminfo из бинарного файла (term) в различных форматах (противоположность тому. что делает tic).\par
infotocap\par
infotocap конвертирует описания terminfo в описания termcap.\par
reset\par
reset устанавливает режимы cooked и echo, отключает режимы cbreak и raw, включает трансляцию символов новой строки и сбрасывает все неустановленные специальные символы на значения по умолчанию перед инициализацией терминала вроде tset.\par
tack\par
tack – проверяет действия terminfo.\par
tic\par
tic – компилятор описаний записей terminfo. Программа транслирует файл terminfo из исходного в бинарный формат для использования библиотекой ncurses. Файлы terminfo содержат информацию о возможностях терминала.\par
toe\par
toe перечисляет все доступные типы терминалов по основному имени вместе с описаниями.\par
tput\par
tput использует базу terminfo, чтобы сделать информацию о терминале доступной командному интерпретатору, инициализировать или сбросить терминал, либо вернуть полное имя запрошенного типа терминала.\par
tset\par
tset инициализирует терминалы, что уже не используется широко. Необходимо для совместимости с 4.4BSD.\par
Библиотеки\par
libcurses.[a,so] (ссылка на libncurses.[a,so]), libform.[a,so], libform_g.a, libmenu.[a,so], libmenu_g.a, libncurses++.a, libncurses.[a,so], libncurses_g.a, libpanel.[a,so] и libpanel_g.a\par
libcurses, libncurses++, libncurses, libncurses_g\par
Это – основные библиотеки пакета, используются для отображения текста на экране (зачастую нестандартным способом). Пример использования ncurses – процедура «make menuconfig» сборки ядра.\par
libform, libform_g\par
libform используется для реализации форм в ncurses.\par
libmenu, libmenu_g\par
libmenu используется для реализации меню в ncurses.\par
libpanel, libpanel_g\par
libpanel используется для реализации панелей в ncurses.\par
Зависимости Ncurses\par
Последняя проверка: версия 5.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, mkdir, mv, rm Gcc: c++, cc1, cc1plus, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, fgrep, grep Make: make Gawk: gawk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, uname Textutils: cat, sort, tr, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Vim\_6.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.81 SBU Необходимое дисковое пространство: 24 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Vim\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Если вам не по душе Vim, см. инструкции по инсталляции других редакторов http://beyond.linuxfromscratch.org/view/cvs/postlfs/editors.html. На данный момент есть инструкции для редакторов Emacs, nano, и joe.\par
Для установки Vim выполните:\par
\b patch \_Np1 \_i ../vim\_6.1.patch && ./configure –prefix=/usr && make CPPFLAGS=\_DSYS_VIMRC_FILE=\'5c\'5c\'5c"/etc/vimrc\'5c\'5c\'5c" && make install && ln \_s vim /usr/bin/vi\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы планируете установить систему X Window для LFS, вам понадобится перекомпилировать Vim после установки Х. Vim поставляется с GUI версией редактора, требующей установленной системы X Window и некоторых дополнительных библиотек. Для получения подробной информации обратитесь к документации Vim.\par
Пояснения команд\par
\b patch \_Np1 \_i ../vim\_6.1.patch:\b0   Этот патч устраняет проблему компиляции с GCC\_3.2.\par
\b make CPPFLAGS=\_DSYS_VIMRC_FILE=\'5c\'5c\'5c"/etc/vimrc\'5c\'5c\'5c":\b0   Эта опция приводит к тому, что vim берет глобальные настройки из файла /etc/vimrc. Обычно этот файл берется из /usr/share/vim, однако каталог /etc – более логичное место для этого файла.\par
Содержимое Vim\par
Последняя проверка: версия 6.1.\par
Программы\par
efm_filter.pl, efm_perl.pl, ex (ссылка на vim), less.sh, mve.awk, pltags.pl, ref, rview (ссылка на vim), rvim (ссылка на vim), shtags.pl, tcltags, vi (ссылка на vim), view (ссылка на vim), vim, vim132, vim2html.pl, vimdiff (ссылка на vim), vimm, vimspell.sh, vimtutor и xxd\par
Описания\par
efm_filter.pl\par
efm_filter.pl – фильтр, читающий из стандартного ввода, пишущий на стандартный вывод и создающий файл ошибок, обрабатываемый vim.\par
efm_perl.pl\par
efm_perl.pl форматирует сообщения об ошибках интерпретатора Perl для использования в quickfix режиме vim.\par
ex\par
ex запускает vim в режиме Ex.\par
less.sh\par
less.sh – скрипт, запускающий vim, используя less.vim.\par
mve.awk\par
mve.awk обрабатывает ошибки vim.\par
pltags.pl\par
pltags.pl создает файл тегов кода Perl для использования vim.\par
ref\par
ref проверяет написание параметров.\par
rview\par
rview – ограниченная версия view. Нельзя передавать команды интерпретатору и vim не может быть приостановлен.\par
rvim\par
rvim is the restricted version of vim. Нельзя передавать команды интерпретатору и vim не может быть приостановлен.\par
shtags.pl\par
shtags.pl генерирует файл тегов для скриптов perl.\par
tcltags\par
tcltags генерирует файл тегов кода TCL.\par
vi\par
vi запускает vim в режиме совместимости с vi.\par
view\par
view запускает vim в режиме «только для чтения».\par
vim\par
vim запускает vim в стандартном режиме.\par
vim132\par
vim132 запускает vim в терминале в 132 колонки.\par
vim2html.pl\par
vim2html.pl конвертирует документацию vim в HTML.\par
vimdiff\par
vimdiff сравнивает две или три версии файла и показывает различия.\par
vimm\par
vimm включает модель ввода DEC locator на удаленном терминале.\par
vimspell.sh\par
vimspell.sh просматривает файл и генерирует синтаксические выражения, выделяемые в vim.\par
vimtutor\par
vimtutor запускает обучение работе с Vim.\par
xxd\par
xxd конвертирует бинарный ввод из файла в шестнадцатеричный и обратно.\par
Зависимости Vim\par
Последняя проверка: версия 6.0.\par
Bash: sh Binutils: as, ld, strip Diffutils: cmp, diff Fileutils: chmod, cp, ln, mkdir, mv, rm, touch Find: find Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Net\_tools: hostname Sed: sed Sh\_utils: echo, expr, uname, whoami Textutils: cat, tr, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bison\_1.35\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.27 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Bison\par
Для инсталляции Bison выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Некоторые программы не знают о существовании bison и пытаются найти программу yacc (bison – альтернатива (предпочтительная) команде yacc). Итак, для устранения возможных проблем, создадим скрипт bash под названием yacc. Он будет вызывать команду bison и эмулировать имена выходных файлов в соответствии со стандартами yacc.\par
Создадим файл /usr/bin/yacc:\par
\b cat > /usr/bin/yacc << «EOF»\b0  \par
#!/bin/sh\par
# Begin /usr/bin/yacc\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 exec /usr/bin/bison \_y «$@»\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /usr/bin/yacc\par
\b EOF chmod 755 /usr/bin/yacc\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Bison\par
Последняя проверка: версия 1.35.\par
Программы\par
bison и yacc\par
Описания\par
bison\par
bison – генератор анализаторов синтаксиса (parser) выражений (заменяет yacc – Yet Another Compiler Compiler). Что же делает bison? Это программа, генерирующая программу, анализирующую структуру текстового файла. Вместо написания собственной программы пользователь указывает, как соотносятся объекты, и основываясь на данных правилах, создается анализатор. Существует множество примеров анализа синтаксиса, например калькулятор.\par
Дано выражение:\par
1 + 2 * 3\par
Человек легко получит результат 7. Почему? Because of the structure. Наш мозг знает, как интерпретировать выражение. Компьютер этого не знает, и bison инструмент, представляющий выражение компьютеру в следующем виде:\par
+ / \'5c * 1 / \'5c 2 3\par
Начиная с вершины дерева и обрабатывая 2 and 3, соединенных знаком умножения, компьютер перемножает 2 и 3. Результат умножения запоминается и следующее, что обрабатывается – 2*3 и 1, соединенные знаком сложения. Сложение 1 и предыдущего результата дает 7. Все составные выражения могут быть преобразованы в подобное дерево и вычислены. Конечно же, bison используется не только в калькуляторах.\par
yacc\par
Мы написали скрипт bash с именем yacc, вызывающий bison с опцией \_y. Это необходимо для совместимости с программами, использующими yacc вместо bison.\par
Зависимости Bison\par
Последняя проверка: версия 1.31.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: basename, dirname, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, head, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Less\_374\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.13 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Less\par
Для инсталляции Less выполните:\par
\b ./configure –prefix=/usr –bindir=/bin –sysconfdir=/etc && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Less\par
Последняя проверка: версия 374.\par
Программы\par
less, lessecho и lesskey\par
Description\par
less\par
less – текстовый просмотрщик. Отображает содержимое файла с возможностью прокрутки. Less – улучшение утилиты more. Имеется возможность обратной прокрутки, нет необходимости считывать весь файл при его загрузке, что облегчает чтение больших файлов.\par
lessecho\par
lessecho необходим для подстановок метасимволов, вроде * и ?, в именах файлов на системах Unix.\par
lesskey\par
lesskey используется для установок клавиш less.\par
Зависимости Less\par
Последняя проверка: версия 358.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, mv, rm, touch Grep: egrep, grep Gcc: cc1, collect2, cpp0, gcc Make: make Sed: sed Sh\_utils: expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Groff\_1.18\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 1.08 SBU\par
Необходимое дисковое пространство: 18 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Groff\par
Для инсталляции Groff выполните:\par
\b ./configure –prefix=/usr &&\b0  \par
\b make PROCESSEDEXAMPLEFILES="" &&\b0  \par
\b make PROCESSEDEXAMPLEFILES="" install &&\b0  \par
\b ln \_s soelim /usr/bin/zsoelim &&\b0  \par
\b ln \_s eqn /usr/bin/geqn &&\b0  \par
\b ln \_s tbl /usr/bin/gtbl\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b make PROCESSEDEXAMPLEFILES="":\b0   У Groff существует несколько зависимостей, которые мы не будем устанавливать. Эта опция отключает потребность в них.\par
\b ln \_s ...\b0  : Эти символические ссылки необходимы для корректной работы некоторых программ \b xman\b0   и других программ работы с документами groff/man.\par
Contents of Groff\par
Last checked against version 1.17.2.\par
Program Files\par
addftinfo, afmtodit, eqn, geqn (link to eqn), grn, grodvi, groff, grog, grolbp, grolj4, grops, grotty, gtbl (link to tbl), hpftodit, indxbib, lkbib, lookbib, mmroff, neqn, nroff, pfbtops, pic, post\_grohtml, pre\_grohtml, refer, soelim, tbl, tfmtodit, troff and zsoelim (link to soelim)\par
Descriptions\par
addftinfo\par
addftinfo reads a troff font file and adds some additional font\_metric information that is used by the groff system.\par
afmtodit\par
afmtodit creates a font file for use with groff and grops.\par
eqn\par
eqn compiles descriptions of equations embedded within troff input files into commands that are understood by troff.\par
geqn\par
geqn is the GNU implementation of eqn.\par
grn\par
grn is a groff preprocessor for gremlin files.\par
grodvi\par
grodvi is a driver for groff that produces TeX dvi format.\par
groff\par
groff is a front\_end to the groff document formatting system. Normally it runs the troff program and a post\_processor appropriate for the selected device.\par
grog\par
grog reads files and guesses which of the groff options \_e, \_man, \_me, \_mm, \_ms, \_p, \_s, and \_t are required for printing files, and prints the groff command including those options on the standard output.\par
grolbp\par
grolbp is a groff driver for Canon CAPSL printers (LBP\_4 and LBP\_8 series laser printers).\par
grolj4\par
grolj4 is a driver for groff that produces output in PCL5 format suitable for an HP Laserjet 4 printer.\par
grops\par
grops translates the output of GNU troff to Postscript.\par
grotty\par
grotty translates the output of GNU troff into a form suitable for typewriter\_like devices.\par
gtbl\par
gtbl is the GNU implementation of tbl.\par
hpftodit\par
hpftodit creates a font file for use with groff \_Tlj4 from an HP tagged font metric file.\par
indxbib\par
indxbib makes an inverted index for the bibliographic databases a specified file for use with refer, lookbib, and lkbib.\par
lkbib\par
lkbib searches bibliographic databases for references that contain specified keys and prints any references found on the standard output.\par
lookbib\par
lookbib prints a prompt on the standard error (unless the standard input is not a terminal), reads from the standard input a line containing a set of keywords, searches the bibliographic databases in a specified file for references containing those keywords, prints any references found on the standard output and repeats this process until the end of input.\par
mmroff\par
mmroff is a simple preprocessor for groff.\par
neqn\par
The neqn script formats equations for ascii output.\par
nroff\par
The nroff script emulates the nroff command using groff.\par
pfbtops\par
pfbtops translates a Postscript font in .pfb format to ASCII.\par
pic\par
pic compiles descriptions of pictures embedded within troff or TeX input files into commands that are understood by TeX or troff.\par
pre\_grohtml and post\_grohtml\par
pre– and post\_grohtml translate the output of GNU troff to html.\par
refer\par
refer copies the contents of a file to the standard output, except that lines between .[ and .] are interpreted as citations, and lines between .R1 and .R2 are interpreted as commands about how citations are to be processed.\par
soelim\par
soelim reads files and replaces lines of the form \i .so file\i0   by the contents of \i file\i0  .\par
tbl\par
tbl compiles descriptions of tables embedded within troff input files into commands that are understood by troff.\par
tfmtodit\par
tfmtodit creates a font file for use with \b groff \_Tdvi\b0  .\par
troff\par
troff is highly compatible with Unix troff. Usually it should be invoked using the groff command, which will also run preprocessors and post\_processors in the appropriate order and with the appropriate options.\par
zsoelim\par
zsoelim is the GNU implementation of soelim.\par
Groff Installation Dependencies\par
Last checked against version 1.17.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Bison: bison Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, touch Gcc: cc1, cc1plus, collect2, cpp0, g++, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Textutils\_2.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.83 SBU Необходимое дисковое пространство: 17 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Textutils\par
Для инсталляции Textutils выполните:\par
\b ./configure –prefix=/usr && make && make install && mv /usr/bin/\'7bcat,head\'7d /bin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Textutils\par
Последняя проверка: версия 2.0.\par
Программы\par
cat, cksum, comm, csplit, cut, expand, fmt, fold, head, join, md5sum, nl, od, paste, pr, ptx, sort, split, sum, tac, tail, tr, tsort, unexpand, uniq и wc\par
Описание\par
cat\par
cat выводит файлы на стандартный вывод.\par
cksum\par
cksum выводит контрольную сумму CRC и объем в байтах каждого указанного файла.\par
comm\par
comm построчно сравнивает два отсортированных файла.\par
csplit\par
csplit выводит части файла, разделенные заданными строками, в файлы xx01, xx02, ..., и размер каждой части на стандартный вывод.\par
cut\par
cut выводит указанные строки из указанных файлов на стандартный вывод.\par
expand\par
expand конвертирует знаки табуляции в файле в пробелы и выводит результат на стандартный вывод.\par
fmt\par
fmt форматирует каждый абзац в указанных файлах и выводит результат на стандартный вывод.\par
fold\par
fold делает переносы вводимых строк из указанных файлов (по умолчанию, со стандартного ввода) и выводит результат на стандартный вывод.\par
head\par
head выводит первые x (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
join\par
join соединяет строки двух файлов в поля.\par
md5sum\par
md5sum выводит или проверяет контрольные суммы MD5.\par
nl\par
nl выводит каждый указанный файл на стандартный вывод, добавляя номера строк.\par
od\par
od выводит файл в различных форматах, по умолчанию в восьмеричном, на стандартный вывод.\par
paste\par
paste выводит строки, соответствующие заданным образцам из указанных файлов и разделенные символами табуляции, на стандартный вывод.\par
pr\par
pr разделяет файлы на страницы или колонки для распечатки.\par
ptx\par
ptx составляет оглавление файла.\par
sort\par
sort выводит на стандартный вывод построчно отсортированное слияние файлов.\par
split\par
split разбивает входной файл на части заданного размера PREFIXaa, PREFIXab, ...\par
sum\par
sum выводит контрольную сумму и количество занимаемых блоков каждого указанного файла.\par
tac\par
tac выводит каждый указанный файл на стандартный вывод last line first.\par
tail\par
tail выводит последние xx (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
tr\par
tr заменяет, вставляет, и/или удаляет символы из стандартного ввода, выводя результат на стандартный вывод.\par
tsort\par
tsort выводит полностью упорядоченные списки, учитывая уже проведенную сортировку указанных файлов.\par
unexpand\par
unexpand конвертирует пробелы в каждом файле в символы табуляции, выводя результат на стандартный вывод.\par
uniq\par
uniq удаляет повторяющиеся строки из отсортированного файла.\par
wc\par
wc выводит количество строк, слов и размер в байтах каждого указанного файла и сумму результатов, если указано более одного файла.\par
Зависимости Textutils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Perl: perl Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sed\_3.02\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.09 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sed\par
Для инсталляции Sed выполните:\par
\b ./configure –prefix=/usr –bindir=/bin && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Sed\par
Последняя проверка: версия 3.02.\par
Программы\par
sed\par
Описания\par
sed\par
sed – редактор потоков. Он используется для основных преобразований текста на потоке ввода (файл или ввод из другого процесса).\par
Зависимости Sed\par
Последняя проверка: версия 3.02.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gcc: cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Flex\_2.5.4a\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.05 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Flex\par
Для инсталляции Flex выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Некоторые программы не знают о существовании flex и пытаются найти программу lex (flex – альтернатива (предпочтительная) команде lex). Итак, для устранения возможных проблем, создадим скрипт bash под названием lex. Он будет вызывать команду flex и эмулировать lex.\par
Создадим файл /usr/bin/lex:\par
\b cat > /usr/bin/lex << «EOF»\b0  \par
#!/bin/sh\par
# Begin /usr/bin/lex\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 exec /usr/bin/flex \_l «$@»\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /usr/bin/lex\par
\b EOF chmod 755 /usr/bin/lex\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Flex\par
Последняя проверка: версия 2.5.4a.\par
Program Files\par
flex, flex++ (ссылка на flex) and lex\par
Descriptions\par
flex\par
flex – инструмент для генерации программ, распознающих заданные образцы в тексте. Распознавание образцов часто используется во многих приложениях. Пользователь задает правила поиска, и flex создает программу для поиска образцов. Причина, по которой люди используют flex, состоит в том, что гораздо проще задать правила, чем писать собственную программу.\par
flex++\par
flex++ вызывает версию flex, используемую для сканеров C++.\par
lex\par
Мы создали скрипт lex, вызывающий flex с опцией \_l. Это необходимо для совместимости с программами, использующими lex вместо flex.\par
Библиотеки\par
libfl.a\par
Описания\par
libfl\par
libfl – библиотека flex.\par
Зависимости Flex\par
Последняя проверка: версия 2.5.4a.\par
Bash: sh Binutils: ar, as, ld, ranlib Bison: bison Diffutils: cmp Fileutils: chmod, cp, install, ln, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Binutils\_2.13\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 2.48 SBU Необходимое дисковое пространство: 94 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Binutils\par
Этот пакет известен своим нестабильным поведением при компиляции с измененными опциями оптимизации (включая опции \_march и \_mcpu). Binutils рекомендуется компилировать с настройками по умолчанию. Следовательно, если вы задали переменные такие как CFLAGS или CXXFLAGS, изменяющие уровень оптимизации по умолчанию, рекомендуется убрать их при сборке пакета Binutils. Изменяя оптимизации для Binutils, вы действуете на свой страх и риск.\par
Для инсталляции Binutils выполните:\par
\b mkdir ../binutils\_build && cd ../binutils\_build && ../binutils\_2.13/configure –prefix=/usr –enable\_shared && make tooldir=/usr && make tooldir=/usr install && make tooldir=/usr install\_info && cp ../binutils\_2.13/include/libiberty.h /usr/include\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснение команд\par
\b tooldir=/usr:\b0   Обычно директория tooldir (та директория, куда помещаются исполняемые файлы) определяется как $(exec_prefix)/$(target_alias), например /usr/i686\_pc\_linux\_gnu. Так как мы компилируем binutils для нашей системы, необходимость target\_директории в /usr отпадает. Она бы нам понадобилась в случае кросс\_компиляции (т.е. компиляции программы на платформе Intel с созданием кода, который можно запустить на системах Apple PowerPC).\par
\b make tooldir=/usr install\_info:\b0   Установка информационных страниц binutils.\par
\b cp ../binutils\_2.13/include/libiberty.h /usr/include:\b0   Некоторые программы для компиляции требуют файл заголовков libiberty.h.\par
Содержимое Binutils\par
Последняя проверка: версия 2.12.1.\par
Программы\par
addr2line, ar, as, gasp, gprof, ld, nm, objcopy, objdump, ranlib, readelf, size, strings and strip\par
Описания\par
addr2line\par
addr2line переводит программные адреса в имена файлов и номера строк. Given an address and an executable, используется отладочная информация исполняемого файла, чтобы определить, какое имя файла и номер строки связаны с данным адресом.\par
ar\par
ar создает и изменяет архивы, а также производит их распаковку. Архив – файл, содержащий несколько файлов в виде, позволяющем восстановить оригинал.\par
as\par
as используется для ассемблирования вывода the GNU C Compiler, gcc для использования с линкером ld.\par
gasp\par
gasp – Assembler Macro Preprocessor.\par
gprof\par
gprof отображает статистику системных вызовов.\par
ld\par
ld объединяет несколько объектных и архивных файлов и устанавливает символьные отношения. Последний шаг в сборке скомпилированной программы – запуск ld.\par
nm\par
nm перечисляет символы из объектных файлов.\par
objcopy\par
objcopy utility копирует содержимое одного объектного файла в другой. objcopy использует библиотеку GNU BFD для чтения/записи объектных файлов. Возможна запись конечного объектного файла в формате, отличном от исходного.\par
objdump\par
objdump выводит информацию об одном или нескольких объектных файлах. Опции указывают, какую информацию выводить. Эта информация полезна для программистов, разрабатывающих компиляторы, в противоположность тем, кому нужно просто скомпилировать и запустить программу.\par
ranlib\par
ranlib генерирует оглавление содержимого архива и сохраняет его в архиве. Список будет содержать все символы, определенные членами архива, that is a relocatable object file.\par
readelf\par
readelf выводит информацию об бинарных файлах типа elf.\par
size\par
size выводит размеры секций –и общий размер– каждого указанного объектного файла. По умолчанию, генерируется одна строка для каждого объектного файла или модуля в архиве.\par
strings\par
Для каждого заданного файла strings выводит последовательность отображаемых символов длиной минимум 4 знака (или указанной длины), завершающуюся непечатным символом. По умолчанию, выводятся лишь строки из инициализированных и загруженных частей объектных файлов. Для других типов файлов выводятся строки из всего файла.\par
strings зачастую используется для определения содержимого нетекстовых файлов.\par
strip\par
strip удаляет все или указанные символы из объектных файлов. Список объектных файлов может включать архивы. Должен быть задан как минимум один объектный файл. Модификация указанных файлов приоритетнее, чем запись модифицированных копий под другими именами.\par
Библиотеки\par
libbfd.[a,so] и libopcodes.[a,so]\par
Описания\par
libbfd\par
libbfd – библиотека Binary File Descriptor.\par
libopcodes\par
libopcodes – библиотека для работы с опкодами, используется в сборке утилит вроде objdump. Опкоды – «читаемые» версии инструкций процессора.\par
Зависимости Binutils\par
Последняя проверка: версия 2.11.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, rmdir, touch Flex: flex Gcc: cc, cc1, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, true, uname Texinfo: install\_info, makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Fileutils\_4.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.68 SBU Необходимое дисковое пространство: 17 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Fileutils\par
Для инсталляции Fileutils выполните:\par
\b ./configure –prefix=/usr –bindir=/bin && make && make install && ln \_s ../../bin/install /usr/bin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Fileutils\par
Последняя проверка: версия 4.1.\par
Программы\par
chgrp, chmod, chown, cp, dd, df, dir, dircolors, du, install, ln, ls, mkdir, mkfifo, mknod, mv, rm, rmdir, shred, sync, touch и vdir\par
Описания\par
chgrp\par
chgrp группу владельца указанных файлов, возможно указание как имени группы, так и ее номера.\par
chmod\par
chmod изменяет права доступа к указанному файлу, в соответствии с параметрами, заданными символьно или в восьмеричном представлении двоичного выражения новых прав.\par
chown\par
chown изменяет владельца и/или группу указанных файлов.\par
cp\par
cp копирует файлы.\par
dd\par
dd копирует файл (по умолчанию, со стандартного ввода на стандартный вывод) с указанным размером блока и опциональными преобразованиями.\par
df\par
df показывает количество свободного места на файловых системах, содержащих указанные файлы. Если файлы не заданы, показывается свободное место на всех смонтированных файловых системах.\par
dir, ls and vdir\par
dir и vdir – версии ls с разными форматами вывода по умолчанию. Эти программы выводят список заданных файлов и каталогов. Содержимое каталога сортируется по алфавиту. ls, по умолчанию, перечисляет файлы в столбцах если стандартный вывод – терминал, иначе идет перечисление по одному в строке. dir, по умолчанию, перечисляет файлы в столбцах. vdir, по умолчанию перечисляет файлы в полном формате.\par
dircolors\par
dircolors выводит значение LS_COLOR. Переменная LS_COLOR используется для установки цветовой схемы, используемой ls и прочими утилитами.\par
du\par
du выводит количество дискового пространства, занятого указанными файлами и каталогами (включая подкаталоги).\par
install\par
install копирует файлы, устанавливает права доступа и, если возможно, владельца и группу.\par
ln\par
ln создает жесткие или мягкие (символические) ссылки на файлы.\par
mkdir\par
mkdir создает каталог с заданным именем.\par
mkfifo\par
mkfifo создает FIFO с заданным именем.\par
mknod\par
mknod создает FIFO, символьный или блочный файл с заданным именем.\par
mv\par
mv перемещает файлы из одного каталога в другой или переименовывает их, в зависимости от заданных параметров.\par
rm\par
rm удаляет файлы или каталоги.\par
rmdir\par
rmdir удаляет пустые каталоги.\par
shred\par
shred безопасно удаляет файл, перезаписывая занимаемые им блоки, так что содержимое невозможно восстановить.\par
sync\par
sync принудительно записывает изменившиеся блоки на диск и обновляет superblock.\par
touch\par
touch изменяет время доступа и изменения каждого заданного файла на текущее время. Если файл не существует, то создается пустой файл.\par
Зависимости Fileutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sh\_utils\_2.0\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.42 SBU Необходимое дисковое пространство: 12 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sh\_utils\par
Перед установкой пакета примените hostname\_патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Sh\_utils выполните:\par
\b patch \_Np1 \_i ../sh\_utils\_2.0\_hostname.patch && ./configure –prefix=/usr && make && make install && mv /usr/bin/\'7bbasename,date,echo,false,pwd\'7d /bin && mv /usr/bin/\'7bsleep,stty,su,test,true,uname\'7d /bin && mv /usr/bin/chroot /usr/sbin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замечания по соответствию FHS\par
В составе данного пакета присутствует команда test. Она часто используется скриптами оболочки для оценки условия, и чаще встречается в виде \b [ условие\b0  \b ]\b0  . Квадратные скобки встроены в интерпретатор команд bash, однако по стандарту FHS должна присутствовать команда [. Создадим ее:\par
\b ln \_s test /bin/[\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../sh\_utils\_2.0\_hostname.patch:\b0   Этот патч запрещает компиляцию программы hostname, которая будет установлена позже, в рамках пакета net\_tools. Программа hostname из пакета net\_tools является предпочтительной (а в некоторых случаях обязательной, т.к. поддерживает опции требуемые некоторыми программами, например XFree86).\par
Содержимое Sh\_utils\par
Последняя проверка: версия 2.0.\par
Программы\par
basename, chroot, date, dirname, echo, env, expr, factor, false, groups, hostid, id, logname, nice, nohup, pathchk, pinky, printenv, printf, pwd, seq, sleep, stty, su, tee, test, true, tty, uname, uptime, users, who, whoami и yes\par
Описания\par
basename\par
basename удаляет каталоги и суффиксы из имен файлов.\par
chroot\par
chroot запускает команду или оболочку в указанном корневом каталоге.\par
date\par
date выводит текущее время в указанном формате или устанавливает.\par
dirname\par
dirname удаляет суффиксы, не относящиеся к каталогам, из имен файлов.\par
echo\par
echo выводит строку текста.\par
env\par
env запускает программу в измененном окружении.\par
expr\par
expr вычисляет выражения.\par
factor\par
factor выводит разложение на простые множители всех указанных целых чисел.\par
false\par
false всегда завершается с кодом «ошибка».\par
groups\par
groups выводит группу, к которой принадлежит пользователь.\par
hostid\par
hostid выводит числовой идентификатор (шестандцатеричный) текущего хоста.\par
id\par
id выводит пользовательский и групповой ID текущего или заданного пользователя.\par
logname\par
logname выводит регистрационное имя текущего пользователя.\par
nice\par
nice запускает программу с заданным приоритетом.\par
nohup\par
nohup выполняет команду, защищенную от зависаний, с выводом в журнальный файл.\par
pathchk\par
pathchk проверяет наличие файла.\par
pinky\par
pinky – простая утилита finger, показывающая информацию о конкретном пользователе.\par
printenv\par
printenv выводит значения переменных окружения.\par
printf\par
printf выводит форматированные данные (аналогично функции printf в C).\par
pwd\par
pwd выводит имя текущего каталога.\par
seq\par
seq выводит числа в заданном диапазоне с заданным шагом.\par
sleep\par
sleep делает задержку на указанное количество времени.\par
stty\par
stty выводит и изменяет настройки терминала.\par
su\par
su запускает командный интерпретатор с правами указанного пользователя и группы.\par
tee\par
tee считывает данные со стандартного ввода и записывает их на стандартный вывод и в файлы.\par
test\par
test проверяет типы файлов и сравнивает значения.\par
true\par
true всегда завершается с кодом «успех».\par
tty\par
tty выводит файловое имя терминала, подключенного к стандартному вводу.\par
uname\par
uname выводит информацию о системе.\par
uptime\par
uptime сообщает, как долго активна система.\par
users\par
users выводит имена пользователей, зарегистрированных на локальном хосте.\par
who\par
who показывает зарегистрированных пользователей.\par
whoami\par
whoami выводит имя пользователя, ассоциированное с текущим пользовательским ID.\par
yes\par
yes выводит 'y' или заданную строку до принудительного завершения.\par
Зависимости Sh\_utils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, chown, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Gettext\_0.11.5\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.99 SBU Необходимое дисковое пространство: 39 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Gettext\par
Для инсталляции Gettext выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Gettext\par
Последняя проверка: версия 0.11.2.\par
Программы\par
config.charset, config.rpath, gettext, gettextize, hostname, msgattrib, msgcat, msgcmp, msgcomm, msgconv, msgen, msgexec, msgfilter, msgfmt, msggrep, msginit, msgmerge, msgunfmt, msguniq, ngettext, project\_id, team\_address, trigger, urlget, user\_email и xgettext\par
Описания\par
config.charset\par
config.charset выводит зависящую от системы таблицу кодов символов.\par
config.rpath\par
config.rpath выводит зависящий от системы набор переменных, describing how to set the run time search path of shared libraries in an executable.\par
gettext\par
gettext используется для интернационализации (aka i18n) и локализации (aka l10n). Программы могут быть скомпилированы с поддержкой Native Language Support (NLS), что позволяет им выводить сообщения на родном языке пользователя вместо стандартного английского.\par
gettextize\par
gettextize копирует все стандартные файлы gettext в каталог. Используется для создания пакетов с переводами gettext.\par
hostname\par
hostname выводит имя системы в разных форматах.\par
msgattrib\par
msgattrib фильтрует сообщения каталога переводов, основываясь на их атрибутах, а также оперирует их атрибутами.\par
msgcat\par
msgcat находит сообщения, встречающиеся в нескольких переводах.\par
msgcmp\par
msgcmp сравнивает 2 файла перевода.\par
msgcomm\par
msgcomm ищет сообщения, появляющиеся в нескольких файлах .po. Используется для сравнения переводов.\par
msgconv\par
msgconv конвертирует каталог перевода в другую кодировку.\par
msgen\par
msgen создает каталог переводов для английского языка.\par
msgexec\par
msgexec применяет команду ко всем переводам из каталога перевода.\par
msgfilter\par
msgfilter применяет фильтр ко всем переводам из каталога переводов.\par
msgfmt\par
msgfmt program компилирует перевод в машинный код. Используется для создания окончательного перевода программы или пакета.\par
msggrep\par
msggrep выдает все сообщения из каталога перевода, соответствующие заданному образцу или принадлежащие заданным исходным файлам.\par
msginit\par
msginit создает новый файл PO, инициализирую метаинформацию значениями пользовательского окружения.\par
msgmerge\par
msgmerge объединяет два перевода в один файл. Используется для обновления перевода при помощи исходных файлов.\par
msgunfmt\par
msgunfmt декомпилирует файлы перевода. Возможно использование, только если есть скомпилированные версии.\par
msguniq\par
msguniq приводит к единому образцу дублирующиеся переводы в каталоге переводов.\par
ngettext\par
ngettext выводит переводы текстового сообщения, чья грамматическая форма зависит от числа на основной язык.\par
project\_id\par
project\_id выводит идентификационную информацию пакета.\par
team\_address\par
team\_address выводит адрес команды переводчиков на стандартный вывод и выдает дополнительные инструкции.\par
trigger\par
trigger проверяет, является ли пакет пакетом GNOME или KDE.\par
urlget\par
urlget получает содержимое URL.\par
user\_email\par
user\_email выводит адрес электронной почты пользователя, с подтверждением.\par
xgettext\par
xgettext извлекает строки сообщений из файлов C. Используется для создания шаблона перевода.\par
Библиотеки\par
libgettextlib[a,so], libgettextsrc[a,so]\par
Описания\par
libgettextlib\par
На данный момент нет описания.\par
libgettextsrc\par
На данный момент нет описания.\par
Зависимости Gettext\par
Последняя проверка: версия 0.10.40.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Bison: bison Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Net\_tools\_1.60\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.16 SBU Необходимое дисковое пространство: 5 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Net\_tools\par
Для инсталляции Net\_tools выполните:\par
\b make && make update\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы согласны со всеми ответами по умолчанию, выполните следующие команды взамен вышеприведеных:\par
\b yes "" | make && make update\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы затрудняетесь с ответами на вопросы команды \b make\b0  , смело соглашайтесь с настройками по умолчанию, они подходят для большинства случаев. В основном это вопросы, связанные с сетевыми протоколами, которые поддерживает ядро.\par
Настройки по умолчанию активируют наиболее распространенные сетевые протоколы, такие как TCP, PPP и т.д. Однако впоследствии вам необходимо добавить их поддержку в ядре. На данном этапе, вы указываете программам, какие протоколы следует использовать, в то время как задача ядра сделать их доступными для системы.\par
Пояснения команд\par
\b make update:\b0   Выполняет ту же функцию, что и команда \b make install\b0  , за исключением того, что make update не сохраняет резервные копии заменяемых файлов. Например, net\_tools заменяет программу пакета sh\_utils /bin/hostname (версия этой программы из пакета net\_tools намного лучшее ее аналога из sh\_utils).\par
Если вы захотите переустановить пакет net\_tools, команда \b make update\b0   не сохранит резервные копии файлов предыдущей инсталляции net\_tools.\par
Contents of Net\_tools\par
Последняя проверка: версия 1.60.\par
Программы\par
arp, dnsdomainname (ссылка на hostname), domainname (ссылка на hostname), hostname, ifconfig, nameif, netstat, nisdomainname (ссылка на hostname), plipconfig, rarp, route, slattach и ypdomainname (ссылка на hostname)\par
Описания\par
arp\par
arp используется для манипулирования ARP кэшем ядра, обычно для добавления/удаления записей, или вывода его содержимого.\par
dnsdomainname\par
dnsdomainname выводит DNS доменное имя системы.\par
domainname\par
domainname выводит или изменяет NIS/YP доменное имя системы.\par
hostname\par
hostname выводит или изменяет имя текущего хоста.\par
ifconfig\par
ifconfig – основная утилита, используемая для настройки сетевых интерфейсов.\par
nameif\par
nameif указывает сетевые интерфейсы, основанные на адресах MAC.\par
netstat\par
netstat – многоцелевой инструмент, используемый для отображения сетевых соединений, таблиц роутинга, статистики интерфейсов, маскированных соединений и множественных вызовах.\par
nisdomainname\par
nisdomainname выводит или изменяет NIS/YP доменное имя системы.\par
plipconfig\par
plipconfig – используется для тонкой настройки устройств PLIP device, возможно ускоряя ее.\par
rarp\par
Как и arp, rarp манипулирует таблицей RARP.\par
route\par
route – основная утилита для управления таблицами IP роутинга.\par
slattach\par
slattach активирует сетевой интерфейс на последовательной линии, т.е. переводит обычную терминальную линию в один из нескольких «сетевых» режимов.\par
ypdomainname\par
ypdomainname выводит или изменяет NIS/YP доменное имя системы.\par
Зависимости Net\_tools\par
Последняя проверка: версия 1.60.\par
Bash: bash, sh Binutils: ar, as, ld Fileutils: install, ln, ls, mv, rm Gcc: cc, cc1, collect2, cpp0 Make: make Sh\_utils: echo\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Perl\_5.8.0\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 3.81 SBU Необходимое дисковое пространство: 52 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Perl\par
Для инсталляции Perl выполните:\par
\b ./configure.gnu –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы хотите контролировать настройку perl, можете выполнить интерактивный скрипт \b Configure\b0  , для внесения изменений в установки по умолчанию. Если же настройки по умолчанию вас устраивают, просто выполните команды, приведенные выше.\par
Содержимое Perl\par
Последняя проверка: версия 5.6.1.\par
Программы\par
a2p, c2ph, dprofpp, find2perl, h2ph, h2xs, perl, perl5.6.1, perlbug, perlcc, perldoc, pl2pm, pod2html, pod2latex, pod2man, pod2text, pod2usage, podchecker, podselect, pstruct, s2p и splain\par
Описания\par
a2p\par
a2p – траслятор с awk на perl.\par
c2ph\par
c2ph выводит структуры C как сгенерированные «cc \_g \_S».\par
dprofpp\par
dprofpp отображает профили perl.\par
find2perl\par
find2perl транслирует командные строки find в код Perl.\par
h2ph\par
h2ph конвертирует заголовочные файлы C в заголовки Perl.\par
h2xs\par
h2xs конвертирует заголовочные файлы C в расширения Perl.\par
perl, perl5.6.1\par
perl – Practical Extraction and Report Language (Язык Практичных Извлечений и Докладов :)). Сочетает достоинства C, sed, awk и sh в одном мощном языке.\par
perlbug\par
perlbug генерирует сообщение об ошибке perl или его модулей и отправляет их по почте.\par
perlcc\par
perlcc генерирует исполняемые файлы из программ на Perl.\par
perldoc\par
perldoc просматривает документацию .pod, поставляемую с perl или скриптом perl и выводит как «pod2man | nroff \_man | $PAGER».\par
pl2pm\par
pl2pm – утилита для помощи в конвертировании библиотек Perl4 в модули библиотек Perl5.\par
pod2html\par
pod2html конвертирует файлы из формата pod в формат HTML.\par
pod2latex\par
pod2latex конвертирует файлы из формата pod в формат LaTeX.\par
pod2man\par
pod2man конвертирует файлы из формата pod в форматированный ввод *roff.\par
pod2text\par
pod2text конвертирует файлы из формата pod в форматированный текст ASCII.\par
pod2usage\par
pod2usage выводит в файлы сообщения об использовании из встроенной документации pod.\par
podchecker\par
podchecker проверяет синтаксис файлов документации в формате pod.\par
podselect\par
podselect выводит выбранные части документации pod на стандартный вывод.\par
pstruct\par
pstruct выводит структуры C как сгенерированные «cc \_g \_S».\par
s2p\par
s2p – транслятор с sed на perl.\par
splain\par
splain служит для пропуска полных диагностических сообщений perl.\par
Библиотеки\par
attrs.so, B.so, ByteLoader.so, DProf.so, Dumper.so, DynaLoader.a, Fcntl.so, Glob.so, Hostname.so, IO.so, libperl.a, Opcode.so, Peek.so, POSIX.so, re.so, SDBM_File.so, Socket.so, Syslog.so и SysV.so\par
Descriptions\par
attrs\par
На данный момент описания нет.\par
B\par
На данный момент описания нет.\par
ByteLoader\par
На данный момент описания нет.\par
DProf\par
На данный момент описания нет.\par
Dumper\par
На данный момент описания нет.\par
DynaLoader\par
На данный момент описания нет.\par
Fcntl\par
На данный момент описания нет.\par
Glob\par
На данный момент описания нет.\par
Hostname\par
На данный момент описания нет.\par
IO\par
На данный момент описания нет.\par
libperl\par
На данный момент описания нет.\par
Opcode\par
На данный момент описания нет.\par
Peek\par
На данный момент описания нет.\par
POSIX\par
На данный момент описания нет.\par
re\par
На данный момент описания нет.\par
SDBM_File\par
На данный момент описания нет.\par
Socket\par
На данный момент описания нет.\par
Syslog\par
На данный момент описания нет.\par
SysV\par
На данный момент описания нет.\par
Зависимости Perl\par
Последняя проверка: версия 5.6.1.\par
Bash: sh Binutils: ar, as, ld, nm Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, touch Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, pwd, uname, whoami Textutils: cat, comm, sort, split, tr, uniq, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка руководства по потокам Linux, вер. 2.2.5\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.01 SBU Необходимое дисковое пространство: 1.5 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция руководства по потокам Linux, вер. 2.2.5\par
После распаковки glibc\_linuxthreads будут созданы две директории. Войдите в директорию linuxthreads , не в linuxthreads_db!\par
Для инсталляции руководства по потокам Linux выполните:\par
\b make \_C man && make \_C man install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое руководства по потокам Linux, вер. 2.2.5\par
Последняя проверка: версия 2.2.5.\par
Файлы поддержки\par
Различные руководства по потокам Linux\par
Описания\par
Страницы руководства\par
Содержат страницы руководства по потокам Linux Glibc.\par
Зависимости руководства по потокам Linux, вер. 2.2.5\par
Зависимости еще не проверялись.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка M4\_1.4\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.08 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция M4\par
Для инсталляции M4 выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое M4\par
Последняя проверка: версия 1.4.\par
Программы\par
m4\par
Описания\par
m4\par
m4 – макропроцессор. Копирует из ввода на вывод, выполняя макросы. Макросы могут быть как встроенными, так и определенными пользователем, и могут иметь любое число параметров. Кроме обычных макрорасширений, m4 имеет встроенные функции для включения файлов, запуска команд Unix, целочисленной арифметики, различных текстовых операций, рекурсии etc. m4 может быть использовано как оболочка для компилятора, так и собственно макропроцессор.\par
M4 Installation Dependencies\par
Последняя проверка: версия 1.4.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Make: make Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Sed: sed Sh\_utils: date, echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Texinfo\_4.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.43 SBU Необходимое дисковое пространство: 12 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Texinfo\par
Для инсталляции Texinfo выполните:\par
\b ./configure –prefix=/usr && make && make install && make TEXMF=/usr/share/texmf install\_tex\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b make TEXMF=/usr/share/texmf install\_tex:\b0   Эта команда инсталлирует компоненты texinfo, принадлежащие к пакету TeX. Несмотря на то, что мы не собираемся устанавливать TeX, инсталляция этих компонентов завершает установку texinfo.\par
Содержимое Texinfo\par
Последняя проверка: версия 4.2.\par
Программы\par
info, infokey, install\_info, makeinfo, texi2dvi и texindex\par
Описания\par
info\par
info читает документы Info, обычно находящиеся в /usr/share/info. Документы Info documents схожи с man pages, но содержат больше, чем простое объяснение опций программы.\par
infokey\par
infokey компилирует в бинарный формат исходный файл персонализаций Info.\par
install\_info\par
install\_info обновляет записи info. Когда запускается info, выводится список тем (т.е. доступных документов info). install\_info обновляет этот список. Если файлы info удалены вручную, необходимо также удалить тему в оглавлении. Для этого и используется данная программа. Она работает аналогично в случае добавления новых документов.\par
makeinfo\par
makeinfo транслирует документы Texinfo в различные форматы. Доступны: файлы info, простой текст и HTML.\par
texi2dvi\par
texi2dvi выводит документы Texinfo\par
texindex\par
texindex используется для сортировки оглавлений Texinfo.\par
Зависимости Texinfo\par
Последняя проверка: версия 4.0.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Autoconf\_2.53\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.05 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Autoconf\par
Для инсталляции Autoconf выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержание Autoconf\par
Последняя проверка: версия 2.53.\par
Программы\par
autoconf, autoheader, autom4te, autoreconf, autoscan, autoupdate и ifnames\par
Описания\par
autoconf\par
autoconf – инструмент для создания скриптов командного интерпретатора, автоматически конфигурирующих пакеты с исходным кодом для адаптации ко многим Unix системам. Настроечные скрипты, созданные autoconf, независимы от autoconf во время их исполнения, так что пользователям необязательно использование autoconf.\par
autoheader\par
autoheader создает шаблонный файл, состоящий из выражений C #define для использования configure.\par
autom4te\par
autom4te запускает GNU M4 для обработки заданных файлов.\par
autoreconf\par
При наличии множества настроечных скриптов, созданных autoconf, autoreconf может сэкономить время. Утилита повторно запускает autoconf and autoheader (когда необходимо) для повторной генерации настроечных скриптов autoconf и настройки шаблонов заголовков рекурсивно, начиная с текущего каталога.\par
autoscan\par
autoscan может помочь в написании configure.in для программного пакета. autoscan просматривает исходные файлы в дереве каталогов. Если не указан каталог, то используется текущий. Исходный код проверяется на наличие распространенных проблем переносимости, создаваемый configure.scan служит предварительным configure.in для пакета.\par
autoupdate\par
autoupdate обновляет имена вызова макросов autoconf в configure.in.\par
ifnames\par
ifnames может помочь во время написания configure.in для программного пакета. Выводятся идентификаторы, которые пакет уже использует в условиях препроцессора C. Если пакет уже настроен для некоторой переносимости, программа может помочь в определении, что необходимо проверить configure. Она также может заполнить некоторые пропуски в configure.in, вставленные autoscan.\par
Зависимости Autoconf\par
Последняя проверка: версия 2.52.\par
Bash: sh Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm Grep: fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Automake\_1.6.3\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.03 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Automake\par
Для инсталляции Automake выполните:\par
\b ./configure –prefix=/usr && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержание Automake\par
Последняя проверка: версия 1.6.2.\par
Программы\par
acinstall, aclocal, aclocal\_1.6, automake, automake\_1.6, compile, config.guess, config.sub, depcomp, elisp\_comp, install\_sh, mdate\_sh, missing, mkinstalldirs, py\_compile, ylwrap\par
Описания\par
acinstall\par
acinstall – сценарий, устанавливающий файлы aclocal\_style M4.\par
aclocal, aclocal\_1.6\par
automake включает несколько макросов autoconf, используемых в пакетах, часть которых необходима automake в ряде случаев. Эти макросы должны быть определены в aclocal.m4, иначе autoconf не сможет их использовать.\par
aclocal program автоматически создаст aclocal.m4, основываясь на содержимом configure.in. Это дает возможность получения предоставленных automake макросов без их поиска. Также. механизм aclocal расширяем для использования другими пакетами.\par
automake, automake\_1.6\par
Для создания всех файлов Makefile.in пакета, запустите automake в каталоге верхнего уровня без параметров. automake найдет все соответствующие Makefile.am (просматривая configure.in) и создаст Makefile.in.\par
compile\par
compile – cценарий\_обертка для компиляторов.\par
config.guess\par
config.guess – сценарий, определяющий каноническое имя системы.\par
config.sub\par
config.sub – скрипт проверки конфигурации.\par
depcomp\par
depcomp – cкрипт, компилирующий программу вместе с генерацией зависимостей.\par
elisp\_comp\par
elisp\_comp – скрипт для байт\_компиляции файлов .el.\par
install\_sh\par
install\_sh – скрипт, устанавливающий программу, скрипт или файл данных.\par
mdate\_sh\par
mdate\_sh – скрипт, выводящий время изменения файла или каталога.\par
missing\par
missing – заменяющий некоторые отсутствующие программы GNUво время инсталляции.\par
mkinstalldirs\par
mkinstalldirs – скрипт для иерархической сборки каталога.\par
py\_compile\par
py\_compile – скрипт, собирающий программу на Python.\par
ylwrap\par
ylwrap – скрипт\_обертка для вызовов lex/yacc.\par
Зависимости Automake\par
Последняя проверка: версия 1.5.\par
Bash: sh Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm, rmdir Grep: fgrep, grep Make: make Perl: perl Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bash\_2.05a\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.82 SBU Необходимое дисковое пространство: 14 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Bash\par
Для инсталляции Bash выполните:\par
\b ./configure –prefix=/usr –bindir=/bin && make && make install && exec /bin/bash –login\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержание Bash\par
Последняя проверка: версия 2.05a.\par
Программы\par
bash, sh (ссылка на bash) и bashbug\par
Описания\par
bash\par
bash – Bourne\_Again SHell, широко используемый в Unix системах командный интерпретатор. Bash считывает данные со стандартного ввода, клавиатуры. Пользователь вводит что\_либо, интерпретатор распознает введенное и выполняет это, например запускает программу.\par
bashbug\par
bashbug – скрипт, помогающий пользователю составлять и отправлять сообщения об ошибках bash в стандартном формате.\par
sh\par
sh – символическая ссылка на bash. Будучи вызванным как sh, bash имитирует запуск старых версий sh, для лучшего соответствия стандартам POSIX.\par
Зависимости Bash\par
Последняя проверка: версия 2.05a.\par
Bash: bash, sh Binutils: ar, as, ld, ranlib, size Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка File\_3.39\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.21 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция File\par
Для инсталляции File выполните:\par
\b ./configure –prefix=/usr –datadir=/usr/share/misc && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое File\par
Последняя проверка: версия 3.39.\par
Программы\par
file\par
Описания\par
file\par
file проверяет указанные файлы с целью их классификации. Есть 3 набора тестов, запускаемых в данном порядке: тесты файловой системы, тесты magic number и тесты языка. Первый удавшийся тест выводит тип файла.\par
Зависимости File\par
Последняя проверка: версия 3.37.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ln, ls, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Libtool\_1.4.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.15 SBU Необходимое дисковое пространство: 7 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Libtool\par
Для инсталляции Libtool выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Libtool\par
Последняя проверка: версия 1.4.2.\par
Программы\par
libtool и libtoolize\par
Описания\par
libtool\par
libtool предоставляет общие сервисы сборки библиотек.\par
libtoolize\par
libtoolize предоставляет стандартный путь добавления поддержки libtool в пакет.\par
Библиотеки\par
libltdl.a, libltdl.so (ссылка на libltdl.so.3.1.0), libltdl.so.3 (ссылка на libltdl.so.3.1.0) и libltdl.so.3.1.0\par
Описания\par
libltdl, libltdl.so.3, libltdl.so.3.1.0\par
Небольшая библиотека, направленная на сокрытие от программиста различных трудностей, связанных с библиотеками (dlopen).\par
Зависимости Libtool\par
Последняя проверка: версия 1.4.2.\par
Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0 Glibc: ldconfig Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bin86\_0.16.3\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.07 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Bin86\par
Этот пакет необходим лишь в том случае, если вы собираетесь пользоваться LILO. Если вы собираетесь использовать другой загрузчик, например Grub, bin86 не нужен. Обратитесь к документации предпочитаемого загрузчика, чтобы выяснить, требует ли он наличие пакета bin86 (обычно необходимы только программы ld86 и/или as86 из этого пакета).\par
Помните, что не только загрузчики используют пакет bin86. Существует вероятность, что какой\_либо иной пакет потребует программу из bin86. Имейте это в виду, если собираетесь пропустить установку bin86.\par
Для инсталляции Bin86 выполните:\par
\b make && make PREFIX=/usr install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержание Bin86\par
Последняя проверка: версия 0.16.3\par
Программы\par
as86, as86_encap, ld86, nm86 (ссылка на objdump86), objdump86 и size86 (ссылка на objdump86)\par
Описания\par
as86\par
as86 – ассемблер для процессоров 8086...80386.\par
as86_encap\par
as86_encap – скрипт для вызова as86 и конвертирования полученного кода в код C (prog.v) для включения или слинковки с программами вроде инсталляторов загрузочных секторов.\par
ld86\par
ld86 понимает только объектные файлы, полученные от ассемблера as86. Возможна линковка как в смешанный, так и раздельный исполняемый код I&D.\par
nm86\par
Таблица символов для бинарного файла.\par
objdump86\par
Сохраняет детальную информацию о бинарном файле.\par
size86\par
Выводит общий объем данных в бинарном файле.\par
Зависимости Bin86\par
Последняя проверка: версия 0.16.0.\par
Bash: sh Binutils: as, ld, strip Fileutils: chmod, install, ln, mv Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Bzip2\_1.0.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.09 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Bzip2\par
Для инсталляции Bzip2 выполните:\par
\b make \_f Makefile\_libbz2_so && make && make install && cp bzip2\_shared /bin/bzip2 && ln \_s libbz2.so.1.0 libbz2.so && cp \_a libbz2.so* /lib && rm /lib/libbz2.so && ln \_s ../../lib/libbz2.so.1.0 /usr/lib/libbz2.so && rm /usr/bin/\'7bbunzip2,bzcat,bzip2\'7d && mv /usr/bin/\'7bbzip2recover,bzless,bzmore\'7d /bin && ln \_s bzip2 /bin/bunzip2 && ln \_s bzip2 /bin/bzcat\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Стоит заметить, что имеет смысл загрузить патч для программы Tar, который позволяет ей без труда запаковывать и распаковывать архивы с помощью bzip2/bunzip2. Однако этот патч не является частью базовой системы LFS. С обычной версией tar, для работы с bzip2/bunzip2 используются конструкции вида \b bzcat file.tar.bz | tar \_xv\b0   или \b tar –use\_compress\_prog=bunzip2 \_xvf file.tar.bz2\b0  . Вышеупомянутый патч предоставляет возможность использования опции \b \_j\b0  , при помощи которой распаковать архив bzip2 командой \b tar \_xvfj file.tar.bz2\b0  . Применение данного патча будет рассмотрено далее, при установке пакета Tar.\par
Пояснения команд\par
\b make \_f Makefile\_libbz2_so:\b0   Компиляция bzip2 с помощью другого файла Makefile, в данном случае с помощью Makefile\_libbz2_so, который создает динамическую библиотеку libbz2.so и связывает с ней утилиты bzip2.\par
Содержимое Bzip2\par
Последняя проверка: версия 1.0.2\par
Программы\par
bunzip2 (ссылка на bzip2), bzcat (ссылка на bzip2), bzcmp, bzdiff, bzegrep, bzfgrep, bzgrep, bzip2, bzip2recover, bzless и bzmore\par
Описания\par
bunzip2\par
bunzip2 распаковывает файлы, сжатые bzip2.\par
bzcat\par
bzcat (или bzip2 \_dc) распаковывает указанные файлы на стандартный вывод.\par
bzcmp, bzdiff\par
bzcmp и bzdiff позволяют использовать cmp и diff для файлов, сжатых bzip2.\par
bzegrep, bzfgrep, bzgrep\par
bzegrep, bzfgrep, и bzgrep позволяют использовать egrep, fgrep, or grep для файлов, сжатых bzip2.\par
bzip2\par
bzip2 сжимает файлы, используя Burrows\_Wheeler block sorting алгоритм сжатия текста и код Huffman. Сжатие, обычно: значительно лучше, чем достигаемое традиционными архиваторами, основанными на LZ77/LZ78, и достигает производительности PPM семейства статистических архиваторов.\par
bzip2recover\par
bzip2recover восстанавливает данные из поврежденных файлов bzip2.\par
bzless\par
bzless – подобный less фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
bzmore\par
bzmore – подобный more фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
Библиотеки\par
libbz2.a, libbz2.so (ссылка на libbz2.so.1.0), libbz2.so.1.0 (ссылка на libbz2.so.1.0.2) и libbz2.so.1.0.2\par
libbz2\par
libbz2 – библиотека, реализующая сжатие данных без потерь, используя block\_sorting алгоритм Burrows\_Wheeler.\par
Зависимости Bzip2\par
Последняя проверка: версия 1.0.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Fileutils: cp, ln, rm Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Ed\_0.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.06 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Ed\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Вряд ли вы будете использовать Ed. Мы его устанавливаем только потому, что иногда его требует программа patch, т.е. когда патч написан в формате Ed. Однако это большая редкость, т.к. на сегодняшний день преобладают патчи формата diff.\par
Для инсталляции Ed выполните:\par
\b patch \_Np1 \_i ../ed\_0.2.patch && ./configure –prefix=/usr && make && make install && mv /usr/bin/\'7bed,red\'7d /bin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../ed\_0.2.patch:\b0   Этот патч устраняет уязвимость символических ссылок в ed. Программа ed создает файлы в каталоге /tmp с предсказуемыми именами. Воспользовавшись атаками с использованием символических ссылок, возможно заставить ed изменять файлы и права доступа к ним.\par
Содержимое Ed\par
Последняя проверка: версия 0.2.\par
Программы\par
ed и red (ссылка на ed)\par
Описание\par
ed\par
ed – строкоориентированный текстовый редактор. Он используется для создания, отображения, изменения и других манипуляций с текстовыми файлами.\par
red\par
red – это ограниченный ed: он может редактировать файлы только в текущем каталоге и не может исполнять команды интерпретатора.\par
Зависимости Ed\par
Последняя проверка: версия 0.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Kbd\_1.06\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.12 SBU Необходимое дисковое пространство: 8 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Kbd\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Kbd выполните:\par
\b patch \_Np1 \_i ../kbd\_1.06\_3.patch && ./configure && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../kbd\_1.06\_3.patch\b0  : Этот патч устраняет две проблемы. Первая связана с поведением \b loadkeys \_d\b0  , где в некоторых версиях наблюдаются сбои. Эту проблему необходимо устранить, т.к. сценарии загрузки зависят от корректного выполнения команды \b loadkeys \_d\b0  . Вторая часть патча вносит изменения в файл Makefile, для того чтобы установить некоторые утилиты, неинсталлируемые по умолчанию (например, setlogcons, setvesablank и getunimap).\par
Содержимое Kbd\par
Последняя проверка: версия 1.06.\par
Программы\par
chvt, deallocvt, dumpkeys, fgconsole, getkeycodes, getunimap, kbd_mode, kbdrate, loadkeys, loadunimap, mapscrn, openvt, psfaddtable (ссылка на psfxtable), psfgettable (ссылка на psfxtable), psfstriptable (ссылка на psfxtable), psfxtable, resizecons, setfont, setkeycodes, setleds, setlogcons, setmetamode, setvesablank, showfont, showkey, unicode_start, и unicode_stop\par
Описание\par
chvt\par
chvt переключает текущий виртуальный терминал.\par
deallocvt\par
deallocvt закрывает неиспользуемые виртуальные терминалы.\par
dumpkeys\par
dumpkeys выводит таблицы перевода клавиатуры.\par
fgconsole\par
fgconsole выводит число активных виртуальных терминалов.\par
getkeycodes\par
getkeycodes выводит таблицу конвертирования scancode\_to\_keycode.\par
getunimap\par
getunimap выводит текущий используемый unimap.\par
kbd_mode\par
kbd_mode выводит или устанавливает режим клавиатуры.\par
kbdrate\par
kbdrate устанавливает время повтора и задержки клавиатуры.\par
loadkeys\par
loadkeys загружает таблицы перевода клавиатуры.\par
loadunimap\par
loadunimap загружает таблицу конвертирования unicode\_to\_font.\par
mapscrn\par
mapscrn загружает определенную пользователем таблицу перевода выводимых символов в драйвер консоли. Заметьте, что утилита устарела, и ее возможности встроены в setfont.\par
openvt\par
openvt запускает программу на новом виртуальном терминале (VT).\par
psfaddtable, psfgettable, psfstriptable, psfxtable\par
Набор средств для управления таблицами символов Unicode для консольных шрифтов.\par
resizecons\par
resizecons меняет настройки ядра, касающиеся размера консоли.\par
setfont\par
Позволяет менять консольные шрифты EGA/VGA.\par
setkeycodes\par
setkeycodes загружает правила преобразования из сканкодов в клавиатурные.\par
setleds\par
setleds устанавливает индикаторы клавиатуры. Многие люди предпочитают включение numlock по умолчанию. и это может быть выполнено с помощью этой программы.\par
setlogcons\par
setlogcons выводит сообщения ядра в консоль.\par
setmetamode\par
setmetamode определяет метауправление клавиатурой.\par
setvesablank\par
Позволяет использовать встроенный аппаратный хранитель экрана (просто пустой экран).\par
showfont\par
showfont отображает информацию о шрифте. Показываются свойства шрифта, метрики символов и их образцы.\par
showkey\par
showkey проверяет сканкоды с клавиатуры.\par
unicode_start\par
unicode_start переводит консоль в режим Unicode.\par
unicode_stop\par
unicode_stop выводит клавиатуру и консоль из режима Unicode.\par
Зависимости Kbd\par
Последняя проверка: версия 1.06.\par
Bash: sh Binutils: as, ld, strip Bison: bison Diffutils: cmp Fileutils: cp, install, ln, mv, rm Flex: flex Gettext: msgfmt, xgettext Gcc: cc1, collect2, cpp0, gcc Grep: grep Gzip: gunzip, gzip Make: make Patch: patch Sed: sed Sh\_utils: uname\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Diffutils\_2.8.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.31 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Diffutils\par
Для инсталляции Diffutils выполните:\par
\b ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Diffutils\par
Последняя проверка: версия 2.8.1.\par
Программы\par
cmp, diff, diff3 и sdiff\par
Описания\par
cmp и diff\par
cmp и diff сравнивают пару файлов и сообщают об их различиях. Обе программы имеют дополнительные опции сравнения файлов в различных ситуациях.\par
diff3\par
Разница между diff и diff3 состоит в том, что diff сравнивает 2 files, а diff3 – 3.\par
sdiff\par
sdiff выполняет слияние 2 файлов и интерактивно выводит результаты.\par
Зависимости Diffutils\par
Последняя проверка: версия 2.7.\par
Bash: sh Binutils: ld, as Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: date, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка E2fsprogs\_1.27\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.80 SBU Необходимое дисковое пространство: 13 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция E2fsprogs\par
Для инсталляции E2fsprogs выполните:\par
\b mkdir ../e2fsprogs\_build && cd ../e2fsprogs\_build && ../e2fsprogs\_1.27/configure –prefix=/usr –with\_root\_prefix="" \'5c –enable\_elf\_shlibs && make && make install && make install\_libs && install\_info /usr/share/info/libext2fs.info /usr/share/info/dir\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b –with\_root\_prefix="":\b0   Причина использования данной опции – настройка файла Makefile. Выполнение некоторых программ, когда к примеру, /usr еще не монтирован, жизненно важно. (например выполнение программы e2fsck). Соответственно, такие программы и библиотеки должны находиться в каталогах /lib и /sbin. Если не использовать данную опцию, эти программы по умолчанию помещаются в каталог /usr, что нас не устраивает.\par
\b –enable\_elf\_shlibs:\b0   Создает shared\_библиотеки для некоторых программ пакета\par
\b make install\_libs:\b0   Инсталлирует скомпилированные библиотеки.\par
Содержимое E2fsprogs\par
Последняя проверка: версия 1.27.\par
Программы\par
badblocks, chattr, compile_et, debugfs, dumpe2fs, e2fsck, e2image, e2label, fsck, fsck.ext2, fsck.ext3, lsattr, mk_cmds, mke2fs, mkfs.ext2, mkfs.ext3, mklost+found, resize2fs, tune2fs и uuidgen\par
Описания\par
badblocks\par
badblocks используется для поиска сбойных блоков на устройстве (обычно, дисковом разделе).\par
chattr\par
chattr изменяет атрибуты файлов в файловых системах Linux second extended.\par
compile_et\par
compile_et используется для преобразования таблицы, листинга кодов ошибок и связанных сообщений в исходный код C, что удобно для использования с библиотекой com_err.\par
debugfs\par
debugfs – файловый отладчик. Используется для исследования и изменения состояния файловой системы ext2.\par
dumpe2fs\par
dumpe2fs выводит superblock и информацию о группе блоков для файловой системы, присутствующей на указанном устройстве.\par
e2fsck and fsck.ext2\par
e2fsck и fsck.ext2 используются для проверки и исправления файловых систем Linux second extended.\par
e2image\par
e2image используется для сохранения критичных данных файловой системы ext2в файл.\par
e2label\par
e2label выводит и изменяет метку файловой системы ext2 filesystem, расположенной на указанном устройстве.\par
fsck\par
fsck используется для проверки и исправления файловых систем Linux.\par
fsck.ext3\par
fsck.ext3 используется для проверки и исправления файловых систем Linux ext3.\par
lsattr\par
lsattr выводит атрибуты файла на second extended file system.\par
mk_cmds\par
mk_cmd, получая таблицу команд на входе, выводит исходный код C, который задается для использования с подсистемной библиотекой, libss.\par
mke2fs and mkfs.ext2\par
mke2fs используется для создания Linux second extended file system на устройстве (обычно, разделе диска). mkfs.ext2 выполняет те же функции, что и mke2fs.\par
mkfs.ext3\par
mkfs.ext3 используется для создания файловой системы ext3.\par
mklost+found\par
mklost+found создает каталог lost+found в текущем рабочем каталогу в Linux second extended file system. mklost+found заранее выделяет блоки диска для этого каталога, делая его доступным для e2fsck.\par
resize2fs\par
resize2fs используется для изменения размеров файловой системы ext2.\par
tune2fs\par
tune2fs изменяет настраиваемые параметры Linux second extended filesystem.\par
uuidgen\par
uuidgen создает новый универсальный уникальный идентификатор (UUID), используя библиотеку libuuid. Новый UUID будет уникален среди всех созданных UUID на любой системе и в любое время.\par
Библиотеки\par
libcom_err.[a,so], libe2p.[a,so], libext2fs.[a,so], libss.[a,so], libuuid.[a,so]\par
Описания\par
libcom_err\par
Вывод стандартных ошибок.\par
libe2p\par
libe2p используется dumpe2fs, chattr и lsattr.\par
libext2fs\par
Библиотека ext2fs создана для работы пользовательских программ с файловыми системами ext2.\par
libss\par
libss используется debugfs.\par
libuuid\par
Библиотека libuuid используется для генерации уникальных идентификаторов для объектов, которые могут быть доступны извне.\par
Зависимости E2fsprogs\par
Последняя проверка: версия 1.25.\par
Bash: sh Binutils: ar, as, ld, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, install, ln, mkdir, mv, rm, sync Gcc: cc, cc1, collect2, cpp0 Glibc: ldconfig Grep: egrep, grep Gzip: gzip Make: make Gawk: awk Sed: sed Sh\_utils: basename, echo, expr, hostname, uname Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Grep\_2.5\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.22 SBU Необходимое дисковое пространство: 5 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Grep\par
Для инсталляции Grep выполните:\par
\b ./configure –prefix=/usr –bindir=/bin && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Grep\par
Последняя проверка: версия 2.5.\par
Программы\par
egrep (ссылка на grep), fgrep (ссылка на grep) и grep\par
Описания\par
egrep\par
egrep выводит строки файлов, совпадающие с образцом, заданном в виде расширенного регулярного выражения.\par
fgrep\par
fgrep выводит строки файлов, соответствующие списку заданных строк.\par
grep\par
grep выводит строки файлов, соответствующие регулярному выражению.\par
Зависимости Grep\par
Последняя проверка: версия 2.4.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Gzip\_1.2.4a\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.03 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Gzip\par
Для инсталляции Gzip выполните:\par
\b patch \_Np1 \_i ../gzip\_1.2.4b.patch && ./configure –prefix=/usr && cp gzexe.in\'7b,.backup\'7d && sed 's%"BINDIR"%/bin%' gzexe.in.backup > gzexe.in && make && make install && mv /usr/bin/gzip /bin && rm /usr/bin/\'7bgunzip,zcat\'7d && ln \_s gzip /bin/gunzip && ln \_s gzip /bin/zcat && ln \_s gunzip /bin/uncompress\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b patch \_Np1 \_i ../gzip\_1.2.4b.patch:\b0   Этот патч устраняет возможную ошибку переполнения буфера, возникающую когда имя файла превышает 1020 символов.\par
Содержимое Gzip\par
Последняя проверка: версия 1.2.4a.\par
Программы\par
gunzip (ссылка на gzip), gzexe, gzip, uncompress (ссылка на gunzip), zcat (ссылка на gzip), zcmp, zdiff, zforce, zgrep, zmore и znew\par
Описание\par
gunzip, uncompress\par
gunzip и uncompress распаковывают файлы, сжатые gzip.\par
gzexe\par
gzexe позволяет сжать исполняемые файлы и автоматически распаковывать их при запуске (уменьшается производительность ).\par
gzip\par
gzip уменьшает размер указанных файлов используя код Lempel\_Ziv (LZ77).\par
zcat\par
zcat распаковывает и выводит на стандартный вывод либо файлы из заданного списка, либо файл со стандартного ввода.\par
zcmp\par
zcmp применяет cmp к сжатым файлам.\par
zdiff\par
zdiff применяет diff к сжатым файлам.\par
zforce\par
zforce присваивает расширение .gz всем файлам gzip, так что они не будут сжаты дважды. Может быть полезно для файлов, чьи имена были изменены после их передачи.\par
zgrep\par
zgrep применяет grep к сжатым файлам.\par
zmore\par
zmore – фильтр, позволяющий поэкранный просмотр (не)сжатых текстовых файлов (вроде more).\par
znew\par
znew конвертирует файлы формата .Z (compress) в .gz (gzip).\par
Зависимости Gzip\par
Последняя проверка: версия 1.2.4a.\par
Bash: sh Binutils: as, ld, nm Fileutils: chmod, cp, install, ln, mv, rm Gcc: cc1, collect2, cpp, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Man\_1.5k\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.05 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Man\par
Для установки man выполните:\par
\b patch \_Np1 \_i ../man\_1.5k.patch && PATH=$PATH:/usr/bin:/bin \'5c ./configure \_default \_confdir=/etc && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Примечание: Если вы хотите отключить последовательность выхода SGR, отредактируйте файл man.conf и добавьте к команде nroff аргумент \b \_c\b0  .\par
Для получения информации по форматированию и сжатию страниц руководства (man pages), см. http://hints.linuxfromscratch.org/hints/man.txt.\par
Пояснения команд\par
\b PATH=$PATH:/usr/bin:/bin ./configure \_default\b0  : В файлы man прописываются пути к некоторым программам. К сожалению, скрипт configure выбирает не первое (где находится программа), а последнее местонахождение программы в PATH. С помощью добавления /usr/bin:/bin к PATH для команды ./configure, вероятность использования командой man статических версий программ будет устранена.\par
\b patch \_Np1 \_i ../man\_1.5k.patch:\b0   Данный патч убирает один из файлов в man.conf (MANPATH /usr/man), т.к. он создает избыточные результаты при использовании программ типа \b whatis\b0  . Для корректного отображения страниц руководства, патч также добавляет к переменной \i PAGER\i0   опцию \i –R\i0  .\par
Содержимое Man\par
Последняя проверка: версия 1.5k.\par
Программы\par
apropos, makewhatis, man, man2dvi, man2html и whatis\par
Описания\par
apropos\par
apropos ищет ключевые слова в базах данных, содержащих кратное описание системных команд, и отображает результат на стандартный вывод.\par
makewhatis\par
makewhatis читает страницы руководства, находящиеся в заданных частях manpath, или преформатированные страницы, находящиеся в заданных частях catpath. Для каждой страницы делается запись в базе whatis. Каждая запись состоит из имени страницы и краткого описания, разделенных дефисом. Описание извлекается, используя содержимое секции NAME страницы руководства.\par
man\par
man форматирует и выводит запрашиваемые страницы руководства.\par
man2dvi\par
man2dvi конвертирует страницу руководства в формат dvi.\par
man2html\par
man2html конвертирует страницу руководства в гипертекст.\par
whatis\par
whatis ищет ключевые слова в базах данных, содержащих кратное описание системных команд, и отображает результат на стандартный вывод. Выводятся лишь полностью совпадающие сочетания.\par
Зависимости Man\par
Последняя проверка: версия 1.5i2.\par
Bash: sh Binutils: as, ld Fileutils: chmod, cp, install, mkdir, rm Gcc: c11, collect2, cpp0, gcc Grep: grep Make: make Gawk: awk Sed: sed Sh\_utils: echo Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Lilo\_22.2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.08 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Lilo\par
Мы выбрали LILO в качестве загрузчика, потому что с ним на комфортно, однако вы можете выбрать другой. Fabio Fracassi написал руководство по установке GRUB, см. http://hints.linuxfromscratch.org/hints/grub\_howto.txt.\par
Для инсталляции Lilo выполните:\par
\b make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 При компиляции этого пакета с опцией \_g на некоторых компьютерах возникают проблемы. В случае если LILO не компилируется, удалите \_g из значения переменной CFLAGS в файле Makefile.\par
В самом конце инсталляции, процедура make install выведет на экран сообщение о том, что необходимо выполнить команду /sbin/lilo для обновления. Не делайте этого, т.к. на данной стадии это бессмысленно: не существует файла /etc/lilo.conf. Завершение процесса установки LILO описано в Главе 8.\par
Стандартное приглашение (меню) LILO можно заменить логотипом LFS или любым другим по вашему усмотрению. См. руководство Мартина Имоберстега на http://hints.linuxfromscratch.org/hints/bootlogo.txt.\par
Содержимое Lilo\par
Последняя проверка: версия 22.2.\par
Программы\par
lilo, mkrescue и keytab\_lilo.pl\par
Описания\par
lilo\par
lilo устанавливает загрузчик Linux, используемый для старта системы.\par
mkrescue\par
mkrescue создает загрузочную дискету, используя существующее ядро и любой инициализационный ramdisk.\par
keytab\_lilo.pl\par
keytab\_lilo.pl компилирует определения keytable в формат, который lilo может использовать для настройки клавиатуры во время загрузки.\par
Зависимости Lilo\par
Последняя проверка: версия 22.1.\par
Bash: sh Bin86: as86, ld86 Binutils: as, ld, strip Fileutils: cp, dd, ln Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Make\_3.79.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.22 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Make\par
Для инсталляции Make выполните:\par
\b ./configure –prefix=/usr && make && make install && chgrp root /usr/bin/make && chmod 755 /usr/bin/make\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
По умолчанию, /usr/bin/make принадлежит к той же группе kmem. На некоторых системах это необходимо для проверки средней загрузки системы командой /dev/kmem. Однако, для Linux\_систем это не нужно, и мы удаляем make из группы kmem. Это также решает проблему игнорирования командой make переменных типа \i LD_LIBRARY_PATH\i0  .\par
Содержимое Make\par
Последняя проверка: версия 3.79.1.\par
Программы\par
make\par
Описания\par
make\par
make автоматически определяет, какие части объемной программы нуждаются в рекомпиляции, и выполняет все необходимые для этого команды.\par
Зависимости Make\par
Последняя проверка: версия 3.79.1.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, install, ls, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Modutils\_2.4.19\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.13 SBU Необходимое дисковое пространство: 3 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Modutils\par
Для инсталляции Modutils выполните:\par
\b ./configure && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Modutils\par
Последняя проверка: версия 2.4.16.\par
Программы\par
depmod, genksyms, insmod, insmod_ksymoops_clean, kallsyms (ссылка на insmod), kernelversion, ksyms (ссылка на insmod), lsmod (ссылка на insmod), modinfo, modprobe (ссылка на insmod) и rmmod (ссылка на insmod)\par
Описания\par
depmod\par
depmod управляет деревьями зависимостей загружаемых модулей.\par
genksyms\par
genksyms читает вывод от gcc \_E source.c и генерирует файл, содержащий информацию о версиях.\par
insmod\par
insmod включает модуль в ядро.\par
insmod_ksymoops_clean\par
insmod_ksymoops_clean удаляет сохраненные ksym'ы и модули, не использующиеся минимум 2 дня.\par
kallsyms\par
kallsyms извлекает символы ядра для отладки.\par
kernelversion\par
kernelversion выводит номер основной версии ядра.\par
ksyms\par
ksyms показывает экспортированные символы ядра.\par
lsmod\par
lsmod показывает информацию о загруженных модулях.\par
modinfo\par
modinfo просматривает объектный файл, ассоциированный с модулем ядра, и выводит любую доступную информацию.\par
modprobe\par
modprobe использует файл зависимостей вроде Makefile, созданный depmod, для автоматической загрузки необходимых модулей из набора в предварительно заданном дереве каталогов.\par
rmmod\par
rmmod выгружает модули из ядра.\par
Зависимости Modutils\par
Последняя проверка: версия 2.4.12.\par
Bash: sh Binutils: ar, as, ld, ranlib, strip Bison: bison Diffutils: cmp Fileutils: chmod, install, ln, mkdir, mv, rm Flex: flex Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: basename, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Netkit\_base\_0.17\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.03 SBU Необходимое дисковое пространство: 1 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Netkit\_base\par
Для инсталляции Netkit\_base выполните:\par
\b ./configure && make && make install && cp etc.sample/\'7bservices,protocols\'7d /etc\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В директории etc.sample расположены другие занятные файлы, которые могут вас заинтересовать.\par
Содержимое Netkit\_base\par
Последняя проверка: версия 0.17.\par
Программы\par
inetd и ping\par
Описания\par
inetd\par
inetd – родитель всех демонов. Прослушивает соединения и передает вызов соответствующему демону.\par
ping\par
ping посылает ICMP пакеты ECHO_REQUEST хосту и определяет время ответа.\par
Зависимости Netkit\_base\par
Последняя проверка: версия 0.17.\par
Bash: sh Binutils: as, ld, strip Fileutils: cp, install, rm Make: make Gcc: cc1, collect2, cpp0, gcc Sed: sed Sh\_utils: date Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Patch\_2.5.4\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.10 Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Patch\par
Для инсталляции Patch выполните:\par
\b CPPFLAGS=\_D_GNU_SOURCE \'5c ./configure –prefix=/usr && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Patch\par
Последняя проверка: версия 2.5.4.\par
Программы\par
patch\par
Описания\par
patch\par
patch модифицирует файл в соответствии с патчем. Патч обычно является списком, созданным diff, содержащим инструкции к изменению. Patch часто используется для исправлений в исходном коде, поскольку сохраняет время и место на диске. Например, имеется пакет объемом 1 MB. Следующая версия пакета имеет изменения только в 2 файлах. Новая версия может быть как новым пакетом в 1 MB или патчем в 1 KB. Таким образом, патчи позволяют избежать объемных загрузок.\par
Зависимости Patch\par
Последняя проверка: версия 2.5.4.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, grep Make: make Sed: sed Sh\_utils: echo, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Procinfo\_18\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.02 SBU Необходимое дисковое пространство: 168 KB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Procinfo\par
Для инсталляции Procinfo выполните:\par
\b make LDLIBS=\_lncurses && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b make LDLIBS=\_lncurses :\b0   Использовать \_lncurses вместо \_ltermcap при компиляции procinfo, т.к. libtermcap считается устаревшей по отношению к libncurses.\par
Содержимое Procinfo\par
Последняя проверка: версия 18.\par
Программы\par
lsdev, procinfo и socklist\par
Описания\par
lsdev\par
lsdev получает информацию об установленном оборудовании из файлов interrupts, ioports и dma в каталоге /proc directory, составляя краткий обзор используемых адресов I/O и каналов IRQ и DMA.\par
procinfo\par
procinfo получает системную информацию из каталога /proc и выводит отформатированный результат на стандартный вывод.\par
socklist\par
Скрипт Perl, выводящий список открытых сокетов, включающий тип, порт, inode, uid, pid, fd и программу, к которой принадлежит сокет.\par
Зависимости Procinfo\par
Последняя проверка: версия 18.\par
Binutils: as, ld Fileutils: install, mkdir Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Procps\_2.0.7\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.14 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Procps\par
Перед установкой пакета примените патч. Удостоверьтесь, что патч и пакет распакованы перед инсталляцией.\par
Для инсталляции Procps выполните:\par
\b patch \_Np1 \_i ../procps\_2.0.7.patch && make && make XSCPT="" install && mv /usr/bin/kill /bin\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Command explanations\par
\b patch \_Np1 \_i ../procps\_2.0.7.patch:\b0   Этот патч устраняет проблему локали, когда программа top дает сбой при определенных настройках локали.\par
\b make XSCPT="" install:\b0   Обнуляет значение переменной XSCPT в Makefile для отключения инсталляции XConsole. В обратном случае, команда «make install» попытается скопировать файл XConsole в каталог /usr/X11R6/lib/X11/app\_defaults, который не существует, т.к. X Window System не установлена.\par
Содержимое Procps\par
Последняя проверка: версия 2.0.7.\par
Программы\par
free, kill, oldps, pgrep, pkill, ps, skill, snice, sysctl, tload, top, vmstat, w и watch\par
Descriptions\par
free\par
free показывает количество свободной и занятой физической и виртуальной памяти системы, а также разделяемой памяти и буферы ядра.\par
kill\par
kills посылает сигналы процессам.\par
oldps and ps\par
ps выводит список процессов.\par
pgrep\par
pgrep выводит список процессов, основываясь на заданных именах и атрибутах.\par
pkill\par
pkill посылает сигналы процессам, основываясь на заданных именах и атрибутах.\par
skill\par
skill посылает сигналы процессам, попадающим под критерий.\par
snice\par
snice меняет приоритет процесса, попадающего под критерий.\par
sysctl\par
sysctl меняет параметры ядра во время его работы.\par
tload\par
tload выводит статистику загрузки системы на указанный tty (или текущий, если не).\par
top\par
top позволяет отслеживать активность процессора в реальном времени.\par
vmstat\par
vmstat выводит информацию о процессах, памяти, разделе подкачки, блоках IO, и активности процессора.\par
w\par
w показывает информацию о зарегистрировавшихся пользователях и их процессах.\par
watch\par
watch многократно выполняет команду, отображая ее вывод.\par
Библиотеки\par
libproc.so\par
Описания\par
libproc\par
libproc – библиотека, с которой связано большинство программ из этого пакета.\par
Зависимости Procps\par
Последняя проверка: версия 2.0.7.\par
Bash: sh Binutils: as, ld, strip Fileutils: install, ln, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, pwd Textutils: sort, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Psmisc\_21\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.11 SBU Необходимое дисковое пространство: 2 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Psmisc\par
Для инсталляции Psmisc выполните:\par
\b ./configure –prefix=/usr –exec\_prefix=/ && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Psmisc инсталлирует страницу руководства man в /usr/share/man/man1/pidof.1, однако сама программа pidof по умолчанию не устанавливается. Обычно это не вызывает проблем, потому что позже мы установим пакет Sysvinit, предлагающий улучшенную версию программы pidof.\par
Однако вам решать – использовать пакет Sysvinit, предлагающий улучшенную версию программы pidof, или нет. Если да, то удалите страницу руководства Рsmisc pidof, выполнив следующую команду:\par
\b rm /usr/share/man/man1/pidof.1\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы не собираетесь использовать Sysvinit, завершите инсталляцию данного пакета и создайте символическую ссылку /bin/pidof :\par
\b ln \_s killall /bin/pidof\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b –exec\_prefix=/:\b0   Устанавливаем программы в /bin, а не в /usr/bin . Программы, входящие в данный пакет, часто используются при загрузке системы, следовательно, они должны быть доступны в директории /bin до монтирования раздела /usr.\par
Содержимое Psmisc\par
Последняя проверка: версия 21.\par
Программы\par
fuser, killall и pstree\par
Заметьте, что в LFS мы не создаем ссылку на pidof по умолчанию, поскольку мы используем pidof из sysvinit.\par
Описания\par
fuser\par
fuser выводит PID процессов, которые использует определенные файлы или файловые системы.\par
killall\par
killall посылает сигналы всем процессам, исполняющим указанные команды.\par
pstree\par
pstree показывает дерево текущих процессов.\par
Зависимости Psmisc\par
Последняя проверка: версия 20.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Bison: bison Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Shadow\_4.0.3\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.88 SBU Необходимое дисковое пространство: 7 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Shadow Password Suite\par
Перед тем как перейти к инсталляции данного пакета, рекомендуем прочесть руководство по теневым паролям <Shadow passwords>, которое рассказывает о том, как сделать систему более защищенной в отношении паролей, как включить поддержку паролей MD5 и как выжать из пакета Shadow максимум пользы для системы. См. http://hints.linuxfromscratch.org/hints/shadowpasswd_plus.txt.\par
Для инсталляции Shadow Password Suite выполните:\par
\b ./configure –prefix=/usr \'5c –libdir=/usr/lib –enable\_shared && make && make install && cp etc/\'7blimits,login.access\'7d /etc && sed 's%/var/spool/mail%/var/mail%' \'5c etc/login.defs.linux > /etc/login.defs && ln \_s vipw /usr/sbin/vigr && rm /bin/vipw && mv /bin/sg /usr/bin && mv /usr/lib/lib\'7bshadow,misc\'7d.so.0* /lib && ln \_sf ../../lib/libshadow.so.0 /usr/lib/libshadow.so && ln \_sf ../../lib/libmisc.so.0 /usr/lib/libmisc.so\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Sh\_utils и Shadow Password Suite устанавливают свои программы groups. Если вы захотите удалить программу groups из пакета Shadow Password Suite выполните:\par
\b rm /bin/groups\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b cp limits login.access /etc:\b0   Эти файлы не инсталлируются при установке пакета, поэтому необходимо скопировать их вручную, т.к. они необходимы для настроек аутентификации системы.\par
\b sed «s%/var/spool/mail%/var/mail%» login.defs.linux > /etc/login.defs\b0  : /var/spool/mail устаревшее местонахождение почтовых ящиков пользователей. На сегодняшний день используется каталог /var/mail.\par
\b ln \_s vipw vigr:\b0   В соответствии со страницей руководства команды vipw, на эту команду должна существовать символическая ссылка vigr. Так как при инсталляции Shadow эта символическая ссылка не создается, создадим ее вручную.\par
Содержимое Shadow\par
Последняя проверка: версия 4.0.3.\par
Программы\par
chage, chfn, chpasswd, chsh, dpasswd, expiry, faillog, gpasswd, groupadd, groupdel, groupmod, groups, grpck, grpconv, grpunconv, lastlog, login, logoutd, mkpasswd, newgrp, newusers, passwd, pwck, pwconv, pwunconv, sg (ссылка на newgrp), useradd, userdel, usermod, vigr (ссылка на vipw) и vipw\par
Описания\par
chage\par
chage изменяет число дней между сменами паролей и дату последнего изменения.\par
chfn\par
chfn изменяет полное имя пользователя и прочую информацию о нем (номер рабочего кабинета, рабочий и домашний телефоны).\par
chpasswd\par
chpasswd читает файл, содержащий пользовательские имена и пароли, и использует эту информацию для обновления группы существующих пользователей.\par
chsh\par
chsh меняет командный интерпретатор, используемый пользователем.\par
dpasswd\par
dpasswd добавляет, удаляет и обновляет пароли dial\_up подключений для командных оболочек.\par
expiry\par
expiry просматривает и изменяет правила истечения срока действия паролей.\par
faillog\par
faillog форматирует содержимое журнала ошибок /var/log/faillog и поддерживает счетчики и лимиты ошибок.\par
gpasswd\par
gpasswd используется для редактирования /etc/group.\par
groupadd\par
groupadd создает новую группу, используя заданные параметры и параметры по умолчанию.\par
groupdel\par
groupdel изменяет файлы учетных записей, удаляя все относящееся к заданной группе.\par
groupmod\par
groupmod изменяет файлы учетных записей групп, внося заданные изменения.\par
groups\par
groups выводит группы, к которым принадлежит пользователь.\par
grpck\par
grpck проверяет целостность системной информации об аутентификации.\par
grpconv\par
grpunconv конвертирует обычные файлы групп в теневые.\par
grpunconv\par
grpunconv конвертирует теневые файлы групп в обычные.\par
lastlog\par
lastlog форматирует и выводит содержимое журнала регистраций /var/log/lastlog. Выводится регистрационное имя, порт и время регистрации.\par
login\par
login используется для начала новой сессии работы с системой.\par
logoutd\par
logoutd контролирует время регистрации и прочие ограничения, указанные в /etc/porttime.\par
mkpasswd\par
mkpasswd читает файл в заданном формате и конвертирует его в базу данных соответствующего формата.\par
newgrp\par
newgrp изменяет текущую группу.\par
newusers\par
newusers читает файл с именами пользователей и пустыми полями паролей и обновляет группу существующих пользователей или создает новых.\par
passwd\par
passwd меняет пароли пользователей и групп.\par
pwck\par
pwck проверяет целостность файлов паролей.\par
pwconv\par
pwconv конвертирует обычный файл паролей в теневой.\par
pwunconv\par
pwunconv конвертирует теневой файл паролей в обычный.\par
sg\par
sg меняет GID пользователя на соответствующий указанной группе или выполняет заданную команду с правами указанной группы.\par
useradd\par
useradd создает нового пользователя или обновляет данные по умолчанию о новых пользователях.\par
userdel\par
userdel изменяет файлы, содержащие информацию о пользователях, удаляя все записи, относящиеся к указанному регистрационному имени.\par
usermod\par
usermod изменяет файлы учетных записей пользователей, внося заданные изменения..\par
vipw и vigr\par
vipw и vigr позволяют безопасно редактировать /etc/passwd и /etc/group. С флагом \_s будут редактироваться теневые версии файлов, /etc/shadow и /etc/gshadow.\par
Библиотеки\par
libmisc.[a,so], libshadow.[a,so]\par
Descriptions\par
libmisc\par
На данный момент нет описания.\par
libshadow\par
libshadow предоставляет большинство функций для программ shadow.\par
Зависимости Shadow\par
Последняя проверка: версия 20001016.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gettext: msgfmt, xgettext Gcc: cc1, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Texinfo: makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sysklogd\_1.4.1\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.03 SBU Необходимое дисковое пространство: 472 KB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sysklogd\par
Для инсталляции Sysklogd выполните:\par
\b make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Sysklogd\par
Последняя проверка: версия 1.4.1.\par
Программы\par
klogd and syslogd\par
Описания\par
klogd\par
klogd – системный демон, перехватывающий и сохраняющий в журнале сообщения ядра Linux.\par
syslogd\par
syslogd предоставляет способ журналирования, используемый многими современными программами. Каждое сохраненное сообщение содержит, по крайней мере, информацию о времени и хосте, обычно также имя программы, прочие сведения зависят от приложения.\par
Зависимости Sysklogd\par
Последняя проверка: версия 1.4.1.\par
Binutils: as, ld, strip Fileutils: install Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Sysvinit\_2.84\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.06 SBU Необходимое дисковое пространство: 1 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Sysvinit\par
Когда изменяется уровень (runlevel) системы (например, при остановке работы системы), init посылает сигналы TERM и KILL процессам, которые он запустил. На экран init выдает сообщение «Sending processes the TERM signal». Создается впечатление, что init посылает данные сигналы всем запущенным процессам. Во избежание недоразумений, изменим файл init.c, что вывод на экране выглядел следующим образом: «Sending processes started by init the TERM signal». Для этого выполните нижеприведенные команды:\par
\b cp src/init.c\'7b,.backup\'7d && sed 's/Sending processes/Sending processes started by init/g' \'5c src/init.c.backup > src/init.c\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для инсталляции Sysvinit выполните:\par
\b make \_C src && make \_C src install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Sysvinit\par
Последняя проверка: версия 2.84.\par
Программы\par
halt, init, killall5, last, lastb (ссылка на last), mesg, pidof (ссылка на killall5), poweroff (ссылка на halt), reboot (ссылка на halt), runlevel, shutdown, sulogin, telinit (ссылка на init), utmpdump и wall\par
Описания\par
halt\par
halt отмечает в /var/log/wtmp завершение работы системы и сообщает ядру о необходимости остановить, перезагрузить или отключить систему. Если halt или reboot вызваны, когда система не на уровнях выполнения 0 или 6, вместо них запускается (с флагами \_h и \_r соответственно).\par
init\par
init – предок всех процессов. Его основная роль – создание процессов из скрипта /etc/inittab. Этот файл содержит записи для создания getty, к которым подключаются пользователи. initt также контролирует различные автономные процессы.\par
killall5\par
killall5 – команда killall из SystemV. Посылается сигнал всем процессам вне собственной сессии, так что интерпретатор, выполняющий скрипт, из которого была вызвана эта команда, не будет завершен.\par
last\par
last просматривает /var/log/wtmp (или файл, указанный флагом \_f) и выводит список всех пользователей, зарегистрировавшихся и завершивших сеанс с момента создания файла.\par
lastb\par
lastb действует аналогично last, но по умолчанию выводится журнал /var/log/btmp, содержащий записи о неудачных попытках регистрации.\par
mesg\par
mesg контролирует внешний доступ к терминалу пользователя. Обычно используется для разрешения записи на данный терминал прочим пользователям.\par
pidof\par
pidof выводит идентификаторы процессов (PIDs) указанных программ.\par
poweroff\par
poweroff действует аналогично shutdown \_h \_p. Выполняется останов системы и ее физическое отключение (необходим APM совместимый BIOS и поддержка APM в ядре).\par
reboot\par
reboot действует аналогично shutdown \_r. Выполняется перезагрузка системы.\par
runlevel\par
runlevel читает файл utmp (обычно /var/run/utmp), ищет записи об уровне выполнение, и выводит предыдущий и текущий уровни выполнения на стандартный вывод, разделенные пробелом.\par
shutdown\par
shutdown безопасно останавливает систему. Все зарегистрированные пользователи уведомляются об останове, регистрация в системе запрещается.\par
sulogin\par
sulogin вызывается init, когда система переходит в однопользовательский режим (указывается записью в in /etc/inittab). Init также выполняет sulogin, когда получает флаг \_b от загрузчика (например, LILO).\par
telinit\par
telinit посылает сигналы init, сообщающие о необходимости смены уровня выполнения.\par
utmpdump\par
utmpdump выводит содержимое файла (обычно /var/run/utmp) на стандартный вывод в удобном пользователю формате.\par
wall\par
wall посылает сообщение всем зарегистрированным пользователям, но лишь в случае, если mesg установлено yes.\par
Зависимости Sysvinit\par
Последняя проверка: версия 2.84.\par
Bash: sh Binutils: as, ld Fileutils: chown, cp, install, ln, mknod, rm Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Tar\_1.13\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.26 SBU Необходимое дисковое пространство: 6 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Tar\par
Если вы хотите иметь возможность распаковывать файлы bzip2 программой tar напрямую, примените патч с FTP\_сервера LFS. Этот патч добавляет возможность использования опции \_j к команде tar, которая работает аналогично с опцией \_z, использующейся для распаковки файлов gzip.\par
Примените патч, выполнив следующую команду:\par
\b patch \_Np1 \_i ../tar\_1.13.patch\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для инсталляции Tar выполните:\par
\b ./configure –prefix=/usr \'5c –libexecdir=/usr/bin –bindir=/bin && make && make install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое Tar\par
Последняя проверка: версия 1.13.\par
Программы\par
rmt и tar\par
Описания\par
rmt\par
rmt используется другими программами для удаленного управления приводом магнитных лент.\par
tar\par
tar – программа архивации, сохраняющая и извлекающая файлы из архивов tar.\par
Зависимости Tar\par
Последняя проверка: версия 1.13.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Patch: patch Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка Util\_linux\_2.11u\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.38 SBU Необходимое дисковое пространство: 10 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замечания по соответствию стандарту FHS\par
Стандарт FHS рекомендует использовать /var/lib/hwclock для хранения файла adjtime, вместо привычного каталога /etc. Для приведения hwclock, являющегося частью пакета util\_linux, к соответствию стандарту FHS, выполните:\par
\b cp hwclock/hwclock.c\'7b,.backup\'7d && sed 's%etc/adjtime%var/lib/hwclock/adjtime%' \'5c hwclock/hwclock.c.backup > hwclock/hwclock.c && mkdir \_p /var/lib/hwclock\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция Util\_linux\par
Для инсталляции Util\_linux выполните:\par
\b ./configure && make HAVE_SLN=yes && make HAVE_SLN=yes install\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Пояснения команд\par
\b HAVE_SLN=yes\b0  : Не инсталлировать данную программу, т.к. она уже была установлена при инсталляции пакета Glibc.\par
Содержание Util\_linux\par
Последняя проверка: версия 2.11t.\par
Программы\par
agetty, arch, blockdev, cal, cfdisk, chkdupexe, col, colcrt, colrm, column, ctrlaltdel, cytune, ddate, dmesg, elvtune, fdformat, fdisk, fsck.cramfs, fsck.minix, getopt, hexdump, hwclock, ipcrm, ipcs, isosize, line, logger, look, losetup, mcookie, mkfs, mkfs.bfs, mkfs.cramfs, mkfs.minix, mkswap, more, mount, namei, parse.bash, parse.tcsh, pg, pivot_root, ramsize (ссылка на rdev), raw, rdev, readprofile, rename, renice, rev, rootflags (ссылка на rdev), script, setfdprm, setsid, setterm, sfdisk, swapoff (ссылка на swapon), swapon, test.bash, test.tcsh, tunelp, ul, umount, vidmode (ссылка на rdev), whereis и write\par
Описания\par
agetty\par
agetty открывает tty, запрашивает регистрационное имя и запускает /bin/login.\par
arch\par
arch выводит информацию об архитектуре машины.\par
blockdev\par
blockdev позволяет вызывать ioctls блочного устройства из командной строки.\par
cal\par
cal выводит простой календарь.\par
cfdisk\par
cfdisk – редактор разделов диска, основанный на библиотеке libncurses.\par
chkdupexe\par
chkdupexe находит дублирующиеся исполняемые файлы.\par
col\par
col фильтрует перевернутые строки, поступающие с ввода.\par
colcrt\par
colcrt фильтрует вывод nroff для предпросмотра CRT.\par
colrm\par
colrm удаляет колонки из файла.\par
column\par
column объединяет списки в файл из нескольких колонок.\par
ctrlaltdel\par
ctrlaltdel устанавливает действие для комбинации клавиш CTRL+ALT+DEL (жесткая или мягкая перезагрузка).\par
cytune\par
cytune запрашивает и изменяет порог прерывания для драйвера Cyclades.\par
ddate\par
ddate конвертирует дату по Грегорианскому календарю в дату по календарю Discordian.\par
dmesg\par
dmesg просматривает и контролирует буфер kernel ring (сообщения загрузки ядра).\par
elvtune\par
elvtune позволяет настраивать the I/O elevator per block device queue basis.\par
fdformat\par
fdformat выполняет низкоуровневое форматирование дискет.\par
fdisk\par
fdisk – редактор дисковых разделов.\par
fsck.cramfs\par
На данный момент нет описания.\par
fsck.minix\par
fsck.minix проверяет целостность файловых систем MINIX.\par
getopt\par
getopt анализирует переданные из командной строки параметры таким же образом как и одноименная функция C.\par
hexdump\par
hexdump выводит указанные файлы на стандартный вывод в указанном формате (ascii, десятичный, шестнадцатеричный, восьмеричный).\par
hwclock\par
hwclock устанавливает системные часы (часы RTC или BIOS).\par
ipcrm\par
ipcrm удаляет указанный ресурс.\par
ipcs\par
ipcs выводит информацию об устройствах IPC.\par
isosize\par
isosize выводит объем файловой системы iso9660.\par
line\par
line копирует одну строку (до символа новой строки) из стандартного ввода на стандартный вывод.\par
logger\par
logger делает записи в системном журнале.\par
look\par
look выводит строки, начинающиеся с заданной.\par
losetup\par
losetup управляет устройствами loop.\par
mcookie\par
mcookie генерирует «магические» ключи для xauth.\par
mkfs\par
mkfs создает файловую систему Linux на устройстве, обычно разделе диска.\par
mkfs.bfs\par
mkfs.bfs создает файловую систему SCO bfs на устройстве, обычно разделе диска.\par
mkfs.cramfs\par
На данный момент нет описания.\par
mkfs.minix\par
mkfs.minix создает файловую систему Linux MINIX на устройстве, обычно разделе диска.\par
mkswap\par
mkswap создает пространство подкачки на устройстве или в файле.\par
more\par
more – фильтр для поэкранного просмотра текста.\par
mount\par
mount монтирует файловую систему устройства в каталог (точку монтирования).\par
namei\par
namei переходит по заданному пути до тех пор, пока не будет найдена точка терминала.\par
parse.bash, parse.tcsh, test.bash, test.tcsh\par
Это примеры скриптов, использующих getopt с BASH или TCSH.\par
pg\par
На данный момент нет описания.\par
pivot_root\par
pivot_root изменяет корневую файловую систему текущего процесса.\par
ramsize\par
ramsize запрашивает и меняет размер RAM диска.\par
raw\par
raw используется для привязки символьных устройств к блочным.\par
rdev\par
rdev запрашивает и устанавливает образ корневого устройства, устройства подкачки, объем RAM диска или видеорежим.\par
readprofile\par
readprofile выводит информацию из профиля ядра.\par
rename\par
rename переименовывает файлы.\par
renice\par
renice меняет приоритет запущенных процессов.\par
rev\par
rev инвертирует строки файлов.\par
rootflags\par
rootflags запрашивает и сохраняет дополнительную информацию, используемую для монтирования корневой файловой системы.\par
script\par
script создает скрипт терминальной сессии.\par
setfdprm\par
setfdprm устанавливает параметры гибких дисков.\par
setsid\par
setsid запускает программы в новой сессии.\par
setterm\par
setterm устанавливает параметры терминала.\par
sfdisk\par
sfdisk – редактор дисковых разделов.\par
swapoff\par
swapoff деактивирует файлы и устройства подкачки.\par
swapon\par
swapon активирует файлы и устройства подкачки.\par
tunelp\par
tunelp устанавливает различные параметры LP устройств.\par
ul\par
ul читает файл и переводит символы подчеркивания в последовательность, отображающую подчеркивание на используемом терминале.\par
umount\par
umount размонтирует смонтированную файловую систему.\par
vidmode\par
vidmode запрашивает и устанавливает видеорежим.\par
whereis\par
whereis находит исполняемый файл, исходные коды и документацию для указанной команды.\par
write\par
write посылает сообщение другому пользователю.\par
Зависимости Util\_linux\par
Последняя проверка: версия 2.11n.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, cp, install, ln, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp, cpp0 Glibc: rpcgen Grep: grep Make: make Sed: sed Sh\_utils: uname, whoami Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка LFS\_Bootscripts\_1.10\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции: 0.01 SBU Необходимое дисковое пространство: 420 KB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Инсталляция LFS\_Bootscripts\par
Мы будем использовать скрипты инициализации SysV. Выбор в их пользу был сделан нами ввиду его распространенности и комфорта для нас. Если вы не разделяете наших предпочтений, см. руководство Марка Хеердинка по установке скриптов инициализации BSD http://hints.linuxfromscratch.org/hints/bsd\_init.txt.\par
Если вы решите использовать скрипты BSD, или какие\_либо другие, отличные от SysV, можете смело пропустить Главу 7.\par
Для инсталляции LFS\_Bootscripts выполните:\par
\b cp \_a rc.d sysconfig /etc && chown \_R root:root /etc/rc.d /etc/sysconfig\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Содержимое LFS\_bootscripts\par
Последняя проверка: версия 1.10.\par
Scripts\par
checkfs, cleanfs, functions, halt, ifdown, ifup, loadkeys, localnet, mountfs, mountproc, network, rc, reboot, sendsignals, setclock, swap, sysklogd и template\par
Descriptions\par
checkfs\par
checkfs проверяет файловые системы перед их монтированием (исключая журналируемые и сетевые файловые системы).\par
cleanfs\par
cleanfs удаляет файлы, которые не нужно хранить между перезагрузками, такие, как /var/run/*, /var/lock/*, создает пустой /var/run/utmp и удаляет /etc/nologin, /fastboot, /forcefsck.\par
functions\par
functions содержит общие для многих скриптов функции, такие как проверки ошибок и статуса, etc.\par
halt\par
halt останавливает систему.\par
ifdown, ifup\par
ifdown и ifup используются совместно с network.\par
loadkeys\par
loadkeys загружает keymap table, соответствующую раскладке клавиатуры.\par
localnet\par
localnet устанавливает имя системы и local loopback device.\par
mountfs\par
mountfs монтирует все локальные файловые системы, не помеченные как noauto.\par
mountproc\par
mountproc монтирует файловую систему proc.\par
network\par
network активирует сетевые интерфейсы и определяет шлюз по умолчанию.\par
rc\par
rc – основной скрипт, управляющий runlevel и отвечающий за исполнение прочих скриптов в установленном порядке.\par
reboot\par
reboot перезагружает систему.\par
sendsignals\par
sendsignals проверяет, остановлены ли все процессы, перед перезагрузкой ил остановкой системы.\par
setclock\par
setclock устанавливает часы ядра на местное время в случае, если системный таймер не установлен на GMT.\par
swap\par
swap разрешает/запрещает использование файлов и разделов подкачки.\par
sysklogd\par
sysklogd запускает и останавливает демоны журнализации ядра и системы в целом.\par
template\par
template – шаблон, который можно использовать для создания собственных загрузочных скриптов для других демонов.\par
Зависимости LFS\_Bootscripts\par
Последняя проверка: версия 1.10.\par
Fileutils: chown, cp\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Конфигурация основных программ\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь, когда все установлено, надо сконфигурировать программы для их корректного запуска.\par
Конфигурация VIM\par
По умолчанию vim запускается в режиме совместимости с vi. Некоторым это нравиться, но нам надо запускать vim в режиме vim (иначе мы бы не включили vim в описание, а оставили бы vi). Создайте /root/.vimrc запустив следующее:\par
\b cat > /root/.vimrc << «EOF»\b0  \par
" Begin /root/.vimrc\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 set nocompatible\par
set bs=2\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 " End /root/.vimrc\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурация Glibc\par
Нам надо создать новый файл /etc/nsswitch.conf запустив следующее:\par
\b cat > /etc/nsswitch.conf << «EOF»\b0  \par
# Begin /etc/nsswitch.conf\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 passwd: files\par
group: files\par
shadow: files\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 publickey: files\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 hosts: files dns\par
networks: files\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 protocols: db files\par
services: db files\par
ethers: db files\par
rpc: db files\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 netgroup: db files\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/nsswitch.conf\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Скрипт \b tzselect\b0   должен быть запущен, и вы должны ответить на вопрос о вашей временной зоне. Когда ответите, скрипт возьмет значение вашего местоположения из файла.\par
Создайте /etc/localtime симлинк на:\par
\b ln \_sf ../usr/share/zoneinfo/<tzselect's output> /etc/localtime\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 tzselect's должно иметь значение, типа \i EST5EDT\i0   or \i Canada/Eastern\i0  .\par
Команда на создание симлинка должна быть типа такой:\par
\b ln \_sf ../usr/share/zoneinfo/EST5EDT /etc/localtime\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Или:\par
\b ln \_sf ../usr/share/zoneinfo/Canada/Eastern /etc/localtime\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурация Dinamic Loader\par
По умолчанию Dinamic Loader (/lib/ld\_linux.so.2) производит поиск в /lib и /usr/lib на предмет наличия dinamic libraries для программ, которые в них нуждаются. Однако, если dinamic libraries находятся в других директориях, вы должны добавить их в файл /etc/ld.so.conf, чтобы Dinamic Loader смог их найти. Две директории общеизвестны для дополнительных библиотек: /usr/local/lib и /opt/lib поэтому мы добавим эти директории в пути поиска Dinamic Loader: Создайте новый файл /etc/ld.so.conf следующей командой:\par
\b cat > /etc/ld.so.conf << «EOF»\b0  \par
# Begin /etc/ld.so.conf\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 /usr/local/lib\par
/opt/lib\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/ld.so.conf\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурация Sysklogd\par
Создайте новый файл /etc/syslog.conf используя следующее:\par
\b cat > /etc/syslog.conf << «EOF»\b0  \par
# Begin /etc/syslog.conf\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 auth,authpriv.* \_/var/log/auth.log\par
*.*;auth,authpriv.none \_/var/log/sys.log\par
daemon.* \_/var/log/daemon.log\par
kern.* \_/var/log/kern.log\par
mail.* \_/var/log/mail.log\par
user.* \_/var/log/user.log\par
*.emerg *\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/syslog.conf\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурация теневых паролей (Shadow Password Suite)\par
Этот пакет содержит утилиты для изменения пользовательских паролей, добавления или удаления пользователей и групп и все в этом духе. Мы не хотим разъяснять вам, что есть теневые пароли. Полное разъяснение вы получите прочитав соответствующий HOWTO поставляемый вместе с Shadow Password Suite Надо запомнить только одну вещь: если вы хотите использовать теневые пароли, то убедитесь, что ваши программы (например xdm, ftp daemons, pop3 daemons) способны работать с ними (являются ли программы shadow\_compliant). Это все, что нам надо знать. Для включения механизма теневых паролей запустите следующую команду:\par
\b /usr/sbin/pwconv\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурация Sysvinit\par
Создайте новый файл /etc/inittab запустив следующее:\par
\b cat > /etc/inittab << «EOF»\b0  \par
# Begin /etc/inittab\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 id:3:initdefault:\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 si::sysinit:/etc/rc.d/init.d/rc sysinit\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 l0:0:wait:/etc/rc.d/init.d/rc 0\par
l1:S1:wait:/etc/rc.d/init.d/rc 1\par
l2:2:wait:/etc/rc.d/init.d/rc 2\par
l3:3:wait:/etc/rc.d/init.d/rc 3\par
l4:4:wait:/etc/rc.d/init.d/rc 4\par
l5:5:wait:/etc/rc.d/init.d/rc 5\par
l6:6:wait:/etc/rc.d/init.d/rc 6\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 ca:12345:ctrlaltdel:/sbin/shutdown \_t1 \_a \_r now\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 su:S016:once:/sbin/sulogin\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 1:2345:respawn:/sbin/agetty tty1 9600\par
2:2345:respawn:/sbin/agetty tty2 9600\par
3:2345:respawn:/sbin/agetty tty3 9600\par
4:2345:respawn:/sbin/agetty tty4 9600\par
5:2345:respawn:/sbin/agetty tty5 9600\par
6:2345:respawn:/sbin/agetty tty6 9600\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/inittab\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Конфигурируем клавиатуру\par
Ничего не раздражает в LINUX так, как неправильно настроенная клавиатура (раскладка, keymap). Если вы хотите использовать раскладку по умолчанию (US keyboard) вы можете пропустить эту часть. US keymap используется по умолчанию. Для установки keymap нужной раскладки, создайте симлинк /usr/share/kbd/keymaps/defkeymap.map.gz используя следующую команду:\par
\b ln \_s <path/to/keymap> /usr/share/kbd/keymaps/defkeymap.map.gz\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Замените путем к вашему map файлу. Для примера, если у вас немецкая раскладка запустите следующее:\par
\b ln \_s i386/qwerty/nl.map.gz /usr/share/kbd/keymaps/defkeymap.map.gz\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Вторая часть конфигурации раскладки заключается в компиляции раскладки прямо в ядро. В этом случае раскладка клавиатуры будет работать корректно даже в режиме maintenance (когда ядро получает команду init=/bin/sh), для которого сценарии загрузки не выполняются.\par
Запустите следующую команду для того, что бы пропатчить ядро на предмет правильной раскладки. Вы должны выполнить эту команду до того как вы распакуете новое ядро.\par
\b loadkeys \_m /usr/share/kbd/keymaps/defkeymap.map.gz > \'5c\b0  \par
\b /usr/src/linux/drivers/char/defkeymap.c\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Создание файлов /var/run/utmp, /var/log/wtmp and /var/log/btmp\par
Таким программам как login, shutdown, uptime и другие требуется читать и записывать данные в /var/run/utmp, /var/log/btmp и /var/log/wtmp. Эти файлы содержат информацию о том, кто в текущий момент залогинен в системе. Они так же содержат информацию о моменте последней загрузки и shutdown, и записи о неудачных попытках входа в систему.\par
Создайте эти файлы и установите на них следующие права доступа:\par
\b touch /var/run/utmp /var/log/\'7bbtmp,lastlog,wtmp\'7d &&\b0  \par
\b chmod 644 /var/run/utmp /var/log/\'7bbtmp,lastlog,wtmp\'7d\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Установка пароля пользователя root\par
Придумайте пароль для пользователя root и установите его следующей командой:\par
\b passwd root\b0  \par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 7. Конфигурация загрузочных скриптов\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Введение\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Эта глава описывает конфигурацию скриптов, о которых было рассказано в 6 главе. Большинство из тех скриптов будут работать и без дополнительных настроек, но некоторые требуют дополнительной конфигурации, т.к. они зависят он аппаратной конфигурации.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Как взаимодействует процесс загрузки со скриптами?\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 LINUX использует специальную возможность загрузки именуемой SysVinit Она основана на концепции \i runlevels\i0  . Они могут различаться от системы к системе, но это будет работать в дистрибутиве <вставьте его имя здесь> и в системах типа LFS. LFS имеет собственный путь в конфигурации, но мы уважаем стандарты.\par
SysVinit (мы называем \i init\i0   с этого места) работает используя схему runlevels. Всего их 7 (от 0 до 6). Может быть и более чем 7, но они создаются в отдельных случаях и в обычных системах не работают. Страница man для init описывает такие случаи. Каждый из уровней runlevels соответствует необходимым вещам, которые компьютер должен выполнить при загрузке этого уровня (runlevels). По умолчанию используется уровень 3 (runlevels). Далее приводится описание каждого уровня (runlevels) и небольшое описание:\par
0: halt the computer – выключить компьютер 1: single\_user mode – однопользовательский режим 2: multi\_user mode without networking – многопользовательский режим без сети 3: multi\_user mode with networking – многопользовательский режим с сетевыми установками 4: зарезервирован для создания, своего иначе используется так, как 3 5: Также как 4, только с использованием GUI входа в систему (например X'ы xdm или KDE's kdm) 6: перезагрузка компьютера\par
Команда для изменения runlevels – \b init <runlevel>\b0   где <runlevel> целевой номер runlevel. Для примера: перезагрузить компьютер можно используя команду \b init 6\b0  . Команда reboot только алиас для \b init 6\b0  , как и команда halt алиас для init 0.\par
Директории, находящиеся в поддиректории /etc/rc.d выглядят как /rc?.d, где d\_это номер runlevel и rcsysinit.d который содержит число символических ссылок. Некоторые начинаются на К, другие на S, и все из них имеют двухсимольную цифру, следующую после начальной буквы. Буква К означает останов (kill) службы, а S означает запуск службы. Число после буквы означает порядок, в котором скрипты будут запускаться. Числа могут иметь значения от 00 до 99, и чем меньше число, тем раньше запуститься скрипт. Когда init переключается на другой уровень, то службы предназначенные для одного runlevel`a убиваются, и другие запускаются.\par
Главные скрипты располагаются в директории /etc/rc.d/init.d. Они выполняют всю работу и все симлинки указывают на них. Симлинки для запуска и остановки указывают на скрипт в директории /etc/rc.d/init.d с таким же именем. Поэтому скрипты могут быть вызваны с различными параметрами, например start, stop, restart, reload, status. Когда скрипту передается аргумент stop, то вызывается К симлинк. Когда скрипту передается аргумент start, то вызывается S симлинк.\par
Есть только одно исключение. симлинки начинающиеся с S в директориях rc0.d и rc6.d не могут быть запущены никогда. Они могут бать вызваны только с параметром \i stop\i0   для остановки чего либо. Логика состоит в том, что если вы перезапустили или остановили систему, вам не надо запускать что либо, а только остановить систему.\par
Здесь предоставлены описания аргументов, передаваемых в скрипты, и заставляющих их выполнять что либо:\par
\i start\i0  : Запуск службы\par
\i stop\i0  : Останов службы\par
\i restart\i0  : Перезагрузка службы. Сначала останов службы, потом запуск.\par
\i reload\i0  : Обновить конфигурацию службы. Используется когда конфигурационный файл данной службы был изменен. Перезапуск службы не требуется.\par
\i status\i0  : Опросить службу. Выдается информация о том, запущена служба или нет, ее PIDs.\par
Почувствуйте свободу в создании собственных процессов загрузки (на вашей собственной системе LFS). Все поля, данные здесь – лишь примеры, о том, как лучше сделать (если вы знаете, что вам надо – сделайте так, как вы хотите).\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Настройка скрипта setclock\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Скрипт setclock считывает информацию о времени из BIOS компьютера и конвертирует его во время вашего часового пояса используя файл /etc/localtime (если значение в BIOS соответствует GMT) или нет (если значение в BIOS соответствует местному времени). Само ничего не конфигурируется (это вам не винда), поэтому лезем править сами:\par
Измените значение переменной \i UTC\i0   отличной от \i 0\i0   (нуля) в случае, если ваши часы не установлены по времени GMT.\par
Создайте файл /etc/sysconfig/clock запустив следующую команду:\par
\b cat > /etc/sysconfig/clock << «EOF»\b0  \par
# Begin /etc/sysconfig/clock\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 UTC=1\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/sysconfig/clock\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь вы можете посмотреть на неплохие примеры, позволяющие лучше понять механизм установки временной зоны на LFS http://hints.linuxfromscratch.org/hints/time.txt. Там объясняются такие понятия как timezones, UTC, и переменная окружения TZ.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Что надо для загрузки loadkeys скриптов?\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы решили вкомпилить вашу раскладку (keymap) напрямую в ядро, вернитесь в конец 6\_й главы, где вам четко сказано, что не требуется его (скрипт) запускать, если вы уже вкомпилили раскладку (keymap) в ядро. Но вы можете запустить крипт если хотите – ничего страшного. Это может потребоваться в случае, если у вас есть несколько разных ядер, и вы не помните: вкомпилировали\_ли вы в каждое ядро раскладку.\par
Если вы решили, что вам это не надо, или вы не хотите использовать скрипт loadkeys удалите этот /etc/rc.d/rcsysinit.d/S70loadkeys симлинк.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Настройка скрипта sysklogd\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Скрипт sysklogd вызывает программу \b syslogd\b0   с опцией \i –m 0\i0   Эта опция выключает периодические записи mark в лог файлы каждые 20 минут (значение по умолчанию). Если вы хотите включить периодические записи mark подредактируйте скрипт sysklogd на предмет необходимых изменений. Смотрите \b man syslogd\b0   для более детальной информации.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Конфигурация скриптов localnet.\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Частью установки скриптов, относящихся к localnet, является установка имени компьютера. Это требуется для правильной настройки /etc/sysconfig/network.\par
Создайте файл /etc/sysconfig/network file и введите имя компьютера запустив следующее:\par
\b echo «HOSTNAME=lfs» > /etc/sysconfig/network\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 «lfs» может быть заменено другим именем компьютера (как захотите, мы используем для примера имя lfs. Вам не надо вводить полное имя FQDN (Fully Qualified Domain Name).Эта информация будет храниться в файле /etc/hosts. Мы запишем ее позже.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Cоздание файла /etc/hosts\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если сетевая карта сконфигурирована, то вы должны определить IP адрес для системы и возможные алиасы (дополнительные имена) для использования в файле /etc/hosts. Синтаксис следующий:\par
<IP address> myhost.mydomain.org aliases\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Убедитесь, что введенный IP адрес системы является частью правильного адресного пространства, типа:\par
Class Networks A 10.0.0.0 B 172.16.0.0 through 172.31.0.0 C 192.168.0.0 through 192.168.255.0\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Правильный IP адрес может быть 192.168.1.1. Правильное полное имя системы для этого IP может быть www.linuxfromscratch.org.\par
Если вы не хотите использовать сетевую карту, то вы таки должны ввести полное имя системы (FQDN)для правильной работы некоторых программ.\par
Если у вас не планируется использование сетевой карты, создайте следующий файл: /etc/hosts запустив команду:\par
\b cat > /etc/hosts << «EOF»\b0  \par
# Begin /etc/hosts (no network card version)\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 127.0.0.1 www.mydomain.com <value of HOSTNAME> localhost\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/hosts (no network card version)\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если у вас есть сетевая карта и она настроена, или вы планируете использовать сетевую карту, то создайте следующий файл /etc/hosts, используя такую команду:\par
\b cat > /etc/hosts << «EOF»\b0  \par
# Begin /etc/hosts (network card version)\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 127.0.0.1 localhost.localdomain localhost\par
192.168.1.1 www.mydomain.org <value of HOSTNAME>\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/hosts (network card version)\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Естественно, адрес 192.168.1.1 и www.mydomain.org надо заменить на адрес и имя, которое вам больше нравится (или требуется ввести адрес и имя, которое попросил ввести сетевой/системный администратор и планируется, что эта машина будет частью существующей сети.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Настройка сетевых скриптов\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Эта часть нужна для настройки сетевой карты.\par
Если у вас нет сетевой карты, вам не требуется создавать или настраивать файлы, относящиеся к сетевой карте. В этом случае удалите симлинк network из всех директорий (/etc/rc.d/rc*.d)\par
Настройка шлюза по умолчанию.\par
Если ваш компьютер является частью сети вам потребуется указать шлюз используемый по умолчанию для вашего компьютера. Это делается добавлением следующих значений в файл \b /etc/sysconfig/network\b0  . Запустите такую команду:\par
\b cat >> /etc/sysconfig/network << «EOF»\b0  \par
GATEWAY=192.168.1.2\par
GATEWAY_IF=eth0\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Значения для GATEWAY и GATEWAY_IF надо изменить на установки вашей сети. GATEWAY должен содержать IP адрес шлюза по умолчанию, и GATEWAY_IF указывать на интерфейс сетевой карты через который использовать доступ к шлюзу по умолчанию.\par
Создание конфигурационных файлов для сетевой карты\par
Какой сетевой интерфейс будет запускаться и останавливаться сетевыми скриптами зависит от файлов расположенных в директории /etc/sysconfig/network\_devices. Эта директория должна содержать файлы в формате ifconfig.xyz, где xyz– имя сетевого интерфейса (например eth0 или eth0:1).\par
Если вы решили переименовать или переместить директорию /etc/sysconfig/network\_devices , убедитесь, что вы поправили файлы в /etc/sysconfig/rc на предмет новых путей к сетевым устройствам в скриптах.\par
Теперь, новые файлы созданные в директории /etc/sysconfig/network\_devices содержат следующее. Этой командой создадим пример файла ifconfig.eth0 Now, new files are created in that directory containing the following. :\par
\b cat > /etc/sysconfig/network\_devices/ifconfig.eth0 << «EOF»\b0  \par
ONBOOT=yes\par
IP=192.168.1.1\par
NETMASK=255.255.255.0\par
BROADCAST=192.168.1.255\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Естественно, значения этих переменных должны быть изменены в каждом файле на правильные настройки. Если переменная ONBOOT установлена yes, то скрипт выполнится при загрузке системы. Если установлено что нить отличное от yes, то скрипт не выполнится.\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 8. Делаем систему LFS загрузочной.\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Введение\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Эта глава описывает шаги, необходимые для того, чтобы сделать вашу систему загрузочной. Здесь рассказывается о создании файла fstab, компиляции нового ядра для LFS системы, добавления необходимых значений в LILO, дабы вы увидели в строке приглашения возможность выбора LFS системы из списка.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Создание файла /etc/fstab\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Система должна знать о разделах, которые есть в системе и о порядке их монтирования. Все разделы и порядок их монтирования перечисляется в файле /etc/fstab. Создадим такой файл /etc/fstab содержащий следующее:\par
\b cat > /etc/fstab << «EOF»\b0  \par
# Begin /etc/fstab\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # filesystem mount\_point fs\_type options dump fsck\_order\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 /dev/*LFS* / *fs\_type* defaults 1 1\par
/dev/*swap* swap swap pri=1 0 0\par
proc /proc proc defaults 0 0\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 # End /etc/fstab\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 \b *LFS*\b0  , \b *swap*\b0   and \b *fs\_type*\b0   должны быть заменены правильными значениями (например /dev/hda2, /dev/hda5 и reiserfs).\par
Когда добавляется раздел reiserfs, то значение \b 1 1\b0   в конце строки должно быть заменено на \b 0 0\b0  .\par
Для более детальной информации значения полей в файле fstab смотрите \b man 5 fstab\b0  .\par
Рассмотрим другие строки, которые, возможно, вам придется добавить в ваш файл fstab . Для примера рассмотрим возможность включения devpts:\par
devpts /dev/pts devpts gid=4,mode=620 0 0\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Другой пример, строка, позволяющая использовать устройства USB :\par
usbdevfs /proc/bus/usb usbdevfs defaults 0 0\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Обе опции будут работать только в случае, если вы вкомпилировали в ядро возможность подключения данных устройств.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Установка ядра Linux\_2.4.19\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Приблизительное время компиляции со всеми опциями по умолчанию: 4.20 SBU Необходимое дисковое пространство со всеми опциями по умолчанию: 181 MB\par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Построение ядра включает в себя несколько шагов: конфигурация и компиляция ядра. Есть несколько путей для конфигурации ядра. Если вам не нравится путь, описываемый здесь, то читайте README поставляемый с исходниками нового ядра, и ищите другие опции.\par
Необходимые телодвижения, которые вы должны совершить, это взять файл .config из дистрибутива исходников ядра и скопировать его в $LFS/usr/src/linux\_2.4.19. В этом случае вам нет необходимости конфигурировать отдельные опции, и воспользоваться значениями по умолчанию. Если вы хотите сделать так, то сначала запустите команду \b make mrproper\b0   затем скопируйте файл .config снова, и запустите \b make menuconfig\b0  ; далее запустите команду \b make oldconfig\b0   (может быть лучше в некоторых ситуациях. Смотрите README для более детальной информации по использованию \b make oldconfig\b0  ).\par
Если вы внимательно используете модули для ядра, то вы должны подправить файл /etc/modules.conf. Информация имеющая отношение к модулям и конфигурации ядра в основном находится в документации к ядру, которая находится в каталоге /usr/src/linux\_2.4.19/Documentation. Страница man page по modules.conf и файлы документации kernel HOWTO в http://www.tldp.org/HOWTO/Kernel\_HOWTO.html могут также быть полезными.\par
Необходимо запустить следующие команды для построения нового ядра:\par
\b make mrproper && make menuconfig && make dep && make bzImage && make modules && make modules_install && cp arch/i386/boot/bzImage /boot/lfskernel && cp System.map /boot\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Примечание: путь arch/i386/boot/bzImage может различаться в зависимости от платформы.\par
Зависимости Linux\par
Последняя проверка на версии 2.4.17.\par
Bash: sh Binutils: ar, as, ld, nm, objcopy Fileutils: cp, ln, mkdir, mv, rm, touch Findutils: find, xargs Gcc: cc1, collect2, cpp0, gcc Grep: grep Gzip: gzip Make: make Gawk: awk Modutils: depmod, genksyms Net\_tools: dnsdomainname, hostname Sed: sed Sh\_utils: basename, date, expr, pwd, stty, uname, whoami, yes Textutils: cat, md5sum, sort, tail\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Делаем систему LFS загрузочной.\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Для того, что бы иметь возможность запускать LFS систему мы должны обновить наш загрузчик. Мы предполагаем, что ваша системы использует Lilo (наиболее распространенный загрузчик на данный момент).\par
Мы не будем запускать программу lilo из\_под chroot. Запуск lilo под chroot может вызвать фатальные последствия с уничтожением или повреждением MBR, и мы будем использовать загрузочную дискету для запуска любых LFS систем .\par
Первое, мы должны выйти из режима chroot и скопировать файл ядра lfskernel в основную систему :\par
\b logout\b0  \par
\b cp $LFS/boot/lfskernel /boot\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Следующий шаг – добавление записи в файл /etc/lilo.conf дабы мы могли выбрать нашу LFS систему при загрузке компьютера:\par
\b cat >> /etc/lilo.conf << «EOF»\b0  \par
image=/boot/lfskernel\par
label=lfs\par
root=<partition>\par
read\_only\par
\b EOF\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Значение <partition> должно быть заменено значением раздела на котором размещено ядро LFS .\par
Так же, если вы используете reiserfs для основного раздела, что значение \b read\_only\b0   надо заменить на \b read\_write\b0  .\par
Теперь обновим загрузчик запустив следующее:\par
\b /sbin/lilo \_v\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Последний шаг – синхронизация конфигурации lilo на дискете и на LFS системе:\par
\b cp /etc/lilo.conf $LFS/etc && cp $(grep «image.*=» /etc/lilo.conf | cut \_f 2 \_d "=") $LFS/boot\b0  \par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Глава 9. Заключение.\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Заключение\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Все! Вы только что закончили установку вашей LFS системы. Это был долгий процесс, но мы надеемся он завершился благополучно. Мы думаем, вы получили много удовольствия при создании вашей новой linux системы... ;) .\par
Теперь пришло время убрать из вышей системы все отладочные данные из бинарников вашей LFS системы. Если вы не программист и не планируете использовать отладчик при отладке программ, то вы будете обрадованы возможностью убрать несколько десятков мегабайт, при удалении отладчиков. Перед запуском этого процесса убедитесь, что все необходимое вам ПО \b полностью\b0   настроено, и вы более не захотите его перекомпилировать или отлаживать .\par
\b ВНИМАНИЕ\b0  : 98% людей не испытывают проблем с методом описанным ниже. Но так или иначе, сделайте архив вашей LFS системы перед запуском этой команды. Это действительно хороший момент, дабы сделать бэкап всей системы и конфигов. После компиляции возможны некоторые необычные моменты (в основном повреждение модулей ядра, dynamic & shared libraries). Могут быть и другие проблемы вызванные данной командой.\par
Как уже говорилось, опция –strip\_debug используется для удаления отладочной информации которая нам никогда не понадобится. Это не вырезает всю ее из файлов. Так же можно попробовать применить опцию –strip\_all на обычных программах, не использующих библиотек (не используйте это на libraries – они могут быть уничтожены) но это не безопасно, да и место которое вы выиграете не стоит того. Но если вам важен каждый байт на диске, то используйте это на собственный страх и риск. Перечитайте 7 раз страницу man по strip (и его опциям которые вы хотите использовать). Главная идея \b не запускат\b0  \b ь\b0   strip на libraries (кроме как –strip\_debug) и все будет нормально.\par
\b find $LFS/\'7b,usr/,usr/local/\'7d\'7bbin,sbin,lib\'7d \_type f \'5c ааа\_exec /usr/bin/strip –strip\_debug '\'7b\'7d' ';'\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Хорошая мысль создать файл $LFS/etc/lfs. Имея этот файл вы можете легко определить , какую версию LFS вы используете. Занесите в него текущий номер этого мануала, и вы всегда будете знать, по какой версии документа искать помощь в случае чего... ;\_) Создайте файл используя следующую команду :\par
\b echo 4.0 > $LFS/etc/lfs\b0  \par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вписываем себя в пользователи LFS\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Хотите, что бы вас посчитали как пользователя LFS – загляните на страницу счетчика http://linuxfromscratch.org/cgi\_bin/lfscounter.cgi и зарегистрируйтесь как пользователь LFS. Введите свое имя и версию вашей системы , которую вы создали и возможно будете пользоваться.\par
Теперь давайте перезагрузимся в нашу систему...\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Перезагрузка системы\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Теперь все по установлено, загрузочные скрипты созданы, и настало время перезагрузить компьютер Перед этим надо размонтировать $LFS/proc и сам $LFS раздел запустив следующее:\par
\b umount $LFS/proc && umount $LFS\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Если вы создали систему со множеством разделов, вы должны размонтировать их тоже перед тем, как размонтируете раздел $LFS :\par
\b umount $LFS/proc && umount $LFS/usr && umount $LFS/home && umount $LFS\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 И теперь перезагрузить систему используя что\_то типа:\par
\b /sbin/shutdown \_r now\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В строке приглашения LILO, убедитесь, что вы загружаете \i lfs\i0   систему, даже если она загружается и не по умолчанию.\par
После перезагрузки вы можете начать работу в вашей собственной системе, устанавливать дополнительное ПО и т.д.\par
Единственная последняя вещь, которую вы, может быть, захотите сделать – это запустить lilo на предмет запуска с вашего HDD. Мы опишем инсталляцию lilo в MBR вашего диска. На разных системах могут быть незначительные отличия. В любом случае, сверяйтесь с документацией, в случае, если вам надо включить дополнительные опции.\par
В любом случае запустите следующую команду для того, что бы убедиться в том, что lilo установлено:\par
\b /sbin/lilo\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Возможно вам понадобиться удалить статические директории. Если надо, то перечитайте Главу 5 , затем сохраните статические директории (backup) перед их удалением. Для удаления статических директорий выполните следующее:\par
\b rm \_rf /static\b0  \par
\par
\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Ну вот, вы закончили создание вашей собственной LFS системы, и, теперь хотите поставить дополнительное ПО, например веб\_браузер или почтовый клиент. Первое, посмотрите проект Beyond Linux From Scratch в котором можете найти разные примеры: http://beyond.linuxfromscratch.org/. Всякие примочки и дополнительные описания могут быть найдены здесь: http://hints.linuxfromscratch.org/hints.shtml. В случае, если вы новичок не только в LFS, но и в Linux системах вообще, то есть смысл почитать советы для новичков: http://hints.linuxfromscratch.org/hints/newbie.txt – очень интересно.\par
Помните, что существуют списки рассылки по системам LFS, на которые вы можете подписаться для получения помощи. Смотрите Глава 1 – Списки рассылки и архивы для детальной информации .\par
Теперь, мы благодарим вас за использование книги по LFS и надеемся, что вы нашли ее полезной в использовании и сохранили ваше (да и наше) время ... ;\_)\par
\par
\par
\par
\s2 \qc\snext0\b\f0\fs28\fi0\li0\ri0 III. Часть III – Приложения\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Приложение A. Описания пакетов и зависимостей\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Вступление\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 В этом приложении рассмотрены следующие аспекты пакетов, описанных в этой книге:\par
официальная ссылка для загрузки пакета\par
содержимое пакета,\par
что делает каждая программа пакета,\par
что необходимо для компиляции пакета.\par
Большинство информации о пакетах (в особенности, их описания) взяты из их man pages. Мы приводим не полные man pages, а некоторые ключевые элементы для облегчения понимания функций программ. Для получения более детальной информации о программах, обращайтесь к их man или info pages.\par
Некоторые пакеты более глубоко освещены чем другие лишь потому, что нам необходимо знать о них больше чем о прочих. Если вы считаете, что что\_то должно быть добавлено к описаниям, сообщайте об этом в списки рассылки. Мы стремимся к наибольшей полноте описаний пакетов, но без вашей помощи ничего не выйдет.\par
Заметьте, что в текущей версии книги описано лишь то, что делает пакет, а не почему его необходимо установить. Возможно, позже это будет добавлено.\par
Также перечислены все зависимости для всех пакетов, перечисленных в этой книге. Описано, какие программы из каких пакетов необходимы для успешной компиляции.\par
Приведенные зависимости указывают лишь на пакеты, необходимые для компиляции, а не исполнения программ.\par
Список зависимостей, со временем, устаревает относительно текущей версии пакета. У нас нет времени на проверку зависимостей при каждом обновлении, так что реальный их список может отличаться. Но при небольших обновлениях зависимости редко изменяются, так что они будут соответствовать в большинстве случаев. При внесении крупных изменений в пакеты, зависимости обязательно будут проверены.\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Autoconf\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Autoconf (2.53): ftp://ftp.gnu.org/gnu/autoconf/\par
Содержание Autoconf\par
Последняя проверка: версия 2.53.\par
Программы\par
autoconf, autoheader, autom4te, autoreconf, autoscan, autoupdate и ifnames\par
Описания\par
autoconf\par
autoconf – инструмент для создания скриптов командного интерпретатора, автоматически конфигурирующих пакеты с исходным кодом для адаптации ко многим Unix системам. Настроечные скрипты, созданные autoconf, независимы от autoconf во время их исполнения, так что пользователям необязательно использование autoconf.\par
autoheader\par
autoheader создает шаблонный файл, состоящий из выражений C #define для использования configure.\par
autom4te\par
autom4te запускает GNU M4 для обработки заданных файлов.\par
autoreconf\par
При наличии множества настроечных скриптов, созданных autoconf, autoreconf может сэкономить время. Утилита повторно запускает autoconf and autoheader (когда необходимо) для повторной генерации настроечных скриптов autoconf и настройки шаблонов заголовков рекурсивно, начиная с текущего каталога.\par
autoscan\par
autoscan может помочь в написании configure.in для программного пакета. autoscan просматривает исходные файлы в дереве каталогов. Если не указан каталог, то используется текущий. Исходный код проверяется на наличие распространенных проблем переносимости, создаваемый configure.scan служит предварительным configure.in для пакета.\par
autoupdate\par
autoupdate обновляет имена вызова макросов autoconf в configure.in.\par
ifnames\par
ifnames может помочь во время написания configure.in для программного пакета. Выводятся идентификаторы, которые пакет уже использует в условиях препроцессора C. Если пакет уже настроен для некоторой переносимости, программа может помочь в определении, что необходимо проверить configure. Она также может заполнить некоторые пропуски в configure.in, вставленные autoscan.\par
Зависимости Autoconf\par
Последняя проверка: версия 2.52.\par
Bash: sh Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm Grep: fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Automake\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Automake (1.6.3): ftp://ftp.gnu.org/gnu/automake/\par
Содержание Automake\par
Последняя проверка: версия 1.6.2.\par
Программы\par
acinstall, aclocal, aclocal\_1.6, automake, automake\_1.6, compile, config.guess, config.sub, depcomp, elisp\_comp, install\_sh, mdate\_sh, missing, mkinstalldirs, py\_compile, ylwrap\par
Описания\par
acinstall\par
acinstall – сценарий, устанавливающий файлы aclocal\_style M4.\par
aclocal, aclocal\_1.6\par
automake включает несколько макросов autoconf, используемых в пакетах, часть которых необходима automake в ряде случаев. Эти макросы должны быть определены в aclocal.m4, иначе autoconf не сможет их использовать.\par
aclocal program автоматически создаст aclocal.m4, основываясь на содержимом configure.in. Это дает возможность получения предоставленных automake макросов без их поиска. Также. механизм aclocal расширяем для использования другими пакетами.\par
automake, automake\_1.6\par
Для создания всех файлов Makefile.in пакета, запустите automake в каталоге верхнего уровня без параметров. automake найдет все соответствующие Makefile.am (просматривая configure.in) и создаст Makefile.in.\par
compile\par
compile – cценарий\_обертка для компиляторов.\par
config.guess\par
config.guess – сценарий, определяющий каноническое имя системы.\par
config.sub\par
config.sub – скрипт проверки конфигурации.\par
depcomp\par
depcomp – cкрипт, компилирующий программу вместе с генерацией зависимостей.\par
elisp\_comp\par
elisp\_comp – скрипт для байт\_компиляции файлов .el.\par
install\_sh\par
install\_sh – скрипт, устанавливающий программу, скрипт или файл данных.\par
mdate\_sh\par
mdate\_sh – скрипт, выводящий время изменения файла или каталога.\par
missing\par
missing – заменяющий некоторые отсутствующие программы GNUво время инсталляции.\par
mkinstalldirs\par
mkinstalldirs – скрипт для иерархической сборки каталога.\par
py\_compile\par
py\_compile – скрипт, собирающий программу на Python.\par
ylwrap\par
ylwrap – скрипт\_обертка для вызовов lex/yacc.\par
Зависимости Automake\par
Последняя проверка: версия 1.5.\par
Bash: sh Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm, rmdir Grep: fgrep, grep Make: make Perl: perl Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Bash\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Bash (2.05a): ftp://ftp.gnu.org/gnu/bash/\par
Содержание Bash\par
Последняя проверка: версия 2.05a.\par
Программы\par
bash, sh (ссылка на bash) и bashbug\par
Описания\par
bash\par
bash – Bourne\_Again SHell, широко используемый в Unix системах командный интерпретатор. Bash считывает данные со стандартного ввода, клавиатуры. Пользователь вводит что\_либо, интерпретатор распознает введенное и выполняет это, например запускает программу.\par
bashbug\par
bashbug – скрипт, помогающий пользователю составлять и отправлять сообщения об ошибках bash в стандартном формате.\par
sh\par
sh – символическая ссылка на bash. Будучи вызванным как sh, bash имитирует запуск старых версий sh, для лучшего соответствия стандартам POSIX.\par
Зависимости Bash\par
Последняя проверка: версия 2.05a.\par
Bash: bash, sh Binutils: ar, as, ld, ranlib, size Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Bin86\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Bin86 (0.16.3): http://www.cix.co.uk/~mayday/\par
Содержание Bin86\par
Последняя проверка: версия 0.16.3\par
Программы\par
as86, as86_encap, ld86, nm86 (ссылка на objdump86), objdump86 и size86 (ссылка на objdump86)\par
Описания\par
as86\par
as86 – ассемблер для процессоров 8086...80386.\par
as86_encap\par
as86_encap – скрипт для вызова as86 и конвертирования полученного кода в код C (prog.v) для включения или слинковки с программами вроде инсталляторов загрузочных секторов.\par
ld86\par
ld86 понимает только объектные файлы, полученные от ассемблера as86. Возможна линковка как в смешанный, так и раздельный исполняемый код I&D.\par
nm86\par
Таблица символов для бинарного файла.\par
objdump86\par
Сохраняет детальную информацию о бинарном файле.\par
size86\par
Выводит общий объем данных в бинарном файле.\par
Зависимости Bin86\par
Последняя проверка: версия 0.16.0.\par
Bash: sh Binutils: as, ld, strip Fileutils: chmod, install, ln, mv Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Binutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Binutils (2.13): ftp://ftp.gnu.org/gnu/binutils/\par
Содержимое Binutils\par
Последняя проверка: версия 2.12.1.\par
Программы\par
addr2line, ar, as, gasp, gprof, ld, nm, objcopy, objdump, ranlib, readelf, size, strings and strip\par
Описания\par
addr2line\par
addr2line переводит программные адреса в имена файлов и номера строк. Given an address and an executable, используется отладочная информация исполняемого файла, чтобы определить, какое имя файла и номер строки связаны с данным адресом.\par
ar\par
ar создает и изменяет архивы, а также производит их распаковку. Архив – файл, содержащий несколько файлов в виде, позволяющем восстановить оригинал.\par
as\par
as используется для ассемблирования вывода the GNU C Compiler, gcc для использования с линкером ld.\par
gasp\par
gasp – Assembler Macro Preprocessor.\par
gprof\par
gprof отображает статистику системных вызовов.\par
ld\par
ld объединяет несколько объектных и архивных файлов и устанавливает символьные отношения. Последний шаг в сборке скомпилированной программы – запуск ld.\par
nm\par
nm перечисляет символы из объектных файлов.\par
objcopy\par
objcopy utility копирует содержимое одного объектного файла в другой. objcopy использует библиотеку GNU BFD для чтения/записи объектных файлов. Возможна запись конечного объектного файла в формате, отличном от исходного.\par
objdump\par
objdump выводит информацию об одном или нескольких объектных файлах. Опции указывают, какую информацию выводить. Эта информация полезна для программистов, разрабатывающих компиляторы, в противоположность тем, кому нужно просто скомпилировать и запустить программу.\par
ranlib\par
ranlib генерирует оглавление содержимого архива и сохраняет его в архиве. Список будет содержать все символы, определенные членами архива, that is a relocatable object file.\par
readelf\par
readelf выводит информацию об бинарных файлах типа elf.\par
size\par
size выводит размеры секций –и общий размер– каждого указанного объектного файла. По умолчанию, генерируется одна строка для каждого объектного файла или модуля в архиве.\par
strings\par
Для каждого заданного файла strings выводит последовательность отображаемых символов длиной минимум 4 знака (или указанной длины), завершающуюся непечатным символом. По умолчанию, выводятся лишь строки из инициализированных и загруженных частей объектных файлов. Для других типов файлов выводятся строки из всего файла.\par
strings зачастую используется для определения содержимого нетекстовых файлов.\par
strip\par
strip удаляет все или указанные символы из объектных файлов. Список объектных файлов может включать архивы. Должен быть задан как минимум один объектный файл. Модификация указанных файлов приоритетнее, чем запись модифицированных копий под другими именами.\par
Библиотеки\par
libbfd.[a,so] и libopcodes.[a,so]\par
Описания\par
libbfd\par
libbfd – библиотека Binary File Descriptor.\par
libopcodes\par
libopcodes – библиотека для работы с опкодами, используется в сборке утилит вроде objdump. Опкоды – «читаемые» версии инструкций процессора.\par
Зависимости Binutils\par
Последняя проверка: версия 2.11.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, rmdir, touch Flex: flex Gcc: cc, cc1, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, true, uname Texinfo: install\_info, makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Bison\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Bison (1.35): ftp://ftp.gnu.org/gnu/bison/\par
Содержимое Bison\par
Последняя проверка: версия 1.35.\par
Программы\par
bison и yacc\par
Описания\par
bison\par
bison – генератор анализаторов синтаксиса (parser) выражений (заменяет yacc – Yet Another Compiler Compiler). Что же делает bison? Это программа, генерирующая программу, анализирующую структуру текстового файла. Вместо написания собственной программы пользователь указывает, как соотносятся объекты, и основываясь на данных правилах, создается анализатор. Существует множество примеров анализа синтаксиса, например калькулятор.\par
Дано выражение:\par
1 + 2 * 3\par
Человек легко получит результат 7. Почему? Because of the structure. Наш мозг знает, как интерпретировать выражение. Компьютер этого не знает, и bison инструмент, представляющий выражение компьютеру в следующем виде:\par
+ / \'5c * 1 / \'5c 2 3\par
Начиная с вершины дерева и обрабатывая 2 and 3, соединенных знаком умножения, компьютер перемножает 2 и 3. Результат умножения запоминается и следующее, что обрабатывается – 2*3 и 1, соединенные знаком сложения. Сложение 1 и предыдущего результата дает 7. Все составные выражения могут быть преобразованы в подобное дерево и вычислены. Конечно же, bison используется не только в калькуляторах.\par
yacc\par
Мы написали скрипт bash с именем yacc, вызывающий bison с опцией \_y. Это необходимо для совместимости с программами, использующими yacc вместо bison.\par
Зависимости Bison\par
Последняя проверка: версия 1.31.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: basename, dirname, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, head, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Bzip2\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Bzip2 (1.0.2): ftp://sourceware.cygnus.com/pub/bzip2/\par
Содержимое Bzip2\par
Последняя проверка: версия 1.0.2\par
Программы\par
bunzip2 (ссылка на bzip2), bzcat (ссылка на bzip2), bzcmp, bzdiff, bzegrep, bzfgrep, bzgrep, bzip2, bzip2recover, bzless и bzmore\par
Описания\par
bunzip2\par
bunzip2 распаковывает файлы, сжатые bzip2.\par
bzcat\par
bzcat (или bzip2 \_dc) распаковывает указанные файлы на стандартный вывод.\par
bzcmp, bzdiff\par
bzcmp и bzdiff позволяют использовать cmp и diff для файлов, сжатых bzip2.\par
bzegrep, bzfgrep, bzgrep\par
bzegrep, bzfgrep, и bzgrep позволяют использовать egrep, fgrep, or grep для файлов, сжатых bzip2.\par
bzip2\par
bzip2 сжимает файлы, используя Burrows\_Wheeler block sorting алгоритм сжатия текста и код Huffman. Сжатие, обычно: значительно лучше, чем достигаемое традиционными архиваторами, основанными на LZ77/LZ78, и достигает производительности PPM семейства статистических архиваторов.\par
bzip2recover\par
bzip2recover восстанавливает данные из поврежденных файлов bzip2.\par
bzless\par
bzless – подобный less фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
bzmore\par
bzmore – подобный more фильтр, позволяющий поэкранный просмотр сжатых или текстовых файлов.\par
Библиотеки\par
libbz2.a, libbz2.so (ссылка на libbz2.so.1.0), libbz2.so.1.0 (ссылка на libbz2.so.1.0.2) и libbz2.so.1.0.2\par
libbz2\par
libbz2 – библиотека, реализующая сжатие данных без потерь, используя block\_sorting алгоритм Burrows\_Wheeler.\par
Зависимости Bzip2\par
Последняя проверка: версия 1.0.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Fileutils: cp, ln, rm Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Diffutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Diffutils (2.8.1): ftp://ftp.gnu.org/gnu/diffutils/\par
Содержимое Diffutils\par
Последняя проверка: версия 2.8.1.\par
Программы\par
cmp, diff, diff3 и sdiff\par
Описания\par
cmp и diff\par
cmp и diff сравнивают пару файлов и сообщают об их различиях. Обе программы имеют дополнительные опции сравнения файлов в различных ситуациях.\par
diff3\par
Разница между diff и diff3 состоит в том, что diff сравнивает 2 files, а diff3 – 3.\par
sdiff\par
sdiff выполняет слияние 2 файлов и интерактивно выводит результаты.\par
Зависимости Diffutils\par
Последняя проверка: версия 2.7.\par
Bash: sh Binutils: ld, as Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: date, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 E2fsprogs\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
E2fsprogs (1.27): ftp://download.sourceforge.net/pub/sourceforge/e2fsprogs/ http://download.sourceforge.net/e2fsprogs/\par
Содержимое E2fsprogs\par
Последняя проверка: версия 1.27.\par
Программы\par
badblocks, chattr, compile_et, debugfs, dumpe2fs, e2fsck, e2image, e2label, fsck, fsck.ext2, fsck.ext3, lsattr, mk_cmds, mke2fs, mkfs.ext2, mkfs.ext3, mklost+found, resize2fs, tune2fs и uuidgen\par
Описания\par
badblocks\par
badblocks используется для поиска сбойных блоков на устройстве (обычно, дисковом разделе).\par
chattr\par
chattr изменяет атрибуты файлов в файловых системах Linux second extended.\par
compile_et\par
compile_et используется для преобразования таблицы, листинга кодов ошибок и связанных сообщений в исходный код C, что удобно для использования с библиотекой com_err.\par
debugfs\par
debugfs – файловый отладчик. Используется для исследования и изменения состояния файловой системы ext2.\par
dumpe2fs\par
dumpe2fs выводит superblock и информацию о группе блоков для файловой системы, присутствующей на указанном устройстве.\par
e2fsck and fsck.ext2\par
e2fsck и fsck.ext2 используются для проверки и исправления файловых систем Linux second extended.\par
e2image\par
e2image используется для сохранения критичных данных файловой системы ext2в файл.\par
e2label\par
e2label выводит и изменяет метку файловой системы ext2 filesystem, расположенной на указанном устройстве.\par
fsck\par
fsck используется для проверки и исправления файловых систем Linux.\par
fsck.ext3\par
fsck.ext3 используется для проверки и исправления файловых систем Linux ext3.\par
lsattr\par
lsattr выводит атрибуты файла на second extended file system.\par
mk_cmds\par
mk_cmd, получая таблицу команд на входе, выводит исходный код C, который задается для использования с подсистемной библиотекой, libss.\par
mke2fs and mkfs.ext2\par
mke2fs используется для создания Linux second extended file system на устройстве (обычно, разделе диска). mkfs.ext2 выполняет те же функции, что и mke2fs.\par
mkfs.ext3\par
mkfs.ext3 используется для создания файловой системы ext3.\par
mklost+found\par
mklost+found создает каталог lost+found в текущем рабочем каталогу в Linux second extended file system. mklost+found заранее выделяет блоки диска для этого каталога, делая его доступным для e2fsck.\par
resize2fs\par
resize2fs используется для изменения размеров файловой системы ext2.\par
tune2fs\par
tune2fs изменяет настраиваемые параметры Linux second extended filesystem.\par
uuidgen\par
uuidgen создает новый универсальный уникальный идентификатор (UUID), используя библиотеку libuuid. Новый UUID будет уникален среди всех созданных UUID на любой системе и в любое время.\par
Библиотеки\par
libcom_err.[a,so], libe2p.[a,so], libext2fs.[a,so], libss.[a,so], libuuid.[a,so]\par
Описания\par
libcom_err\par
Вывод стандартных ошибок.\par
libe2p\par
libe2p используется dumpe2fs, chattr и lsattr.\par
libext2fs\par
Библиотека ext2fs создана для работы пользовательских программ с файловыми системами ext2.\par
libss\par
libss используется debugfs.\par
libuuid\par
Библиотека libuuid используется для генерации уникальных идентификаторов для объектов, которые могут быть доступны извне.\par
Зависимости E2fsprogs\par
Последняя проверка: версия 1.25.\par
Bash: sh Binutils: ar, as, ld, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, install, ln, mkdir, mv, rm, sync Gcc: cc, cc1, collect2, cpp0 Glibc: ldconfig Grep: egrep, grep Gzip: gzip Make: make Gawk: awk Sed: sed Sh\_utils: basename, echo, expr, hostname, uname Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Ed\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Ed (0.2): ftp://ftp.gnu.org/gnu/ed/ Ed Patch (0.2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Ed\par
Последняя проверка: версия 0.2.\par
Программы\par
ed и red (ссылка на ed)\par
Описание\par
ed\par
ed – строкоориентированный текстовый редактор. Он используется для создания, отображения, изменения и других манипуляций с текстовыми файлами.\par
red\par
red – это ограниченный ed: он может редактировать файлы только в текущем каталоге и не может исполнять команды интерпретатора.\par
Зависимости Ed\par
Последняя проверка: версия 0.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 File\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
File (3.39): ftp://ftp.gw.com/mirrors/pub/unix/file/\par
Содержимое File\par
Последняя проверка: версия 3.39.\par
Программы\par
file\par
Описания\par
file\par
file проверяет указанные файлы с целью их классификации. Есть 3 набора тестов, запускаемых в данном порядке: тесты файловой системы, тесты magic number и тесты языка. Первый удавшийся тест выводит тип файла.\par
Зависимости File\par
Последняя проверка: версия 3.37.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ln, ls, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Fileutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Fileutils (4.1): ftp://ftp.gnu.org/gnu/fileutils/ Fileutils Patch (4.1): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Fileutils\par
Последняя проверка: версия 4.1.\par
Программы\par
chgrp, chmod, chown, cp, dd, df, dir, dircolors, du, install, ln, ls, mkdir, mkfifo, mknod, mv, rm, rmdir, shred, sync, touch и vdir\par
Описания\par
chgrp\par
chgrp группу владельца указанных файлов, возможно указание как имени группы, так и ее номера.\par
chmod\par
chmod изменяет права доступа к указанному файлу, в соответствии с параметрами, заданными символьно или в восьмеричном представлении двоичного выражения новых прав.\par
chown\par
chown изменяет владельца и/или группу указанных файлов.\par
cp\par
cp копирует файлы.\par
dd\par
dd копирует файл (по умолчанию, со стандартного ввода на стандартный вывод) с указанным размером блока и опциональными преобразованиями.\par
df\par
df показывает количество свободного места на файловых системах, содержащих указанные файлы. Если файлы не заданы, показывается свободное место на всех смонтированных файловых системах.\par
dir, ls and vdir\par
dir и vdir – версии ls с разными форматами вывода по умолчанию. Эти программы выводят список заданных файлов и каталогов. Содержимое каталога сортируется по алфавиту. ls, по умолчанию, перечисляет файлы в столбцах если стандартный вывод – терминал, иначе идет перечисление по одному в строке. dir, по умолчанию, перечисляет файлы в столбцах. vdir, по умолчанию перечисляет файлы в полном формате.\par
dircolors\par
dircolors выводит значение LS_COLOR. Переменная LS_COLOR используется для установки цветовой схемы, используемой ls и прочими утилитами.\par
du\par
du выводит количество дискового пространства, занятого указанными файлами и каталогами (включая подкаталоги).\par
install\par
install копирует файлы, устанавливает права доступа и, если возможно, владельца и группу.\par
ln\par
ln создает жесткие или мягкие (символические) ссылки на файлы.\par
mkdir\par
mkdir создает каталог с заданным именем.\par
mkfifo\par
mkfifo создает FIFO с заданным именем.\par
mknod\par
mknod создает FIFO, символьный или блочный файл с заданным именем.\par
mv\par
mv перемещает файлы из одного каталога в другой или переименовывает их, в зависимости от заданных параметров.\par
rm\par
rm удаляет файлы или каталоги.\par
rmdir\par
rmdir удаляет пустые каталоги.\par
shred\par
shred безопасно удаляет файл, перезаписывая занимаемые им блоки, так что содержимое невозможно восстановить.\par
sync\par
sync принудительно записывает изменившиеся блоки на диск и обновляет superblock.\par
touch\par
touch изменяет время доступа и изменения каждого заданного файла на текущее время. Если файл не существует, то создается пустой файл.\par
Зависимости Fileutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Findutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Findutils (4.1): ftp://ftp.gnu.org/gnu/findutils/ Findutils Patch (4.1): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Findutils\par
Последняя проверка: версия 4.1.\par
Программы\par
bigram, code, find, frcode, locate, updatedb и xargs\par
Описания\par
bigram\par
bigram используется вместе с code для создания поисковых баз старого типа. Больше информации об этих программах приведено на locatedb.5 man page.\par
code\par
code – предшественник frcode. Он использовался в старых поисковых базах.\par
find\par
find ищет файлы, отвечающие заданному критерию. Если критерий не задан, выводится список файлов в текущем каталоге и каталогах нижнего уровня.\par
frcode\par
frcode вызывается updatedb для сжатия списка файлов, используя front\_compression и уменьшая размер базы данных в 4\_5 раз.\par
locate\par
locate просматривает базу данных, содержащую сведения обо всех файлах и каталогах на файловой системе. Программа выводит имена файлов и каталогов в базе, совпадающие с заданным критерием. Если пользователь ищет файлы, программа просмотрит базу и сообщит, где находятся запрошенные файлы. Поиск даст результаты, только если база часто обновляется, иначе будет выдана устаревшая информация.\par
updatedb\par
updatedb обновляет поисковую базу. Просматривается вся файловая система (включая все смонтированные, если не указано обратное), каждый найденный файл и каталог записывается в базу, используемую locate. Неплохо обновлять базу хотя бы раз в день, чтобы избежать ее устаревания.\par
xargs\par
xargs выполняет команду относительно списка файлов. Список должен содержать одно имя в строке.\par
Зависимости Findutils\par
Последняя проверка: версия 4.1.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Grep: egrep, grep Gcc: cc1, collect2, cpp0, gcc Make: make Patch: patch Sed: sed Sh\_utils: basename, date, echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Flex\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Flex (2.5.4a): ftp://ftp.gnu.org/non\_gnu/flex/\par
Содержимое Flex\par
Последняя проверка: версия 2.5.4a.\par
Program Files\par
flex, flex++ (ссылка на flex) and lex\par
Descriptions\par
flex\par
flex – инструмент для генерации программ, распознающих заданные образцы в тексте. Распознавание образцов часто используется во многих приложениях. Пользователь задает правила поиска, и flex создает программу для поиска образцов. Причина, по которой люди используют flex, состоит в том, что гораздо проще задать правила, чем писать собственную программу.\par
flex++\par
flex++ вызывает версию flex, используемую для сканеров C++.\par
lex\par
Мы создали скрипт lex, вызывающий flex с опцией \_l. Это необходимо для совместимости с программами, использующими lex вместо flex.\par
Библиотеки\par
libfl.a\par
Описания\par
libfl\par
libfl – библиотека flex.\par
Зависимости Flex\par
Последняя проверка: версия 2.5.4a.\par
Bash: sh Binutils: ar, as, ld, ranlib Bison: bison Diffutils: cmp Fileutils: chmod, cp, install, ln, mv, rm, touch Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Gawk\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Gawk (3.1.1): ftp://ftp.gnu.org/pub/gnu/gawk/ Gawk Patch (3.1.1\_2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Gawk\par
Последняя проверка: версия 3.1.1.\par
Программы\par
awk, gawk, gawk\_3.1.1, grcat, igawk, pgawk, pgawk\_3.1.1, pwcat\par
Описания\par
awk\par
awk – символьная ссылка на gawk.\par
gawk, gawk\_3.1.1\par
gawk – GNU реализация awk, языка поиска и обработки текстовых образцов.\par
grcat\par
grcat выполняет слияние базы групп, /etc/group.\par
igawk\par
igawk – скрипт, дающий gawk возможность включения файлов.\par
pgawk, pgawk\_3.1.1\par
pgawk – профильная версия gawk.\par
pwcat\par
pwcat выполняет слияние базы паролей, /etc/passwd.\par
Зависимости Gawk\par
Последняя проверка: версия 3.1.0.\par
(Зависимости пока не проверены)\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 GCC\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
GCC (3.2): ftp://ftp.gnu.org/pub/gnu/gcc/ GCC Patch (3.2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/ GCC nofixincludes Patch (3.2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое GCC\par
Последняя проверка: версия 3.1.\par
Программы\par
c++, c++filt, cc (link to gcc), cc1, cc1plus, collect2, cpp, cpp0, g++, gcc, gccbug, gcov и tradcpp0\par
Описания\par
cc, cc1, cc1plus, gcc\par
Компилятор C. Компилятор переводит код из текстового формата в формат, понятный компьютеру. После того, как исходный код скомпилирован в объектный файл, линкер создаст исполняемый файл из одного или нескольких объектных.\par
c++, cc1plus, g++\par
Компилятор C++, эквивалент cc, gcc etc.\par
c++filt\par
Язык C++ позволяет осуществлять перезагрузку функций, делая возможным написание многих функций с одним именем (с разным набором параметром). Все имена функций C++ закодированы в низкоуровневые метки ассемблера (этот процесс известен как mangling). c++filt совершает обратное действие: низкоуровневые имена переводятся (demangling) в имена, понятные пользователю, так что линкер избегает конфликта между перезагруженными функциями.\par
collect2\par
collect2 помогает в компиляции конструкторов.\par
cpp, cpp0\par
cpp осуществляет препроцессинг исходных файлов, например включает в них содержимое заголовочных файлов. Просто добавьте в ваш исходный файл строку вроде #include <filename>. Препроцессор вставит содержимое заголовочного файла.\par
gccbug\par
gccbug – скрипт, облегчающий создание сообщений об ошибках.\par
gcov\par
gcov анализирует программы, чтобы помочь в создании более эффективного и быстрого кода путем его оптимизации.\par
tradcpp0\par
На данный момент описания нет.\par
Библиотеки\par
libgcc.a, libgcc_eh.a, libgcc_s.so, libiberty.a, libstdc++.[a,so], libsupc++.a\par
Описания\par
libgcc, libgcc_eh, libgcc_s\par
Файлы поддержки gcc времени исполнения.\par
libiberty\par
libiberty – коллекция подпрограмм, используемых различными программами GNU, включая getopt, obstack, strerror, strtol и strtoul.\par
libstdc++\par
libstdc++ – библиотека C++. Она используется программами на C++ и содержит часто используемые функции. Таким образом, программисту не нужно писать стандартные функции (например, вывод строки текста на экран) с нуля при каждом создании программы.\par
libsupc++\par
libsupc++ предоставляет поддержку языка программирования C++. Помимо прочего, libsupc++ содержит функции для обработки исключений.\par
Зависимости GCC\par
Последняя проверка: версия 2.95.3.\par
Bash: sh Binutils: ar, as, ld, nm, ranlib Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, touch Find: find Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Patch: patch Sed: sed Sh\_utils: basename, dirname, echo, expr, hostname, sleep, true, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tail, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Gettext\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Gettext (0.11.5): ftp://ftp.gnu.org/gnu/gettext/\par
Содержимое Gettext\par
Последняя проверка: версия 0.11.2.\par
Программы\par
config.charset, config.rpath, gettext, gettextize, hostname, msgattrib, msgcat, msgcmp, msgcomm, msgconv, msgen, msgexec, msgfilter, msgfmt, msggrep, msginit, msgmerge, msgunfmt, msguniq, ngettext, project\_id, team\_address, trigger, urlget, user\_email и xgettext\par
Описания\par
config.charset\par
config.charset выводит зависящую от системы таблицу кодов символов.\par
config.rpath\par
config.rpath выводит зависящий от системы набор переменных, описывающий как установить путь поиска разделяемых библиотек.\par
gettext\par
gettext используется для интернационализации (aka i18n) и локализации (aka l10n). Программы могут быть скомпилированы с поддержкой Native Language Support (NLS), что позволяет им выводить сообщения на родном языке пользователя вместо стандартного английского.\par
gettextize\par
gettextize копирует все стандартные файлы gettext в каталог. Используется для создания пакетов с переводами gettext.\par
hostname\par
hostname выводит имя системы в разных форматах.\par
msgattrib\par
msgattrib фильтрует сообщения каталога переводов, основываясь на их атрибутах, а также оперирует их атрибутами.\par
msgcat\par
msgcat находит сообщения, встречающиеся в нескольких переводах.\par
msgcmp\par
msgcmp сравнивает 2 файла перевода.\par
msgcomm\par
msgcomm ищет сообщения, появляющиеся в нескольких файлах .po. Используется для сравнения переводов.\par
msgconv\par
msgconv конвертирует каталог перевода в другую кодировку.\par
msgen\par
msgen создает каталог переводов для английского языка.\par
msgexec\par
msgexec применяет команду ко всем переводам из каталога перевода.\par
msgfilter\par
msgfilter применяет фильтр ко всем переводам из каталога переводов.\par
msgfmt\par
msgfmt program компилирует перевод в машинный код. Используется для создания окончательного перевода программы или пакета.\par
msggrep\par
msggrep выдает все сообщения из каталога перевода, соответствующие заданному образцу или принадлежащие заданным исходным файлам.\par
msginit\par
msginit создает новый файл PO, инициализирую метаинформацию значениями пользовательского окружения.\par
msgmerge\par
msgmerge объединяет два перевода в один файл. Используется для обновления перевода при помощи исходных файлов.\par
msgunfmt\par
msgunfmt декомпилирует файлы перевода. Возможно использование, только если есть скомпилированные версии.\par
msguniq\par
msguniq приводит к единому образцу дублирующиеся переводы в каталоге переводов.\par
ngettext\par
ngettext выводит переводы текстового сообщения, чья грамматическая форма зависит от числа на основной язык.\par
project\_id\par
project\_id выводит идентификационную информацию пакета.\par
team\_address\par
team\_address выводит адрес команды переводчиков на стандартный вывод и выдает дополнительные инструкции.\par
trigger\par
trigger проверяет, является ли пакет пакетом GNOME или KDE.\par
urlget\par
urlget получает содержимое URL.\par
user\_email\par
user\_email выводит адрес электронной почты пользователя, с подтверждением.\par
xgettext\par
xgettext извлекает строки сообщений из файлов C. Используется для создания шаблона перевода.\par
Библиотеки\par
libgettextlib[a,so], libgettextsrc[a,so]\par
Описания\par
libgettextlib\par
На данный момент нет описания.\par
libgettextsrc\par
На данный момент нет описания.\par
Зависимости Gettext\par
Последняя проверка: версия 0.10.40.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Bison: bison Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Glibc\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Glibc (2.2.5): ftp://ftp.gnu.org/gnu/glibc/ Glibc\_linuxthreads (2.2.5): ftp://ftp.gnu.org/gnu/glibc/ Glibc Patch (2.2.5\_2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Glibc\par
Последняя проверка: версия 2.2.5.\par
Программы\par
catchsegv, gencat, getconf, getent, glibcbug, iconv, iconvconfig, ldconfig, ldd, lddlibc4, locale, localedef, mtrace, nscd, nscd_nischeck, pcprofiledump, pt_chown, rpcgen, rpcinfo, sln, sprof, tzselect, xtrace, zdump и zic\par
Описания\par
catchsegv\par
catchsegv может быть использования для слежения за состоянием стека, когда выполнение программы прерывается из\_за ошибки распределения памяти.\par
gencat\par
gencat генерирует каталоги сообщений.\par
getconf\par
getconf отображает значения переменных, зависящих от системной конфигурации.\par
getent\par
getent позволяет получить записи административной базы данных.\par
glibcbug\par
glibcbug создает сообщение об ошибке в glibc и отправляет по указанному адресу сообщения об ошибках.\par
iconv\par
iconv осуществляет преобразование наборов символов.\par
iconvconfig\par
iconvconfig создает конфигурационные файлы для модулей iconv.\par
ldconfig\par
ldconfig настраивает привязки времени исполнения динамического линкера.\par
ldd\par
ldd выводит список разделяемых библиотек, необходимых заданным программам.\par
lddlibc4\par
lddlibc4 используется ldd при работе с объектными файлами.\par
locale\par
locale – скрипт на Perl, разрешающий (или запрещающий) компилятору использование локалей POSIX для встроенных операций.\par
localedef\par
localedef компилирует спецификации локалей.\par
mtrace\par
mtrace выводит путь multicast от источника к получателю (запрос IP trace).\par
nscd\par
nscd – демон, предоставляющий кэш для большинства запросов DNS.\par
nscd_nischeck\par
nscd_nischeck проверяет нужен или нет защищенный режим для запроса NIS+.\par
pcprofiledump\par
pcprofiledump выводит информацию, полученной из профиля PC.\par
pt_chown\par
pt_chown устанавливает владельца, группу и права доступа подчиненного псевдотерминала в соответствии с основным псевдотерминалом, переданном в описании `3'. Это вспомогательная программа для функции `grantpt'. Не предназначается для прямого запуска из командной строки.\par
rpcgen\par
rpcgen генерирует код C для реализации протокола RPC.\par
rpcinfo\par
rpcinfo делает запрос RPC к серверу.\par
sln\par
sln символически связывает dest и source. Программа собрана статически. Использование sln полезно для создания символических ссылок на динамические библиотеки, если система динамического связывания по какой\_то причине нефункциональна.\par
sprof\par
sprof выводит информацию о разделяемом объекте.\par
tzselect\par
tzselect получает от пользователя информацию от его местоположении и выводит на стандартный вывод значение текущей временной зоны.\par
xtrace\par
xtrace отслеживает исполнение программы, выводя исполняемые в данный момент функции.\par
zdump\par
zdump – сохраняет значение временной зоны.\par
zic\par
zic – компилятор временных зон.\par
Библиотеки\par
ld.so, libBrokenLocale.[a,so], libBrokenLocale_p.a, libSegFault.so, libanl.[a,so], libanl_p.a, libbsd\_compat.a, libc.[a,so], libc_nonshared.a, libc_p.a, libcrypt.[a,so], libcrypt_p.a, libdl.[a,so], libdl_p.a, libg.a, libieee.a, libm.[a,so], libm_p.a, libmcheck.a, libmemusage.so, libnsl.a, libnsl_p.a, libnss_compat.so, libnss_dns.so, libnss_files.so, libnss_hesiod.so, libnss_nis.so, libnss_nisplus.so, libpcprofile.so, libpthread.[a,so], libpthread_p.a, libresolv.[a,so], libresolv_p.a, librpcsvc.a, librpcsvc_p.a, librt.[a,so], librt_p.a, libthread_db.so, libutil.[a,so] и libutil_p.a\par
Описания\par
ld.so\par
ld.so – вспомогательная программа для исполняемых файлов разделяемых библиотек.\par
libBrokenLocale, libBrokenLocale_p\par
Используется многими программами, например Mozilla, для использования поврежденных локалей.\par
libSegFault\par
libSegFault управляет сигналами ошибок распределения памяти, также пытается их перехватить.\par
libanl, libanl_p\par
libanl – библиотека асинхронных запросов DNS.\par
libbsd\_compat\par
libbsd\_compat предоставляет переносимость, необходимую для запуска некоторых программ в Linux.\par
libc, libc_nonshared, libc_p\par
Эти файлы образуют основную библиотеку C. Библиотека C – набор часто используемых в программах функций. Таким образом, программисту не нужно писать свои функции для каждой задачи. Большинство стандартных операций вроде вывода строки на экран уже готовы к использованию.\par
Библиотека C (в общем случае, любая библиотека) существует как в динамическом, так и статическом виде. Вкратце, когда программа использует статическую библиотеку, код из библиотеки копируется в исполняемый файл. При использовании динамической библиотеки, код из библиотеки не добавляется в исполняемый файл, а загружается только во время исполнения программы. Это позволяет уменьшить размер программ. За подробностями обращайтесь к документации библиотеки C.\par
libcrypt, libcrypt_p\par
libcrypt – криптографическая библиотека.\par
libdl, libdl_p\par
libdl – библиотека интерфейсов динамической линковки.\par
libg\par
libg – библиотека времени исполнения g++.\par
libieee\par
libieee – IEEE библиотека операций с числами с плавающей запятой.\par
libm, libm_p\par
libm – математическая библиотека.\par
libmcheck\par
libmcheck – содержит код, выполняемый при загрузке.\par
libmemusage\par
libmemusage – используется memusage для сбора информации о памяти, используемой программой.\par
libnsl, libnsl_p\par
libnsl – библиотека сетевых сервисов.\par
libnss_compat, libnss_dns, libnss_files, libnss_hesiod, libnss_nis, libnss_nisplus\par
Основная идея – поместить реализацию различных сервисов доступа к базам данных в отдельные модули. Преимущества:\par
поставщики могут добавлять новые сервисы, не включая их в C библиотеку GNU,\par
модули могут быть независимо обновлены,\par
Библиотека C имеет меньший размер.\par
libpcprofile\par
Код, используемый ядром для отслеживания времени, затрачиваемого процессором на исполнение функций, отдельных строк кода и инструкций.\par
libpthread, libpthread_p\par
POSIX библиотека потоков.\par
libresolv, libresolv_p\par
Библиотека позволяет DNS\_серверам создавать, посылать и интерпретировать пакеты.\par
librpcsvc, librpcsvc_p\par
Библиотека предоставляет различные сервисы RPC.\par
librt, librt_p\par
Библиотека предоставляет большинство интерфейсов, описанных POSIX.1b Realtime Extension.\par
libthread_db\par
Библиотека полезна для создания отладчиков для многопотоковых приложений.\par
libutil, libutil_p\par
Содержит код «стандартных» функций, используемых многими утилитами Unix.\par
Зависимости Glibc\par
Последняя проверка: версия 2.2.5.\par
Bash: sh Binutils: ar, as, ld, ranlib, readelf Diffutils: cmp Fileutils: chmod, cp, install, ln, mknod, mv, mkdir, rm, touch Gcc: cc, cc1, collect2, cpp, gcc Grep: egrep, grep Gzip: gzip Make: make Gawk: gawk Sed: sed Sh\_utils: date, expr, hostname, pwd, uname Texinfo: install\_info, makeinfo Textutils: cat, cut, sort, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Grep\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Grep (2.5): ftp://ftp.gnu.org/gnu/grep/\par
Содержимое Grep\par
Последняя проверка: версия 2.5.\par
Программы\par
egrep (ссылка на grep), fgrep (ссылка на grep) и grep\par
Описания\par
egrep\par
egrep выводит строки файлов, совпадающие с образцом, заданном в виде расширенного регулярного выражения.\par
fgrep\par
fgrep выводит строки файлов, соответствующие списку заданных строк.\par
grep\par
grep выводит строки файлов, соответствующие регулярному выражению.\par
Зависимости Grep\par
Последняя проверка: версия 2.4.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Groff\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Groff (1.18): ftp://ftp.gnu.org/gnu/groff/\par
Содержимое Groff\par
Последняя проверка: версия 1.17.2.\par
Программы\par
addftinfo, afmtodit, eqn, geqn (ссылка на eqn), grn, grodvi, groff, grog, grolbp, grolj4, grops, grotty, gtbl (ссылка на tbl), hpftodit, indxbib, lkbib, lookbib, mmroff, neqn, nroff, pfbtops, pic, post\_grohtml, pre\_grohtml, refer, soelim, tbl, tfmtodit, troff и zsoelim (ссылка на soelim)\par
Описания\par
addftinfo\par
addftinfo читает файл шрифтов troff и добавляет некоторую дополнительную информацию о шрифтах, используемую groff.\par
afmtodit\par
afmtodit создает файл шрифтов, используемый groff с grops.\par
eqn\par
eqn компилирует описания выражений, включенных во файлы troff в команды, понимаемые troff.\par
geqn\par
geqn – GNU реализация eqn.\par
grn\par
grn – препроцессор groff для файлов gremlin.\par
grodvi\par
grodvi – драйвер groff, позволяющий использование формата TeX dvi.\par
groff\par
groff – оболочка, к системе форматирования документов groff. Обычно, выполняется troff и постпроцессор, соответствующий выбранному устройству.\par
grog\par
grog читает файлы и определяет, какие опции groff (\_e, \_man, \_me, \_mm, \_ms, \_p, \_s, и \_t) необходимы для их вывода, а также выводит команду groffс этими опциями на стандартный вывод.\par
grolbp\par
grolbp – драйвер groff driver для принтеров Canon CAPSL (лазерные принтеры серий LBP\_4 и LBP\_8).\par
grolj4\par
grolj4 – драйвер groff, позволяющий вывод в формате PCL5 на принтерах HP Laserjet 4.\par
grops\par
grops конвертирует вывод GNU troff в Postscript.\par
grotty\par
grotty конвертирует вывод GNU troff в формат, воспринимаемый устройствами вроде typewriter.\par
gtbl\par
gtbl – GNU реализация tbl.\par
hpftodit\par
hpftodit создает файл шрифта для использования groff \_Tlj4 из файла метрик шрифта, размеченного HP.\par
indxbib\par
indxbib создает обратное оглавление для библиографических баз данных из указанного файла, для использования refer, lookbib и lkbib.\par
lkbib\par
lkbib ищет в библиографических базах данных ссылки, содержащие указанные образцы, и выводит найденное на стандартный вывод.\par
lookbib\par
lookbib выводит предупреждение о стандартной ошибке (если стандартный вывод – не терминал), читает со стандартного ввода строку, содержащую набор ключевых слов, ищет в библиографических базах данных в указанном файле ссылки с этими ключевыми словами, выводит найденное на стандартный вывод и повторяет процесс до окончания ввода.\par
mmroff\par
mmroff – простой препроцессор groff.\par
neqn\par
Скрипт neqn форматирует выражения для вывода в формате ascii.\par
nroff\par
Скрипт nroff эмулирует nroff через groff.\par
pfbtops\par
pfbtops конвертирует шрифт Postscript в формате .pfb в ASCII.\par
pic\par
pic компилирует описания изображений, включенных во входные файлы troff или TeX, в команды, воспринимаемые TeX или troff.\par
pre\_grohtml и post\_grohtml\par
pre– и post\_grohtml конвертируют вывод GNU troff в html.\par
refer\par
refer копирует содержимое файла на стандартный вывод, исключая строки между .[ and .], которые интерпретируются как цитаты, и строки между .R1 и .R2, которые интерпретируются как команды обработки цитат.\par
soelim\par
soelim читает файлы и заменяет строки вида \i .so file\i0   содержимым \i file\i0  .\par
tbl\par
tbl компилирует описания таблиц, включенных во входные файлы troff, в команды, воспринимаемые troff.\par
tfmtodit\par
tfmtodit создает файл шрифтов для использования \b groff \_Tdvi\b0  .\par
troff\par
troff хорошо совместим с Unix\_версией troff. Обычно должен быть вызван командой groff, которая также запустит пре– и постпроцессоры в соответствующем порядке и с соответствующими опциями.\par
zsoelim\par
zsoelim – GNU реализация soelim.\par
Зависимости Groff\par
Последняя проверка: версия 1.17.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Bison: bison Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, touch Gcc: cc1, cc1plus, collect2, cpp0, g++, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Gzip\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Gzip (1.2.4a): ftp://ftp.gnu.org/gnu/gzip/\par
Содержимое Gzip\par
Последняя проверка: версия 1.2.4a.\par
Программы\par
gunzip (ссылка на gzip), gzexe, gzip, uncompress (ссылка на gunzip), zcat (ссылка на gzip), zcmp, zdiff, zforce, zgrep, zmore и znew\par
Описание\par
gunzip, uncompress\par
gunzip и uncompress распаковывают файлы, сжатые gzip.\par
gzexe\par
gzexe позволяет сжать исполняемые файлы и автоматически распаковывать их при запуске (уменьшается производительность ).\par
gzip\par
gzip уменьшает размер указанных файлов используя код Lempel\_Ziv (LZ77).\par
zcat\par
zcat распаковывает и выводит на стандартный вывод либо файлы из заданного списка, либо файл со стандартного ввода.\par
zcmp\par
zcmp применяет cmp к сжатым файлам.\par
zdiff\par
zdiff применяет diff к сжатым файлам.\par
zforce\par
zforce присваивает расширение .gz всем файлам gzip, так что они не будут сжаты дважды. Может быть полезно для файлов, чьи имена были изменены после их передачи.\par
zgrep\par
zgrep применяет grep к сжатым файлам.\par
zmore\par
zmore – фильтр, позволяющий поэкранный просмотр (не)сжатых текстовых файлов (вроде more).\par
znew\par
znew конвертирует файлы формата .Z (compress) в .gz (gzip).\par
Зависимости Gzip\par
Последняя проверка: версия 1.2.4a.\par
Bash: sh Binutils: as, ld, nm Fileutils: chmod, cp, install, ln, mv, rm Gcc: cc1, collect2, cpp, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Kbd\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Kbd (1.06): ftp://ftp.win.tue.nl/pub/linux\_local/utils/kbd/ Kbd Patch (1.06\_3): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Kbd\par
Последняя проверка: версия 1.06.\par
Программы\par
chvt, deallocvt, dumpkeys, fgconsole, getkeycodes, getunimap, kbd_mode, kbdrate, loadkeys, loadunimap, mapscrn, openvt, psfaddtable (ссылка на psfxtable), psfgettable (ссылка на psfxtable), psfstriptable (ссылка на psfxtable), psfxtable, resizecons, setfont, setkeycodes, setleds, setlogcons, setmetamode, setvesablank, showfont, showkey, unicode_start, и unicode_stop\par
Описание\par
chvt\par
chvt переключает текущий виртуальный терминал.\par
deallocvt\par
deallocvt закрывает неиспользуемые виртуальные терминалы.\par
dumpkeys\par
dumpkeys выводит таблицы перевода клавиатуры.\par
fgconsole\par
fgconsole выводит число активных виртуальных терминалов.\par
getkeycodes\par
getkeycodes выводит таблицу конвертирования scancode\_to\_keycode.\par
getunimap\par
getunimap выводит текущий используемый unimap.\par
kbd_mode\par
kbd_mode выводит или устанавливает режим клавиатуры.\par
kbdrate\par
kbdrate устанавливает время повтора и задержки клавиатуры.\par
loadkeys\par
loadkeys загружает таблицы перевода клавиатуры.\par
loadunimap\par
loadunimap загружает таблицу конвертирования unicode\_to\_font.\par
mapscrn\par
mapscrn загружает определенную пользователем таблицу перевода выводимых символов в драйвер консоли. Заметьте, что утилита устарела, и ее возможности встроены в setfont.\par
openvt\par
openvt запускает программу на новом виртуальном терминале (VT).\par
psfaddtable, psfgettable, psfstriptable, psfxtable\par
Набор средств для управления таблицами символов Unicode для консольных шрифтов.\par
resizecons\par
resizecons меняет настройки ядра, касающиеся размера консоли.\par
setfont\par
Позволяет менять консольные шрифты EGA/VGA.\par
setkeycodes\par
setkeycodes загружает правила преобразования из сканкодов в клавиатурные.\par
setleds\par
setleds устанавливает индикаторы клавиатуры. Многие люди предпочитают включение numlock по умолчанию. и это может быть выполнено с помощью этой программы.\par
setlogcons\par
setlogcons выводит сообщения ядра в консоль.\par
setmetamode\par
setmetamode определяет метауправление клавиатурой.\par
setvesablank\par
Позволяет использовать встроенный аппаратный хранитель экрана (просто пустой экран).\par
showfont\par
showfont отображает информацию о шрифте. Показываются свойства шрифта, метрики символов и их образцы.\par
showkey\par
showkey проверяет сканкоды с клавиатуры.\par
unicode_start\par
unicode_start переводит консоль в режим Unicode.\par
unicode_stop\par
unicode_stop выводит клавиатуру и консоль из режима Unicode.\par
Зависимости Kbd\par
Последняя проверка: версия 1.06.\par
Bash: sh Binutils: as, ld, strip Bison: bison Diffutils: cmp Fileutils: cp, install, ln, mv, rm Flex: flex Gettext: msgfmt, xgettext Gcc: cc1, collect2, cpp0, gcc Grep: grep Gzip: gunzip, gzip Make: make Patch: patch Sed: sed Sh\_utils: uname\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Less\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Less (374): ftp://ftp.gnu.org/gnu/less/\par
Содержимое Less\par
Последняя проверка: версия 374.\par
Программы\par
less, lessecho и lesskey\par
Description\par
less\par
less – текстовый просмотрщик. Отображает содержимое файла с возможностью прокрутки. Less – улучшение утилиты more. Имеется возможность обратной прокрутки, нет необходимости считывать весь файл при его загрузке, что облегчает чтение больших файлов.\par
lessecho\par
lessecho необходим для подстановок метасимволов, вроде * и ?, в именах файлов на системах Unix.\par
lesskey\par
lesskey используется для установок клавиш less.\par
Зависимости Less\par
Последняя проверка: версия 358.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, mv, rm, touch Grep: egrep, grep Gcc: cc1, collect2, cpp0, gcc Make: make Sed: sed Sh\_utils: expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 LFS\_Bootscripts\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
LFS\_Bootscripts (1.10): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Contents of LFS\_bootscripts\par
Последняя проверка: версия 1.10.\par
Scripts\par
checkfs, cleanfs, functions, halt, ifdown, ifup, loadkeys, localnet, mountfs, mountproc, network, rc, reboot, sendsignals, setclock, swap, sysklogd и template\par
Descriptions\par
checkfs\par
checkfs проверяет файловые системы перед их монтированием (исключая журналируемые и сетевые файловые системы).\par
cleanfs\par
cleanfs удаляет файлы, которые не нужно хранить между перезагрузками, такие, как /var/run/*, /var/lock/*, создает пустой /var/run/utmp и удаляет /etc/nologin, /fastboot, /forcefsck.\par
functions\par
functions содержит общие для многих скриптов функции, такие как проверки ошибок и статуса, etc.\par
halt\par
halt останавливает систему.\par
ifdown, ifup\par
ifdown и ifup используются совместно с network.\par
loadkeys\par
loadkeys загружает keymap table, соответствующую раскладке клавиатуры.\par
localnet\par
localnet устанавливает имя системы и local loopback device.\par
mountfs\par
mountfs монтирует все локальные файловые системы, не помеченные как noauto.\par
mountproc\par
mountproc монтирует файловую систему proc.\par
network\par
network активирует сетевые интерфейсы и определяет шлюз по умолчанию.\par
rc\par
rc – основной скрипт, управляющий runlevel и отвечающий за исполнение прочих скриптов в установленном порядке.\par
reboot\par
reboot перезагружает систему.\par
sendsignals\par
sendsignals проверяет, остановлены ли все процессы, перед перезагрузкой ил остановкой системы.\par
setclock\par
setclock устанавливает часы ядра на местное время в случае, если системный таймер не установлен на GMT.\par
swap\par
swap разрешает/запрещает использование файлов и разделов подкачки.\par
sysklogd\par
sysklogd запускает и останавливает демоны журнализации ядра и системы в целом.\par
template\par
template – шаблон, который можно использовать для создания собственных загрузочных скриптов для других демонов.\par
Зависимости LFS\_Bootscripts\par
Последняя проверка: версия 1.10.\par
Fileutils: chown, cp\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Libtool\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Libtool (1.4.2): ftp://ftp.gnu.org/gnu/libtool/\par
Содержимое Libtool\par
Последняя проверка: версия 1.4.2.\par
Программы\par
libtool и libtoolize\par
Описания\par
libtool\par
libtool предоставляет общие сервисы сборки библиотек.\par
libtoolize\par
libtoolize предоставляет стандартный путь добавления поддержки libtool в пакет.\par
Библиотеки\par
libltdl.a, libltdl.so (ссылка на libltdl.so.3.1.0), libltdl.so.3 (ссылка на libltdl.so.3.1.0) и libltdl.so.3.1.0\par
Описания\par
libltdl, libltdl.so.3, libltdl.so.3.1.0\par
Небольшая библиотека, направленная на сокрытие от программиста различных трудностей, связанных с библиотеками (dlopen).\par
Зависимости Libtool\par
Последняя проверка: версия 1.4.2.\par
Bash: sh Binutils: ar, as, ld, nm, ranlib, strip Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gcc: cc, cc1, collect2, cpp0 Glibc: ldconfig Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: echo, expr, hostname, sleep, uname Texinfo: install\_info Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Lilo\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Lilo (22.2): ftp://ibiblio.org/pub/Linux/system/boot/lilo/ http://ibiblio.org/pub/Linux/system/boot/lilo/\par
Содержимое Lilo\par
Последняя проверка: версия 22.2.\par
Программы\par
lilo, mkrescue и keytab\_lilo.pl\par
Описания\par
lilo\par
lilo устанавливает загрузчик Linux, используемый для старта системы.\par
mkrescue\par
mkrescue создает загрузочную дискету, используя существующее ядро и любой инициализационный ramdisk.\par
keytab\_lilo.pl\par
keytab\_lilo.pl компилирует определения keytable в формат, который lilo может использовать для настройки клавиатуры во время загрузки.\par
Зависимости Lilo\par
Последняя проверка: версия 22.1.\par
Bash: sh Bin86: as86, ld86 Binutils: as, ld, strip Fileutils: cp, dd, ln Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Linux (ядро)\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Linux (2.4.19): ftp://ftp.kernel.org/pub/linux/kernel/\par
Содержимое Linux\par
Последняя проверка: версия 2.4.18.\par
Файлы поддержки\par
Ядро Linux и и его заголовочные файлы\par
Описания\par
Ядро Linux\par
Ядро – основа любой системы Linux. Когда компьютер включается и загружает Linux, первое, что загружается – ядро. Ядро инициализирует аппаратные компоненты системы: последовательные и параллельные порты, звуковые и сетевые карты, контроллеры IDE и SCSI и многое другое. In a nutshell the kernel makes the hardware available so that the software can run.\par
linux kernel headers\par
Это файлы, которые мы копируем в /usr/include/\'7blinux,asm\'7d в 5\_й главе. Они должны соответствовать тем, с которым был скомпилирован glibc, и поэтому \i не\i0   должны быть заменены при смене ядра. Они имеют ключевое значение для компиляции многих программ.\par
Зависимости Linux\par
Последняя проверка: версия 2.4.17.\par
Bash: sh Binutils: ar, as, ld, nm, objcopy Fileutils: cp, ln, mkdir, mv, rm, touch Findutils: find, xargs Gcc: cc1, collect2, cpp0, gcc Grep: grep Gzip: gzip Make: make Gawk: awk Modutils: depmod, genksyms Net\_tools: dnsdomainname, hostname Sed: sed Sh\_utils: basename, date, expr, pwd, stty, uname, whoami, yes Textutils: cat, md5sum, sort, tail\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 M4\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
M4 (1.4): ftp://ftp.gnu.org/gnu/m4/\par
Содержимое M4\par
Последняя проверка: версия 1.4.\par
Программы\par
m4\par
Описания\par
m4\par
m4 – макропроцессор. Копирует из ввода на вывод, выполняя макросы. Макросы могут быть как встроенными, так и определенными пользователем, и могут иметь любое число параметров. Кроме обычных макрорасширений, m4 имеет встроенные функции для включения файлов, запуска команд Unix, целочисленной арифметики, различных текстовых операций, рекурсии etc. m4 может быть использовано как оболочка для компилятора, так и собственно макропроцессор.\par
M4 Installation Dependencies\par
Последняя проверка: версия 1.4.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, mv, rm Make: make Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Sed: sed Sh\_utils: date, echo, hostname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Make\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Make (3.79.1): ftp://ftp.gnu.org/gnu/make/\par
Содержимое Make\par
Последняя проверка: версия 3.79.1.\par
Программы\par
make\par
Описания\par
make\par
make автоматически определяет, какие части объемной программы нуждаются в рекомпиляции, и выполняет все необходимые для этого команды.\par
Зависимости Make\par
Последняя проверка: версия 3.79.1.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, install, ls, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 MAKEDEV\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
MAKEDEV (1.7): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое MAKEDEV\par
Последняя проверка: версия 1.5.\par
Программы\par
MAKEDEV\par
Описания\par
MAKEDEV\par
MAKEDEV – скрипт, создающий необходимые статические связи с устройствами, обычно располагающимися в каталоге /dev. Детальная информация о связях с устройствами может быть найдена в дереве исходных кодов ядра Linux в Documentation/devices.txt.\par
Зависимости MAKEDEV\par
Последняя проверка: версия 1.5.\par
Bash: sh Fileutils: chmod, chown, cp, ln, mknod, mv, rm Grep: grep Sh\_utils: expr, id\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Man\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Man (1.5k): ftp://ftp.win.tue.nl/pub/linux\_local/utils/man/ Man Patch (1.5k): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Man\par
Последняя проверка: версия 1.5k.\par
Программы\par
apropos, makewhatis, man, man2dvi, man2html и whatis\par
Описания\par
apropos\par
apropos ищет ключевые слова в базах данных, содержащих кратное описание системных команд, и отображает результат на стандартный вывод.\par
makewhatis\par
makewhatis читает страницы руководства, находящиеся в заданных частях manpath, или преформатированные страницы, находящиеся в заданных частях catpath. Для каждой страницы делается запись в базе whatis. Каждая запись состоит из имени страницы и краткого описания, разделенных дефисом. Описание извлекается, используя содержимое секции NAME страницы руководства.\par
man\par
man форматирует и выводит запрашиваемые страницы руководства.\par
man2dvi\par
man2dvi конвертирует страницу руководства в формат dvi.\par
man2html\par
man2html конвертирует страницу руководства в гипертекст.\par
whatis\par
whatis ищет ключевые слова в базах данных, содержащих кратное описание системных команд, и отображает результат на стандартный вывод. Выводятся лишь полностью совпадающие сочетания.\par
Зависимости Man\par
Последняя проверка: версия 1.5i2.\par
Bash: sh Binutils: as, ld Fileutils: chmod, cp, install, mkdir, rm Gcc: c11, collect2, cpp0, gcc Grep: grep Make: make Gawk: awk Sed: sed Sh\_utils: echo Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Man\_pages\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Man\_pages (1.52): ftp://ftp.kernel.org/pub/linux/docs/manpages/\par
Содержимое Man\_pages\par
Последняя проверка: версия 1.52.\par
Файлы поддержки\par
Различные страницы руководства, не поставляемые с пакетами\par
Описания\par
Страницы руководства\par
Примеры предоставляемых страниц руководства – описания всех функций C and C++, файлов /dev/ и многое другое.\par
Зависимости Man\_pages\par
Последняя проверка: версия 1.47.\par
Bash: sh Fileutils: install Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Modutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Modutils (2.4.19): ftp://ftp.kernel.org/pub/linux/utils/kernel/modutils/\par
Содержимое Modutils\par
Последняя проверка: версия 2.4.16.\par
Программы\par
depmod, genksyms, insmod, insmod_ksymoops_clean, kallsyms (ссылка на insmod), kernelversion, ksyms (ссылка на insmod), lsmod (ссылка на insmod), modinfo, modprobe (ссылка на insmod) и rmmod (ссылка на insmod)\par
Описания\par
depmod\par
depmod управляет деревьями зависимостей загружаемых модулей.\par
genksyms\par
genksyms читает вывод от gcc \_E source.c и генерирует файл, содержащий информацию о версиях.\par
insmod\par
insmod включает модуль в ядро.\par
insmod_ksymoops_clean\par
insmod_ksymoops_clean удаляет сохраненные ksym'ы и модули, не использующиеся минимум 2 дня.\par
kallsyms\par
kallsyms извлекает символы ядра для отладки.\par
kernelversion\par
kernelversion выводит номер основной версии ядра.\par
ksyms\par
ksyms показывает экспортированные символы ядра.\par
lsmod\par
lsmod показывает информацию о загруженных модулях.\par
modinfo\par
modinfo просматривает объектный файл, ассоциированный с модулем ядра, и выводит любую доступную информацию.\par
modprobe\par
modprobe использует файл зависимостей вроде Makefile, созданный depmod, для автоматической загрузки необходимых модулей из набора в предварительно заданном дереве каталогов.\par
rmmod\par
rmmod выгружает модули из ядра.\par
Зависимости Modutils\par
Последняя проверка: версия 2.4.12.\par
Bash: sh Binutils: ar, as, ld, ranlib, strip Bison: bison Diffutils: cmp Fileutils: chmod, install, ln, mkdir, mv, rm Flex: flex Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Sed: sed Sh\_utils: basename, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Ncurses\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Ncurses (5.2): ftp://ftp.gnu.org/gnu/ncurses/ Ncurses Patch (5.2): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Ncurses\par
Последняя проверка: версия 5.2.\par
Программы\par
captoinfo (ссылка на tic), clear, infocmp, infotocap (ссылка на tic), reset (ссылка на tset), tack, tic, toe, tput и tset.\par
Описания\par
captoinfo\par
captoinfo конвертирует описания termcap в описания terminfo.\par
clear\par
clear очищает экран, если это возможно. Тип терминала ищется в переменных окружения и базе terminfo, процедура очистки экрана зависит от найденного типа.\par
infocmp\par
infocmp используется для сравнения бинарной записи terminfo с другими записями, перезаписать описание terminfo, использовать поле terminfo use=, или вывести описание terminfo из бинарного файла (term) в различных форматах (противоположность тому. что делает tic).\par
infotocap\par
infotocap конвертирует описания terminfo в описания termcap.\par
reset\par
reset устанавливает режимы cooked и echo, отключает режимы cbreak и raw, включает трансляцию символов новой строки и сбрасывает все неустановленные специальные символы на значения по умолчанию перед инициализацией терминала вроде tset.\par
tack\par
tack – проверяет действия terminfo.\par
tic\par
tic – компилятор описаний записей terminfo. Программа транслирует файл terminfo из исходного в бинарный формат для использования библиотекой ncurses. Файлы terminfo содержат информацию о возможностях терминала.\par
toe\par
toe перечисляет все доступные типы терминалов по основному имени вместе с описаниями.\par
tput\par
tput использует базу terminfo, чтобы сделать информацию о терминале доступной командному интерпретатору, инициализировать или сбросить терминал, либо вернуть полное имя запрошенного типа терминала.\par
tset\par
tset инициализирует терминалы, что уже не используется широко. Необходимо для совместимости с 4.4BSD.\par
Библиотеки\par
libcurses.[a,so] (ссылка на libncurses.[a,so]), libform.[a,so], libform_g.a, libmenu.[a,so], libmenu_g.a, libncurses++.a, libncurses.[a,so], libncurses_g.a, libpanel.[a,so] и libpanel_g.a\par
libcurses, libncurses++, libncurses, libncurses_g\par
Это – основные библиотеки пакета, используются для отображения текста на экране (зачастую нестандартным способом). Пример использования ncurses – процедура «make menuconfig» сборки ядра.\par
libform, libform_g\par
libform используется для реализации форм в ncurses.\par
libmenu, libmenu_g\par
libmenu используется для реализации меню в ncurses.\par
libpanel, libpanel_g\par
libpanel используется для реализации панелей в ncurses.\par
Зависимости Ncurses\par
Последняя проверка: версия 5.2.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, mkdir, mv, rm Gcc: c++, cc1, cc1plus, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, fgrep, grep Make: make Gawk: gawk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, uname Textutils: cat, sort, tr, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Netkit\_base\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Netkit\_base (0.17): ftp://ftp.uk.linux.org/pub/linux/Networking/netkit/\par
Содержимое Netkit\_base\par
Последняя проверка: версия 0.17.\par
Программы\par
inetd и ping\par
Описания\par
inetd\par
inetd – родитель всех демонов. Прослушивает соединения и передает вызов соответствующему демону.\par
ping\par
ping посылает ICMP пакеты ECHO_REQUEST хосту и определяет время ответа.\par
Зависимости Netkit\_base\par
Последняя проверка: версия 0.17.\par
Bash: sh Binutils: as, ld, strip Fileutils: cp, install, rm Make: make Gcc: cc1, collect2, cpp0, gcc Sed: sed Sh\_utils: date Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Net\_tools\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Net\_tools (1.60): http://www.tazenda.demon.co.uk/phil/net\_tools/\par
Contents of Net\_tools\par
Последняя проверка: версия 1.60.\par
Программы\par
arp, dnsdomainname (ссылка на hostname), domainname (ссылка на hostname), hostname, ifconfig, nameif, netstat, nisdomainname (ссылка на hostname), plipconfig, rarp, route, slattach и ypdomainname (ссылка на hostname)\par
Описания\par
arp\par
arp используется для манипулирования ARP кэшем ядра, обычно для добавления/удаления записей, или вывода его содержимого.\par
dnsdomainname\par
dnsdomainname выводит DNS доменное имя системы.\par
domainname\par
domainname выводит или изменяет NIS/YP доменное имя системы.\par
hostname\par
hostname выводит или изменяет имя текущего хоста.\par
ifconfig\par
ifconfig – основная утилита, используемая для настройки сетевых интерфейсов.\par
nameif\par
nameif указывает сетевые интерфейсы, основанные на адресах MAC.\par
netstat\par
netstat – многоцелевой инструмент, используемый для отображения сетевых соединений, таблиц роутинга, статистики интерфейсов, маскированных соединений и множественных вызовах.\par
nisdomainname\par
nisdomainname выводит или изменяет NIS/YP доменное имя системы.\par
plipconfig\par
plipconfig – используется для тонкой настройки устройств PLIP device, возможно ускоряя ее.\par
rarp\par
Как и arp, rarp манипулирует таблицей RARP.\par
route\par
route – основная утилита для управления таблицами IP роутинга.\par
slattach\par
slattach активирует сетевой интерфейс на последовательной линии, т.е. переводит обычную терминальную линию в один из нескольких «сетевых» режимов.\par
ypdomainname\par
ypdomainname выводит или изменяет NIS/YP доменное имя системы.\par
Зависимости Net\_tools\par
Последняя проверка: версия 1.60.\par
Bash: bash, sh Binutils: ar, as, ld Fileutils: install, ln, ls, mv, rm Gcc: cc, cc1, collect2, cpp0 Make: make Sh\_utils: echo\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Patch\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Patch (2.5.4): ftp://ftp.gnu.org/gnu/patch/\par
Содержимое Patch\par
Последняя проверка: версия 2.5.4.\par
Программы\par
patch\par
Описания\par
patch\par
patch модифицирует файл в соответствии с патчем. Патч обычно является списком, созданным diff, содержащим инструкции к изменению. Patch часто используется для исправлений в исходном коде, поскольку сохраняет время и место на диске. Например, имеется пакет объемом 1 MB. Следующая версия пакета имеет изменения только в 2 файлах. Новая версия может быть как новым пакетом в 1 MB или патчем в 1 KB. Таким образом, патчи позволяют избежать объемных загрузок.\par
Зависимости Patch\par
Последняя проверка: версия 2.5.4.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, mv, rm Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, grep Make: make Sed: sed Sh\_utils: echo, expr, hostname, uname Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Perl\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Perl (5.8.0): http://www.perl.com/\par
Содержимое Perl\par
Последняя проверка: версия 5.6.1.\par
Программы\par
a2p, c2ph, dprofpp, find2perl, h2ph, h2xs, perl, perl5.6.1, perlbug, perlcc, perldoc, pl2pm, pod2html, pod2latex, pod2man, pod2text, pod2usage, podchecker, podselect, pstruct, s2p и splain\par
Описания\par
a2p\par
a2p – траслятор с awk на perl.\par
c2ph\par
c2ph выводит структуры C как сгенерированные «cc \_g \_S».\par
dprofpp\par
dprofpp отображает профили perl.\par
find2perl\par
find2perl транслирует командные строки find в код Perl.\par
h2ph\par
h2ph конвертирует заголовочные файлы C в заголовки Perl.\par
h2xs\par
h2xs конвертирует заголовочные файлы C в расширения Perl.\par
perl, perl5.6.1\par
perl – Practical Extraction and Report Language (Язык Практичных Извлечений и Докладов :)). Сочетает достоинства C, sed, awk и sh в одном мощном языке.\par
perlbug\par
perlbug генерирует сообщение об ошибке perl или его модулей и отправляет их по почте.\par
perlcc\par
perlcc генерирует исполняемые файлы из программ на Perl.\par
perldoc\par
perldoc просматривает документацию .pod, поставляемую с perl или скриптом perl и выводит как «pod2man | nroff \_man | $PAGER».\par
pl2pm\par
pl2pm – утилита для помощи в конвертировании библиотек Perl4 в модули библиотек Perl5.\par
pod2html\par
pod2html конвертирует файлы из формата pod в формат HTML.\par
pod2latex\par
pod2latex конвертирует файлы из формата pod в формат LaTeX.\par
pod2man\par
pod2man конвертирует файлы из формата pod в форматированный ввод *roff.\par
pod2text\par
pod2text конвертирует файлы из формата pod в форматированный текст ASCII.\par
pod2usage\par
pod2usage выводит в файлы сообщения об использовании из встроенной документации pod.\par
podchecker\par
podchecker проверяет синтаксис файлов документации в формате pod.\par
podselect\par
podselect выводит выбранные части документации pod на стандартный вывод.\par
pstruct\par
pstruct выводит структуры C как сгенерированные «cc \_g \_S».\par
s2p\par
s2p – транслятор с sed на perl.\par
splain\par
splain служит для пропуска полных диагностических сообщений perl.\par
Библиотеки\par
attrs.so, B.so, ByteLoader.so, DProf.so, Dumper.so, DynaLoader.a, Fcntl.so, Glob.so, Hostname.so, IO.so, libperl.a, Opcode.so, Peek.so, POSIX.so, re.so, SDBM_File.so, Socket.so, Syslog.so и SysV.so\par
Descriptions\par
attrs\par
На данный момент описания нет.\par
B\par
На данный момент описания нет.\par
ByteLoader\par
На данный момент описания нет.\par
DProf\par
На данный момент описания нет.\par
Dumper\par
На данный момент описания нет.\par
DynaLoader\par
На данный момент описания нет.\par
Fcntl\par
На данный момент описания нет.\par
Glob\par
На данный момент описания нет.\par
Hostname\par
На данный момент описания нет.\par
IO\par
На данный момент описания нет.\par
libperl\par
На данный момент описания нет.\par
Opcode\par
На данный момент описания нет.\par
Peek\par
На данный момент описания нет.\par
POSIX\par
На данный момент описания нет.\par
re\par
На данный момент описания нет.\par
SDBM_File\par
На данный момент описания нет.\par
Socket\par
На данный момент описания нет.\par
Syslog\par
На данный момент описания нет.\par
SysV\par
На данный момент описания нет.\par
Зависимости Perl\par
Последняя проверка: версия 5.6.1.\par
Bash: sh Binutils: ar, as, ld, nm Diffutils: cmp Fileutils: chmod, cp, ln, ls, mkdir, mv, rm, touch Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, date, echo, expr, hostname, pwd, uname, whoami Textutils: cat, comm, sort, split, tr, uniq, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Procinfo\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Procinfo (18): ftp://ftp.cistron.nl/pub/people/svm/\par
Содержимое Procinfo\par
Последняя проверка: версия 18.\par
Программы\par
lsdev, procinfo и socklist\par
Описания\par
lsdev\par
lsdev получает информацию об установленном оборудовании из файлов interrupts, ioports и dma в каталоге /proc directory, составляя краткий обзор используемых адресов I/O и каналов IRQ и DMA.\par
procinfo\par
procinfo получает системную информацию из каталога /proc и выводит отформатированный результат на стандартный вывод.\par
socklist\par
Скрипт Perl, выводящий список открытых сокетов, включающий тип, порт, inode, uid, pid, fd и программу, к которой принадлежит сокет.\par
Зависимости Procinfo\par
Последняя проверка: версия 18.\par
Binutils: as, ld Fileutils: install, mkdir Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Procps\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Procps (2.0.7): ftp://people.redhat.com/johnsonm/procps/ Procps Patch (2.0.7): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Procps\par
Последняя проверка: версия 2.0.7.\par
Программы\par
free, kill, oldps, pgrep, pkill, ps, skill, snice, sysctl, tload, top, vmstat, w и watch\par
Descriptions\par
free\par
free показывает количество свободной и занятой физической и виртуальной памяти системы, а также разделяемой памяти и буферы ядра.\par
kill\par
kills посылает сигналы процессам.\par
oldps and ps\par
ps выводит список процессов.\par
pgrep\par
pgrep выводит список процессов, основываясь на заданных именах и атрибутах.\par
pkill\par
pkill посылает сигналы процессам, основываясь на заданных именах и атрибутах.\par
skill\par
skill посылает сигналы процессам, попадающим под критерий.\par
snice\par
snice меняет приоритет процесса, попадающего под критерий.\par
sysctl\par
sysctl меняет параметры ядра во время его работы.\par
tload\par
tload выводит статистику загрузки системы на указанный tty (или текущий, если не).\par
top\par
top позволяет отслеживать активность процессора в реальном времени.\par
vmstat\par
vmstat выводит информацию о процессах, памяти, разделе подкачки, блоках IO, и активности процессора.\par
w\par
w показывает информацию о зарегистрировавшихся пользователях и их процессах.\par
watch\par
watch многократно выполняет команду, отображая ее вывод.\par
Библиотеки\par
libproc.so\par
Описания\par
libproc\par
libproc – библиотека, с которой связано большинство программ из этого пакета.\par
Зависимости Procps\par
Последняя проверка: версия 2.0.7.\par
Bash: sh Binutils: as, ld, strip Fileutils: install, ln, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: grep Make: make Gawk: awk Sed: sed Sh\_utils: basename, pwd Textutils: sort, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Psmisc\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Psmisc (21): http://download.sourceforge.net/psmisc/ ftp://download.sourceforge.net/pub/sourceforge/psmisc/\par
Содержимое Psmisc\par
Последняя проверка: версия 21.\par
Программы\par
fuser, killall и pstree\par
Заметьте, что в LFS мы не создаем ссылку на pidof по умолчанию, поскольку мы используем pidof из sysvinit.\par
Описания\par
fuser\par
fuser выводит PID процессов, которые использует определенные файлы или файловые системы.\par
killall\par
killall посылает сигналы всем процессам, исполняющим указанные команды.\par
pstree\par
pstree показывает дерево текущих процессов.\par
Зависимости Psmisc\par
Последняя проверка: версия 20.2.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Bison: bison Binutils: as, ld Diffutils: cmp Fileutils: chmod, install, ls, mkdir, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Grep: egrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Sed\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Sed (3.02): ftp://ftp.gnu.org/gnu/sed/\par
Содержимое Sed\par
Последняя проверка: версия 3.02.\par
Программы\par
sed\par
Описания\par
sed\par
sed – редактор потоков. Он используется для основных преобразований текста на потоке ввода (файл или ввод из другого процесса).\par
Зависимости Sed\par
Последняя проверка: версия 3.02.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gcc: cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Sed: sed Sh\_utils: echo, expr, hostname, sleep Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Shadow\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Shadow (4.0.3): ftp://ftp.pld.org.pl/software/shadow/\par
Содержимое Shadow\par
Последняя проверка: версия 4.0.3.\par
Программы\par
chage, chfn, chpasswd, chsh, dpasswd, expiry, faillog, gpasswd, groupadd, groupdel, groupmod, groups, grpck, grpconv, grpunconv, lastlog, login, logoutd, mkpasswd, newgrp, newusers, passwd, pwck, pwconv, pwunconv, sg (ссылка на newgrp), useradd, userdel, usermod, vigr (ссылка на vipw) и vipw\par
Описания\par
chage\par
chage изменяет число дней между сменами паролей и дату последнего изменения.\par
chfn\par
chfn изменяет полное имя пользователя и прочую информацию о нем (номер рабочего кабинета, рабочий и домашний телефоны).\par
chpasswd\par
chpasswd читает файл, содержащий пользовательские имена и пароли, и использует эту информацию для обновления группы существующих пользователей.\par
chsh\par
chsh меняет командный интерпретатор, используемый пользователем.\par
dpasswd\par
dpasswd добавляет, удаляет и обновляет пароли dial\_up подключений для командных оболочек.\par
expiry\par
expiry просматривает и изменяет правила истечения срока действия паролей.\par
faillog\par
faillog форматирует содержимое журнала ошибок /var/log/faillog и поддерживает счетчики и лимиты ошибок.\par
gpasswd\par
gpasswd используется для редактирования /etc/group.\par
groupadd\par
groupadd создает новую группу, используя заданные параметры и параметры по умолчанию.\par
groupdel\par
groupdel изменяет файлы учетных записей, удаляя все относящееся к заданной группе.\par
groupmod\par
groupmod изменяет файлы учетных записей групп, внося заданные изменения.\par
groups\par
groups выводит группы, к которым принадлежит пользователь.\par
grpck\par
grpck проверяет целостность системной информации об аутентификации.\par
grpconv\par
grpunconv конвертирует обычные файлы групп в теневые.\par
grpunconv\par
grpunconv конвертирует теневые файлы групп в обычные.\par
lastlog\par
lastlog форматирует и выводит содержимое журнала регистраций /var/log/lastlog. Выводится регистрационное имя, порт и время регистрации.\par
login\par
login используется для начала новой сессии работы с системой.\par
logoutd\par
logoutd контролирует время регистрации и прочие ограничения, указанные в /etc/porttime.\par
mkpasswd\par
mkpasswd читает файл в заданном формате и конвертирует его в базу данных соответствующего формата.\par
newgrp\par
newgrp изменяет текущую группу.\par
newusers\par
newusers читает файл с именами пользователей и пустыми полями паролей и обновляет группу существующих пользователей или создает новых.\par
passwd\par
passwd меняет пароли пользователей и групп.\par
pwck\par
pwck проверяет целостность файлов паролей.\par
pwconv\par
pwconv конвертирует обычный файл паролей в теневой.\par
pwunconv\par
pwunconv конвертирует теневой файл паролей в обычный.\par
sg\par
sg меняет GID пользователя на соответствующий указанной группе или выполняет заданную команду с правами указанной группы.\par
useradd\par
useradd создает нового пользователя или обновляет данные по умолчанию о новых пользователях.\par
userdel\par
userdel изменяет файлы, содержащие информацию о пользователях, удаляя все записи, относящиеся к указанному регистрационному имени.\par
usermod\par
usermod изменяет файлы учетных записей пользователей, внося заданные изменения..\par
vipw и vigr\par
vipw и vigr позволяют безопасно редактировать /etc/passwd и /etc/group. С флагом \_s будут редактироваться теневые версии файлов, /etc/shadow и /etc/gshadow.\par
Библиотеки\par
libmisc.[a,so], libshadow.[a,so]\par
Descriptions\par
libmisc\par
На данный момент нет описания.\par
libshadow\par
libshadow предоставляет большинство функций для программ shadow.\par
Зависимости Shadow\par
Последняя проверка: версия 20001016.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, nm, ranlib Diffutils: cmp Fileutils: chmod, cp, install, ln, ls, mkdir, mv, rm, rmdir Gettext: msgfmt, xgettext Gcc: cc1, collect2, cpp0, gcc Glibc: ldconfig Grep: egrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Texinfo: makeinfo Textutils: cat, sort, tr, uniq\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Sh\_utils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Sh\_utils (2.0): ftp://ftp.gnu.org/gnu/sh\_utils/ Sh\_utils Patch (2.0): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Sh\_utils\par
Последняя проверка: версия 2.0.\par
Программы\par
basename, chroot, date, dirname, echo, env, expr, factor, false, groups, hostid, id, logname, nice, nohup, pathchk, pinky, printenv, printf, pwd, seq, sleep, stty, su, tee, test, true, tty, uname, uptime, users, who, whoami и yes\par
Описания\par
basename\par
basename удаляет каталоги и суффиксы из имен файлов.\par
chroot\par
chroot запускает команду или оболочку в указанном корневом каталоге.\par
date\par
date выводит текущее время в указанном формате или устанавливает.\par
dirname\par
dirname удаляет суффиксы, не относящиеся к каталогам, из имен файлов.\par
echo\par
echo выводит строку текста.\par
env\par
env запускает программу в измененном окружении.\par
expr\par
expr вычисляет выражения.\par
factor\par
factor выводит разложение на простые множители всех указанных целых чисел.\par
false\par
false всегда завершается с кодом «ошибка».\par
groups\par
groups выводит группу, к которой принадлежит пользователь.\par
hostid\par
hostid выводит числовой идентификатор (шестандцатеричный) текущего хоста.\par
id\par
id выводит пользовательский и групповой ID текущего или заданного пользователя.\par
logname\par
logname выводит регистрационное имя текущего пользователя.\par
nice\par
nice запускает программу с заданным приоритетом.\par
nohup\par
nohup выполняет команду, защищенную от зависаний, с выводом в журнальный файл.\par
pathchk\par
pathchk проверяет наличие файла.\par
pinky\par
pinky – простая утилита finger, показывающая информацию о конкретном пользователе.\par
printenv\par
printenv выводит значения переменных окружения.\par
printf\par
printf выводит форматированные данные (аналогично функции printf в C).\par
pwd\par
pwd выводит имя текущего каталога.\par
seq\par
seq выводит числа в заданном диапазоне с заданным шагом.\par
sleep\par
sleep делает задержку на указанное количество времени.\par
stty\par
stty выводит и изменяет настройки терминала.\par
su\par
su запускает командный интерпретатор с правами указанного пользователя и группы.\par
tee\par
tee считывает данные со стандартного ввода и записывает их на стандартный вывод и в файлы.\par
test\par
test проверяет типы файлов и сравнивает значения.\par
true\par
true всегда завершается с кодом «успех».\par
tty\par
tty выводит файловое имя терминала, подключенного к стандартному вводу.\par
uname\par
uname выводит информацию о системе.\par
uptime\par
uptime сообщает, как долго активна система.\par
users\par
users выводит имена пользователей, зарегистрированных на локальном хосте.\par
who\par
who показывает зарегистрированных пользователей.\par
whoami\par
whoami выводит имя пользователя, ассоциированное с текущим пользовательским ID.\par
yes\par
yes выводит 'y' или заданную строку до принудительного завершения.\par
Зависимости Sh\_utils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, chown, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Perl: perl Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Sysklogd\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Sysklogd (1.4.1): http://www.infodrom.org/projects/sysklogd/\par
Содержимое Sysklogd\par
Последняя проверка: версия 1.4.1.\par
Программы\par
klogd and syslogd\par
Описания\par
klogd\par
klogd – системный демон, перехватывающий и сохраняющий в журнале сообщения ядра Linux.\par
syslogd\par
syslogd предоставляет способ журналирования, используемый многими современными программами. Каждое сохраненное сообщение содержит, по крайней мере, информацию о времени и хосте, обычно также имя программы, прочие сведения зависят от приложения.\par
Зависимости Sysklogd\par
Последняя проверка: версия 1.4.1.\par
Binutils: as, ld, strip Fileutils: install Gcc: cc1, collect2, cpp0, gcc Make: make\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Sysvinit\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Sysvinit (2.84): ftp://ftp.cistron.nl/pub/people/miquels/sysvinit/\par
Содержимое Sysvinit\par
Последняя проверка: версия 2.84.\par
Программы\par
halt, init, killall5, last, lastb (ссылка на last), mesg, pidof (ссылка на killall5), poweroff (ссылка на halt), reboot (ссылка на halt), runlevel, shutdown, sulogin, telinit (ссылка на init), utmpdump и wall\par
Описания\par
halt\par
halt отмечает в /var/log/wtmp завершение работы системы и сообщает ядру о необходимости остановить, перезагрузить или отключить систему. Если halt или reboot вызваны, когда система не на уровнях выполнения 0 или 6, вместо них запускается (с флагами \_h и \_r соответственно).\par
init\par
init – предок всех процессов. Его основная роль – создание процессов из скрипта /etc/inittab. Этот файл содержит записи для создания getty, к которым подключаются пользователи. initt также контролирует различные автономные процессы.\par
killall5\par
killall5 – команда killall из SystemV. Посылается сигнал всем процессам вне собственной сессии, так что интерпретатор, выполняющий скрипт, из которого была вызвана эта команда, не будет завершен.\par
last\par
last просматривает /var/log/wtmp (или файл, указанный флагом \_f) и выводит список всех пользователей, зарегистрировавшихся и завершивших сеанс с момента создания файла.\par
lastb\par
lastb действует аналогично last, но по умолчанию выводится журнал /var/log/btmp, содержащий записи о неудачных попытках регистрации.\par
mesg\par
mesg контролирует внешний доступ к терминалу пользователя. Обычно используется для разрешения записи на данный терминал прочим пользователям.\par
pidof\par
pidof выводит идентификаторы процессов (PIDs) указанных программ.\par
poweroff\par
poweroff действует аналогично shutdown \_h \_p. Выполняется останов системы и ее физическое отключение (необходим APM совместимый BIOS и поддержка APM в ядре).\par
reboot\par
reboot действует аналогично shutdown \_r. Выполняется перезагрузка системы.\par
runlevel\par
runlevel читает файл utmp (обычно /var/run/utmp), ищет записи об уровне выполнение, и выводит предыдущий и текущий уровни выполнения на стандартный вывод, разделенные пробелом.\par
shutdown\par
shutdown безопасно останавливает систему. Все зарегистрированные пользователи уведомляются об останове, регистрация в системе запрещается.\par
sulogin\par
sulogin вызывается init, когда система переходит в однопользовательский режим (указывается записью в in /etc/inittab). Init также выполняет sulogin, когда получает флаг \_b от загрузчика (например, LILO).\par
telinit\par
telinit посылает сигналы init, сообщающие о необходимости смены уровня выполнения.\par
utmpdump\par
utmpdump выводит содержимое файла (обычно /var/run/utmp) на стандартный вывод в удобном пользователю формате.\par
wall\par
wall посылает сообщение всем зарегистрированным пользователям, но лишь в случае, если mesg установлено yes.\par
Зависимости Sysvinit\par
Последняя проверка: версия 2.84.\par
Bash: sh Binutils: as, ld Fileutils: chown, cp, install, ln, mknod, rm Gcc: cc, cc1, collect2, cpp0 Make: make Sed: sed\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Tar\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Tar (1.13): ftp://ftp.gnu.org/gnu/tar/ Tar Patch (1.13): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Tar\par
Последняя проверка: версия 1.13.\par
Программы\par
rmt и tar\par
Описания\par
rmt\par
rmt используется другими программами для удаленного управления приводом магнитных лент.\par
tar\par
tar – программа архивации, сохраняющая и извлекающая файлы из архивов tar.\par
Зависимости Tar\par
Последняя проверка: версия 1.13.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Patch: patch Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Texinfo\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Texinfo (4.2): ftp://ftp.gnu.org/gnu/texinfo/\par
Содержимое Texinfo\par
Последняя проверка: версия 4.2.\par
Программы\par
info, infokey, install\_info, makeinfo, texi2dvi и texindex\par
Описания\par
info\par
info читает документы Info, обычно находящиеся в /usr/share/info. Документы Info documents схожи с man pages, но содержат больше, чем простое объяснение опций программы.\par
infokey\par
infokey компилирует в бинарный формат исходный файл персонализаций Info.\par
install\_info\par
install\_info обновляет записи info. Когда запускается info, выводится список тем (т.е. доступных документов info). install\_info обновляет этот список. Если файлы info удалены вручную, необходимо также удалить тему в оглавлении. Для этого и используется данная программа. Она работает аналогично в случае добавления новых документов.\par
makeinfo\par
makeinfo транслирует документы Texinfo в различные форматы. Доступны: файлы info, простой текст и HTML.\par
texi2dvi\par
texi2dvi выводит документы Texinfo\par
texindex\par
texindex используется для сортировки оглавлений Texinfo.\par
Зависимости Texinfo\par
Последняя проверка: версия 4.0.\par
Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ln, ls, mkdir, mv, rm Gcc: cc1, collect2, cpp0, gcc Grep: egrep, fgrep, grep Make: make Sed: sed Sh\_utils: basename, echo, expr, hostname, sleep Texinfo: makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Textutils\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Textutils (2.1): ftp://ftp.gnu.org/gnu/textutils/\par
Содержимое Textutils\par
Последняя проверка: версия 2.0.\par
Программы\par
cat, cksum, comm, csplit, cut, expand, fmt, fold, head, join, md5sum, nl, od, paste, pr, ptx, sort, split, sum, tac, tail, tr, tsort, unexpand, uniq и wc\par
Описание\par
cat\par
cat выводит файлы на стандартный вывод.\par
cksum\par
cksum выводит контрольную сумму CRC и объем в байтах каждого указанного файла.\par
comm\par
comm построчно сравнивает два отсортированных файла.\par
csplit\par
csplit выводит части файла, разделенные заданными строками, в файлы xx01, xx02, ..., и размер каждой части на стандартный вывод.\par
cut\par
cut выводит указанные строки из указанных файлов на стандартный вывод.\par
expand\par
expand конвертирует знаки табуляции в файле в пробелы и выводит результат на стандартный вывод.\par
fmt\par
fmt форматирует каждый абзац в указанных файлах и выводит результат на стандартный вывод.\par
fold\par
fold делает переносы вводимых строк из указанных файлов (по умолчанию, со стандартного ввода) и выводит результат на стандартный вывод.\par
head\par
head выводит первые x (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
join\par
join соединяет строки двух файлов в поля.\par
md5sum\par
md5sum выводит или проверяет контрольные суммы MD5.\par
nl\par
nl выводит каждый указанный файл на стандартный вывод, добавляя номера строк.\par
od\par
od выводит файл в различных форматах, по умолчанию в восьмеричном, на стандартный вывод.\par
paste\par
paste выводит строки, соответствующие заданным образцам из указанных файлов и разделенные символами табуляции, на стандартный вывод.\par
pr\par
pr разделяет файлы на страницы или колонки для распечатки.\par
ptx\par
ptx составляет оглавление файла.\par
sort\par
sort выводит на стандартный вывод построчно отсортированное слияние файлов.\par
split\par
split разбивает входной файл на части заданного размера PREFIXaa, PREFIXab, ...\par
sum\par
sum выводит контрольную сумму и количество занимаемых блоков каждого указанного файла.\par
tac\par
tac выводит каждый указанный файл на стандартный вывод last line first.\par
tail\par
tail выводит последние xx (по умолчанию 10) строк каждого указанного файла на стандартный вывод.\par
tr\par
tr заменяет, вставляет, и/или удаляет символы из стандартного ввода, выводя результат на стандартный вывод.\par
tsort\par
tsort выводит полностью упорядоченные списки, учитывая уже проведенную сортировку указанных файлов.\par
unexpand\par
unexpand конвертирует пробелы в каждом файле в символы табуляции, выводя результат на стандартный вывод.\par
uniq\par
uniq удаляет повторяющиеся строки из отсортированного файла.\par
wc\par
wc выводит количество строк, слов и размер в байтах каждого указанного файла и сумму результатов, если указано более одного файла.\par
Зависимости Textutils\par
Последняя проверка: версия 2.0.\par
Autoconf: autoconf, autoheader Automake: aclocal, automake Bash: sh Binutils: ar, as, ld, ranlib Diffutils: cmp Fileutils: chmod, install, ls, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp0, gcc Glibc: getconf Grep: egrep, fgrep, grep M4: m4 Make: make Gawk: gawk Net\_tools: hostname Perl: perl Sed: sed Sh\_utils: basename, echo, expr, sleep, uname Tar: tar Texinfo: install\_info, makeinfo Textutils: cat, tr\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Util\_linux\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Util\_linux (2.11u): ftp://ftp.win.tue.nl/pub/linux\_local/utils/util\_linux/\par
Содержание Util\_linux\par
Последняя проверка: версия 2.11t.\par
Программы\par
agetty, arch, blockdev, cal, cfdisk, chkdupexe, col, colcrt, colrm, column, ctrlaltdel, cytune, ddate, dmesg, elvtune, fdformat, fdisk, fsck.cramfs, fsck.minix, getopt, hexdump, hwclock, ipcrm, ipcs, isosize, line, logger, look, losetup, mcookie, mkfs, mkfs.bfs, mkfs.cramfs, mkfs.minix, mkswap, more, mount, namei, parse.bash, parse.tcsh, pg, pivot_root, ramsize (ссылка на rdev), raw, rdev, readprofile, rename, renice, rev, rootflags (ссылка на rdev), script, setfdprm, setsid, setterm, sfdisk, swapoff (ссылка на swapon), swapon, test.bash, test.tcsh, tunelp, ul, umount, vidmode (ссылка на rdev), whereis и write\par
Описания\par
agetty\par
agetty открывает tty, запрашивает регистрационное имя и запускает /bin/login.\par
arch\par
arch выводит информацию об архитектуре машины.\par
blockdev\par
blockdev позволяет вызывать ioctls блочного устройства из командной строки.\par
cal\par
cal выводит простой календарь.\par
cfdisk\par
cfdisk – редактор разделов диска, основанный на библиотеке libncurses.\par
chkdupexe\par
chkdupexe находит дублирующиеся исполняемые файлы.\par
col\par
col фильтрует перевернутые строки, поступающие с ввода.\par
colcrt\par
colcrt фильтрует вывод nroff для предпросмотра CRT.\par
colrm\par
colrm удаляет колонки из файла.\par
column\par
column объединяет списки в файл из нескольких колонок.\par
ctrlaltdel\par
ctrlaltdel устанавливает действие для комбинации клавиш CTRL+ALT+DEL (жесткая или мягкая перезагрузка).\par
cytune\par
cytune запрашивает и изменяет порог прерывания для драйвера Cyclades.\par
ddate\par
ddate конвертирует дату по Грегорианскому календарю в дату по календарю Discordian.\par
dmesg\par
dmesg просматривает и контролирует буфер kernel ring (сообщения загрузки ядра).\par
elvtune\par
elvtune позволяет настраивать the I/O elevator per block device queue basis.\par
fdformat\par
fdformat выполняет низкоуровневое форматирование дискет.\par
fdisk\par
fdisk – редактор дисковых разделов.\par
fsck.cramfs\par
На данный момент нет описания.\par
fsck.minix\par
fsck.minix проверяет целостность файловых систем MINIX.\par
getopt\par
getopt анализирует переданные из командной строки параметры таким же образом как и одноименная функция C.\par
hexdump\par
hexdump выводит указанные файлы на стандартный вывод в указанном формате (ascii, десятичный, шестнадцатеричный, восьмеричный).\par
hwclock\par
hwclock устанавливает системные часы (часы RTC или BIOS).\par
ipcrm\par
ipcrm удаляет указанный ресурс.\par
ipcs\par
ipcs выводит информацию об устройствах IPC.\par
isosize\par
isosize выводит объем файловой системы iso9660.\par
line\par
line копирует одну строку (до символа новой строки) из стандартного ввода на стандартный вывод.\par
logger\par
logger делает записи в системном журнале.\par
look\par
look выводит строки, начинающиеся с заданной.\par
losetup\par
losetup управляет устройствами loop.\par
mcookie\par
mcookie генерирует «магические» ключи для xauth.\par
mkfs\par
mkfs создает файловую систему Linux на устройстве, обычно разделе диска.\par
mkfs.bfs\par
mkfs.bfs создает файловую систему SCO bfs на устройстве, обычно разделе диска.\par
mkfs.cramfs\par
На данный момент нет описания.\par
mkfs.minix\par
mkfs.minix создает файловую систему Linux MINIX на устройстве, обычно разделе диска.\par
mkswap\par
mkswap создает пространство подкачки на устройстве или в файле.\par
more\par
more – фильтр для поэкранного просмотра текста.\par
mount\par
mount монтирует файловую систему устройства в каталог (точку монтирования).\par
namei\par
namei переходит по заданному пути до тех пор, пока не будет найдена точка терминала.\par
parse.bash, parse.tcsh, test.bash, test.tcsh\par
Это примеры скриптов, использующих getopt с BASH или TCSH.\par
pg\par
На данный момент нет описания.\par
pivot_root\par
pivot_root изменяет корневую файловую систему текущего процесса.\par
ramsize\par
ramsize запрашивает и меняет размер RAM диска.\par
raw\par
raw используется для привязки символьных устройств к блочным.\par
rdev\par
rdev запрашивает и устанавливает образ корневого устройства, устройства подкачки, объем RAM диска или видеорежим.\par
readprofile\par
readprofile выводит информацию из профиля ядра.\par
rename\par
rename переименовывает файлы.\par
renice\par
renice меняет приоритет запущенных процессов.\par
rev\par
rev инвертирует строки файлов.\par
rootflags\par
rootflags запрашивает и сохраняет дополнительную информацию, используемую для монтирования корневой файловой системы.\par
script\par
script создает скрипт терминальной сессии.\par
setfdprm\par
setfdprm устанавливает параметры гибких дисков.\par
setsid\par
setsid запускает программы в новой сессии.\par
setterm\par
setterm устанавливает параметры терминала.\par
sfdisk\par
sfdisk – редактор дисковых разделов.\par
swapoff\par
swapoff деактивирует файлы и устройства подкачки.\par
swapon\par
swapon активирует файлы и устройства подкачки.\par
tunelp\par
tunelp устанавливает различные параметры LP устройств.\par
ul\par
ul читает файл и переводит символы подчеркивания в последовательность, отображающую подчеркивание на используемом терминале.\par
umount\par
umount размонтирует смонтированную файловую систему.\par
vidmode\par
vidmode запрашивает и устанавливает видеорежим.\par
whereis\par
whereis находит исполняемый файл, исходные коды и документацию для указанной команды.\par
write\par
write посылает сообщение другому пользователю.\par
Зависимости Util\_linux\par
Последняя проверка: версия 2.11n.\par
Bash: sh Binutils: as, ld Diffutils: cmp Fileutils: chgrp, chmod, cp, install, ln, mv, rm Gettext: msgfmt, xgettext Gcc: cc, cc1, collect2, cpp, cpp0 Glibc: rpcgen Grep: grep Make: make Sed: sed Sh\_utils: uname, whoami Textutils: cat\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Vim\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Vim (6.1): ftp://ftp.vim.org/pub/editors/vim/unix/ Vim Patch (6.1): ftp://ftp.linuxfromscratch.org/lfs\_packages/4.0/ http://ftp.linuxfromscratch.org/lfs\_packages/4.0/\par
Содержимое Vim\par
Последняя проверка: версия 6.1.\par
Программы\par
efm_filter.pl, efm_perl.pl, ex (ссылка на vim), less.sh, mve.awk, pltags.pl, ref, rview (ссылка на vim), rvim (ссылка на vim), shtags.pl, tcltags, vi (ссылка на vim), view (ссылка на vim), vim, vim132, vim2html.pl, vimdiff (ссылка на vim), vimm, vimspell.sh, vimtutor и xxd\par
Описания\par
efm_filter.pl\par
efm_filter.pl – фильтр, читающий из стандартного ввода, пишущий на стандартный вывод и создающий файл ошибок, обрабатываемый vim.\par
efm_perl.pl\par
efm_perl.pl форматирует сообщения об ошибках интерпретатора Perl для использования в quickfix режиме vim.\par
ex\par
ex запускает vim в режиме Ex.\par
less.sh\par
less.sh – скрипт, запускающий vim, используя less.vim.\par
mve.awk\par
mve.awk обрабатывает ошибки vim.\par
pltags.pl\par
pltags.pl создает файл тегов кода Perl для использования vim.\par
ref\par
ref проверяет написание параметров.\par
rview\par
rview – ограниченная версия view. Нельзя передавать команды интерпретатору и vim не может быть приостановлен.\par
rvim\par
rvim is the restricted version of vim. Нельзя передавать команды интерпретатору и vim не может быть приостановлен.\par
shtags.pl\par
shtags.pl генерирует файл тегов для скриптов perl.\par
tcltags\par
tcltags генерирует файл тегов кода TCL.\par
vi\par
vi запускает vim в режиме совместимости с vi.\par
view\par
view запускает vim в режиме «только для чтения».\par
vim\par
vim запускает vim в стандартном режиме.\par
vim132\par
vim132 запускает vim в терминале в 132 колонки.\par
vim2html.pl\par
vim2html.pl конвертирует документацию vim в HTML.\par
vimdiff\par
vimdiff сравнивает две или три версии файла и показывает различия.\par
vimm\par
vimm включает модель ввода DEC locator на удаленном терминале.\par
vimspell.sh\par
vimspell.sh просматривает файл и генерирует синтаксические выражения, выделяемые в vim.\par
vimtutor\par
vimtutor запускает обучение работе с Vim.\par
xxd\par
xxd конвертирует бинарный ввод из файла в шестнадцатеричный и обратно.\par
Зависимости Vim\par
Последняя проверка: версия 6.0.\par
Bash: sh Binutils: as, ld, strip Diffutils: cmp, diff Fileutils: chmod, cp, ln, mkdir, mv, rm, touch Find: find Gcc: cc1, collect2, cpp0, gcc Grep: egrep, grep Make: make Net\_tools: hostname Sed: sed Sh\_utils: echo, expr, uname, whoami Textutils: cat, tr, wc\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Zlib\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Официальная ссылка\par
Zlib (1.1.4): ftp://ftp.info\_zip.org/pub/infozip/zlib/\par
Содержимое Zlib\par
Последняя проверка: версия 1.1.4.\par
Библиотеки\par
libz[a,so]\par
Описания\par
libz\par
Библиотека zlib, используемая многими программами, и реализующая методы (де)компрессии данных.\par
Зависимости Zlib\par
Зависимости еще не проверялись.\par
\par
\par
\s3 \qc\snext0\i0\fs26\f0\b\fi0\li0\ri0 \i Приложение B. Ресурсы\i0  \par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Введение\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Далее последует список полезных книг, HOWTO и прочих документов, которые можно скачать или приобрести. Это весьма небольшой список, с которого можно начать. Мы надеемся со временем расширить этот список, как только обнаружатся полезные документы .\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Книги\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Linux Network Administrator's Guide, опубликовано O'Reilly. ISBN: 1\_56502\_087\_2\par
Running Linux, опубликовано O'Reilly. ISBN: 1\_56592\_151\_8\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 HOWTO и руководства\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Все нижеуказанные HOWTO доступны на сайте Linux Documentation Project (http://www.tldp.org)\par
Linux Network Administrator's Guide\par
From\_PowerUp\_To\_Bash\_Prompt\_HOWTO\par
\par
\s4 \qc\snext0\lang1049\f1\fs26\b\fi0\li0\ri0 Прочее\par
\s0 \ql\snext0\f1\fs24\b0\i0\fi567\sb0\sa0\li0\ri0 \par\s0 \qj\snext0\f1\fs24\b0\i0\fi567\li0\ri0 Различные man и info pages, поставляемые вместе с пакетами\par
\par
\par
\par

}
