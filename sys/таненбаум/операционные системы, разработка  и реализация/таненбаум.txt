=== процессы ===
pid = fork()
pid = waitpid(pid, &statloc, options)
s = wait(&status)
s = execve(name, argv, envp)
exit(status)
size = brk(addr)
pid = getpid()
pid = getpgrp()
pid = setsid()
I = ptrace(req, pid, addr, data)
=== сигналы ===
s = sigaction(sig, &act, &oldact)
s = sigreturn(&context)
s = sigprocmask(how, &set, &old)
s = sigpending(set)
s = sigsuspend(sigmask)
s = kill(pid,sig)
residual = alarm(seconds)
s = pause()
=== файлы ===
fd = creat(name, mode)
fd = mknod(name, mode, addr)
fd = open(file, how, ...)
s = close(fd)
n = read(fd, buffer, nbytes)
n = write(fd, buffer, nbytes)
pos = lseek(fd, offset, whence)
s = stat(name, &buf)
s = fstat(fd, &buf)
fd = dup(fd)
s = pipe(&fd[0])
s = ioctl(fd, request, argp)
s = access(name, mode)
s = rename(old, new)
s = fcntl(fd, cmd, ...)
=== файловая система ===
s = mkdir(name,mode)
s = rmdir(name)
s = link(name1, name2)
s = ulink(name)
s = mount(special, name, flag)
s = umount(special)
s = sync()
s = chdir(dirname)
s = chroot(dirname)
=== защита ===
s = chmod(name, mode)
uid = getuid()
gid = geggid()
s = setuid(uid)
s = setgid(gid)
s = chown(name, owner, group)
oldmask = umask(complname)
=== время ===
seconds = time(&seconds)
s = stime(tp)
s = utime(file, timep)
s = times(bufger)
