<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="40" /><link rel="next" href="42" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 5321 — Протокол SMTP, стр. 41</title><meta name="author" content="J. Klensin" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../5321.rfc">RFC 5321 — Протокол SMTP</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 5321</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Simple Mail Transfer Protocol</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 772, RFC 780, RFC 788, RFC 821, RFC 974, RFC 1425, RFC 1651, RFC 1869, RFC 2821</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Проект стандарта</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2008-10-01">Октябрь 2008</time></dd><dd><div class="icon i5"></div> Автор: <span itemprop="author">J. Klensin</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 5321,</span> Страница 41 из 75</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../5321.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="40"><b>&larr;</b></a></li><li><a class="x" href="../5321.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a href="37">37</a></li><li><a href="38">38</a></li><li><a href="39">39</a></li><li><a href="40">40</a></li><li class="this"><span>41</span></li><li><a href="42">42</a></li><li><a href="43">43</a></li><li><a href="44">44</a></li><li><a href="45">45</a></li><li><a class="x" href="46">46</a></li><li><a class="x" href="47">47</a></li><li><a class="x" href="48">48</a></li><li><a class="x" href="49">49</a></li><li><a class="x" href="50">50</a></li><li><a class="x" href="51">51</a></li><li><a class="x" href="52">52</a></li><li><a class="x" href="53">53</a></li><li><a class="x" href="54">54</a></li><li><a class="x" href="55">55</a></li><li><a class="x" href="56">56</a></li><li><a class="x" href="57">57</a></li><li><a class="x" href="58">58</a></li><li><a class="x" href="59">59</a></li><li><a class="x" href="60">60</a></li><li><a class="x" href="61">61</a></li><li><a class="x" href="62">62</a></li><li><a class="x" href="63">63</a></li><li><a class="x" href="64">64</a></li><li><a class="x" href="65">65</a></li><li><a class="x" href="66">66</a></li><li><a class="x" href="67">67</a></li><li><a class="x" href="68">68</a></li><li><a class="x" href="69">69</a></li><li><a class="x" href="70">70</a></li><li><a class="x" href="71">71</a></li><li><a class="x" href="72">72</a></li><li><a class="x" href="73">73</a></li><li><a class="x" href="74">74</a></li><li><a class="x" href="75">75</a></li><li><a accesskey="3" title="На страницу вперед" href="42">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="75">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h4 id="p4.2.1">4.2.1. Важность кодов отклика и теоретические вопросы</h4><p>Каждая из трех цифр кода отклика имеет свой уровень значимости. Первая цифра определяет успех, неудачу или незавершенность команды. Для простых клиентов SMTP или при получении неизвестного кода можно определить дальнейшие действия (продолжение, повтор, отказ и т. п.), ограничившись первой цифрой кода. Клиенты SMTP, которые хотят получить более точную информацию о происходящем (ошибка почтовой системы, некорректный синтаксис и т. п.), могут использовать вторую цифру кода. Третья цифра и дополнительная информация в отклике служат для предоставления наиболее подробных сведений.</p><p>Первая цифра кода может принимать 4 значения:</p><ul><li class="b">2yz — позитивный отклик о завершении</li><li class="lib">Запрошенная операция успешно завершена и могут вводиться новые команды.</li><li class="b">3yz — позитивный промежуточный отклик</li><li class="lib">Команда была воспринята, но запрошенные действия пока не выполнены и сервер ждет дополнительной информации. Клиенту SMTP следует передать другую команду, содержащую требуемые данные. Отклики этой группы используются в командах с последовательным выполнением (например, DATA).</li><li class="b">4yz — негативный отклик о временных проблемах</li><li class="lib">Команда не принята и запрошенная операция не выполнена. Однако условия, не позволяющие выполнить команду, носят временный характер и операция может быть запрошена вновь. Отправителю следует вернуться к началу последовательности команд (если таковая была). Понятие «временный» является недостаточно строгим и взаимодействующие стороны (клиент и сервер SMTP) должны одинаково интерпретировать его. Для каждого отклика этой группы время может различаться, но клиенту SMTP следует продолжать попытки. Различия между временными и постоянными проблемами (коды 5yz) достаточно условны и отклики 4yz обычно возвращаются в тех случаях, когда возможен позитивный результат при повторе без изменения формы команды и свойств отправителя или получателя (т. е., команда просто может быть повторена без изменений).</li><li class="b">5yz — негативный отклик о постоянных проблемах</li><li class="lib">Команда не принята и запрошенная операция не выполнена. Клиенту SMTP не следует просто повторять команду, поскольку она заведомо не будет выполнена. Некоторые «постоянные» проблемы могут быть решены корректировкой команд, поэтому пользователь (человек) может запросить у клиента SMTP повтора операции после корректировки команд или их порядка (например, после проверки корректности ввода или изменения параметров учетной записи).</li></ul><p>Нет ничего дурного в том, что протокол FTP [34] использует сходную архитектуру откликов и коды SMTP основаны на модели FTP. Однако в SMTP используется модель «команда - отклик», тогда как командный протокол FTP является асинхронным; кроме того, принятая в FTP группа кодов 1yz не используется в модели SMTP.</p><p>Вторая цифра отклика показывает категорию ошибки:</p><ul><li class="b">x0z Синтаксис:</li><li class="lib">Отклик связан с синтаксической ошибкой (команда синтаксически корректна, но отклик не может быть отнесен к другим категориям, нереализованная команда, излишняя команда и т. п.).</li><li class="b">x1z Информация:</li><li class="lib">Отклик на запрос информации (например, справка или состояние).</li><li class="b">x2z Соединение:</li><li class="lib">Отклики, относящиеся к каналу передачи.</li><li class="b">x3z</li><li class="lib">Не задан.</li><li class="b">x4z</li><li class="lib">Не задан.</li><li class="b">x5z Почтовая система:</li><li class="lib">Отклики показывают состояние принимающей почтовой системы по отношению к запрошенной передаче или другим действиям почтовой системы.</li></ul><p>Третья цифра позволяет получить дополнительную информацию для каждой категории, заданной второй цифрой. Приведенный ниже список откликов иллюстрирует это подход. Текстовая часть отклика является скорее рекомендуемой, чем обязательной и может изменяться в соответствии со связанной с откликом командой. С другой стороны, коды откликов должны в точности соответствовать приведенной в этом разделе спецификации. При разработке программ-серверов не следует изобретать новые коды для незначительно отличающихся ситуаций — нужно выбрать и адаптировать наиболее подходящий код из числа определенных в спецификации.</p><p>Например, команды типа NOOP, при успешном завершении которых клиент SMTP не получает новой информации, будут возвращать код 250. Отклик 502 возвращается при запросе нереализованной команды, а отклик 504 — для реализованных команд с неподдерживаемыми параметрами.</p><p>Текст отклика может содержать более одной строки и в таких случаях текст должен маркироваться так, чтобы клиент SMTP мог узнать о завершении текста. Это требует использования для многострочных откликов специального формата.</p><p>Формат многострочных откликов требует, чтобы каждая строка (кроме последней) начиналась кодом отклика, после которого следует дефис (-), а далее — текст. В последней строке вместо дефиса используется пробел — &lt;SP&gt;, после которого может следовать текст, и &lt;CRLF&gt;. Как указано выше, серверам следует передавать символ &lt;SP&gt;, если далее не будет текста, но клиент должен быть готов к отсутствию символа пробела.</p><p>Ниже приведен пример многострочного отклика:</p><pre>250-Первая строка
250-Вторая строка
250-234 Текст, начинающийся с числа
250 Последняя строка</pre><p>В многострочных откликах коды в каждой строке должны совпадать. Клентам целесообразно принимать это во внимание и выполнять обработку с учетом кода из любой строки в предположении, что остальные строки содержат тот же код. В некоторых случаях важные для клиента данные передаются в тексте отклика. Клиент должен быть способен идентифицировать такие ситуации из текущего контекста.</p></div></div><noindex><div class="pages"><p class="r"> <b>Страница 41 из 75</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../5321.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="40"><b>&larr;</b></a></li><li><a class="x" href="../5321.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a href="37">37</a></li><li><a href="38">38</a></li><li><a href="39">39</a></li><li><a href="40">40</a></li><li class="this"><span>41</span></li><li><a href="42">42</a></li><li><a href="43">43</a></li><li><a href="44">44</a></li><li><a href="45">45</a></li><li><a class="x" href="46">46</a></li><li><a class="x" href="47">47</a></li><li><a class="x" href="48">48</a></li><li><a class="x" href="49">49</a></li><li><a class="x" href="50">50</a></li><li><a class="x" href="51">51</a></li><li><a class="x" href="52">52</a></li><li><a class="x" href="53">53</a></li><li><a class="x" href="54">54</a></li><li><a class="x" href="55">55</a></li><li><a class="x" href="56">56</a></li><li><a class="x" href="57">57</a></li><li><a class="x" href="58">58</a></li><li><a class="x" href="59">59</a></li><li><a class="x" href="60">60</a></li><li><a class="x" href="61">61</a></li><li><a class="x" href="62">62</a></li><li><a class="x" href="63">63</a></li><li><a class="x" href="64">64</a></li><li><a class="x" href="65">65</a></li><li><a class="x" href="66">66</a></li><li><a class="x" href="67">67</a></li><li><a class="x" href="68">68</a></li><li><a class="x" href="69">69</a></li><li><a class="x" href="70">70</a></li><li><a class="x" href="71">71</a></li><li><a class="x" href="72">72</a></li><li><a class="x" href="73">73</a></li><li><a class="x" href="74">74</a></li><li><a class="x" href="75">75</a></li><li><a title="На страницу вперед" href="42">&rarr;</a></li><li><a title="Последняя страница" href="75">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 5321 - Протокол SMTP",disqus_identifier="5321.rfc",disqus_url="http://rfc2.ru/5321.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>