<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="61" /><link rel="next" href="63" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 4340 — Протокол DCCP, стр. 62</title><meta name="author" content="Eddie Kohler, Mark Handley, Sally Floyd" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../4340.rfc">RFC 4340 — Протокол DCCP</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 4340</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Datagram Congestion Control Protocol (DCCP)</span></a></dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2006-03-01">Март 2006</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">Eddie Kohler</span>, <span itemprop="author">Mark Handley</span>, <span itemprop="author">Sally Floyd</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 4340,</span> Страница 62 из 113</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../4340.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="61"><b>&larr;</b></a></li><li><a class="x" href="../4340.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a class="x" href="37">37</a></li><li><a class="x" href="38">38</a></li><li><a class="x" href="39">39</a></li><li><a class="x" href="40">40</a></li><li><a class="x" href="41">41</a></li><li><a class="x" href="42">42</a></li><li><a class="x" href="43">43</a></li><li><a class="x" href="44">44</a></li><li><a class="x" href="45">45</a></li><li><a class="x" href="46">46</a></li><li><a class="x" href="47">47</a></li><li><a class="x" href="48">48</a></li><li><a class="x" href="49">49</a></li><li><a class="x" href="50">50</a></li><li><a class="x" href="51">51</a></li><li><a class="x" href="52">52</a></li><li><a class="x" href="53">53</a></li><li><a class="x" href="54">54</a></li><li><a class="x" href="55">55</a></li><li><a class="x" href="56">56</a></li><li><a class="x" href="57">57</a></li><li><a href="58">58</a></li><li><a href="59">59</a></li><li><a href="60">60</a></li><li><a href="61">61</a></li><li class="this"><span>62</span></li><li><a href="63">63</a></li><li><a href="64">64</a></li><li><a href="65">65</a></li><li><a href="66">66</a></li><li><a class="x" href="67">67</a></li><li><a class="x" href="68">68</a></li><li><a class="x" href="69">69</a></li><li><a class="x" href="70">70</a></li><li><a class="x" href="71">71</a></li><li><a class="x" href="72">72</a></li><li><a class="x" href="73">73</a></li><li><a class="x" href="74">74</a></li><li><a class="x" href="75">75</a></li><li><a class="x" href="76">76</a></li><li><a class="x" href="77">77</a></li><li><a class="x" href="78">78</a></li><li><a class="x" href="79">79</a></li><li><a class="x" href="80">80</a></li><li><a class="x" href="81">81</a></li><li><a class="x" href="82">82</a></li><li><a class="x" href="83">83</a></li><li><a class="x" href="84">84</a></li><li><a class="x" href="85">85</a></li><li><a class="x" href="86">86</a></li><li><a class="x" href="87">87</a></li><li><a class="x" href="88">88</a></li><li><a class="x" href="89">89</a></li><li><a class="x" href="90">90</a></li><li><a class="x" href="91">91</a></li><li><a class="x" href="92">92</a></li><li><a class="x" href="93">93</a></li><li><a class="x" href="94">94</a></li><li><a class="x" href="95">95</a></li><li><a class="x" href="96">96</a></li><li><a class="x" href="97">97</a></li><li><a class="x" href="98">98</a></li><li><a class="x" href="99">99</a></li><li><a class="x" href="100">100</a></li><li><a class="x" href="101">101</a></li><li><a class="x" href="102">102</a></li><li><a class="x" href="103">103</a></li><li><a class="x" href="104">104</a></li><li><a class="x" href="105">105</a></li><li><a class="x" href="106">106</a></li><li><a class="x" href="107">107</a></li><li><a class="x" href="108">108</a></li><li><a class="x" href="109">109</a></li><li><a class="x" href="110">110</a></li><li><a class="x" href="111">111</a></li><li><a class="x" href="112">112</a></li><li><a class="x" href="113">113</a></li><li><a accesskey="3" title="На страницу вперед" href="63">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="113">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h3 id="p8.5">8.5. Псевдокод</h3><p>В этом параграфе представлен алгоритм, описывающий этапы обработки, через которые должна пройти конечная точка DCCP при получении пакета. Реализация DCCP не обязана в точности следовать описанному здесь алгоритму, но любая реализация должна генерировать видимые эффекты, в точности соответствующие приведенному здесь псевдокоду за исключением тех случаев, когда в данном документе явно разрешено иное поведение.</p><p>Принятый пакет обозначается, как P, сокет — S. Переменными сокета являются:</p><ul><li>S.SWL — нижний предел окна порядковых номеров;</li><li>S.SWH — верхний предел окна порядковых номеров;</li><li>S.AWL — нижний предел окна номеров подтверждений;</li><li>S.AWH — верхний предел окна номеров подтверждений;</li><li>S.ISS — начальный порядковый номер в переданном пакете;</li><li>S.ISR — начальный порядковый номер в принятом пакете;</li><li>S.OSR — порядковый номер в первом пакете, принятом в состоянии OPEN;</li><li>S.GSS — максимальный порядковый номер в переданных пакетах;</li><li>S.GSR — максимальный порядковый номер в принятых пакетах;</li><li>S.GAR — максимальный корректный номер подтверждения, принятый в пакетах, отличных от Sync; инициализируется значение S.ISS</li></ul><p>Операция "Send packet" (передача пакета) всегда использует значение S.GSS и увеличивает его на 1.</p><p>Этап 1: Базовая проверка заголовка</p><pre>/* Этот этап проверяет корректность формата пакетов. Не прошедшие проверку пакеты
   игнорируются без передачи в ответ пакетов Reset */
Если пакет короче 12 байтов, он отбрасывается с возвратом управления.
Если тип P.type непонятен, пакет отбрасывается с возвратом управления.
Если P.Data Offset меньше размера фиксированного заголовка для данного типа пакетов или
      больше размера пакета, пакет отбрасывается с возвратом управления.
Если P.type не является Data, Ack или DataAck и P.X == 0 (пакет имеет короткий порядковый
      номер), пакет отбрасывается с возвратом управления.
Если контрольная сумма заголовка некорректна, пакет отбрасывается с возвратом управления.
Если значение P.CsCov слишком велико для размера пакета, пакет отбрасывается с возвратом
      управления.</pre><p>Этап 2: Проверка номеров портов и обработка состояния TIMEWAIT</p><pre>/* Flow ID представляет собой квартет &lt;src addr, src port, dst addr, dst port&gt; */
Ищем flow ID в таблице и определяем соответствующий сокет.
Если сокета нет или S.state == TIMEWAIT,
    /* Порядковый номер и номер подтверждения берутся из полученного пакета; см. 8.3.1. */
    Генерируется пакет Reset(No Connection), пока не будет P.type == Reset
    Отбросить пакет с возвратом управления.</pre><p>Этап 3: Обработка состояния LISTEN</p><pre>Если S.state == LISTEN,
    Если P.type == Request или P содержит корректную опцию Init Cookie,
    /* Требуется просмотр опций пакета для проверки Init Cookie. Однако на этом этапе
       обрабатываются только опции Init Cookie, а остальные опции — на этапе 8. Данное
       сканирование нужно выполнять только при использовании опций Init Cookie */
    /* Создать новый сокет и переключиться на него */
    Установить S := новый сокет для данной пары портов
    S.state = RESPOND
    Выбрать S.ISS (начальный порядковый номер) или установить из опций Init Cookie
    Инициализировать S.GAR := S.ISS
    Установить S.ISR, S.GSR, S.SWL, S.SWH из пакета или опций Init Cookie
    Продолжить с S.state == RESPOND
    /* Пакет Response будет генерироваться на этапе 11 */
Иначе,
    Генерировать Reset(No Connection), пока не будет P.type == Reset
    Отбросить пакет с возвратом управления.</pre><p>Этап 4: Подготовка порядковых номеров в состоянии REQUEST</p><pre>Если S.state == REQUEST,
    Если (P.type == Response или P.type == Reset) и S.AWL &lt;= P.ackno &lt;= S.AWH,
        /* установить переменные нумерации, соответствующие другой точке, чтобы пакет P
           прошел проверки на этапе 6 */
        Установить S.GSR, S.ISR, S.SWL, S.SWH
        /* Обработка Response продолжается на этапе 10; Reset — на этапе 9 */
    Иначе,
        /* Только пакеты Response и Reset корректны в состоянии REQUEST */
        Генерировать Reset(Packet Error)
        Отбросить пакет с возвратом управления.</pre><p>Этап 5: Подготовка порядковых номеров для Sync</p><pre>Если P.type == Sync или P.type == SyncAck,
    Если S.AWL &lt;= P.ackno &lt;= S.AWH и P.seqno &gt;= S.SWL,
        /* P является корректным, поэтому переменные нумерации соответственно обновляются.
            После этого P передается для проверки этапа 6. При необходимости на этапе 15
            генерируется SyncAck */
        Обновить S.GSR, S.SWL, S.SWH
    Иначе,
        Отбросить пакет с возвратом управления.</pre><p>Этап 6: Проверка порядковых номеров</p><pre>Если P.X == 0 и соответствующий признак Allow Short Sequential Numbers = 0,
    /* Пакет имеет короткий порядковый номер, но такие номера не разрешены */
    Отбросить пакет с возвратом управления.
Иначе, если P.X == 0,
    Расширить P.seqno и P.ackno до 48 битов с использованием процедуры параграфа 7.6
Пусть LSWL = S.SWL и LAWL = S.AWL
Если P.type == CloseReq или P.type == Close или P.type == Reset,
    LSWL := S.GSR + 1, LAWL := S.GAR
Если LSWL &lt;= P.seqno &lt;= S.SWH и (P.ackno не существует или LAWL &lt;= P.ackno &lt;= S.AWH),
    Обновить S.GSR, S.SWL, S.SWH
    Если P.type != Sync,
        Обновить S.GAR
Иначе,
    Если P.type == Reset,
        Передать пакет Sync, подтверждающий S.GSR
    Иначе,
        Передать пакет Sync, подтверждающий P.seqno
    Отбросить пакет с возвратом управления.</pre><p>Этап 7: Проверка неожиданных типов пакетов</p><pre>Если (S.is_server и P.type == CloseReq)
 или (S.is_server и P.type == Response)
 или (S.is_client и P.type == Request)
 или (S.state >= OPEN и P.type == Request и P.seqno >= S.OSR)
 или (S.state >= OPEN и P.type == Response и P.seqno >= S.OSR)
 или (S.state == RESPOND and P.type == Data),
    Передать пакет Sync, подтверждающий P.seqno
    Отбросить пакет с возвратом управления.</pre><p>Этап 8: Обработка опций и маркировка подтверждаемости</p><pre>/* Обработка опций не описывается здесь. Некоторые опции (такие, как Mandatory) могут
   приводить к сбросу соединения при котором этапы 9 и далее не будут выполняться */
Пометить пакет как подтверждаемый (в терминах Ack Vector — Received или Received ECN)</pre><p>Этап 9: Обработка Reset</p><pre>Если P.type == Reset,
    Сбросить соединение
    S.state := TIMEWAIT
    Установить таймер TIMEWAIT
    Отбросить пакет с возвратом управления.</pre><p>Этап 10: Обработка состояния REQUEST (вторая часть)</p><pre>Если S.state == REQUEST,
    /* если мы пришли сюда, P является корректным пакетом Response от сервера (см. этап 4)
       и следует перейти в состояние PARTOPEN. Состояние PARTOPEN означает передать Ack,
       не передавать пакетов данных, периодически повторять передачу Ack, всегда включая
       все опции Init Cookie из пакета Response */
    S.state := PARTOPEN
    Установить таймер PARTOPEN
    Продолжить с S.state == PARTOPEN
    /* Этап 12 будет передавать пакет Ack, завершающий трехэтапное согласование */</pre><p>Этап 11: Обработка состояния RESPOND</p><pre>Если S.state == RESPOND,
    Если P.type == Request,
        Передать Response, возможно с опциями Init Cookie
        если были переданы опции Init Cookie,
            Удалить S и возвратить управление
            /* Этап 3 будет создавать другой сокет, когда клиент завершит 3-этапное
               согласование */
    Иначе,
        S.OSR := P.seqno
        S.state := OPEN</pre><p>Этап 12: Обработка состояния PARTOPEN</p>

Если S.state == PARTOPEN,
    Если P.type == Response,
        Передать Ack
    Иначе, если P.type != Sync,
       S.OSR := P.seqno
       S.state := OPEN<p>Этап 13: Обработка CloseReq</p><pre>если P.type == CloseReq и S.state &lt; CLOSEREQ,
    Генерировать Close
    S.state := CLOSING
    Установить таймер CLOSING</pre><p>Этап 14: Обработка Close</p><pre>Если P.type == Close,
    Генерировать Reset(Closed)
    Разорвать соединение
    Отбросить пакет с возвратом управления.</pre><p>Этап 15: Обработка Sync</p><pre>Если P.type == Sync,
    Генерировать SyncAck</pre><p>Этап 16: Обработка данных</p><pre>/* В этой точке все данные приложения из P могут передаваться прикладной программе.
   Однако приложение НЕ ДОЛЖНО получать данных более, чем из одного пакета
   Request или Response */</pre></div></div><noindex><div class="pages"><p class="r"> <b>Страница 62 из 113</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../4340.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="61"><b>&larr;</b></a></li><li><a class="x" href="../4340.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a class="x" href="13">13</a></li><li><a class="x" href="14">14</a></li><li><a class="x" href="15">15</a></li><li><a class="x" href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a class="x" href="27">27</a></li><li><a class="x" href="28">28</a></li><li><a class="x" href="29">29</a></li><li><a class="x" href="30">30</a></li><li><a class="x" href="31">31</a></li><li><a class="x" href="32">32</a></li><li><a class="x" href="33">33</a></li><li><a class="x" href="34">34</a></li><li><a class="x" href="35">35</a></li><li><a class="x" href="36">36</a></li><li><a class="x" href="37">37</a></li><li><a class="x" href="38">38</a></li><li><a class="x" href="39">39</a></li><li><a class="x" href="40">40</a></li><li><a class="x" href="41">41</a></li><li><a class="x" href="42">42</a></li><li><a class="x" href="43">43</a></li><li><a class="x" href="44">44</a></li><li><a class="x" href="45">45</a></li><li><a class="x" href="46">46</a></li><li><a class="x" href="47">47</a></li><li><a class="x" href="48">48</a></li><li><a class="x" href="49">49</a></li><li><a class="x" href="50">50</a></li><li><a class="x" href="51">51</a></li><li><a class="x" href="52">52</a></li><li><a class="x" href="53">53</a></li><li><a class="x" href="54">54</a></li><li><a class="x" href="55">55</a></li><li><a class="x" href="56">56</a></li><li><a class="x" href="57">57</a></li><li><a href="58">58</a></li><li><a href="59">59</a></li><li><a href="60">60</a></li><li><a href="61">61</a></li><li class="this"><span>62</span></li><li><a href="63">63</a></li><li><a href="64">64</a></li><li><a href="65">65</a></li><li><a href="66">66</a></li><li><a class="x" href="67">67</a></li><li><a class="x" href="68">68</a></li><li><a class="x" href="69">69</a></li><li><a class="x" href="70">70</a></li><li><a class="x" href="71">71</a></li><li><a class="x" href="72">72</a></li><li><a class="x" href="73">73</a></li><li><a class="x" href="74">74</a></li><li><a class="x" href="75">75</a></li><li><a class="x" href="76">76</a></li><li><a class="x" href="77">77</a></li><li><a class="x" href="78">78</a></li><li><a class="x" href="79">79</a></li><li><a class="x" href="80">80</a></li><li><a class="x" href="81">81</a></li><li><a class="x" href="82">82</a></li><li><a class="x" href="83">83</a></li><li><a class="x" href="84">84</a></li><li><a class="x" href="85">85</a></li><li><a class="x" href="86">86</a></li><li><a class="x" href="87">87</a></li><li><a class="x" href="88">88</a></li><li><a class="x" href="89">89</a></li><li><a class="x" href="90">90</a></li><li><a class="x" href="91">91</a></li><li><a class="x" href="92">92</a></li><li><a class="x" href="93">93</a></li><li><a class="x" href="94">94</a></li><li><a class="x" href="95">95</a></li><li><a class="x" href="96">96</a></li><li><a class="x" href="97">97</a></li><li><a class="x" href="98">98</a></li><li><a class="x" href="99">99</a></li><li><a class="x" href="100">100</a></li><li><a class="x" href="101">101</a></li><li><a class="x" href="102">102</a></li><li><a class="x" href="103">103</a></li><li><a class="x" href="104">104</a></li><li><a class="x" href="105">105</a></li><li><a class="x" href="106">106</a></li><li><a class="x" href="107">107</a></li><li><a class="x" href="108">108</a></li><li><a class="x" href="109">109</a></li><li><a class="x" href="110">110</a></li><li><a class="x" href="111">111</a></li><li><a class="x" href="112">112</a></li><li><a class="x" href="113">113</a></li><li><a title="На страницу вперед" href="63">&rarr;</a></li><li><a title="Последняя страница" href="113">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 4340 - Протокол DCCP",disqus_identifier="4340.rfc",disqus_url="http://rfc2.ru/4340.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>