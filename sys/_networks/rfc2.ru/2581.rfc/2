<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="../2581.rfc" /><link rel="next" href="3" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 2581 — Контроль насыщения в TCP, стр. 2</title><meta name="author" content="M. Allman, V. Paxson, W. Stevens" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../2581.rfc">RFC 2581 — Контроль насыщения в TCP</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 2581</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">TCP Congestion Control</span></a></dd><dd><div class="icon i7"></div> Другие версии: RFC 2001, <strong class="obsoleted_by">RFC 5681</strong></dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="1999-04-01">Апрель 1999</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">M. Allman</span>, <span itemprop="author">V. Paxson</span>, <span itemprop="author">W. Stevens</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 2581,</span> Страница 2 из 9</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../2581.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="../2581.rfc"><b>&larr;</b></a></li><li><a href="../2581.rfc">1</a></li><li class="this"><span>2</span></li><li><a href="3">3</a></li><li><a href="4">4</a></li><li><a href="5">5</a></li><li><a href="6">6</a></li><li><a href="7">7</a></li><li><a href="8">8</a></li><li><a href="9">9</a></li><li><a accesskey="3" title="На страницу вперед" href="3">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="9">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h3>2. Определения</h3><p>В этой главе приводятся определения некоторых терминов, которые будут использованы в документе.</p><ul><li class="b">SEGMENT - сегмент</li><li class="lib">Сегментом является любой пакет данных или подтверждение TCP/IP.</li><li class="b">SENDER MAXIMUM SEGMENT SIZE (SMSS) - максимальный размер сегмента для отправителя</li><li class="lib">SMSS представляет собой размер самого большого сегмента, который может быть передан отправителем. Это значение может определяться на основе максимального блока данных, передаваемого через сеть, алгоритма path MTU [<a href="../1191.rfc" title="RFC 1191 - Исследование MTU на пути следования сообщения">RFC1191</a>], RMSS (см. следующее определение) и других факторов. Размер не включает заголовков и опций TCP/IP.</li><li class="b">RECEIVER MAXIMUM SEGMENT SIZE (RMSS) - максимальный размер сегмента для получателя</li><li class="lib">RMSS - размер максимального сегмента, который желает принимать получатель. Это значение задается в опции MSS, передаваемой хостом при организации соединения. Если опция MSS при организ ации соединения не была задана, используется значение 536 байтов [<a href="../1122.rfc" title="RFC 1122 - Требования к хостам Internet - Коммуникационные уровни">RFC1122</a>]. Размер не включает заголовков и опций TCP/IP.</li><li class="b">FULL-SIZED SEGMENT - полноразмерный сегмент</li><li class="lib">Сегмент, максимально допустимое количество данных (т. е., SMSS байтов).</li><li class="b">RECEIVER WINDOW (rwnd) - размер окна принимающей стороны</li><li class="lib">Анонсированное последним значение размера окна принимающей стороны.</li><li class="b">CONGESTION WINDOW (cwnd) - размер окна насыщения</li><li class="lib">Переменная состояния TCP, которая ограничивает количество данных, разрешенных протоколу для передачи. В любой момент для TCP недопустима передача данных с порядковыми номерами, превышающими значение суммы наибольшего из подтвержденных порядковых номеров и меньшего из двух значений cwnd и rwnd.</li><li class="b">INITIAL WINDOW (IW) - начальный размер окна</li><li class="lib">Начальным размером окна является размер окна насыщения отправителя после завершения трехэтапного согласования параметров.</li><li class="b">LOSS WINDOW (LW) - размер окна потерь</li><li class="lib">Размер окна насыщения после того, как отправитель TCP обнаружит потерю, используя свой таймер повтора передачи.</li><li class="b">RESTART WINDOW (RW) - размер окна перезапуска</li><li class="lib">Размер окна насыщения после того, как TCP возобновит передачу из состояния бездействия (для случая использования алгоритма slow start см. параграф 4.1).</li><li class="b">FLIGHT SIZE - размер "звена"</li><li class="lib">Количество данных, которые уже переданы, но еще не подтверждены.</li></ul><h3>3. Алгоритмы контроля насыщения</h3><p>В этой главе определены четыре алгоритма контроля насыщения - slow start, congestion avoidance, fast retransmit и fast recovery, разработанные в [Jac88] и [Jac90]. В некоторых случаях для отправителя TCP предпочтительно быть более консервативным, нежели позволяют алгоритмы, но для TCP недопустимо быть более агрессивным, чем позволяют алгоритмы (т. е., недопустимо передавать данные, когда рассчитанное с помощью алгоритмов значение cwnd не разрешает передачу).</p></div></div><noindex><div class="pages"><p class="r"> <b>Страница 2 из 9</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../2581.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="../2581.rfc"><b>&larr;</b></a></li><li><a href="../2581.rfc">1</a></li><li class="this"><span>2</span></li><li><a href="3">3</a></li><li><a href="4">4</a></li><li><a href="5">5</a></li><li><a href="6">6</a></li><li><a href="7">7</a></li><li><a href="8">8</a></li><li><a href="9">9</a></li><li><a title="На страницу вперед" href="3">&rarr;</a></li><li><a title="Последняя страница" href="9">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 2581 - Контроль насыщения в TCP",disqus_identifier="2581.rfc",disqus_url="http://rfc2.ru/2581.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>