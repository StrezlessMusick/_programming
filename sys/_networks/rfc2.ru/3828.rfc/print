<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><link rel="canonical" href="../3828.rfc" /><meta name="Robots" content="noindex, nofollow" /><title>Перевод RFC 3828 — Облегченный протокол пользовательских дейтаграмм (UDP-Lite)</title><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../3828.rfc">RFC 3828 — Облегченный протокол пользовательских дейтаграмм (UDP-Lite)</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 3828</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank"><span itemprop="alternativeHeadline">The Lightweight User Datagram Protocol (UDP-Lite)</span></a></dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2004-07-01">Июль 2004</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">Lars-Ake Larzon</span>, <span itemprop="author">Mikael Degermark</span>, <span itemprop="author">Stephen Pink</span>, <span itemprop="author">Lars-Erik Jonsson</span>, <span itemprop="author">Godred Fairhurst</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div id="text" itemprop="articleBody"><h3>Статус документа</h3><p>Данный документ содержит стандарт протокола Internet, предложенного сообществу Internet, и является приглашением к дискуссии в целях развития этого протокола. Сведения о текущем состоянии стандартизации протокола вы найдете в документе "Internet Official Protocol Standards" (STD 1). Документ можно распространять без ограничений.</p><h3>Тезисы</h3><p>Данный документ описывает протокол UDP-Lite, подобный протоколу UDP (User Datagram Protocol — протокол пользовательских дейтаграмм, RFC 768), но может также обслуживать в склонных к ошибкам сетевых средах приложения, которые предпочитают получать частично подтвержденные дейтаграммы, но не отбрасывать пакеты при любой ошибке. Если это свойство не использовать, UDP-Lite семантически идентичен протоколу UDP.</p><h2>Оглавление</h2><ul class="map"><li><a href="print#p1" title="Введение">1. Введение</a></li><li><a href="print#p2" title="Терминология">2. Терминология </a></li><li><a href="print#p3" title="Описание протокола">3. Описание протокола</a></li><li class="lia"><a href="print#p3.1" title="Поля">3.1. Поля</a></li><li class="lia"><a href="print#p3.2" title="Псевдозаголовок">3.2. Псевдозаголовок</a></li><li class="lia"><a href="print#p3.3" title="Интерфейс с приложением">3.3. Интерфейс с приложением</a></li><li class="lia"><a href="print#p3.4" title="Интерфейс с IP">3.4. Интерфейс с IP</a></li><li class="lia"><a href="print#p3.5" title="Джамбограммы">3.5. Джамбограммы</a></li><li><a href="print#p4" title="Нижележащий уровень">4. Нижележащий уровень</a></li><li><a href="print#p5" title="Совместимость с UDP">5. Совместимость с UDP</a></li><li><a href="print#p6" title="Вопросы безопасности">6. Вопросы безопасности</a></li><li><a href="print#p7" title="Согласование с IANA">7. Согласование с IANA</a></li><li><a href="print#p8" title="Литература">8. Литература</a></li><li class="lia"><a href="print#p8.1" title="Нормативные документы">8.1. Нормативные документы</a></li><li class="lia"><a href="print#p8.2" title="Дополнительная литература">8.2. Дополнительная литература</a></li><li><a href="print#p9" title="Благодарности">9. Благодарности</a></li></ul><h2 id="p1">1. Введение</h2><p>Этот документ описывает новый транспортный протокол UDP-Lite, известный также, как UDPLite. Основой нового протокола служат три наблюдения:</p><p class="lib">Во первых, существует класс приложений, которые получат преимущества, если поврежденные данные будут доставляться, а не отбрасываться. Множество кодеков для голова и видео относятся к этому классу (например, кодек речи AMR [RFC-3267], кодек Internet Low Bit Rate Codec [ILBRC], устойчивые к ошибкам видеокодеки H.263+ [ITU-H.263], H.264 [ITU-H.264; H.264], MPEG-4 [ISO-14496]). Эти кодеки могут разрабатываться так, что ошибки в данных для них будут предпочтительней отбрасывания пакетов целиком.</p><p class="lib">Во вторых, всем каналам Second, поддерживающим передачу трафика IP, следует использовать строгую проверку целостности на канальном уровне(например, CRC-32 [RFC-3819]) и эта проверка должна по умолчанию использоваться для трафика IP. Когда нижележащий канальный уровень поддерживает такую проверку, некоторые типы трафика (например, UDP-Lite) могут получить преимущества в результате смены поведения канального уровня, чтобы позволить по запросу пересылку частично поврежденных пакетов IP [RFC-3819]. Некоторые радио-технологии (например, [3GPP]) поддерживают такое поведение при работе при работе в точках, где стоимость и задержки достаточно малы. Если склонные к ошибкам каналы знают о чувствительной к ошибкам части пакета, для физического соединения можно обеспечить дополнительную защиту за счет снижения вероятности повреждения чувствительных к ошибкам байтов (например, использовать неоднородную упреждающую коррекцию ошибок FEC).</p><p class="lib">В третьих, промежуточным уровням (т. е., IP и протокол транспортного уровня) не следует запрещать работу устойчивых к ошибкам приложений при наличии таких каналов. Протокол IP не создает проблем в этом отношении, поскольку заголовок IP включает контрольную сумму, покрывающую все данные пакета IP. Из транспортных протоколов общего назначения лучше всего подходит UDP, поскольку он не создает издержек, связанных с повтором передачи ошибочных пакетов, нарушением порядка доставки и коррекцией ошибок. Для IPv4 [RFC-791] контрольная сумма UDP покрывает пакет целиком или просто не используется. Для IPv6 [RFC-2460] контрольная сумма UDP является обязательной и ее использование не может быть отключено. Заголовок IPv6 не включает контрольной суммы самого заголовка и считается необходимым всегда защищать адресную информацию IP с помощью обязательной контрольной суммы UDP.</p><p>Требуется транспортный протокол, который соответствует свойствам канального уровня и перечисленным выше требованиям [LDP99]. Механизм детектирования ошибок транспортного уровня должен обеспечивать защиту важной информации (такой, как заголовки) вкупе с игнорированием ошибок, с которыми лучше иметь дело приложениям. Набор октетов, проверяемых с помощью контрольной суммы, лучше всего задавать со стороны передающего приложения.</p><p>Протокол UDP-Lite обеспечивает поддержку контрольных сумм с опциональным частичным покрытием. При использовании этой опции пакет делится на две части — чувствительную к ошибкам (покрывается контрольной суммой) и нечувствительную к ним (не покрывается контрольной суммой). Ошибки в нечувствительной к ним части не будут приводить к отбрасыванию пакетов транспортным уровнем принимающего конечного хоста. Когда контрольная сумма покрывает весь пакет (это следует делать по умолчанию). UDP-Lite семантически идентичен протоколу UDP.</p><p>По сравнению с UDP, неполные контрольные суммы UDP-Lite обеспечивают дополнительную гибкость для приложений, которые хотят определить часть своих данных в пакетах, как нечувствительную к ошибкам.</p><h2 id="p2">2. Терминология</h2><p>Ключевые слова необходимо (MUST), недопустимо (MUST NOT), требуется (REQUIRED), нужно (SHALL), не следует (SHALL NOT), следует (SHOULD), не нужно (SHOULD NOT), рекомендуется (RECOMMENDED), возможно (MAY), необязательно (OPTIONAL) в данном документе интерпретируются в соответствии с [RFC-2119].</p><h2 id="p3">3. Описание протокола</h2><p>Заголовок пакетов UDP-Lite показан на рисунке 1. Его формат отличается от формата UDP — поле Length заменено полем Checksum Coverage. Эта замена допустима, поскольку информация о размере пакета UDP может быть обеспечена модулем IP так же, как это делается для TCP [RFC-793].</p><pre> 0              15 16             31
+--------+--------+--------+--------+
|     Source      |   Destination   |
|      Port       |      Port       |
+--------+--------+--------+--------+
|    Checksum     |                 |
|    Coverage     |    Checksum     |
+--------+--------+--------+--------+
|                                   |
:              Payload              :
|                                   |
+-----------------------------------+
Рисунок 1: Формат заголовка UDP-Lite</pre><h3 id="p3.1">3.1. Поля</h3><p>Поля Source Port и Destination Port определяются как в спецификации UDP [RFC-768]. Протокол UDP-Lite использует тот же набор портов, который выделен агентством IANA для использования с UDP.</p><p>Поле Checksum Coverage указывает число октетов, начиная с первого октета заголовка UDP-Lite, используемых для расчета контрольной суммы. Заголовок UDP-Lite должен всегда покрываться контрольной суммой. Вопреки этому требованию значение Checksum Coverage выражается числом октетов от начала заголовка UDP-Lite, как это делается для UDP. Нулевое значение Checksum Coverage показывает, что контрольная сумма вычисляется для всего пакета UDP-Lite. Это означает, что отличные от 0 значения поля Checksum Coverage должны быть не меньше 8. Пакеты UDP-Lite со значением поля Checksum Coverage от 1 до 7 должны отбрасываться получателем. Безотносительно к значению Checksum Coverage поле Checksum должно учитывать псевдозаголовок, основанный на заголовке IP (см. ниже). Пакеты UDP-Lite со значением поля Checksum Coverage, превышающим размер IP, также должны отбрасываться.</p><p>Поле Checksum содержит 16-битовое дополнение до 1 суммы дополнений для информации псевдозаголовка, собранной из заголовка IP, числа октетов, заданного полем Checksum Coverage (начиная с первого октета в заголовке UDP-Lite), возможно дополненного октетом нулей в конце для выравнивания по 16-битовой границе [RFC-1071]. Перед расчетом контрольной суммы значение поля Checksum принимается нулевым. Если рассчитанная контрольная сумма равна 0, она передается как «все единицы« (эквивалент арифметике с дополнением до 1).</p><p>Поскольку недопустима передача контрольной суммы, состоящей только из нулей, приложениям UDP-Lite, не желающим защищать свои данные с помощью контрольной суммы, следует использовать Checksum Coverage = 8. Это отличается от использования протокола UDP на основе IPv4 тем, что минимальная контрольная сумма UDP-Lite всегда покрывает заголовок UDP-Lite, который включает поле Checksum Coverage.</p><h3 id="p3.2">3.2. Псевдозаголовок</h3><p>Протоколы UDP и UDP-Lite используют однотипный псевдозаголовок с уровня IP для расчета контрольной суммы. Этот псевдозаголовок различается для протоколов IPv4 и IPv6. Псевдозаголовок UDP-Lite отличается от псевдозаголовка UDP тем, что поле Length берется не из заголовка UDP-Lite, а из информации, предоставляемой модулем IP. Расчет производится так же, как для протокола TCP [RFC-793], и предполагает, что поле Length псевдозаголовка включает заголовок UDP-Lite и все последующие октеты данных IP.</p><h3 id="p3.3">3.3. Интерфейс с приложением</h3><p>Интерфейсу с прикладным уровнем следует разрешать такие же операции, как для протокола UDP. Кроме того, для передающего приложения следует обеспечивать способ передачи значения Checksum Coverage модулю UDP-Lite. Следует также обеспечивать способ передачи значения Checksum Coverage принимающему приложению или по крайней мере позволить принимающему приложению блокировать доставку пакетов, в которых покрытие для контрольной суммы меньше, чем значение, представленное этим приложением.</p><p>Рекомендуется по умолчанию протоколу UDP-Lite вести себя подобно UDP, устанавливая значение поля Checksum Coverage соответствующим размеру пакета UDP-Lite и проверяя весь пакет. Приложениям, желающим определить часть своих данных, как нечувствительные к битовым ошибкам (например, для устойчивых к ошибкам кодеков RTP [RFC-3550]), следует делать это путем явного системного вызова на стороне отправителя. Приложениям, желающим получать данные с неполным покрытием для контрольной суммы, следует информировать принимающую систему с помощью явного системного вызова.</p><p>Характеристики каналов, формирующих путь через Internet, могут существенно различаться. Следовательно, трудно делать какие- либо предположения об уровне или характере ошибок, которые могут приводить к повреждению нечувствительной части данных пакетов UDP-Lite. Приложениям, использующим UDP-Lite, не следует делать каких-либо предположений о корректности принятых данных за пределами области, указанной полем Checksum Coverage, и следует, при необходимости пользоваться своими средствами контроля ошибок.</p><h3 id="p3.4">3.4. Интерфейс с IP</h3><p>Как для UDP, модуль IP должен обеспечивать псевдозаголовок модулю протокола UDP- Lite (его называют также модулем UDPLite). Псевдозаголовок UDP-Lite содержит поля адресов IP и протокола из заголовка IP, а также размер данных IP, который определяется на основе поля Length в заголовке IP.</p><p>Передающему модулю IP недопустимо дополнять данные IP октетами заполнения, поскольку размер данных UDP-Lite, доставляемых принимающему приложению, определяется размером данных IP.</p><h3 id="p3.5">3.5. Джамбограммы</h3><p>Поле Checksum Coverage имеет размер 16 битов и может представлять значения Checksum Coverage вплоть до 65535 октетов. Это позволяет использовать любое покрытие для контрольной суммы пакетов IP, если они не относятся к числу Jumbogram. Для Jumbogram контрольная сумма будет покрывать все данные (Checksum Coverage = 0) или не более 65535 начальных октетов пакета UDP-Lite.</p><h2 id="p4">4. Нижележащий уровень</h2><p>Поскольку UDP-Lite может доставлять пакеты с поврежденными данными приложениям, которые пожелали такие пакеты получать, кадры, содержащие пакеты UDP-Lite, не требуется отбрасывать на нижележащих уровнях при обнаружении ошибок в нечувствительной части. Для каналов, поддерживающих частичное детектирование ошибок, поле Checksum Coverage в заголовке UDP-Lite может использоваться в качестве рекомендации где не следует проверять наличие ошибок. Нижележащие уровни должны использовать строгий механизм детектирования ошибок [RFC-3819] для обнаружения по крайней мере ошибок в чувствительной части и отбрасывания поврежденных пакетов. Чувствительная часть включает октеты, начиная с первого октета заголовка IP и заканчивая последним октетом, указанным полем Checksum Coverage. Чувствительная часть будет, таким образом, трактоваться в точности так же, как для пакета UDP.</p><p>Канальные уровни, не поддерживающие частичного детектирования ошибок, подходящего для UDP-Lite, как описано выше, должны детектировать ошибки во всем пакете UDP-Lite и отбрасывать поврежденные пакеты [RFC-3819]. Весь пакет UDP-Lite в этом случае трактуется в точности как пакет UDP.</p><p>Следует отметить, что протокол UDP-Lite будет отличаться для приложений только в том случае, когда частичное детектирование ошибок, основанное на неполных контрольных суммах UDP-Lite, реализовано также на канальном уровне, как сказано выше. Использование частичного детектирования ошибок на канальном уровне будет давать эффект только при работе через склонные к ошибкам каналы.</p><h2 id="p5">5. Совместимость с UDP</h2><p>Протоколы UDP и UDP-Lite похожи синтаксически и семантически. Приложения, разработанные для UDP могут, следовательно, использовать взамен протокол UDP-Lite и по умолчанию будут получать полное покрытие для контрольной суммы. Сходство протоколов также упрощает реализацию UDP-Lite, поскольку требуется внести сравнительно небольшие изменения в существующие реализации UDP.</p><p>Протоколу UDP-Lite был выделен отдельный идентификатор протокола IP — 136 (UDPLite), что позволяет получателю отличить протокол UDP от протокола UDP-Lite. Конечный хост-адресат, не поддерживающий UDP-Lite, будет в общем случае возвращать сообщение ICMP "Protocol Unreachable" или ICMPv6 "Payload Type Unknown" (в зависимости от типа протокола IP). Этот простой метод детектирования не поддерживающих UDP-Lite является главным преимуществом использования отдельного идентификатора протокола.</p><p>В оставшейся части этой главы дается обоснование выделению отдельного идентификатора протокола IP для UDP-Lite, вместо использования имеющегося идентификатора для UDP.</p><p>Не существует известных проблем интероперабельности между UDP и UDP-Lite при использовании обоими протоколами одного идентификатора IP. В частности, не возникает ситуаций, когда пакет, способный вызвать проблемы, будет доставлен не подозревающему об этом приложению — данные UDP-Lite с частичным покрытием для контрольной суммы не могут быть доставлены приложениям UDP, а пакеты UDP, не полностью заполняющие поле данных IP, не могут быть доставлены приложениям, использующим UDP-Lite.</p><p>Однако при использовании протоколами UDP и UDP-Lite одного идентификатора, если реализация UDP-Lite будет передавать пакеты UDP-Lite с неполным покрытием для контрольной суммы реализации UDP, последняя будет отбрасывать пакеты без уведомления, поскольку несоответствие псевдозаголовков приведет к отказу при проверке контрольной суммы UDP. Ни одно из приложений не получит уведомления о сложившейся ситуации. Решениями этой проблемы могут служить:</p><ol><li>явная сигнализация на прикладном уровне через основное соединение (пока не используется опция частичного покрытия для контрольной суммы), позволяющая отправителю узнать, поддерживает ли получатель протокол UDP-Lite;</li><li>использование отдельной сигнализации (например, H.323, SIP или RTCP) для передачи информации о поддержке получателем протокола UDP-Lite.</li></ol><p>Поскольку протоколу UDP-Lite присвоен свой идентификатор протокола IP, не возникает необходимости рассмотрения возможности доставки пакета UDP-Lite в ничего не подозревающий порт UDP.</p><h2 id="p6">6. Вопросы безопасности</h2><p>Вопросы безопасности UDP-Lite связаны с взаимодействием данного протокола с механизмами аутентификации и шифрования. При использовании опции неполного покрытия для контрольных сумм UDP-Lite нечувствительная к ошибкам часть пакета может быть изменена в процессе доставки. Это вступает в противоречие с идеей, лежащей в основе большинства механизмов аутентификации — аутентификация считается успешной, если пакет не изменен в процессе передачи. Пока не будет разработан и развернут механизм аутентификации, способный работать только с чувствительной частью пакета, аутентификация всегда будет приводить к отказу для пакетов UDP-Lite с повреждениями в нечувствительной к ошибкам части.</p><p>Проверка целостности IPsec (Encapsulation Security Protocol, ESP [RFC-2406] или Authentication Header, AH [RFC-2402]) применяется (как минимум) ко всей области данных пакета IP. Повреждение любого бита в защищенной области будет приводить к тому, что уровень IP на приемной стороне будет отбрасывать все поврежденные пакеты UDP-Lite.</p><p>При использовании IPsec с ESP для шифрования данных канал не может идентифицировать транспортный протокол пересылаемых пакетов путем просмотра области данных IP. В таких случаях канал должен обеспечивать стандартную проверку целостности для всего пакета IP. В этом случае протокол UDP-Lite не дает никаких преимуществ.</p><p>Для передачи данных может использоваться шифрование (например, на прикладном или транспортном уровне). В этом случае при повреждении небольшого числа битов пакета механизм дешифровки обычно приводит к распространению ошибки и пакет становится непригодным для использования. Подобное поведение характерно для многих современных механизмов шифрования. Существуют потоковые шифры, которые не приводят к распространению ошибок при дешифровке. Отметим, что отказ от проверки целостности может при некоторых обстоятельствах создавать риск потери конфиденциальности [Bellovin98]. Точность потоковых шифров обусловлена использованием собственных challenge [BB01]. В частности, атакующий может внести предсказуемые изменения в зашифрованный текст даже без его расшифровки.</p><h2 id="p7">7. Согласование с IANA</h2><p>Новый номер протокола IP (1360 был выделен для протокола UDP-Lite. С этим идентификатором связано имя UDPLite. Такое имя обеспечивает совместимость с широким спектром платформ, поскольку на некоторых платформах символ "-" не может быть частью имени протокольного объекта.</p><h2 id="p8">8. Литература</h2><h3 id="p8.1">8.1. Нормативные документы</h3><table itemprop="references"><tr><td>[RFC-768]</td><td>Postel, J., <a href="../768.rfc" title="RFC 768 — Протокол датаграмм клиента (UDP)">«Протокол датаграмм клиента (UDP)», STD 6, RFC 768</a>, Август 1980</td></tr><tr><td>[RFC-791]</td><td>Postel, J., <a href="../791.rfc" title="RFC 791 — Протокол IP (Internet Protocol)">«Протокол IP (Internet Protocol)», STD 5, RFC 791</a>, Сентябрь 1981</td></tr><tr><td>[RFC-793]</td><td>Postel, J., <a href="../793.rfc" title="RFC 793 — Протокол управления передачей (TCP)">«Протокол управления передачей (TCP)», STD 7, RFC 793</a>, Сентябрь 1981</td></tr><tr><td>[RFC-1071]</td><td>Braden, R., Borman, D. и C. Partridge, <a href="../1071.rfc" title="RFC 1071 — Расчет контрольных сумм в Internet">«Расчет контрольных сумм в Internet», RFC 1071</a>, Сентябрь 1988</td></tr><tr><td>[RFC-2119]</td><td>Bradner, S., «Key words for use in RFCs to Indicate Requirement Levels», BCP 14, RFC 2119, Март 1997.</td></tr><tr><td>[RFC-2460]</td><td>Deering, S. и R. Hinden, <a href="../2460.rfc" title="RFC 2460 — Спецификация IPv6">«Спецификация протокола IPv6», RFC 2460</a>, Декабрь 1998.</td></tr></table><h3 id="p8.2">8.2. Дополнительная литература</h3><table itemprop="references"><tr><td>[Bellovin98]</td><td>Bellovin, S.M., «Cryptography and the Internet», in Proceedings of CRYPTO '98, Август 1988.</td></tr><tr><td>[BB01]</td><td>Bellovin, S. и M. Blaze, «Cryptographic Modes of Operation for the Internet», Second NIST Workshop on Modes of Operation, Август 2001.</td></tr><tr><td>[3GPP]</td><td>«Technical Specification Group Services and System Aspects; Quality of Service (QoS) concept and architecture», TS 23.107 V5.9.0, Technical Specification 3rd Generation Partnership Project, Июнь 2003.</td></tr><tr><td>[H.264]</td><td>Hannuksela, M.M., Stockhammer, T., Westerlund, M. и D. Singer, «RTP payload Format for H.264 Video», Internet Draft, Work in Progress, Март 2003.</td></tr><tr><td>[ILBRC]</td><td>S.V. Andersen, et. al., «Internet Low Bit Rate Codec», Work in Progress7, Март 2003.</td></tr><tr><td>[ISO-14496]</td><td>ISO/IEC International Standard 1446 (MPEG-4), «Information Technology Coding of Audio-Visual Objects», Январь 2000.</td></tr><tr><td>[ITU-H.263]</td><td>«Video Coding for Low Bit Rate Communication» ITU-T Recommendation H.263, Январь 1998.</td></tr><tr><td>[ITU-H.264]</td><td>«Draft ITU-T Recommendation and Final Draft International Standard of Joint Video Specification», ITU-T Recommendation H.264, Май 2003.</td></tr><tr><td>[RFC-3819]</td><td>Karn, Ed., P., Bormann, C., Fairhurst, G., Grossman, D., Ludwig, R., Mahdavi, J., Montenegro, G., Touch, J. And L. Wood, «Advice for Internet Subnetwork Designers», BCP 89, RFC 3819, Июль 2004.</td></tr><tr><td>[RFC-3550]</td><td>Schulzrinne, H., Casner, S., Frederick, R. и V. Jacobson, «RTP: A Transport Protocol for Real-Time Applications», RFC 3550, Июль 2003.</td></tr><tr><td>[RFC-2402]</td><td>Kent, S. и R. Atkinson, «IP Authentication Header», RFC 2402, Ноябрь 1998.</td></tr><tr><td>[RFC-2406]</td><td>Kent, S. и R. Atkinson, «IP Encapsulating Security Payload (ESP)», RFC 2406, Ноябрь 1998.</td></tr><tr><td>[RFC-3267]</td><td>Sjoberg, J., Westerlund, M., Lakeaniemi, A. и Q. Xie, «Real-Time Transport Protocol (RTP) Payload Format and File Storage Format for the Adaptive Multi-Rate (AMR) and Adaptive Multi-Rate Wideband (AMR-WB) Audio Codecs», RFC 3267, Июнь 2002.</td></tr><tr><td>[LDP99]</td><td>Larzon, L-A., Degermark, M. и S. Pink, «UDP Lite for Real-Time Multimedia Applications», Proceedings of the IEEE International Conference of Communications (ICC), 1999.</td></tr></table><h2 id="p9">Благодарности</h2><p>Спасибо Ghyslain Pelletier за важные технические и редакторские комментарии. Благодарим также Steven Bellovin, Elisabetta Carrara и Mats Naslund за обзор главы, посвященной безопасности, и Peter Eriksson за просмотр документа с точки зрения языка, значительно улучшивший понимание документа.</p><h2>Адреса авторов</h2><p>Lars-Ake Larzon<br />Department of CS & EE<br />Lulea University of Technology<br />S-971 87 Lulea, Sweden<br />EMail: <bdo dir="rtl">&#101;&#115;&#46;&#117;&#116;&#108;&#46;&#101;&#101;&#115;&#99;&#64;&#110;&#108;&#108;</bdo></p><p>Mikael Degermark<br />Department of Computer Science<br />The University of Arizona<br />P.O. Box 210077<br />Tucson, AZ 85721-0077, USA<br />EMail: <bdo dir="rtl">&#117;&#100;&#101;&#46;&#97;&#110;&#111;&#122;&#105;&#114;&#97;&#46;&#115;&#99;&#64;&#101;&#107;&#99;&#105;&#109;</bdo></p><p>Stephen Pink<br />The University of Arizona<br />P.O. Box 210077<br />Tucson, AZ 85721-0077, USA<br />EMail: <bdo dir="rtl">&#117;&#100;&#101;&#46;&#97;&#110;&#111;&#122;&#105;&#114;&#97;&#46;&#115;&#99;&#64;&#101;&#118;&#101;&#116;&#115;</bdo></p><p>Lars-Erik Jonsson<br />Ericsson AB<br />Box 920<br />S-971 28 Lulea, Sweden<br />EMail: <bdo dir="rtl">&#109;&#111;&#99;&#46;&#110;&#111;&#115;&#115;&#99;&#105;&#114;&#101;&#64;&#110;&#111;&#115;&#115;&#110;&#111;&#106;&#46;&#107;&#105;&#114;&#101;&#45;&#115;&#114;&#97;&#108;</bdo></p><p>Godred Fairhurst<br />Department of Engineering<br />University of Aberdeen<br />Aberdeen, AB24 3UE, UK<br />EMail: <bdo dir="rtl">&#107;&#117;&#46;&#99;&#97;&#46;&#110;&#100;&#98;&#97;&#46;&#103;&#114;&#101;&#64;&#121;&#114;&#114;&#111;&#103;</bdo></p></div></div><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 3828 - Облегченный протокол пользовательских дейтаграмм (UDP-Lite)",disqus_identifier="3828.rfc",disqus_url="http://rfc2.ru/3828.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true, ut:"noindex"}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>