<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="11" /><link rel="next" href="13" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 4422 — Простой уровень аутентификации и защиты (SASL), стр. 12</title><meta name="author" content="Алексей Мельников, Kurt D. Zeilenga" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../4422.rfc">RFC 4422 — Простой уровень аутентификации и защиты (SASL)</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 4422</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Simple Authentication and Security Layer (SASL)</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 2222</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Предложенный стандарт</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2006-06-01">Июнь 2006</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">Алексей Мельников</span>, <span itemprop="author">Kurt D. Zeilenga</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 4422,</span> Страница 12 из 26</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../4422.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="11"><b>&larr;</b></a></li><li><a class="x" href="../4422.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a href="8">8</a></li><li><a href="9">9</a></li><li><a href="10">10</a></li><li><a href="11">11</a></li><li class="this"><span>12</span></li><li><a href="13">13</a></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a accesskey="3" title="На страницу вперед" href="13">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="26">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h2 id="p4">4. Требования к протоколам</h2><p>Для того, чтобы протокол мог предлагать сервис SASL, его спецификация должна содержать следующую информацию:</p><ol><li><p>Имя сервиса, которое может быть выбрано из регистра элементов "service" для связанного с хостом имени сервиса GSSAPI, как описано в параграфе 4.1 документа [RFC2743].</p><p class="note">Отметим, что этот регистр совместно используется всеми механизмами GSSAPI и SASL.</p></li><li><p>Детали всех аспектов согласования механизма, обеспечиваемых протоколом (см. параграф 3.2). Протоколу следует задавать средства, с помощью которых клиент может (как до начала обмена SASL, так и после установки уровня защиты в результате обмена) имена механизмов SASL, которые сервер делает доступными для клиента. Это важно для обеспечения клиенту возможности детектирования атак, направленных на снижение уровня защиты. Такие средства обычно обеспечиваются с помощью функций детектирования расширений протокола и согласования возможностей.</p></li><li><p>Определения сообщений, требуемых при аутентификационном обмене, включая следующие:</p><ul class="lat"><li><p>сообщения для запроса аутентификационного обмена (см. параграф 3.3).</p><p>Такие сообщения должны содержать поле для передачи имени механизма, выбранного клиентом.</p><p>В такие сообщения следует включать необязательное поле для передачи начального отклика. Если сообщение определено с таким полем, спецификация должна описывать как сообщения с пустым начальным откликом отличаются от сообщений без такого отклика. Это поле должно обеспечивать возможность передачи произвольной последовательности октетов (включая последовательности нулевой длины и последовательности с нулевыми октетами).</p></li><li><p>Сообщения для передачи запросов (challenge) сервера и откликов (response) клиента (см. параграф 3.4).</p><p>Каждое из таких сообщений должно обеспечивать возможность передачи произвольных последовательностей октетов (включая последовательности нулевой длины и последовательности с нулевыми октетами).</p></li><li><p>Сообщение для индикации результата аутентификационного обмена (см. параграф 3.6).</p><p>В такие сообщения следует включать необязательное поле для передачи дополнительных данных при успешном завершении обмена. Если для сообщения определено такое поле, спецификация должна описывать способ различить сообщения с пустым полем дополнительной информации от сообщений без такого поля. Поде должно обеспечивать возможность передачи произвольной последовательности октетов (включая последовательности нулевой длины и последовательности с нулевыми октетами).</p></li></ul></li><li><p>Описание синтаксиса и семантики непустых строк идентификации при проверке полномочий (см. параграф 3.4.1).</p><p>Чтобы избавиться от проблем интероперабельности в результате использования разной нормализации, спецификация протокола должна точно описывать как и где (клиент или сервер) готовятся непустые строки идентификации при проверке полномочий, включая любую нормализацию, для операций сравнения и других функций, обеспечивающих корректную работу.</p><p>Рекомендуется включать в спецификацию описание применения существующих форм идентификации при проверке полномочий, а также существующих вариантов представления строк таких, как обычные имена пользователей [RFC4013].</p><p>Когда спецификация не описывает точно как идентификация в SASL связана с идентификацией, используемой другими компонентами протокола (например, в правилах контроля доступа), для протокола может оказаться полезным поддержка для клиентов механизма обнаружения информации (например, представление идентификации, используемой при решении вопроса о предоставлении доступа) об имеющихся способах идентификации для таких целей.</p></li><li><p>Детали всех способов, которые позволяют клиенту и/или серверу прервать аутентификационный обмен (см. параграф 3.5).</p><p>Протоколы, поддерживающие множественную аутентификацию, обычно позволяют клиенту прервать происходящий аутентификационный обмен путем инициирования нового обмена. Протоколы, которые не поддерживают множественную аутентификацию, могут требовать от клиента закрывать соединение и открывать новое для прерывания происходящего аутентификационного обмена.</p><p>Протоколы обычно позволяют серверу прерывать происходящий аутентификационный обмен путем возврата сообщения о неудачной аутентификации.</p></li><li><p>Точного указания момента, с которого начинает использоваться вновь согласованный уровень защиты для обоих направлений (см. параграф 3.7).</p><p>Обычно спецификации требуют начинать использование уровня защиты, начиная с первого октета, передаваемого после результата аутентификации, для сообщений от сервера и первого октета, передаваемого после приема сообщения о результате аутентификации, для клиента.</p></li><li><p>Если протокол поддерживает другие службы обеспечения уровня защиты (такие, как TLS [RFC4346], спецификация должна описывать, как эти уровни применяются к данным протокола.</p><p>Например, когда протокол поддерживает уровни защиты TLS и SASL, спецификация может указать любой из перечисленных ниже вариантов:</p><ul class="lat"><li><p>уровень защиты SASL всегда применяется первым для передаваемых данных и последним для принимаемых;</p></li><li><p>уровень защиты SASL всегда применяется последним для передаваемых данных и первым для принимаемых;</p></li><li><p>уровни защиты применяются в порядке их установки;</p></li><li><p>уровни защиты применяются в порядке, обратном порядку их установки;</p></li><li><p>оба уровня TLS и SASL не могут быть установлены.</p></li></ul></li><li><p>Индикация поддержки множественной аутентификации (см. параграф 3.8). Если такая аутентификация поддерживается, должно быть детально описано поведение при отказе от аутентификации SASL для тех случаев, когда предыдущая аутентификация была завершена успешно.</p></li></ol><p>В спецификации протокола следует избегать требований к реализации, препятствующих замене применимых механизмов. В общем случае спецификации протокола следует быть нейтральной по отношению к механизмам. Однако из этого правила существует множество исключений, в том числе перечисленные ниже:</p><ul class="dot"><li>детализация того, как в в протоколе происходит управление свидетельствами (которые связаны с механизмами);</li><li>детализация того, как аутентификационная идентификация (определяется механизмом) и идентификация при проверке полномочий (определяется протоколом) связаны одна с другой;</li><li>детализация применимости механизмов для данного протокола.</li></ul></div></div><noindex><div class="pages"><p class="r"> <b>Страница 12 из 26</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../4422.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="11"><b>&larr;</b></a></li><li><a class="x" href="../4422.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a href="8">8</a></li><li><a href="9">9</a></li><li><a href="10">10</a></li><li><a href="11">11</a></li><li class="this"><span>12</span></li><li><a href="13">13</a></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a class="x" href="17">17</a></li><li><a class="x" href="18">18</a></li><li><a class="x" href="19">19</a></li><li><a class="x" href="20">20</a></li><li><a class="x" href="21">21</a></li><li><a class="x" href="22">22</a></li><li><a class="x" href="23">23</a></li><li><a class="x" href="24">24</a></li><li><a class="x" href="25">25</a></li><li><a class="x" href="26">26</a></li><li><a title="На страницу вперед" href="13">&rarr;</a></li><li><a title="Последняя страница" href="26">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 4422 - Простой уровень аутентификации и защиты (SASL)",disqus_identifier="4422.rfc",disqus_url="http://rfc2.ru/4422.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>