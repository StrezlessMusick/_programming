найти все циклы, и заменить их каждый на 1 узел

множество известных пусто
найти все пакеты, которые ни откого, кроме себя не зависят
 - это уровень 0
for int i=1; пока существуют неотсортированные узлы; i++
	добавить пакеты уровня i-1 в множество известных
	найти все пакеты, которые зависят только от пакетов из множества
	 - это уровень i

при добавлении каждого пакета на уровень
	проверяем каждое ребро (соединяющее несоседние узлы): существует ли альтернативный путь по черным ребрам
	и если существует - окрашиваем ребро в желтый
	

cat dep1.txt | awk 'NF <=3{ print $2, $3 }NF>3 { for(i=3; i<=NF; i++){ print $2, $i }  }' > dep.tgf
cat dep1.txt | awk 'NF <=2{ print $0 }NF>2 { for(i=2; i<=NF; i++){ print $1, $i }  }' > dep.tgf^C
cygcheck -cd | awk '{ print $1 }' | while read n; do cygcheck-dep -cr $n; done | tee dependencies.txt
