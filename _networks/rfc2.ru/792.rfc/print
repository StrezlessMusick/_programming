<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><link rel="canonical" href="../792.rfc" /><meta name="Robots" content="noindex, nofollow" /><title>Перевод RFC 792 — Протокол ICMP</title><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../792.rfc">RFC 792 — Протокол ICMP</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 792</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">Internet Control Message Protocol</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 777</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Стандарт Интернета</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="1981-09-06">Сентябрь 1981</time></dd><dd><div class="icon i5"></div> Автор: <span itemprop="author">J. Postel</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Николай Малых</span></dd></dl><div id="text" itemprop="articleBody"><p>Протокол IP (Internet Protocol) [<a href="../791.rfc" title="RFC 791 - Протокол IP (Internet Protocol)">RFC791</a>] используется для передачи дейтаграмм между хостами в системе связанных между собой сетей, называемой Catenet [2]. Устройства, соединяющие сети между собой, называются шлюзами (Gateway). Маршрутизаторы (шлюзы) взаимодействуют между собой с помощью протокола GGP (Gateway to Gateway Protocol) [3,4]. Иногда шлюзам или хостам-получателям требуется связаться с хостом-отправителем (например, для передачи сообщения об ошибке при обработке дейтаграммы). Для решения таких задач предназначен описываемый этой спецификацией протокол ICMP (Internet Control Message Protocol — протокол управляющих сообщений Internet). ICMP использует базовый сервис протокола IP, как это делают протоколы вышележащих уровней, однако протокол ICMP на самом деле является составной часть IP и должен быть реализован в каждом модуле IP.</p><p>Сообщения ICMP передаются в разных ситуациях (например, когда дейтаграмма не может быть доставлена адресату, у маршрутизатора не хватает буферов для пересылки дейтаграммы или маршрутизатор может рекомендовать хосту передачу трафика по более короткому пути).</p><p>Протокол IP не предназначен для обеспечения гарантированной доставки. Задачей протокола ICMP является передача информации о возникновении проблем в коммуникационной среде, а не повышение уровня надежности протокола IP. Гарантий доставки дейтаграмм по-прежнему не предоставляется. Часть дейтаграмм может не попасть к адресату без уведомления отправителя о потере дейтаграмм. Протоколы вышележащих уровней, использующие сервис IP, должны реализовать собственные средства гарантированной доставки, если это требуется для работы.</p><p>Сообщения ICMP обычно содержат информацию об ошибках при обработке дейтаграмм. Для предотвращения бесконечных циклов обмена сообщениями не должно передаваться сообщений ICMP о других сообщениях ICMP. При возникновении ошибок в процессе обработки фрагментированных дейтаграмм сообщения ICMP должны передаваться только для начального (нулевого) фрагмента дейтаграммы (нулевым фрагментом считается тот, для которого значение fragment offset равно 0).</p><h2>Формат сообщений</h2><p>Сообщения ICMP передаются с использованием базовых заголовков IP. Первый октет данных дейтаграммы указывает тип ICMP — значение этого поля определяет формат остальной части дейтаграммы. Все поля, указанные как неиспользуемые (unused), зарезервированы для использования в будущем и должны иметь нулевые значения. Получателям не следует использовать эти поля (за исключением их учета при вычислении контрольной суммы). Если при описании конкретного формата явно не указано иное, поля заголовков IP имеют следующие значения:</p><ul><li class="b">Version — версия</li><li class="lia">4</li><li class="b">IHL</li><li class="lia">Размер заголовка Internet в 32-битовых словах.</li><li class="b">Type of Service — тип обслуживания</li><li class="lia">0</li><li class="b">Total Length — общий размер</li><li class="lia">Размер заголовка и поля данных в октетах.</li><li class="b">Identification, Flags, Fragment Offset — идентификация, флаги, смещение фрагмента</li><li class="lia">Используются при фрагментации, см. [<a href="../791.rfc" title="RFC 791 - Протокол IP (Internet Protocol)">RFC791</a>].</li><li class="b">Time to Live — время жизни</li><li class="lia">Время жизни дейтаграммы в секундах. Значение этого поля уменьшается по крайней мере на 1 в каждой точке обработки дейтаграммы (маршрутизаторы на пути доставки).</li><li class="b">Protocol — протокол</li><li class="lia">ICMP = 1</li><li class="b">Header Checksum — контрольная сумма заголовка</li><li class="lia">16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы всех 16-битовых слов заголовка. При расчете контрольной суммы значение самого поля принимается равным нулю (не учитывается). Алгоритм расчета контрольной суммы может быть изменен в будущем.</li><li class="b">Source Address — адрес отправителя</li><li class="lia">Адрес шлюза или хоста, создавшего сообщение ICMP. Если явно не задано иное, может использоваться любой из адресов шлюза.</li><li class="b">Destination Address — адрес получателя</li><li class="lia">Адрес хоста или шлюза, которому должно быть передано сообщение.</li></ul><h3>Сообщение Destination Unreachable</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             unused                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Заголовок IP и 64 бита исходной дейтаграммы          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Destination Address</li><li class="lia">Адрес отправителя исходной дейтаграммы.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">3</li><li class="b">Code</li><li class="lia">0 — сеть недоступна;</li><li class="lia">1 — хост недоступен;</li><li class="lia">2 — протокол недоступен;</li><li class="lia">3 — порт недоступен;</li><li class="lia">4 — требуется фрагментация, но установлен флаг DF (не фрагментировать);</li><li class="lia">5 — некорректно задан маршрут source route.</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Заголовок IP и 64 бита исходной дейтаграммы</li><li class="lia">Эта информация используется хостом, чтобы связать сообщение с подходящим процессом. Если протокол вышележащего уровня использует порты, можно полагать, что номер порта присутствует в первых 64 байтах данных исходной дейтаграммы.</li></ul><h4>Описание</h4><p>Если (в соответствии с данными в таблице маршрутизации шлюза) сеть, указанная в поле адреса получателя дейтаграммы, недоступна (например, дистанция до этой сети бесконечна), шлюз может передавать сообщение destination unreachable хосту, отправившему дейтаграмму. Дополнительно к этому в некоторых сетях шлюзы могут определять недоступность хоста. В этом случае шлюзы могут передавать сообщение destination unreachable.</p><p>Если IP-модуль хоста-получателя не может доставить дейтаграмму, поскольку этот протокол или порт не активизирован, хост-получатель может передать отправителю дейтаграммы сообщение destination unreachable.</p><p>Когда дейтаграмма должна быть фрагментирована для пересылки шлюзу, но в ней установлен флаг DF (не фрагментировать), шлюз должен отбросить дейтаграмму и может передать ее отправителю сообщение destination unreachable.</p><p>Коды 0, 1, 4, 5 могут приходить от шлюзов, коды 2 и 3 — от хостов.</p><h3>Сообщение Time Exceeded</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             unused                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Заголовок IP и 64 бита исходной дейтаграммы          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Destination Address</li><li class="lia">Адрес отправителя исходной дейтаграммы.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">11</li><li class="b">Code</li><li class="lia">0 — время жизни истекло в процессе доставки;</li><li class="lia">1 — время жизни истекло в процессе сборки фрагментов.</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Заголовок IP и 64 бита исходной дейтаграммы</li><li class="lia">Эта информация используется хостом, чтобы связать сообщение с подходящим процессом. Если протокол вышележащего уровня использует порты, можно полагать, что номер порта присутствует в первых 64 байтах данных исходной дейтаграммы.</li></ul><h4>Описание</h4><p>Если обрабатывающий дейтаграмму шлюз видит, что поле TTL содержит нулевое значение, дейтаграмма должна быть отброшена. Шлюз может уведомить отправителя дейтаграммы с помощью сообщения time exceeded.</p><p>Если хост, собирающий дейтаграмму из фрагментов, не может завершить сборку в течение заданного времени по причине нехватки фрагментов, дейтаграмма должна быть отброшена. Хост может передать отправителю дейтаграммы сообщение time exceeded.</p><p>При отсутствии нулевого фрагмента сообщение time exceeded передавать не нужно.</p><p>Код 0 может быть получен от шлюза, код 1 — от хоста.</p><h3>Сообщение Parameter Problem</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    Pointer    |                   unused                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Заголовок IP и 64 бита исходной дейтаграммы          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Destination Address</li><li class="lia">Адрес отправителя исходной дейтаграммы.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">12</li><li class="b">Code</li><li class="lia">0 — поле pointer pointerpointer содержит указатель на ошибку.</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Pointer</li><li class="lia">Если code = 0, данное поле указывает октет, в котором обнаружена ошибка.</li><li class="b">Заголовок IP и 64 бита исходной дейтаграммы</li><li class="lia">Эта информация используется хостом, чтобы связать сообщение с подходящим процессом. Если протокол вышележащего уровня использует порты, можно полагать, что номер порта присутствует в первых 64 байтах данных исходной дейтаграммы.</li></ul><h4>Описание</h4><p>Если шлюз или хост, обрабатывающий дейтаграмму, встречает в заголовке параметры, которые не могут быть обработаны, такая дейтаграмма отбрасывается. Одной из причин таких ошибок являются некорректные аргументы в полях опций. Шлюз или хост может уведомить отправителя дейтаграммы о возникновении проблем с помощью сообщения parameter problem. Такие сообщения передаются только в случаях отбрасывания проблемной дейтаграммы.</p><p>Поле pointer указывает октет в заголовке исходной дейтаграммы, в котором была обнаружена ошибка (она может находиться в поле опций). Например, значение 1 показывает ошибку в поле Type of Service, а 20 (если в заголовке присутствуют опции) говорит о некорректности кода первой опции.</p><p>Код 0 может быть получен от шлюза или хоста.</p><h3>Сообщение Source Quench</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                             unused                            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Заголовок IP и 64 бита исходной дейтаграммы          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Destination Addres</li><li class="lia">Адрес отправителя исходной дейтаграммы.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">4</li><li class="b">Code</li><li class="lia">0</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Заголовок IP и 64 бита исходной дейтаграммы</li><li class="lia">Эта информация используется хостом, чтобы связать сообщение с подходящим процессом. Если протокол вышележащего уровня использует порты, можно полагать, что номер порта присутствует в первых 64 байтах данных исходной дейтаграммы.</li></ul><h4>Описание</h4><p>Шлюз может отбрасывать дейтаграммы, если у него недостаточно буферного пространства для размещения дейтаграммы в очереди на передачу в следующую сеть на пути к получателю. Если шлюз отбрасывает дейтаграмму, он может передать ее отправителю сообщение source quench. Хост-получатель также может передавать сообщения source quench, если дейтаграммы прибывают слишком быстро и хост не успевает их обрабатывать. Сообщение source quench является запросом хосту-отправителю на снижение скорости передачи дейтаграмм. Шлюз может передавать сообщение source quench для каждой отбрасываемой дейтаграммы. При получении отклика source quench хосту-отправителю следует снижать скорость передачи дейтаграмм в адрес данного получателя до тех пор, пока не перестанут приходить сообщения source quench. Впоследствии хост-отправитель может постепенно повышать скорость передачи дейтаграмм по этому адресу, пока снова не будет получено сообщение source quench.</p><p>Шлюз или хост может передать сообщение source quench, когда он может предсказать нехватку ресурсов, не дожидаясь критической ситуации. Это означает, что дейтаграмма, вызвавшая передачу сообщения source quench, вполне может быть доставлена.</p><p>Код 0 может быть получен от шлюзов и хостов.</p><h3>Сообщение Redirect</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|                 Gateway Internet Address                      |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          Заголовок IP и 64 бита исходной дейтаграммы          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Destination Address</li><li class="lia">Адрес отправителя исходной дейтаграммы.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">5</li><li class="b">Code</li><li class="lia">0 — перенаправление дейтаграмм для сети;</li><li class="lia">1 — перенаправление дейтаграмм для хоста;</li><li class="lia">2 — перенаправление дейтаграмм для типа обслуживания и сети;</li><li class="lia">3 — перенаправление дейтаграмм для типа обслуживания и хоста.</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Gateway Internet Address</li><li class="lia">Адрес шлюза, которому следует направлять трафик, указанный в поле адреса получателя исходной дейтаграммы.</li><li class="b">Заголовок IP и 64 бита исходной дейтаграммы</li><li class="lia">Эта информация используется хостом, чтобы связать сообщение с подходящим процессом. Если протокол вышележащего уровня использует порты, можно полагать, что номер порта присутствует в первых 64 байтах данных исходной дейтаграммы.</li></ul><h4>Описание</h4><p>Шлюзы передают сообщения redirect в нескольких случаях. Предположим, что шлюз G1 принимает дейтаграмму от хоста, находящегося в подключенной к шлюзу сети. G1 просматривает свою таблицу маршрутизации и определяет адрес следующего шлюза G2 на пути дейтаграммы к сети получателя, X. Если шлюз G2 и хост, указанный в поле отправителя дейтаграммы, находятся в одной сети, хосту передается сообщение redirect. Такое сообщение говорит хосту что трафик для сети X следует передавать шлюзу G2, поскольку такой путь будет короче. Исходную дейтаграмму получивший ее шлюз пересылает в направлении адресата.</p><p>Для дейтаграмм IP с опцией source route и адресом шлюза в поле destination address сообщения redirect не передаются даже в тех случаях, когда к конечному получателю существует маршрут, который лучше указанного в source route.</p><p>Коды 0, 1, 2, 3 могут приниматься от шлюзов.</p><h3>Сообщения Echo и Reply</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |     Code      |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Identifier          |        Sequence Number        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Данные ...
+-+-+-+-+-</pre><h4>Поля IP</h4><ul><li class="b">Address</li><li class="lia">Адрес отправителя сообщения echo будет адресом получателя в сообщении echo reply. Для формирования сообщений echo reply поля адресов отправителя и получателя просто меняются местами, значение кода заменяется на 0 и заново вычисляется контрольная сумма.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">8 — для сообщений echo</li><li class="lia">0 — для сообщений echo reply</li><li class="b">Code</li><li class="lia">0</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Если общий размер имеет нечетное значение, полученные данные при расчете контрольной суммы дополняются нулевым октетом. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Идентификатор</li><li class="lia">Если code = 0, идентификатор для обеспечения соответствия запросов и откликов может быть нулевым.</li><li class="b">Порядковый номер</li><li class="lia">Если code = 0, порядковый номер для обеспечения соответствия запросов и откликов может быть нулевым.</li></ul><h4>Описание</h4><p>Данные, принятые из сообщения echo, должны возвращаться в сообщении echo reply.</p><p>Значения идентификатора и порядкового номера могут использоваться отправителем сообщений echo в целях обеспечения соответствия между запросами и откликами. Например, значение идентификатора может использоваться по аналогии с портами TCP и UDP для обозначения сеансов, а порядковый номер может увеличиваться на единицу в каждом передаваемом запросе echo (отвечающая сторона сохраняет порядковые номера в откликах).</p><p>Код 0 может приходить от шлюзов и хостов.</p><h3>Сообщения Timestamp и Timestamp Reply</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |      Code     |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Identifier          |        Sequence Number        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Originate Timestamp                                       |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Receive Timestamp                                         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Transmit Timestamp                                        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Address</li><li class="lia">Адрес отправителя сообщения timestamp будет адресом получателя в сообщении timestamp reply. Для формирования сообщений timestamp reply поля адресов отправителя и получателя просто меняются местами, значение типа заменяется на 14 и заново вычисляется контрольная сумма.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">13 — для сообщений timestamp</li><li class="lia">14 — для сообщений timestamp reply</li><li class="b">Code</li><li class="lia">0</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.</li><li class="b">Идентификатор</li><li class="lia">Если code code = 0, идентификатор для обеспечения соответствия меток и откликов может быть нулевым.</li><li class="b">Порядковый номер</li><li class="lia">Если code code = 0, порядковый номер для обеспечения соответствия меток и откликов может быть нулевым.</li></ul><h4>Описание</h4><p>Принятые данные (временная метка) из сообщения timestamp возвращаются в отклике вместе с дополнительной временной меткой. Метка представляет собой 32-битовое значение числа миллисекунд после полуночи по времени UT. Один из вариантов использования временных меток описан в работе Mills [RFC778].</p><p>Поле Originate Timestamp содержит время отправителя на момент отправки дейтаграммы, Receive Timestamp — время получателя в момент приема дейтаграммы, а Transmit Timestamp — время отправителя отклика перед отправкой дейтаграммы.</p><p>Если хост не может указать время в миллисекундах после полуночи по UT, он может ввести произвольное значение, установив старший бит временной метки для индикации нестандартного значения.</p><p>Значения идентификатора и порядкового номера могут использоваться отправителем сообщений timestamp в целях обеспечения соответствия между запросами и откликами. Например, значение идентификатора может использоваться по аналогии с портами TCP и UDP для обозначения сеансов, а порядковый номер может увеличиваться на единицу в каждом передаваемом запросе timestamp (отвечающая сторона сохраняет порядковые номера в откликах).</p><p>Код 0 может приходить от шлюзов и хостов.</p><h3>Сообщения Information Request и Information Reply</h3><pre> 0                   1                   2                   3
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|     Type      |      Code     |          Checksum             |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           Identifier          |        Sequence Number        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+</pre><h4>Поля IP</h4><ul><li class="b">Address</li><li class="lia">Адрес отправителя сообщения information request будет адресом получателя в сообщении information reply. Для формирования сообщений information reply поля адресов отправителя и получателя просто меняются местами, значение кода заменяется на 16 и заново вычисляется контрольная сумма.</li></ul><h4>Поля ICMP</h4><ul><li class="b">Type</li><li class="lia">15 — для сообщений information request</li><li class="lia">16 — для сообщений information reply</li><li class="b">Code</li><li class="lia">0</li><li class="b">Checksum</li><li class="lia">Контрольная сумма представляет собой 16-битовое поразрядное дополнение до единицы суммы поразрядных дополнений до единицы сообщения ICMP, начиная с поля ICMP Type. При расчете контрольной суммы значение поля checksum принимается нулевым. Алгоритм вычисления контрольной суммы может быть изменен в будущем.
Идентификатор</li><li class="b">Если code = 0, идентификатор для обеспечения соответствия запросов и откликов может быть нулевым.</li><li class="lia">Порядковый номер</li><li class="b">Если code = 0, порядковый номер для обеспечения соответствия запросов и откликов может быть нулевым.</li></ul><h4>Описание</h4><p>Эти сообщения могут передаваться с установленным в заголовке IP адресом отправителя и нулевым значением адреса получателя (такой вариант адресации означает "данная сеть"). Отвечающему модулю IP следует передавать отклик с заполненными полями адресов. Такие сообщения могут использоваться хостами для определения номера своей сети.</p><p>Значения идентификатора и порядкового номера могут использоваться отправителем в целях обеспечения соответствия между запросами и откликами. Например, значение идентификатора может использоваться по аналогии с портами TCP и UDP для обозначения сеансов, а порядковый номер может увеличиваться на единицу в каждом передаваемом запросе (отвечающая сторона сохраняет порядковые номера в откликах).</p><p>Код 0 может приходить от шлюзов и хостов.</p><h2>Типы сообщений</h2><table class="nobrd"><tr><td>0</td><td>Echo Reply</td></tr><tr><td>3</td><td>Destination Unreachable</td></tr><tr><td>4</td><td>Source Quench</td></tr><tr><td>5</td><td>Redirect</td></tr><tr><td>8</td><td>Echo</td></tr><tr><td>11</td><td>Time Exceeded</td></tr><tr><td>12</td><td>Parameter Problem</td></tr><tr><td>13</td><td>Timestamp</td></tr><tr><td>14</td><td>Timestamp Reply</td></tr><tr><td>15</td><td>Information Request</td></tr><tr><td>16</td><td>Information Reply</td></tr></table><h2>Литература</h2><table itemprop="references"><tr><td>[RFC791]</td><td>J. Postel, <a href="../791.rfc" title="RFC 791 - Протокол IP (Internet Protocol)">«Протокол IP (Internet Protocol)», RFC 791</a>, Сентябрь 1981.</td></tr><tr><td>[2]</td><td>Cerf, V., «The Catenet Model for Internetworking», IEN 48, Information Processing Techniques Office, Defense Advanced Research Projects Agency, Июль 1978.</td></tr><tr><td>[3]</td><td>Strazisar, V., «Gateway Routing: An Implementation Specification», IEN 30, Bolt Beranek and Newman, Апрель 1979.</td></tr><tr><td>[4]</td><td>Strazisar, V., «How to Build a Gateway», IEN 109, Bolt Beranek and Newman, Август 1979.</td></tr><tr><td>[RFC778]</td><td>Mills, D., «DCNET Internet Clock Service», RFC 778, COMSAT Laboratories, Апрель 1981.</td></tr></table></div></div><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 792 - Протокол ICMP",disqus_identifier="792.rfc",disqus_url="http://rfc2.ru/792.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true, ut:"noindex"}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559?ut=noindex" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>