<!DOCTYPE html><html><head><meta http-equiv="content-type" content="text/html; charset=utf-8" /><link rel="stylesheet" href="../tpl/style.css@f4e332aa" type="text/css" /><link rel="prev" href="19" /><link rel="next" href="21" /><link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css' /><style type="text/css">h1,h2,h3,h4{font-family:'Open Sans',sans-serif}</style><title>Перевод RFC 4291 — Архитектура шестой версии протокола межсетевого обмена в Internet (IPv6-адресация), стр. 20</title><meta name="author" content="R. Hinden, S. Deering" /><link rel="alternate" type="application/rss+xml" title="RFC2.ru - Русские Переводы RFC" href="../rss.xml"></head><body><div id="content"><div id="nav"><div class="icon i0"></div> <a href="../index.html" accesskey="`">На Главную</a></div><div id="search" class="ya-site-form ya-site-form_inited_no"><form action="http://yandex.ru/sitesearch" method="get" target="_blank"><input type="hidden" name="searchid" value="2154295"/><input type="hidden" name="l10n" value="ru"/><input type="hidden" name="reqenc" value=""/><input type="hidden" name="submit" value="Найти"/><input type="search" value="" name="text" placeholder="Поиск по RFC2.ru" /></form></div><div itemscope itemtype="http://schema.org/ScholarlyArticle"><meta itemprop="inLanguage" content="ru" /><meta itemprop="editor" content="ru" /><div id="header"><h1><a itemprop="headline" href="../4291.rfc">RFC 4291 — Архитектура шестой версии протокола межсетевого обмена в Internet (IPv6-адресация)</a></h1></div><dl class="mute"><dt></dt><dd><div class="icon i1"></div> RFC: 4291</dd><dd><div class="icon i3"></div> Оригинал: <a href="original" target="_blank" rel="nofollow"><span itemprop="alternativeHeadline">IP Version 6 Addressing Architecture</span></a></dd><dd><div class="icon i7"></div> Предыдущие версии: RFC 1884, RFC 2373, RFC 3513</dd><dd><div class="icon i2"></div> Категория: <span itemprop="articleSection">Проект стандарта</span></dd><dd><div class="icon i4"></div> Дата публикации: <time itemprop="datePublished" datetime="2006-02-01">Февраль 2006</time></dd><dd><div class="icon i5"></div> Авторы: <span itemprop="author">R. Hinden</span>, <span itemprop="author">S. Deering</span></dd><dd><div class="icon i6"></div> Перевод: <span itemprop="editor">Мельников Дмитрий Анатольевич</span></dd></dl><div class="pages"><p class="r"> <h2 class="pt"><span class="z">RFC 4291,</span> Страница 20 из 21</h2></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a accesskey="1" title="Первая страница" href="../4291.rfc" class="arr">&lArr;</a></li><li><a accesskey="2" title="На страницу назад" href="19"><b>&larr;</b></a></li><li><a class="x" href="../4291.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a href="13">13</a></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a href="17">17</a></li><li><a href="18">18</a></li><li><a href="19">19</a></li><li class="this"><span>20</span></li><li><a href="21">21</a></li><li><a accesskey="3" title="На страницу вперед" href="21">&rarr;</a></li><li><a accesskey="4" title="Последняя страница" href="21">&rArr;</a></li></ul></div><div id="text" itemprop="articleBody"><h2 id="p.appendix.a">Приложение A: Creating Modified EUI-64 Format Interface Identifiers</h2><p>Depending on the characteristics of a specific link or node, there are a number of approaches for creating Modified EUI-64 format interface identifiers. This appendix describes some of these approaches.</p><h4>Links or Nodes with IEEE EUI-64 Identifiers</h4><p>The only change needed to transform an IEEE EUI-64 identifier to an interface identifier is to invert the <code>u</code> (universal/local) bit. An example is a globally unique IEEE EUI-64 identifier of the form:</p><pre>
|0              1|1              3|3              4|4              6|
|0              5|6              1|2              7|8              3|
+----------------+----------------+----------------+----------------+
|cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|
+----------------+----------------+----------------+----------------+</pre><p>where <code>c</code> is the bits of the assigned company_id, <code>0</code> is the value of the universal/local bit to indicate universal scope, <code>g</code> is individual/group bit, and <code>m</code> is the bits of the manufacturer-selected extension identifier. The IPv6 interface identifier would be of the form:</p><pre>|0              1|1              3|3              4|4              6|
|0              5|6              1|2              7|8              3|
+----------------+----------------+----------------+----------------+
|cccccc1gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|mmmmmmmmmmmmmmmm|
+----------------+----------------+----------------+----------------+</pre><p>The only change is inverting the value of the universal/local bit.</p><h4>Links or Nodes with IEEE 802 48-bit MACs</h4><p>[EUI64] defines a method to create an IEEE EUI-64 identifier from an IEEE 48-bit MAC identifier. This is to insert two octets, with hexadecimal values of 0xFF and 0xFE (see the Note at the end of appendix), in the middle of the 48-bit MAC (between the company_id and vendor-supplied id). An example is the 48-bit IEEE MAC with Global scope:</p><pre>|0              1|1              3|3              4|
|0              5|6              1|2              7|
+----------------+----------------+----------------+
|cccccc0gcccccccc|ccccccccmmmmmmmm|mmmmmmmmmmmmmmmm|
+----------------+----------------+----------------+</pre><p>where <code>c</code> is the bits of the assigned company_id, <code>0</code> is the value of the universal/local bit to indicate Global scope, <code>g</code> is individual/group bit, and <code>m</code> is the bits of the manufacturer-selected extension identifier. The interface identifier would be of the form:</p><pre>|0              1|1              3|3              4|4              6|
|0              5|6              1|2              7|8              3|
+----------------+----------------+----------------+----------------+
|cccccc1gcccccccc|cccccccc11111111|11111110mmmmmmmm|mmmmmmmmmmmmmmmm|
+----------------+----------------+----------------+----------------+</pre><p>When IEEE 802 48-bit MAC addresses are available (on an interface or a node), an implementation may use them to create interface identifiers due to their availability and uniqueness properties.</p><h4>Links with Other Kinds of Identifiers</h4><p>There are a number of types of links that have link-layer interface identifiers other than IEEE EUI-64 or IEEE 802 48-bit MACs. Examples include LocalTalk and Arcnet. The method to create a Modified EUI-64 format identifier is to take the link identifier (e.g., the LocalTalk 8-bit node identifier) and zero fill it to the left. For example, a LocalTalk 8-bit node identifier of hexadecimal value 0x4F results in the following interface identifier:</p><pre>|0              1|1              3|3              4|4              6|
|0              5|6              1|2              7|8              3|
+----------------+----------------+----------------+----------------+
|0000000000000000|0000000000000000|0000000000000000|0000000001001111|
+----------------+----------------+----------------+----------------+</pre><p>Note that this results in the universal/local bit set to <code>0</code> to indicate local scope.</p><h4>Links without Identifiers</h4><p>There are a number of links that do not have any type of built-in identifier. The most common of these are serial links and configured tunnels. Interface identifiers that are unique within a subnet prefix must be chosen.</p><p>When no built-in identifier is available on a link, the preferred approach is to use a universal interface identifier from another interface or one that is assigned to the node itself. When using this approach, no other interface connecting the same node to the same subnet prefix may use the same identifier.</p><p>If there is no universal interface identifier available for use on the link, the implementation needs to create a local-scope interface identifier. The only requirement is that it be unique within a subnet prefix. There are many possible approaches to select a subnet-prefix-unique interface identifier. These include the following:</p><ul><li>Manual Configuration</li><li>Node Serial Number</li><li>Other Node-Specific Token</li></ul><p>The subnet-prefix-unique interface identifier should be generated in a manner such that it does not change after a reboot of a node or if interfaces are added or deleted from the node.</p><p>The selection of the appropriate algorithm is link and implementation dependent. The details on forming interface identifiers are defined in the appropriate «IPv6 over &lt;link&gt;» specification. It is strongly recommended that a collision detection algorithm be implemented as part of any automatic algorithm.</p><div class="note"><p>Note: [EUI-64] actually defines 0xFF and 0xFF as the bits to be inserted to create an IEEE EUI-64 identifier from an IEEE MAC-48 identifier. The 0xFF and 0xFE values are used when starting with an IEEE EUI-48 identifier. The incorrect value was used in earlier versions of the specification due to a misunderstanding about the differences between IEEE MAC-48 and EUI-48 identifiers.</p><p>This document purposely continues the use of 0xFF and 0xFE because it meets the requirements for IPv6 interface identifiers (i.e., that they must be unique on the link), IEEE EUI-48 and MAC-48 identifiers are syntactically equivalent, and that it doesn't cause any problems in practice.</p></div></div></div><noindex><div class="pages"><p class="r"> <b>Страница 20 из 21</b></p><ul><li><noindex><a href="print" rel="nofollow">Одной Страницей</a></noindex></li><li><a title="Первая страница" href="../4291.rfc" class="arr">&lArr;</a></li><li><a title="На страницу назад" href="19"><b>&larr;</b></a></li><li><a class="x" href="../4291.rfc">1</a></li><li><a class="x" href="2">2</a></li><li><a class="x" href="3">3</a></li><li><a class="x" href="4">4</a></li><li><a class="x" href="5">5</a></li><li><a class="x" href="6">6</a></li><li><a class="x" href="7">7</a></li><li><a class="x" href="8">8</a></li><li><a class="x" href="9">9</a></li><li><a class="x" href="10">10</a></li><li><a class="x" href="11">11</a></li><li><a class="x" href="12">12</a></li><li><a href="13">13</a></li><li><a href="14">14</a></li><li><a href="15">15</a></li><li><a href="16">16</a></li><li><a href="17">17</a></li><li><a href="18">18</a></li><li><a href="19">19</a></li><li class="this"><span>20</span></li><li><a href="21">21</a></li><li><a title="На страницу вперед" href="21">&rarr;</a></li><li><a title="Последняя страница" href="21">&rArr;</a></li></ul></div></noindex><div id="disqus_thread"></div><script type="text/javascript">var disqus_shortname="rfc2",disqus_title="RFC 4291 - Архитектура шестой версии протокола межсетевого обмена в Internet (IPv6-адресация)",disqus_identifier="4291.rfc",disqus_url="http://rfc2.ru/4291.rfc";(function(){var dsq=document.createElement("script");dsq.type="text/javascript";dsq.async=true;dsq.src = "//"+disqus_shortname+".disqus.com/embed.js";(document.getElementsByTagName("head")[0]||document.getElementsByTagName("body")[0]).appendChild(dsq);})();</script><div class="bubble">2007 - 2014 © <a href="../index.html" title="Русские переводы RFC">Русские переводы RFC</a>, IETF, ISOC.</div></div><div id="bottom" style="position:static !important;bottom:auto !important"><div class="bubble"><ul><li><!--723572853672--></li></ul></div></div><!-- Yandex.Metrika counter --><script type="text/javascript">(function (d, w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter4680559 = new Ya.Metrika({id:4680559, webvisor:true, clickmap:true, accurateTrackBounce:true, trackHash:true}); } catch(e) { } }); var n = d.getElementsByTagName("script")[0], s = d.createElement("script"), f = function () { n.parentNode.insertBefore(s, n); }; s.type = "text/javascript"; s.async = true; s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js"; if (w.opera == "[object Opera]") { d.addEventListener("DOMContentLoaded", f, false); } else { f(); } })(document, window, "yandex_metrika_callbacks");</script><noscript><div><img src="http://mc.yandex.ru/watch/4680559" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>