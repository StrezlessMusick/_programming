<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html>

<head>
   <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
   <title>Mic-1 MMV Simulator - Examples</title>
   <link rel="stylesheet" type="text/css" href="../style.css">
   <script src="../popup.js" type="text/javascript" language="Javascript"></script>
   <style type="text/css">
<!--
.style1 {font-weight: bold}
-->
   </style>
</head>

<body marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" rightmargin="0" bottommargin="0">

<table width="100%" height="100%" border="0" cellpadding="5" cellspacing="0">
   <tr align="left" valign="top"> 
    <td width="160" class="nav">
<!--NavTable Start-->
<table width="150" border="0" cellpadding="1" cellspacing="1">
  <tr valign="middle"> 
    <td colspan="2"><span class="navtitle">Software</span><hr class="nav"></td>
  </tr>
  <tr valign="middle"> 
    <td colspan="2" class="sup-nav" width="140"><a href="index.htm" class="nav">Mic-1 MMV Software</a></td>
  </tr>
  <tr valign="middle"> 
    <td align="center" width="10">&#160;</td>
    <td class="sup-nav" width="140"><a href="Copying.htm" class="nav">I. Copying to Your Hard Disk</a></td>
  </tr>
  <tr valign="middle"> 
    <td align="center" width="10">&#160;</td>
    <td class="sup-nav" width="140"><a href="Install.htm" class="nav">II. Installation</a></td>
  </tr>
  <tr valign="middle"> 
    <td align="center" width="10">&#160;</td>
    <td class="sup-nav" width="140"><a href="Examples.htm" class="nav">III. Examples</a></td>
  </tr>
  <tr valign="middle"> 
    <td align="center" width="10">&#160;</td>
    <td class="sup-nav" width="140"><a href="Help.htm" class="nav">IV. Using the Help System</a></td>
  </tr>
   <tr valign="middle"> 
    <td colspan="2"><hr class="nav"></td>
  </tr>
  <tr valign="middle"> 
    <td colspan="2" class="sup-nav" width="140"><a href="../../index.htm" class="nav">Splash Page</a></td>
  </tr>
</table>
<!--NavTable End-->
    </td>
    
    <td class="main">
<!--PAGE_CONTENT_Start-->

<h1>Mic-1 MMV Simulator (V. 2.0)<br>
  <span class="subtitle18">Examples</span>
</h1>


<p>This section presents basic examples to help you get started quickly with 
the Mic-1 MMV simulator. </p>
<p class="title01">Example 1: Loading and Running an IJVM Program</p>
<p>This example shows you how to load an IJVM program and run it without 
  interruption. </p>
<p>1. Launch the simulator, as described in Installation Step 3. </p>
<p>2. Choose File &gt; Load IJVM program from the Mic-1 MMV menu bar. </p>
<p>3. In the File chooser, navigate to the <strong>examples/JAS-IJVM Examples </strong>  subdirectory. If you have launched from the <strong>bin </strong>directory, this directory is found by moving up one level, then down through the <strong>examples</strong> directory.</p>
<p>4. Select <strong>ijvmtest.ijvm</strong>. The IJVM program should appear in the Method Area.</p>
<p>5. Select Prog Speed on the Command Console (i.e. the radio button 
labeled <strong>Prog</strong>).</p>
<p>6. Click the Run button (the one with the blue right arrow) on the Command Console to begin interpretation of the IJVM program by the default microprogram. After a brief period, while the simulator is 
  running, you should see the following in the &quot;Output Console&quot; text 
  area:</p>
<blockquote>
  <p><strong> OK</strong></p>
</blockquote>
<p class="title01">Example 2: Assembling a JAS Program</p>
<p>This example shows you how to edit, and assemble a JAS source program, 
and load the resulting IJVM object program.</p>
<p>1. Find the following file: <strong>examples/JAS-IJVM Examples/ijvmtest.jas </strong></p>
<p>2. Open this file in your favorite text editor (emacs, Notepad, etc.)</p>
<p>3. Go to line 451.</p>
<p>4. Replace the lines:</p>
<blockquote>
  <p><strong> OK: BIPUSH 79<br>
    OUT<br>
    BIPUSH 75<br>
    OUT<br>
    HALT</strong></p>
</blockquote>
<p><em>  with</em></p>
<blockquote>
  <p class="style1"> OK: BIPUSH 65<br>
    OUT<br>
    BIPUSH 79<br>
    OUT<br>
    BIPUSH 75<br>
    OUT<br>
    HALT</p>
</blockquote>
<p>5. Save the changes.</p>
<p>6. Choose File &gt; Assemble/Load IJVM program from the 
  Mic-1 MMV menu bar. </p>
<p>7. Navigate to examples/JAS-IJVM, and select 
  the following file:</p>
<blockquote>
  <p><strong> ijvmtest.jas</strong></p>
</blockquote>
<p>8. The &quot;Assembling ijvmtest.jas ...&quot; window should appear, with <strong>assembly complete</strong> appearing soon in the text area. Click the Load button.</p>
<p>9. Select Prog Speed and click Run. The Output Console should 
  now display: </p>
<blockquote>
  <p><strong> AOK</strong></p>
</blockquote>
<p class="title01">Example 3: Re-Assembling a JAS Program</p>
<p>Once a JAS file has been assembled and loaded, it can be re-assembled 
  and loaded using the Mic-1 Menu bar command Assemble/Load &gt; Current JAS Assemble/Load. No further file selection is required. </p>
<p>This example also shows what happens when there is an error in a JAS program.</p>
<p>1. After completing Example 1, re-edit ijvmtest.jas, remove the colon 
  after <strong>OK</strong>, and save the changes:</p>
<blockquote>
  <p><strong> OK BIPUSH 65<br>
    OUT<br>
    BIPUSH 79<br>
    OUT<br>
    BIPUSH 75<br>
    OUT<br>
  HALT</strong></p>
</blockquote>
<p>2. Choose Assemble/Load &gt; Current JAS Assemble/Load from the 
  Mic-1 MMV menu bar. </p>
<p> The &quot;Assembling ijvmtest.jas&quot; window should appear with the 
  following error message:</p>
<blockquote>
  <p><strong> IJVM Assembler...<br>
    1433: Invalid instruction: ok<br>
    1424: Invalid goto label: ok</strong></p>
</blockquote>
<p>3. Close the window and re-edit the file. Restore the colon, and 
  remove the lines</p>
<blockquote>
  <p> <strong>BIPUSH 65<br>
    OUT</strong><br>
    <br>
    so the program looks like it did originally. </p>
</blockquote>
<p>4. Try Step 2 again. This time, no error message will be displayed. Load the program, click the Reset button, and run it again. The result in the Output Console should be <strong>OK</strong>, just like the first time.</p>
<p class="title01">Example 4: Trying different speeds</p>
<p>This example shows how the simulator operates at different 
&quot;speeds&quot;. Here, &quot;speed&quot; means the amount of computation that takes 
  place when the Run button is clicked once. You will also see how to 
  use the Delay Mode to demonstrate the simulator's action. </p>
<p>1. Launch the simulator, and choose File &gt; Assemble/Load IJVM program from the menu bar. </p>
<p>2. Select the file: <strong>examples/JAS-IJVM/add.jas</strong>. </p>
<p>3. Load the program when it finishes assembling. </p>
<p>4.Try the program first at Prog Speed. This program adds 2 hexadecimal numbers. Run it, and type the following into the Input Console:</p>
<blockquote>
  <p><strong> 1234 <br>
    5678</strong></p>
</blockquote>
<p> Note the echoing in the Output Console. When you are done, the Output Console should contain</p>
<blockquote>
<table>
<tr><td></td><td><strong>1234</strong></td></tr>
<tr><td><strong>+</strong></td><td><strong>5678</strong></td></tr>
<tr><td></td><td><strong>========</strong></td></tr>
<tr><td></td><td><strong>000068AC</strong></td></tr>
</table>
</blockquote>
<p> You can enter another pair of numbers to sum in the Input 
  Console. (Be sure to use capitals A ... F for the high-end hex 
  digits.) Click &quot;Stop&quot; (the stop sign) when you are done.</p>
<p>5. Now, click Reset, and change the speed to IJVM Speed.</p>
<p>6. Click the Run button several times, and note the highlighting of 
  IJVM instructions in the Method Area. Each click executes a single 
  IJVM instruction. You can also click the Reverse button (the 
  left-pointing red arrow) to back up a step.</p>
<p>7. Now, click the Delay On button, and click Reset and the 
  Run button as in the previous step. Note that the sequence of 
  microcode instructions used to interpret the current IJVM 
  instruction is shown, and the data path is illustrated in the 
  Architecture View. (The leftmost window shows registers 
  and busses).</p>
<p>8. Select Delay Off and Clock Speed. Then, Reset and Run 
  several steps. Each step shows the execution of one
  microinstruction. The Reverse button backs up one 
  microinstruction. </p>
<p>9. On the Menu Bar, choose Microstore &gt;View Microstore. 
  The Microstore Window will appear, and you can follow the 
  execution of the microprogram while clicking Run. Try it with 
  Delay on to see the subcycles illustrated as before. <br>
  <br>
  10. Finally, select Delay Off and SubClock Speed, then 
  Reset and Run several steps. Each step is now a quarter cycle. 
  Reverse works as you'd expect, but Delay On has no effect 
at this speed.</p>
<p>Please continue to the next step: <a href="Help.htm">Using the Help System</a><br>
</p>

<!--PAGE_CONTENT_end-->
    </td>
  </tr>
</table>

</body>
</html>

