.text:00401000	_main		proc near		; CODE XREF: start+16E?p
.text:00401000		var_C	= dword ptr -0Ch
.text:00401000		var_8	= dword ptr -8
.text:00401000		var_4	= dword ptr -4
.text:00401000			push    ebp
.text:00401001			mov     ebp, esp
.text:00401003			sub     esp, 0Ch
.text:00401006			lea     eax, [ebp+var_4]
.text:00401009			push    eax
.text:0040100A			push    offset unk_4080FC
.text:0040100F			call    _scanf
.text:00401014			add     esp, 8
.text:00401017			lea     ecx, [ebp+var_8]
.text:0040101A			push    ecx
.text:0040101B			push    offset unk_408100
.text:00401020			call    _scanf
.text:00401025			add     esp, 8
.text:00401028			lea     edx, [ebp+var_C]
.text:0040102B			push    edx
.text:0040102C			push    offset unk_408104
.text:00401031			call    _scanf
.text:00401036			add     esp, 8
.text:00401039			mov     eax, [ebp+var_4]
.text:0040103C			cmp     eax, [ebp+var_8]
.text:0040103F			jle     short loc_401047
.text:00401041			cmp     [ebp+var_8], 0
.text:00401045			jg      short loc_401055
.text:00401047	loc_401047:		; CODE XREF: _main+3F?j
.text:00401047			mov     ecx, [ebp+var_4]
.text:0040104A			cmp     ecx, [ebp+var_C]
.text:0040104D			jz      short loc_401055
.text:0040104F			cmp     [ebp+var_C], 0
.text:00401053			jnz     short loc_401064
.text:00401055	loc_401055:		; CODE XREF: _main+45?j
.text:00401055			push    offset aYes     ; "Yes!\n"
.text:0040105A			call    _printf
.text:0040105F			add     esp, 4
.text:00401062			jmp     short loc_401071
.text:00401064	loc_401064:		; CODE XREF: _main+53?j
.text:00401064			push    offset aNo      ; "No!\n"
.text:00401069			call    _printf
.text:0040106E			add     esp, 4
.text:00401071	loc_401071:		; CODE XREF: _main+62?j
.text:00401071			xor     eax, eax
.text:00401073			mov     esp, ebp
.text:00401075			pop     ebp
.text:00401076			retn
.text:00401076	_main		endp
