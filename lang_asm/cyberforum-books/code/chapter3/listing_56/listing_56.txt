.text:00401000	_main		proc near	; CODE XREF: start+16E?p
.text:00401000		var_8	= byte ptr -8
.text:00401000		var_1	= byte ptr -1
.text:00401000			push    ebp
.text:00401001			mov     ebp, esp
.text:00401003			sub     esp, 8
.text:00401006			lea     eax, [ebp-1]
.text:00401009			push    eax
.text:0040100A			push    offset unk_4080FC
.text:0040100F			call    _scanf
.text:00401014			add     esp, 8
.text:00401017			mov     cl, [ebp+var_1]
.text:0040101A			mov     [ebp+var_8], cl
.text:0040101D			cmp     [ebp+var_8], 41h
.text:00401021			jz      short loc_40102B
.text:00401023			cmp     [ebp+var_8], 42h
.text:00401027			jz      short loc_40103A
.text:00401029			jmp     short loc_401049
.text:0040102B	loc_40102B:			; CODE XREF: _main+21?j
.text:0040102B			push    offset byte_408100
.text:00401030			call    _printf
.text:00401035			add     esp, 4
.text:00401038			jmp     short loc_401056
.text:0040103A	loc_40103A:			; CODE XREF: _main+27?j
.text:0040103A			push    offset unk_408104
.text:0040103F			call    _printf
.text:00401044			add     esp, 4
.text:00401047			jmp     short loc_401056
.text:00401049	loc_401049:			; CODE XREF: _main+29?j
.text:00401049			push    offset unk_408108
.text:0040104E			call    _printf
.text:00401053			add     esp, 4
.text:00401056	loc_401056:			; CODE XREF: _main+38?j
.text:00401056					; _main+47?j
.text:00401056			xor     eax, eax
.text:00401058			mov     esp, ebp
.text:0040105A			pop     ebp
.text:0040105B			retn
.text:0040105B	_main		endp
