<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<TITLE>Калашников.ru - Ассемблер? Это просто!.. (Выпуск № 013)</TITLE>
</head>

<body bgcolor="#FFFFFF">

<P align=center><A 
href="http://ad.ir.ru/bb.cgi?cmd=go&pubid=128269&pg=2&vbn=10001&nocache=77524" 
target=_top><IMG alt="InterReklama " border=0 
src="http://ad.ir.ru/bb.cgi?cmd=ad&pubid=128269&pg=2&vbn=10001&nocache=77524"></A></P>
<P align=center><A href="http://www.ir.ru" target=_top><FONT size=1>InterReklama 
Advertising</FONT></A> </P>
<HR>

<div align="center"><center>

<table border="3" cellpadding="3" cellspacing="3" width="100%"
bgcolor="#8DC7C7" bordercolor="#000040">
<tr>
<td width="100%"><div align="center"><center><table
border="3" cellpadding="3" cellspacing="3" width="100%"
bgcolor="#009797" bordercolor="#000040">
<tr>
<td width="100%"><p align="center"><font size="5"><strong>Доброго
здоровья, дорогие мои!</strong></font></p>
<hr>
<p align="center"><font size="4"><em><strong>Выпуск
N 013</strong></em></font></p>
</td>
</tr>
</table>
</center></div><p align="right"><em>Там, дзе
вечар на зямлю сыпле зор
манiсты,</em></p>
<p align="right"><em>Я злаyлю, цябе злаyлю,
выпуск наравiсты.</em></p>
<p align="right"><em>Праз палеткi i лясы,
праз лугi, паляны,</em></p>
<p align="right"><em><strong>Ты нясi, яго
нясi, Iнэт незацугляны.</strong></em></p>
<p align="right"><em><strong>Ты нясi, яго
нясi, Iнэт незацугляны.</strong></em></p>
<hr>
<p align="center"><font size="4"><em><strong>Что у
нас сегодня?</strong></em></font></p>
<ul>
<li><a href="#letters"><font color="#800040">Ваши
письма</font></a></li>
<li><a href="#virus"><font color="#800040">Вирус</font></a></li>
</ul>
<hr>
<p align="center"><a name="letters"><font size="4"><strong>Ваши
письма</strong></font></a></p>
<p>Спасибо всем, кто посетил наш
сайт и оставил в <a
href="http://www.Kalashnikoff.ru"><font color="#0000FF">Гостевой
книге</font></a> информацию! Многие
жалуются, что страница стала
загружаться дольше. Что ж, я &quot;ужал&quot;
все, что можно было.</p>
<p>Ко мне приходит много писем с
просьбой подсказать где найти
ту или иную информацию. Друзья
мои! Ну не знаю я, где можно все
найти. Могу подсказать два
адреса (один из которых был
опубликован в предыдущем
выпуске):</p>
<p><a href="http://win32asm.newmail.ru">http://win32asm.newmail.ru</a></p>
<p><a href="http://www.chat.ru/~rusdoc">http://www.chat.ru/~rusdoc</a></p>
<p>Надеюсь, там вы найдете то,
что вам нужно.</p>
<p>Вот письмо (отрывок) от
подписчика Сани, который в
прошлом выпуске просил помощи
по BIOS:</p>
<p><em>Если есть какая
возможность и тебя это не
затруднит, поблагодари всех,
кто откликнулся на мою просьбу
о помощи!!! </em><em><strong>С
уважением, Саня.</strong></em></p>
<p><font size="4">Всем спасибо!</font></p>
<hr>
<p align="center"><a name="virus"><font size="4"><strong>Вирус.</strong></font></a></p>
<p>Сегодня рассылка небольшая,
но информативная. Из нее вы
узнаете, как поместить вирус
временно в память, как передать
ему управление, как пытаться
найти файл...</p>
<p>Ну что, поехали писать вирус...</p>
<p>Мы будем заражать <strong><u>ТОЛЬКО
*.COM-файлы</u></strong>! Если будет
время и желание у вас, то можем
написать вирус, заражающий и
*.EXE-файлы.</p>
<ul>
<li><strong>Как вирус
&quot;прикрепляется&quot; к
файлу, не нарушая его
работоспособности?</strong></li>
<li><strong>Что должен сделать
вирус в первую очередь?</strong></li>
<li><strong>Как передать
управление вирусу из чужой
программы?</strong></li>
</ul>
<p>Как вы знаете, com-файл сразу
начинается с кода, первый байт
которого располагается в
свободном сегменте по смещению
100h. Следовательно, нам нужно
будет сохранить в теле нашего
вируса первые три байта
&quot;файла-жертвы&quot;, записать
наш вирус в &quot;хвост&quot; файла и
вместо сохраненных трех байт
установить команду jmp на начало
нашего вируса (т.е. передать ему
первому управление). После
того, как вирус отработал свое,
восстановить сохраненные три
байта (записать их в памяти по
адресу 100h) и передать им
управление. На практике все
будет понятней...</p>
<p>Получается примерно так:</p>
<p><em>Программа до заражения
(следите за адресами):</em></p>
<p>________</p>
<p>1234:0100h mov ax,34 ; код программы до
заражения, расположенный по
адресу 100h</p>
<p>1234:0103h mov dx,15 ; здесь может быть
все, что угодно... Но нам-то все
равно...</p>
<p>1234:0106h add ax,bx</p>
<p>1234:0108h .... и т.д.</p>
<p>...</p>
<p>1234:0500h int 20h ; последний байт
программы</p>
<p>1234:0502h --- здесь идет уже
свободная память...</p>
<hr>
<p><em>Программа после заражения:</em></p>
<p>___________</p>
<p>1234:0100h jmp 0502h ;прыгаем на начало
нашего вируса (заменили мы
байты здесь)</p>
<p>1234:0103h mov dx,15 ;а это байты
&quot;файла-жертвы&quot;</p>
<p>1234:0106h add ax,bx</p>
<p>...</p>
<p>1234:0500h int 20h</p>
<p>1234:0502h <em>--- а здесь уже
начинается код нашего вируса.</em></p>
<p><em>... --- здесь тело вируса.
Делаем, что хотим...</em></p>
<p>1234:0700h mov word ptr cs:[0100h], First_bytes_1 <em>;восстановим
первые два байта
&quot;файла-жертвы&quot;</em></p>
<p>1234:0705h mov byte ptr cs:[0102h], First_bytes_2 <em>;восстановим
третий байт
&quot;файла-жертвы&quot;...</em></p>
<p><em>; Теперь по адресу 100h первые
два байта не jmp 502h, а mov ax,34 (т.е.
оригинальный код программы)</em></p>
<p><em><strong>; Вспоминаем из прошлых
выпусков о том, что в
Ассемблере можно менять код
программы &quot;на лету&quot;...</strong></em></p>
<p><em><u>; Все это меняется только
в памяти, а не на диске!</u></em></p>
<p>1234:0709h jmp 0100h ; ...и перейдем по
адресу 100h, т.е. передадим
управление программе</p>
<p>___________</p>
<p>Сложновато? Сравните два
куска кода: незараженной
программы и зараженной. Должно
быть все понятно...</p>
<p>Сейчас будем
практиковаться...</p>
<p><strong>Возьмите, пожалуйста,
файл здесь: </strong><a
href="http://www.Kalashnikoff.ru/Assembler/Programs/Lessons/Virus13.rar">http://www.Kalashnikoff.ru/Assembler/Programs/Lessons/Virus13.rar</a></p>
<p><em>Если у вас нет выхода в
Сеть, то напишите мне письмо с
просьбой выслать. Я также
включу ваш адрес в базу данных.
Затем перед выходом очередной
рассылки вы получите этот файл
по почте.</em></p>
<p>Первая строка - .286 - указывает
Ассемблеру, что будем
использовать инструкции
(команды, операторы) 286
процессора. Т.е. на 8086
компьютере наш вирус уже
работать не будет!</p>
<p>С первого же байта перейдем
на метку Init (инициализации
нашего вируса).</p>
<p>Сразу же возникает проблема:
при поиске файла функцией DOS мы
затираем DTA
&quot;программы-жертвы&quot;. </p>
<p>И тут же возникает вторая
проблема, точнее, вопрос: что
такое DTA и для чего оно нужно?
Полную информацию об этом
можно найти в программе helpassm,
которую я рекомендую скачать с
нашего сайта. В этой рассылке
мы рассмотрим только то, что
нас интересует (пока!).</p>
<p>Как вы помните, все *.com-программы
начинаются с адреса 100h (org 100h).
Что же находится в памяти от 0
до 100h? Там расположен PSP (Program
Segment Prefix - префикс программного
сегмента). По адресу 80h
находится по умолчанию DTA (Data
Transfer Area - область переноса
данных). В DTA записывается
информация, когда функция
поиска файла (4Eh и 4Fh) находит
очередной файл. Все вроде бы и
ничего, но проблема в том, что
по этому адресу (80h)
располагается изначально
командная строка. Например:</p>
<p>format.com c:/s/u</p>
<p>По адресу CS:0080h будет
находится: L_c:/s/u, где L - длина
командной строки, а _ - символ
пробела. Для того, чтобы
удостовериться, запустите
отладчик AFD так:</p>
<p>afd.exe format c:/s/u</p>
<p>Затем посмотрите, что будет
находиться по адресу CS:0080h.</p>
<p>К чему все это? Да к тому, что
когда мы попробуем искать
первый файл, то, найдя его, мы
затрем командную строку (L_c:/s/u).
Получается, что
&quot;программа-жертва&quot;, к
которой мы &quot;подцепились&quot;
не сможет прочитать те
параметры, которые ей передал
пользователь. В данном случае -
это L_/s/u.</p>
<p>Есть два способа обойти это.</p>
<p>1. Сохранить PSP программы
перед поиском файла. А затем,
как наш вирус отработал,
восстановить его.</p>
<p>2. Установить DTA на другую
область памяти, а затем
восстановить его. Это позволяет сделать функция 1Ah
прерывания 21h:</p>
<table border="2" cellpadding="2" width="70%">
<tr>
<td><font size="4"><strong>Вход:</strong></font></td>
<td>AH=1Ah<p>DS:DX - адрес DTA для
установки</p>
</td>
</tr>
<tr>
<td><font size="4"><strong>Выход:</strong></font></td>
<td>ничего</td>
</tr>
</table>
<p>Мы выберем второй путь.</p>
<p>Далее возникает еще одна
проблема: мы теряемся в
адресах. Т.е. мы занесем наш
сассемблированный код в конец
программы, при этом смещения
все поменяются.</p>
<p>Например:</p>
<p>mov dx,offset String</p>
<p>Ассемблер занесет в DX
смещение строки String в памяти.
Фактически - после
ассемблирования - это будет
выглядеть так:</p>
<p>mov dx,125h --- какое именно число -
не важно. Главное, что в DX будет
находиться адрес (смещение)
строки в памяти,
отсчитывающееся от 0. Но мы-то
запишем код нашего вируса в
конец программы, включая все
строки и прочие области данных!
Получается, что строка в памяти
будет находится по одному
адресу, а в регистры будет
загружаться совсем другой
адрес!</p>
<p>Вот пример:</p>
<p>1234:0100h mov dx,400h --- в
неассемблированном варианте
это выглядит, как mov dx,offset String.
Т.е. Ассемблер заменит offset String
на адрес (смещение) этой строки
в памяти, <strong><u>начиная от нуля</u></strong>.</p>
<p>...</p>
<p>1234:0400h 'Строка' --- а вот и
строка, которая расположиться
по такому адресу. Она может
расположиться и по любому
другому (надеюсь, вы понимаете
почему?), но суть не в этом.</p>
<p>Теперь, представим, что
&quot;файл-жертва&quot; занимает 100h
байт. Мы записываем наш код в
конец файла. Получается, что
строка будет находиться по
такому адресу: 1234:0400h + 100h = 1234:0500h!
Хорошо бы было, если бы все
файлы имели одну длину. Но один
файл может быть 100 байт, а
другой 23000 байт! В итоге,
обращаясь к строке в
зараженной программе, мы
получаем:</p>
<p>1234:0200h mov dx,400h --- 200h потому, что
100h байт занимает
&quot;файл-жертва&quot;, а мы в
&quot;хвосте&quot; у него...</p>
<p>...</p>
<p>1234:0400h --- все, что угодно, но
только не наша строка.</p>
<p>...</p>
<p>1234:0500h 'Строка' --- вот, где она
будет!</p>
<p>Можно, конечно, перед
заражением получить длину
&quot;файла-жертвы&quot; и затем
заменить mov dx,400h на mov dx,500h. Но
что делать, если таких ссылок
много? Представляете, до каких
размеров разрастется наш
вирус?!</p>
<p>Мы поступим иначе: просто
возьмем и перенесем вирус (и
только вирус!) с &quot;хвоста&quot;
&quot;файла-жертвы&quot; в свободный
сегмент со смещения 100h. Вот, что
получится:</p>
<p><em>До перемещения:</em></p>
<p>1234:0200h mov dx,400h --- мы в хвосте
программы</p>
<p>....</p>
<p>1234:0500h 'Строка'</p>
<p>____________</p>
<p><em>После перемещения:</em></p>
<p>5678:0100h mov dx,400h --- перебросили
себя в сегмент 5678h, по смещению
0100h</p>
<p>....</p>
<p>5678:0400h 'Строка' --- строка стала
на свое место (смещение)!!!</p>
<p>____________</p>
<p>Еще вопрос: где гарантия того,
что в данном сегменте никого
нет, и мы не затрем код
какой-нибудь программы?</p>
<p>Я предлагаю временно (т.е. на
тот момент, пока работает
вирус) переслать наш вирус в
адрес 8-ой страницы дисплея.
Видеокарта имеет достаточно
памяти для размещения восьми
страниц. Эти страницы, кроме
первой или нулевой, если отсчет
вести с нуля), почти никогда не
используются программами.
Более того известны точные
сегменты этих страниц. Вот они:</p>
<p>__________________</p>
<p>0B800 - нулевая</p>
<p>0B900 - первая</p>
<p>0BA00 - вторая</p>
<p>0BB00 - третья</p>
<p>0BC00 - четвертая</p>
<p>0BD00 - пятая</p>
<p>0BE00 - шестая</p>
<p>0BF00 - седьмая</p>
<p>__________________</p>
<p>Давайте посчитаем размер
одной страницы. Хватит ли нам
места для того, чтобы
разместить на ней код вируса?
Наш вирус будет занимать не
более 300-400 байт.</p>
<p>Возьмем известный вам режим 3:
в одной строке 80 символов,
строк на экране 25. Один символ
занимает два байта (атрибут /
смещение). Получаем: 80 x 25 x 2 = 4000
байт. Хватит ли нам этого?
Конечно хватит! Даже, если бы не
хватало, ты мы могли бы
использовать две, три, четыре
страницы.</p>
<p>Т.о. пересылаем себя в область
седьмой (если считать с нуля)
видеостраницы, что мы и делаем
сразу же за меткой Init. Код
нашего вируса на экране не
будет отображаться, т.к. обычно
текущей стоит 0-ая страница.
Хотя, если хотите, можете
проверить это...</p>
<p>Думаю, что вам не составит
труда разобраться в новом
операторе movs. Принцип его
работы полностью
соответствует команде stos. Вот
его описание:</p>
<div align="left"><table border="1" cellspacing="1">
<tr>
<td width="25%"><strong>Название</strong></td>
<td width="25%"><strong>Перевод</strong></td>
<td width="20%"><strong>Применение</strong></td>
<td width="20%"><strong>Процессор</strong></td>
</tr>
<tr>
<td width="25%">movs</td>
<td width="25%">MOVe String -
переместить строку
(скопировать)</td>
<td width="20%">Пересылка
(копирование) строки
(массива)</td>
<td width="20%">8086</td>
</tr>
</table>
</div><p>При этом DS:SI указывает на
то, откуда брать данные, ES:DI
куда их копировать, а CX -
количество пересылаемых байт /
слов.</p>
<p>Вот примеры:</p>
<p>_________________</p>
<p>...</p>
<p>mov cx,10 ;количество
пересылаемых байт</p>
<p>mov si,offset Str1 ; откуда будем
брать</p>
<p>mov di,offset Str2 ; куда копировать</p>
<p>rep movsb ; Пересылаем побайтно,
т.к. movs<strong>B</strong>. Теперь Str1 = Str2</p>
<p>...</p>
<p>Str1 db '0123456789'</p>
<p>Str2 db '9876543210'</p>
<p>_________________</p>
<p>Можно так:</p>
<p>_________________</p>
<p>...</p>
<p>mov cx,5 ;количество
пересылаемых слов (два байта)</p>
<p>mov si,offset Str1 ; откуда будем
брать</p>
<p>mov di,offset Str2 ; куда копировать</p>
<p>rep movsw ; Пересылаем пословно (по два байта), т.к. movs<strong>W</strong>.
Теперь Str1 = Str2</p>
<p>...</p>
<p>Str1 db '0123456789'</p>
<p>Str2 db '9876543210'</p>
<p>_________________</p>
<p>Итак, теперь наш вирус есть в
двух местах в памяти: 1. сразу за
&quot;программой-жертвой&quot;; 2. в
области 7-ой страницы (0BF00:0100h).</p>
  <p>Нам осталось прыгнуть на
адрес 0BF00:IP. Как известно, CS:IP
всегда показывают текущее
операцию (адрес текущей
операции). Обратите внимание,
как мы прыгаем:</p>
<p>jmp dword ptr cs:[Off_move]</p>
<p>Посмотрите, что содержит
переменная Off_move, а также
посмотрите в отладчике, что
будет происходить с регистрами
CS:IP. Все станет на свои места...
Подсказка: начиная с метки Lab_jmp
мы работаем в области 7-ой
видеостраницы...</p>
<p>Затем мы устанавливаем DTA в
область 7-ой видеостраницы со
смещения 0. Туда будет
записываться информация о
найденных файлах для
заражения.</p>
<p>Теперь можно попробовать
найти первый *.com-файл в текущем
каталоге. Для этого
используется функция 4Eh
прерывания 21h:</p>
<table border="2" cellpadding="2" width="100%"
bgcolor="#00D2D2" bordercolor="#000080">
<tr>
<td valign="top"><font size="4"><strong>Вход:</strong></font></td>
<td>AH=4Eh<p>CX - атрибуты для
поиска файла: у нас - 0
(обычные, не read-only и hidden!)</p>
<p>DS:DX - маска для поиска.
Например, *.*, *.exe, comm???.c??,
c:\*.asm и т.д.</p>
</td>
</tr>
<tr>
<td valign="top"><font size="4"><strong>Выход:</strong></font></td>
<td>CF = 1 - нет такого файла<p>CF
= 0: DTA заполняется
информацией о найденном
файле</p>
</td>
</tr>
</table>
<p>CF - это флаг переноса. Если
написано CF=1, то это значит, что
флаг переноса установлен
(равен 1), а если CF=0, то сброшен
(равен 0). Флаг переноса
используется DOS для индикации
ошибки функции или для других
целей.</p>
<p>В данном случае, если функция
4Eh установила флаг переноса, то
это значит, что файлов,
удовлетворяющих условию (маске
поиска), не было найдено.</p>
<p>Если флаг переноса сброшен
(равен нулю), то в DTA заносится
информация о файле. Ее мы
рассмотрим в последующих
выпусках.</p>
<p>Если CF = 0 (сброшен флаг
переноса), то можно что-нибудь
сделать с найденным файлом.</p>
<p>Для того, чтобы найти
следующий файл,
удовлетворяющий нашему
условию (маске поиска),
необходимо воспользоваться
функцией 4Fh прерывания 21h:</p>
<table border="2" cellpadding="2" width="100%"
bgcolor="#00D2D2" bordercolor="#000080">
<tr>
<td valign="top"><font size="4"><strong>Вход:</strong></font></td>
<td>AH=4Fh<p>CX - атрибуты для
поиска файла: у нас - 0
(обычные, не read-only и hidden!)</p>
<p>DS:DX - маска для поиска (как
у функции 4Eh).</p>
</td>
</tr>
<tr>
<td valign="top"><font size="4"><strong>Выход:</strong></font></td>
<td>CF = 1 - нет больше файлов,
удовлетворяющих условию
(маске поиска)<p>CF = 0: DTA
заполняется информацией о
найденном файле</p>
</td>
</tr>
</table>
<p>Все также, как у функции 4Eh.</p>
<p>Хочу заметить, что вирус у нас
пока неработоспособный. Т.е. он
ничего не заражает вообще!
Можете спокойно его
ассемблировать и запускать.
Только мало что увидите на
экране. Лучше это дело смотреть
под отладчиком.</p>
<p>Дальше все просто! Я думаю,
что описаний в программе
достаточно для того, чтобы
понять принцип работы
программы.</p>
<p>До встречи через неделю!</p>
<hr>
<p><font size="5"><strong>С уважением,</strong></font></p>
<div align="left"><table border="4" bgcolor="#369A86">
<tr>
<td><p align="center"><font size="4"><strong><u>Автор
рассылки:</u></strong> <u>Калашников
Олег</u></font></p>
<p><strong>E-mail:</strong> <a
href="mailto:assembler@beep.ru">assembler@beep.ru</a></p>
<p><strong>URL:</strong> <a
href="http://www.Kalashnikoff.ru">http://www.Kalashnikoff.ru</a></p>
<p><strong>UIN (Тетя Ася): </strong><font
color="#0000FF"><strong>68951340</strong></font></p>
</td>
</tr>
</table>
</div></td>
</tr>
</table>
</center></div>

<hr>

<p align="center">[<a href="014.htm">Следующий выпуск</a>] [<a target=_BLANK href="http://www.Kalashnikoff.ru/">На главную страницу</a>]</p>

<HR NOSHADE><CENTER>
<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript><p align="center"><a 
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" 
target="_blank"><img src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG" align="middle" border="0"></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"> 
<script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> 
<!-- SpyLOG --> 
 
 <a target=_top href="http://www.one.ru"><img src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&t=9" width=88 height=31 alt="be number one" border=0></a> 
 
 <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a 
target=_top href="http://top.list.ru/jump?from=87856"><img 
src="http://top.list.ru/counter?js=na;id=87856;t=54" 
border=0 height=31 width=88 
alt="TopList"></a></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script> 
 
<br><br> 

</body>
</html>
