<HTML>
<HEAD>
<title>Калашников.ru - Ассемблер? Это просто!.. (Выпуск № 027)</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<META NAME="keywords" CONTENT="assembler asembler ассемблер асемблер программирование програмирование вирус антивирус программа низкоуровневое прерывание сегментация сегмент регистр резидент DOS Windows">
<META NAME="author" CONTENT="Assembler@Kalashnikoff.ru Автор рассылки Калашников Олег">
<STYLE><!-- a:link, a:visited, a:active { text-decoration: none; color: #226622} 
a:hover { text-decoration: bold; color: #662266; } 
 .ff { 
font-family : Arial, helvetica, sans-serif; 
font-style : normal; 
font-variant : normal; 
} --></STYLE>
</HEAD><BODY body bgcolor=#CFE7E7>
<div align="center"><center>

<p align="center"><a
href="http://ad.ir.ru/bb.cgi?cmd=go&amp;pubid=128269&amp;pg=1&amp;vbn=10001&amp;nocache=9460"
target="_top"><img
src="http://ad.ir.ru/bb.cgi?cmd=ad&amp;pubid=128269&amp;pg=1&amp;vbn=10001&amp;nocache=9460"
alt="InterReklama " border="0"></a><br>
<a href="http://www.ir.ru" target="_top"><font size="1">InterReklama
Advertising</font></a> <!-- BannerBank.  ИнтерРеклама --> </p>

<hr noshade>

<table border="1" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#CDCD9C">
    <tr>
        <td colspan="3" width="100%"><p align="center"><font
        color="#004080" size="5"><em><strong>Ассемблер?
        Это просто! Учимся
        программировать</strong></em></font><font
        color="#000000" size="2"><br>
        ______________________________________</font></p>
        <p align="center"><font size="4">Выпуск N 027 (</font><a
        href="#resident"><font size="4">Последний
        резидент</font></a><font size="4">)</font></p>
        </td>
    </tr>
</table>
</center></div>

<p align="center"><font color="#004080" size="5"
face="Monotype Corsiva"><b>Доброе время суток,
дорогие подписчики!</b></font></p>

<p align="left"><font color="#000000" size="4"><strong>Сегодня
в номере:</strong></font></p>

<dir type="disc">
    <li><p align="left"><a href="#newsfornew">Информация
        для новых подписчиков</a></p>
    </li>
    <li><p align="left"><a href="#news"><strong>Новости</strong></a></p>
    </li>
    <li><p align="left"><a href="#letters">Ваши письма.</a></p>
    </li>
    <li><p align="left"><a href="#resident">Резидент</a></p>
    </li>
</dir>

<dir type="disc">
    <li><p align="left"><a href="#tusoffka">Тусоffка</a></p>
    </li>
</dir>

<hr>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="newsfornew"><font
        color="#004080" size="5" face="Times New Roman"><strong>Информация
        для новых подписчиков</strong></font></a>
        </td>
    </tr>
</table>

<p align="left"><font size="3">Благодарю Вас, что
подписались на рассылку <em>&quot;Ассемблер?
Это просто! Учимся
программировать&quot;</em>. Надеюсь, что
Вы не останетесь равнодушны к ней и
почерпнете море полезной
информации, а также повысите свой
уровень в &quot;общении&quot; с
IBM-совместимыми компьютерами.</font></p>

<p align="left"><font size="3">Прежде, чем
приступать к изучению материала в
данном выпуске, Вам необходимо
внимательно ознакомиться с
предыдущими. Я уверен, что Вы очень
быстро и без труда догоните
остальных подписчиков, не смотря на
то, что у нас уже 27 выпуск.</font></p>

<p align="left"><font size="3">Все, что нужно для
изучения Ассемблера (предыдущие
выпуски, адреса экспертов,
необходимые программы,
документацию, а также многое
другое), можно найти на сайте </font><a
href="http://www.Kalashnikoff.ru"><font size="3">http://www.Kalashnikoff.ru</font></a><font
size="3">. Рекомендую Вам сперва
ознакомиться с разделом <em>&quot;Информация
для новых подписчиков&quot;</em>.</font></p>

<p align="left"><font size="2">Если у Вас нет
выхода в Сеть, то предыдущие
выпуски рассылки, информацию для
новеньких и адреса экспертов можно
получить по почте, направив пустое
письмо по адресу </font><a
href="mailto:AssmIssues@Kalashnikoff.ru"><font size="2">AssmIssues@Kalashnikoff.ru</font></a><font
size="2">. Архив (390 Кб) будет выслан Вам
автоматически в течение <strong><u>двух
рабочих</u></strong> дней с момента
получения Вашего письма. <em><strong>Однако,
пожалуйста, не злоупотребляйте
этим</strong></em><em>, т. к. высылка писем
подобного объема несет
существенную нагрузку на почтовые
сервера</em>.</font></p>

<hr>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="news"><font
        color="#004080" size="5"><strong>Новости</strong></font></a></td>
    </tr>
</table>

<p>Новости... Да, новостей у нас
несколько. Начну с простых:</p>

<p align="center"><strong>_________</strong></p>

<p><strong>Новость N 1. </strong>Она не совсем
относится к программированию, но,
тем не менее, мне бы хотелось Вам
сообщить. Завязалось
сотрудничество с газетой
&quot;Покупатель&quot;. В этой газете
вышла моя первая статья, которая
также будет скоро опубликована в
Интернете.</p>

<p><strong>Новость N 2.</strong> Теперь на <a
href="http://www.kalashnikoff.ru">www.Kalashnikoff.ru</a>
каждый может добавить адрес своего
сайта плюс его описание в раздел
&quot;Ссылки на другие ресурсы&quot;.
Если Ваш сайт имеет отношение к
программированию на Ассемблере (и
другим языкам), то Вы можете сами
(без моего участия) добавить его. Я
внимательно буду знакомиться с
новыми ссылками (письмо приходит ко
мне автоматически сразу после того,
как Вы занесете адрес на сайт) и
проверять данное Вами описание
сайта. Если оно не соответствует
действительности или по каким-то
иным причинам окажется
малоинформативным, то уж не
обессудьте: придется его удалить из
каталога.</p>

<p>Это, конечно, мелочи, но развитие в
данном направлении будет
продолжаться. Не буду пока ничего
рассказывать - секрет. Сами скоро
все увидите...</p>

<p align="center"><strong>_________</strong></p>

<p><strong>Новость N 3.</strong> Существенно
изменился внешний вид сайта
(условно - версия 4.0): теперь он
состоит из двух окон (фреймов) и
протестирован преимущественно на
Internet Explorer 4.0 при разрешении экрана
1024х768.</p>

<p>Лучше получилось или хуже - пока
не знаю: выношу на Ваш суд. Все
пожелания можно оставлять в
Гостевой книге (я ее планирую
переименовать в &quot;Книгу
отзывов&quot;).</p>

<p align="center"><strong>_________</strong></p>

<p><strong>Новость N 4.</strong> Теперь
работает форум на сайте <a
href="http://www.Kalashnikoff.ru">www.Kalashnikoff.ru</a>.
Предыдущий также до сих пор
действует. Причина переноса ясна:
прежний форум был очень медленный.
Нынешний же работает гораздо
быстрее...</p>

<p align="center"><strong>_________</strong></p>

<p><strong>Новость N 5.</strong> В адрес
экспертов поступает довольно-таки
много вопросов. Информация очень
полезная и интересная любому
программисту. Но так как у меня
просто не хватает времени
обрабатывать все это вручную, то я
решил автоматизировать данный
процесс, чем, собственно, и
занимался вплотную последние
несколько дней.</p>

<p><strong>Как это все будет работать?</strong></p>

<p>Я на днях открыл еще одну рассылку
<em>&quot;Ассемблер? Это просто! Учимся
программировать (FAQ)&quot;</em> (далее -
рассылка FAQ), в которой будут
публиковаться вопросы подписчиков
и ответы экспертов на них. Первый
выпуск уже готов и скоро выйдет. В
нем собраны поступившие за
последнее время вопросы/ответы.
Данный выпуск я пока верстал
вручную. Следующий будет создан
автоматически.</p>

<p><strong>Как можно будет задавать
вопросы?</strong></p>

<p>Вопросы задаются через
специальную форму, которая будет
присутствовать в каждом выпуске. Вы
задаете вопрос (если необходимо, в
специальное окно добавляете
ассемблерную программу), который
отправляется напрямую эксперту.
При этом вопрос фиксируется на
сервере моего хостера. Эксперт
получает вопрос в специальной
форме, печатает ответ и отправляет
его опять-таки через мой сервер
подписчику, задающему вопрос. Ваш
вопрос и ответ эксперта заносится в
базу данных. Как только поступило 5
(или 10) вопросов/ответов, рассылка
выходит.</p>

<p><strong>Какие минусы в новой системе?</strong></p>

<p>1. Вопрос/ответ будет отправляться
через специальную web-форму, что
требует у Вас наличия выхода в
Интернет. Однако, отправка ответа
займет 5-10 секунд - столько же,
сколько бы Вы истратили, отправляя
его по почте.</p>

<p>2. Если у Вас есть только почта, то,
к сожалению, задать вопрос не
удастся. Это единственный большой
минус.</p>

<p>3. Минимальный контроль за
информацией в рассылке FAQ с моей
стороны, что может привести к
появлению в ней ненужной
информации (например, спама). Если
такое будет иметь место, то мне
придется закрыть данную рассылку
либо действовать иным способом.
Максимальный фильтр я постараюсь
обеспечить, но только программным
путем.</p>

<p>4. Подписываться на рассылку FAQ
желательно в HTML-формате, т.к. в
текстовом виде невозможно
поместить форму для вопроса.
Однако, если Вы не будете задавать
вопросы, то можно подписаться и на
текстовую версию. Тем не менее,
форму можно будет всегда найти на
нашем сайте.</p>

<p><strong>Какие плюсы в новой системе?</strong></p>

<p>Плюсов побольше.</p>

<p>1. Вы, уважаемые подписчики,
сможете узнать дополнительно много
интересной и полезной информации,
которая раньше была доступна
только мне, эксперту и человеку,
задающему вопрос.</p>

<p>2. Рассылку будете делать
фактически вы, а также эксперты,
отвечающие на ваши вопросы.</p>

<p>3. С моей стороны будет
осуществляться минимальный
контроль, что освободит кучу
дополнительного времени, которое я
смогу посвятить этой рассылке (т.е.
той которую Вы сейчас читаете).</p>

<p>4. Все вопросы/ответы будут
сохраняться у моего хостера, что
повысит надежность хранения
информации. Например, совсем
недавно у меня &quot;полетел&quot;
винчестер, а также все письма
экспертов с ответами на ваши
вопросы (хотя, кое-что и осталось).</p>

<p>5. Любой желающий сможет <u>самостоятельно</u>
зарегистрировать себя в той или
иной экспертной группе, а также
отписаться в любой момент. Это
также, безусловно, избавит меня от
дополнительных хлопот по
регистрации.</p>

<p>6. Набранные экспертами баллы
(которые считаются автоматически)
будут отображаться в рассылке.
Лидеры получат возможность
оставить любую информацию о себе
лично либо о своем сайте на
страницах рассылки (или что-либо
еще - пока не придумал).</p>

<p>7. Возможно, что в рассылке FAQ будут
публиковаться формы для
голосования за ответ того или иного
эксперта, что повысит
объективность оценки.</p>

<p>8. Эксперты смогут получать
поощрения за набранные баллы. Какие
именно - пока не знаю. Но это будет
что-то такое, что должно
заинтересовать эксперта. Вот я и
думаю...</p>

<p>9. Станет гораздо удобней задавать
вопрос и получать ответ на него в
красиво оформленном виде.</p>

<p>10. Подписчики, задающие вопросы, а
также эксперты, обязаны будут
соблюдать определенные правила,
дабы избежать появления в рассылке
FAQ лишней и никому ненужной
информации.</p>

<p>11. Каждый эксперт будет иметь свое
уникальное имя (номер и т.п.),
которое будет публиковаться после
ответа эксперта. В случае нарушения
установленных правил, Вы,
подписчики, сможете пожаловаться
на него мне, после чего этот эксперт
будет удален из базы данных.</p>

<p>12. Эксперт, набравший за месяц (или
за неделю) минимальное количество
баллов, будет также удаляться из
базы данных.</p>

<p>______</p>

<p>В конечном итоге, все это
способствует получению Вами,
дорогие подписчики, максимально
полезной информации и освобождению
у меня дополнительного свободного
времени, которое я, как уже писал,
могу посвятить данной рассылке, а
также повышению качества обработке
получаемой мной информации.</p>

<p>Повторю: <u>весь процесс будет
автоматизирован от начала и до
конца</u>.</p>

<p>Пока что программа, выполняющая
все эти &quot;манипуляции&quot;, готова
на 40%. Еще два-три дня и я доделаю ее
до конца. Конечно, она пока не будет
выполнять все перечисленное выше,
но я буду постоянно ее
совершенствовать, стремиться к
выполнению всех пунктов и даже
больше.</p>

<p>Уверен, что вначале возможны
некоторые &quot;ляпсусы&quot;, ошибки и
т.п., за который я заранее приношу
свои извинения. Вам, программистам,
как ни кому лучше знать, что
программ без ошибок не бывает. Я
постараюсь исправлять всё как
можно скорее. В конце концов, мы
получим механизм, работающий без
сбоев.</p>

<p>Но не будем забегать далеко
вперед. Как говориться, время
покажет: получится ли все, что я
задумал или нет...</p>

<p>А пока предлагаю Вам подписаться
на рассылку <em>&quot;Ассемблер? Это
просто! Учимся программировать
(FAQ)&quot;</em> в приведенной ниже форме:</p>

<form action="http://subscribe.ru/member/quick" method="GET"
target="_top">
    <input type="hidden" name="action" value="quick"><input
    type="hidden" name="grp" value="comp.soft.prog.faq"><table
    border="1" cellpadding="2" cellspacing="0">
        <tr>
            <td align="center" colspan="2" bgcolor="#FCF5E9"><font
            size="2">Рассылки </font><a
            href="http://subscribe.ru/"><font size="2"><b>Subscribe.Ru</b></font></a>
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2" bgcolor="#FFFFFF"><font
            size="2">Ассемблер? Это просто!
            Учимся программировать (FAQ)<br>
            <input type="text" size="20" maxlength="100"
            name="email" value="ваш e-mail"
            style="font-size: 9pt"> <input type="submit"
            value="OK" style="font-size: 9pt"> </font></td>
        </tr>
        <tr>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="format" size="1">
                <option value="html">HTML</option>
                <option value="text">TEXT </option>
                <option value="phone">SMS</option>
                <option value="palm">PALM</option>
            </select></font> </td>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="lang" size="1">
                <option value="koi">КОИ-8 </option>
                <option value="lat">Латиница</option>
                <option value="win">windows</option>
            </select></font> </td>
        </tr>
    </table>
</form>

<p>Как только выйдет первый выпуск
данной рассылки, то считайте, что
система начала работать.</p>

<p><strong>Всем спасибо!!!</strong></p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="letters"><font
        color="#004080" size="5" face="Times New Roman"><strong>Ваши
        письма.</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="left"><font size="3">Ко мне поступило
несколько интересных писем,
которые я с удовольствием публикую.</font></p>

<p align="center"><font size="3">___________</font></p>

<p align="left"><font size="3">Еще несколько слов
о С++.</font></p>

<p align="left"><font size="3"><em>Прочитал тут
письмо от Алексея по поводу
библиотечных файлов C и хочу не
согласиться с ним в ряде вопросов
(извини, что отвлекаю от ассемблера,
но я считаю данную вещь
принципиальной).</em></font></p>

<p align="left"><font size="3"><em>1. То, что файлы *.h
- заголовочные файлы и содержат они
в основном прототипы, это правда. Я
сказал в основном, потому что это не
обязательное условие -
просматривая заголовочные файлы
реализации языка C++ (версия 3.2) фирмы
Borland я встречал в отдельных h-файлах
не только описание (прототипы)
функций, но и их определение (текст).</em></font></p>

<p align="left"><font size="3"><em>2. Включение
библиотек в код программы.<br>
&gt; в код программы включаются
ТОЛЬКО ИСПОЛЬЗУЕМЫЕ В ДАННОЙ
ПРОГРАММЕ ФУНКЦИИ.</em></font></p>

<p align="left"><font size="3"><em>Вот это самое
большое заблуждение. Надеяться на
данных факт просто нельзя! Это
сугубо личное дело компилятора, а
точнее фирмы, которая его написала.
Стандарт языка C++ не оговаривает
данное условие. И если честно, то я
не встречал ещё ни одного
компилятора (не только C-шного, но и
любого другого), который бы
поступал подобным образом. К коду
программы подключается _ВСЯ_
библиотека, независимо от того,
одну функцию из неё вы используете
или все. И именно подключённые
библиотеки влияют на размер
программы (ты был прав), а не
загрузчики C. Это очень хорошо
заметно, когда вы используете
огромные библиотеки, например VCL из
C++ Builder: размер всех файлов
загрузчиков C (c0?.obj) - 18 kB,
минимальный размер программы
написанной на Builderе с подключенной
VCL - ~500 kB (это просто вставляется
один include и не используется ни одна
функция), по-моему, разница
существенная.</em></font></p>

<p align="left"><font size="3">Прислал Mr. None (</font><a
href="mailto:mrnone@online.sinor.ru"><font size="3">mrnone@online.sinor.ru</font></a><font
size="3">).</font></p>

<p align="center"><font size="3">___________</font></p>

<p align="left"><font size="3"><em><strong>Здравствуйте.</strong></em></font></p>

<p align="left"><font size="3"><em>У меня есть
предложение поместить в вашу
рассылку описание функции,
возвращающей псевдослучайные
числа. Многие книги по
программированию об этом
умалчивают, и в вашей рассылке я
тоже этого не встречал. За основу
можно взять метод Дж. Неймана,
который называют еще методом
середины квадратов.</em></font></p>

<p align="left"><font size="3"><em>Метод
заключается в том, что мы берем
некоторое число K0, например k0=0.9876,
возводим его в квадрат и получаем
0.97535376, выберем четыре средние цифры
и положим K1=0.5353. Снова возводим в
квадрат - 0.28654609, снова выбираем
четыре средние цифры. Получаем
K2=0.6546 и т.д : K3=0.8501, K4=0.2670, .... Можно
модифицировать этот метод как
угодно, например брать не средние
цифры, а через одну или накладывать
различные маски на уже полученные K.
Например к К1 добавляем 0.1111, к К2 -
0.1112 .. до 0.2000, а при переполнении
отнимать единицу. Таким образом
поле для исследований большое.
Можно так же составить программу,
которая бы применяла
последовательно определенные
модификации метода и искала тот
метод, где наиболее равномерное
распределение.</em></font></p>

<p align="left"><font size="3"><em>Я думаю, что это
может быть интересно подписчикам.</em></font></p>

<p align="left"><font size="3"><em>Спасибо за то,
что уделили этому внимание,</em></font></p>

<p align="left"><font size="3"><em>Сергей.</em></font></p>

<p align="left"><font size="3">_______</font></p>

<p align="left"><font size="3"><strong>Уважаемый
Сергей!</strong></font></p>

<p align="left"><font size="3">Даже не знаю,
рассмотрим ли мы данный метод или
нет. Боюсь, что время не позволит.</font></p>

<p align="left"><font size="3">Тем не менее,
полагаю, что, изучив Ассемблер, а
также команды сопроцессора, Вы без
труда сами напишите подобную
программу.</font></p>

<p align="center"><font size="3">___________</font></p>

<p align="left"><font size="3">А вот очень
интересное предложение от Макса
Черничкина.</font></p>

<p align="left"><font size="3"><em><strong>Здравствуйте,
уважаемый Олег!</strong></em></font></p>

<p align="left"><font size="3"><em>Прочитал
рассылку №26, и мне пришел в голову
другой вариант хранения файлов в
памяти. Т.к. длина имени файла не
превышает 255 символов, то вместо
адресов следующего и предыдущего
имен можно хранить их длины. Это
позволяет освободить 2 байта на
каждый файл, а для доступа к
следующему или предыдущему имени
файла просто прибавлять или
отнимать длину + 3 байта.</em></font></p>

<p align="left"><font size="3"><em>С другой
стороны, оба этих метода, имхо,
неэффективны в случае, когда
необходимо сделать быстрый скачок
через несколько файлов (например,
при нажатии клавиши движения
курсора вправо или влево). Мне
кажется, что лучше отдельно от
списка файлов создавать массив с
адресами их имен. В самом же списке
файлов вместо 2-х адресов соседних
имен файлов, хранить индекс
текущего имени размером в слово, а
может можно будет и от него
отказаться (потом видно будет).
Также вместе с адресами имен имеет
смысл хранить и статус файла для
более быстрого доступа к нему.
Текущий индекс будем хранить в
переменной типа word.</em></font></p>

<p align="left"><font size="3"><em>И еще такой
вопрос. Во время работы над своей
оболочкой мне надоело постоянно
писать команды push хх при передаче
параметров в процедуры, поэтому я
для каждой процедуры с параметрами
сделал макроопределения, которые
существенно повышают
читабельность и удобство написания
кода.</em></font></p>

<p align="left"><font size="3"><em>Например:</em></font></p>

<p align="left"><font size="3"><em>String macro X,Y,msg,Col<br>
push X<br>
push Y<br>
push offset msg<br>
push Col<br>
call Stringp<br>
endm</em></font></p>

<p align="left"><font size="3"><em>Stringp proc<br>
 ...<br>
ret 8<br>
Stringp endp</em></font></p>

<p align="left"><font size="3"><em>Вызов процедуры:
String 10, 10, message, 1Ah</em></font></p>

<p align="left"><font size="3"><em>Вопрос: нет ли во
всем этом каких-либо &quot;подводных
камней&quot;, которые я мог упустить?
Если я не ошибаюсь, то машинный код
ведь генерируется одинаковый при
нормальном и таком способах вызова
процедуры. Спрашиваю потому, что
нигде такого не видел.</em></font></p>

<p align="left"><font size="3"><em>И последний
вопрос: где можно найти описания
&quot;новых&quot; функций ДОС, типа тех,
что использовались в Super Shell для
работы файлами с длинными именами?
Ни в одном моем справочнике, коих у
меня довольно много, я их не нашел.</em></font></p>

<p align="left"><font size="3"><em>Последние два
вопроса, наверное, надо было
задавать экспертам, но, к сожалению,
у меня очень мало времени на это.
Поэтому заранее прошу извинить
меня.</em></font></p>

<p align="left"><font size="3"><em>--</em></font></p>

<p align="left"><font size="3"><em>Всего доброго,<br>
Макс Черничкин (ака Semax) (</em></font><a
href="mailto:semax@aport.ru"><font size="3"><em>semax@aport.ru</em></font></a><font
size="3"><em>)</em></font></p>

<p align="left"><font size="3">____________</font></p>

<p align="left">Спасибо, Макс, за
интересную идею по поводу хранения
имен длинных файлов. Полагаю, что
всех подписчиков данный алгоритм
заинтересует (он просто не может не
заинтересовать настоящих
ассемблерщиков!).</p>

<p align="left">Что касается вопросов.</p>

<p align="left">По поводу макросов. Это
двольно-таки удобная штука. Однако,
я, например, никогда ими не
пользуюсь. Просто не привык...
Никаких &quot;подводных камней&quot;
здесь быть не может, если, конечно,
Вы сами не допустите ошибку.</p>

<p align="left">По поводу новых функций DOS,
которые я использую в нашей
оболочке. Я беру все это из разных
источников, как на английском, так и
на русском языках. Безусловно,
английской документации больше,
поэтому, если Вы владеете им, то
можете найти описания многих
функций на просторах англоязычного
Интернета. Могу посоветовать
приобрести книгу Зубкова
&quot;Ассемблер для DOS, Windows и Unix&quot;. В
ней можно также встретить много
полезной информации.</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="resident"><font
        color="#004080" size="5"><strong>Последний
        резидент</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="center"><font color="#804040" size="4"><strong>RESID27.ASM<br>
</strong></font><font size="4"><!--webbot bot="Validation"
b-value-required="TRUE" i-minimum-length="1" i-maximum-length="80" --><textarea name="Resid27" rows="5"
cols="33">
;            RESID27.ASM - программа к рассылке № 27

; (С) Авторское право на файл-приложение принадлежит подписчикам рассылки &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки: Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

;   === Начало программы: ===
cseg segment
assume cs:cseg, ds:cseg, ss:cseg, es:cseg
org 100h

Begin:
    jmp Init ; На метку инициализации &#25;


; === Обработчик 21h-ого прерывания ===
Int_21h_proc proc
; ---
    cmp ax,9988h  ;Проверка на повторную загрузку...
    jne No_test
    xchg ah,al    ;Даем наш &quot;отклик&quot;.
    iret          ;И моментально выходим из прерывания...

; ---
No_test:
    cmp ax,9999h  ;Получаем информацию о нашем резиденте?
    jne No_remove
    mov ax,9998h  ;Даем отклик и...

    push cs       ;...передаем в ES сегмент резидента...
    pop es
    mov dx,offset Int_21h_proc ;...в DX смещение...

;...BX - смещение оригинального обработчика...
    mov bx,word ptr cs:[Int_21h_vect]
;...CX - сегмент оригинального обработчика...
    mov cx,word ptr cs:[Int_21h_vect+2]
    iret ;...и выходим из резидента.

; ---
No_remove:
;Ну что сделает наш резидент? Да, собственное, суть не в том, что он будет
;делать, а в том, что мы сможем его выгружать из памяти.
;Поэтому давайте просто будем заменять символы 'A' на 'Z', если они
;выводятся при помощи функции 02 прерывания 21h. Ниже все видно:
    cmp ah,2
    jne Go_21h

    cmp dl,'A'
    jne Go_21h

    mov dl,'Z'

Go_21h:
;Передаем управление предыдущему (оригинальному) обработчику
;21h-ого прерывания...
    jmp dword ptr cs:[Int_21h_vect]

Int_21h_vect dd ?
Int_21h_proc endp




;   === Инициализация (подготовка и настройка резидента) ===
Init:
       mov es,word ptr cs:[2Ch] ;Получим сегмент окружения DOS.
       mov ah,49h               ;Функция освобождения памяти.
       int 21h                  ;Освобождаем память...

       call Get_cmd  ;Проверим командную строку

;Итак,
;Если ничего в командной строке не введено, тогда пробуем установить резидент.
       or al,al
       jz Ok_cmd  ;&#25;

;Если в командной строке введено '/u', то пробуем удалить программу из памяти.
       cmp al,1
       je Remove  ;&#25;

;В противном случае выведем сообщение о неверной командной строке
;и завершимся...
Bad_cmd:
       mov dx,offset Mess_badcmd
       call Out_mess
       ret


;На процедуру удаления программы из памяти...
Remove:
       jmp Remove_prog   ;&#25;


;Устанавливаем резидент.
Ok_cmd:
       mov ax,9988h ;Проверка на повторную загрузку.
       int 21h
       cmp ax,8899h ;Получили наш отклик?
       jne Next_step2  ;Нет. Тогда &#25;

;Мы уже в памяти! Выведем соответствующую строку.
       mov dx,offset Mess_memory
       call Out_mess   ;Универсальная процедура вывода строки.
       ret   ;Выйдем в DOS...

Next_step2:
; === 21h ===
;Все готово для перехвата прерывания и установки резидента.
       mov ax,3521h
       int 21h ;Получим и сохраним адрес (вектор) 21h прерывания
       mov word ptr cs:[Int_21h_vect],bx ;Смещение...
       mov word ptr cs:[Int_21h_vect+2],es ;Сегмент...

       mov ax,2521h
       mov dx,offset Int_21h_proc
       int 21h  ;&quot;Повесим&quot; нашу процедуру на 21h прерывание

;Выведем сообщение, что, мол, все в порядке!!! Программа загружена в память!
       mov dx,offset Mess_hello
       call Out_mess

;Оставляем резидентную часть в памяти и выходим в DOS.
       mov dx,offset Init
       int 27h


; ======= Пошли подрограммы =======

; --- Получим параметры в командной строке ---
Get_cmd proc
       mov si,80h   ;SI=смещение командной строки.
       lodsb        ;Получим кол-во символов.
       or al,al     ;Если 0 символов введено,
       jz Got_cmd   ;то все в порядке. &#25;
       cmp al,3     ;Иначе ввели не 3 символа? (пробел + /u)
       jne No_string ;Да - на метку No_string &#25;

       inc si       ;Теперь SI указывает на первый символ строки.

Next_char:
       lodsw       ;Получаем два символа
       cmp ax,'u/' ;Это /u? Помним, что данные будут наоборот!!!
       jne No_string ;Да - на выход... &#25;

       mov al,1    ;Сигнал того, что пора удалять программу из памяти
       ret

Got_cmd:
       xor al,al ;Сигнал того, что ничего не ввели в командной строке
       ret  ;Выходим из процедуры

No_string:
       mov al,3 ;Сигнал неверного ввода командной строки
       ret  ;Выходим из процедуры
Get_cmd endp


; === Удаляем программу из памяти ===
Remove_prog:
;Прежде посылаем сигнал 21h-ому прерыванию, т.е. 9999h.
       mov ax,9999h
       int 21h

;Если в ответ получаем 9998h, то наш резидент &quot;сидит&quot; в памяти.
       cmp ax,9998h
       je In_mem     ;Перейдем на соответствующую метку.

;Если мы не получили отклик (9998h), то наш резидент не загружен.
;Сообщим об этом пользователю и выйдем в DOS.
       mov dx,offset Mess_badmem
       call Out_mess
       ret


;Итак, наш резидент сидит в памяти.

;Помимо отклика от нашего резидента мы также получаем (см. процедуру
;обрабоки прерывания 21h выше):
;* ES = сегмент, в который загрузился резидент;
;* DX = смещение резидента в данном сегменте;
;* CX = сегмент оринигального (прежнего) обработчика прерывания 21h;
;* BX = смещение оринигального (прежнего) обработчика прерывания 21h.

In_mem:
       push es    ;Сохраним некоторые регистры в стеке,..
       push bx

       mov Seg_21h,es ;...а также в переменных.
       mov Off_21h,dx

       push bx
       push cx

       mov ax,3521h
       int 21h     ;Получим адрес обработчика 21h-прерывания.

;Равен ли он тому, куда загружен наш обработчик.
;Если так, то никто не &quot;повис&quot; над нами. Т.е. можно смело удалять нашу
;программу из памяти
       mov ax,es
       cmp ax,Seg_21h
       jne Cannot_remove

       cmp bx,Off_21h
       jne Cannot_remove

;Вот и удаляем. Внимательно проследите, что мы загружаем в регистры!
       cli
       mov ax,2521h
       pop ds
       pop dx
       int 21h

       push cs
       pop ds

       mov ah,49h
       int 21h
       sti

;Программа удалена! Выведем сообщение об успешном удалении и вернемся в DOS.
       mov dx,offset Remove_okmess

Exit_prog:
       call Out_mess
       int 20h


;Невозможно удалить программу, т.к. кто-то &quot;повис&quot; над нами.
Cannot_remove:
;Сообщим о случившейся беде пользователю и выйдем в DOS...
       mov dx,offset Mess_cantremove
       jmp short Exit_prog

Seg_21h dw ?
Off_21h dw ?


; === Вывод строки на экран ===
Out_mess proc
       mov ah,9 ;Выводим строку. DX уже должен содержать ее адрес!
       int 21h

       mov ah,9 ;Выводим сообщение типа &quot;нажимте любую клавишу&quot;.
       mov dx,offset Any_key
       int 21h

       xor ah,ah ;Ждем нажатия на клавишу...
       int 16h

       ret
Out_mess endp


;  === Сообщения ===
Mess_hello db 0Ah,0Dh,'Резидент к рассылке № 027 &quot;Ассемблер? Это просто! Учимся программировать&quot;.',0Ah,0Dh,0Ah
           db 'Автор: Калашников Олег Александрович (Assembler@Kalashnikoff.ru),',0Ah,0Dh
           db 'http://www.Kalashnikoff.ru, Россия, Москва, 2001 год.',0Ah,0Dh,0Ah
           db '!!! Для проверки работы программы читайте 27 выпуск рассылки !!!',0Ah,0Dh,'$'

Mess_memory db 0Ah,0Dh,'!!! Программа уже загружена в память !!!',0Ah,0Dh
            db 'Для ее удаления из памяти укажите /u в командной строке!',0Ah,0Dh,'$'

Mess_badcmd db 0Ah,0Dh,'Неверно указан параметр в командной строке!!!',0Ah,0Dh
            db 'Укажите /u, если хотите удалить программу из памяти!',0Ah,0Dh,'$'

Mess_badmem db 0Ah,0Dh,'Хм... Программы ведь нет в памяти!!! Как я могу ее удалить???',0Ah,0Dh,'$'

Remove_okmess db 0Ah,0Dh,'Программа успешно удалена из памяти!!! Ура!!!',0Ah,0Dh,'$'

Mess_cantremove db 0Ah,0Dh,'Не могу удалить резидент из памяти!!!',0Ah,0Dh,0Ah
                db 'Дело в том, что какая-то программа перехватила 21h-ое прерывание после того,',0Ah,0Dh
                db 'как загружен был RESID27.COM. Прежде необходимо удалить ее из памяти,',0Ah,0Dh
                db 'а потом уже удалять RESID27.COM!',0Ah,0Dh,'$'

Any_key db 0Ah,'Для продолжения нажмите любую клавишу...$'

cseg ends
end Begin</textarea></font></p>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%">
    <tr>
        <td align="center" width="50%"><font size="4">RESID27_.ASM</font><br>
        <font size="4"><!--webbot bot="Validation" b-value-required="TRUE"
        i-minimum-length="1" i-maximum-length="80" --><textarea name="Resid27_"
        rows="5" cols="22">
;            RESID27_.ASM - дополнительный резидент к рассылке № 27

; (С) Авторское право на файл-приложение принадлежит подписчикам рассылки &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки: Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

;!!! Данная программа просто &quot;вешается&quot; на 21h-ое прерывание. !!!
;!!! Как ей пользоваться - читайте 27 выпуск рассылки. !!!

;   === Начало программы: ===
cseg segment
assume cs:cseg, ds:cseg, ss:cseg, es:cseg
org 100h

Begin:
    jmp Init ; на метку инициализации


; === Обработчик 21h-ого прерывания ===
Int_21h_proc proc
    cmp ax,9977h
    jne No_test
    xchg ah,al
    iret

No_test:
    cmp ah,2
    jne Go_21h

    cmp dl,'A'
    jne Go_21h

    mov dl,'X'

Go_21h:
    jmp dword ptr cs:[Int_21h_vect]

Int_21h_vect dd ?
Int_21h_proc endp


;   === Инициализация (подготовка и настройка резидента) ===
Init:
       mov ax,9977h ;Проверка на повторную загрузку.
       int 21h
       cmp ax,7799h
       jne Next_step2

       mov ah,9      ;Мы уже в памяти! Выведем соответствующую строку.
       mov dx,offset Mess_memory
       int 21h

       ret   ;Выйдем в DOS...

Next_step2:
; === 21h ===
       mov ax,3521h
       int 21h ;Получим и сохраним адрес (вектор) 09h прерывания
       mov word ptr cs:[Int_21h_vect],bx ;Смещение...
       mov word ptr cs:[Int_21h_vect+2],es ;Сегмент...

       mov ax,2521h
       mov dx,offset Int_21h_proc
       int 21h  ;&quot;Повесим&quot; нашу процедуру на 09h прерывание

       mov ah,9
       mov dx,offset Mess_hello
       int 21h  ;Все в порядке!!!

       mov dx,offset Init
       int 27h  ;Оставим часть программы в памяти.

;  === Сообщения ===
Mess_hello db 0Ah,0Dh,'Резидент к рассылке № 027 &quot;Ассемблер? Это просто! Учимся программировать&quot;.',0Ah,0Dh,0Ah
           db 'Автор: Калашников Олег Александрович (Assembler@Kalashnikoff.ru),',0Ah,0Dh
           db 'http://www.Kalashnikoff.ru, Россия, Москва, 2001 год.',0Ah,0Dh,'$'

Mess_memory db 0Ah,0Dh,'!!! Программа уже загружена в память !!!',0Ah,0Dh,'$'

cseg ends
end Begin</textarea></font></td>
        <td align="center" width="50%"><font size="4">TEST27.ASM</font><br>
        <font size="4"><!--webbot bot="Validation" b-value-required="TRUE"
        i-minimum-length="1" i-maximum-length="80" --><textarea name="Test27" rows="5"
        cols="22">
;            TEST27.ASM - дополнительная программа к рассылке № 27

; (С) Авторское право на файл-приложение принадлежит подписчикам рассылки &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки: Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

;!!! Как пользоваться данной программой - читайте 27 выпуск рассылки. !!!

;   === Начало программы: ===
cseg segment
assume cs:cseg, ds:cseg, ss:cseg, es:cseg
org 100h

; --- Все просто!!! ---

Begin:
       mov ah,2
       mov cx,80

Next_char:
       mov dl,'A'
       int 21h
       loop Next_char

       ret

; --- Без комментариев!!! ---

cseg ends
end Begin</textarea></font></td>
    </tr>
</table>
</center></div>

<p align="center"><a
href="http://www.Kalashnikoff.ru/cgi-bin/download.cgi?Assembler/Issues/Enclosures/Resid27.exe"
target="_blank"><font size="4"><b><u>Приложение в
Интернете</u></b></font></a></p>

<p><strong>ВНИМАНИЕ!!!</strong> Не спешите
ассемблировать программу. Прочтите
сперва выпуск!</p>

<p>Сегодня у нас последний пример
резидентной программы под DOS, в
которой мы рассмотрим удаление
резидента из памяти.</p>

<p>Казалось бы: неужели так сложно
удалить резидентную программу из
памяти? С одной стороны ничего
сложного в этом нет, но с другой
существует некоторая сложность.</p>

<p>Во-первых, резидент не всегда
удается удалить.</p>

<p>Во-вторых, необходима некоторая
подготовка и проверка определенных
параметров перед удалением.</p>

<p>И наконец, резидентная часть
программы, которая будет удалена,
должна передавать по определенному
запросу нужную информацию
программе, которая ее удалит.</p>

<p>Все это мы рассмотрим в настоящем
выпуске. Как обычно для понимания
темы вам помогут файлы-приложения.</p>

<p>Рекомендую вам внимательно
ознакомиться с приведенной в
данном выпуске информацией, т.к. она
поможет вам полностью понять
механизм прерываний и принцип
работы резидентных программ. Мы
почти все это уже рассматривали, но,
тем не менее...</p>

<p align="center">__________</p>

<p>Выше голову, господа! Приступаем!</p>

<p>Итак, представим, что никакая
резидентная программа не
перехватывает прерывание 21h. Т.е.
его адрес (вектор) указывает
прямиком на ядро DOS. Вот таблица:</p>

<table border="1" cellpadding="0" cellspacing="1" width="80%">
    <tr>
        <td bgcolor="#8BC5C5"><strong>Адрес</strong></td>
        <td bgcolor="#8BC5C5"><strong>Кто перехватывает</strong></td>
        <td bgcolor="#8BC5C5"><strong>Куда
        отправляет после обработки</strong></td>
    </tr>
    <tr>
        <td>1234:0000h</td>
        <td>Ядро DOS</td>
        <td>Никуда</td>
    </tr>
</table>

<p>Как вам уже известно, MS-DOS имеет
свои обработчики некоторых
прерываний (например, 20h, 21h и пр.).
Использовать прерывания DOS без
загрузки самой ОС невозможно. При
попытке это сделать, компьютер
просто зависнет. Например, в
программе загрузочного сектора
диска (которая загружается самая
первая, т.е. до загрузки DOS) нельзя
пользоваться функциями DOS, т.к. они
просто не загружены. Но ей ничего не
мешает использовать прерывания BIOS,
т.к. они находятся в области ПЗУ и
могут вызываться из любой ОС и в
любое время.</p>

<p>Теперь внимательно смотрите на
приведенную выше таблицу. В данном
случае, допустим, что процедура
обработки 21h-ого прерывания MS-DOS
загрузилась по адресу 1234:0000h.
Никакая иная программа его не
перехватила еще. Т.о., выполняя
команду int 21h, процессор передаст
управление напрямую процедуре
обработки 21h-ого прерывания <strong><u>MS-DOS</u></strong>,
т.е. на адрес 1234:0000h. Данная
процедура, отработав (например,
выведя на экран строку), передаст
управление сразу нашей программе.
Это простейшая схема. Надеюсь, что
понятно...</p>

<p>Теперь пользователь загружает
некий резидент с именем progA.com,
который перехватывает 21h-ое
прерывание. Вот, что у нас
получится:</p>

<table border="1" cellpadding="0" cellspacing="1" width="80%">
    <tr>
        <td bgcolor="#8BC5C5"><strong>Адрес</strong></td>
        <td bgcolor="#8BC5C5"><strong>Кто перехватывает</strong></td>
        <td bgcolor="#8BC5C5"><strong>Куда
        отправляет после обработки</strong></td>
    </tr>
    <tr>
        <td>1234:0000h</td>
        <td>Ядро DOS</td>
        <td>Никуда</td>
    </tr>
    <tr>
        <td>2345:0000h</td>
        <td>progA.com</td>
        <td>1234:0000h</td>
    </tr>
</table>

<p>Здесь видно, что progA.com перехватила
21h-ое прерывание. Т.е. как бы стало
фильтром на пути к оригинальному
обработчику (обработчику MS-DOS
(1234:0000h)).</p>

<p>Теперь, выполняя команду int 21h,
первым, кто получит управление, -
это progA.com. Процедура обработки
21h-ого прерывания программы progA.com
(которая находится по адресу 2345:0000h),
получает управление, делает, что
хочет, а затем передает дальше, т.е.
на 1234:0000h. Ядро DOS выполняет
определенные действия, а затем
передает управление назад <strong><u>командой
iret</u></strong>.</p>

<p>Вот здесь важно уяснить. Допустим,
команда int 21h нашей программы
находится по адресу 3456:0100h. Тогда,
при выполнении команды int 21h, в стек
будет занесен адрес 3456:0102h (т.е.
адрес следующей команды. Не
забывайте, что int 21h занимает два
байта!), а процессор возьмет адрес
21h-ого прерывания из таблицы
векторов прерываний (помните
такую?) и передаст управление по
этому адресу (т.е. на 2345:0000h, т.е. на
progA.com).</p>

<p>В свою очередь, progA.com отработает
(может, например, изменить значения
каких-либо регистров, что делает
наш резидент) и передаст
управление... А куда, собственно,
передаст управление???</p>

<p>Вот для этой цели мы в наших
резидентах сперва получаем текущий
адрес обработчика того или иного
прерывания, а затем, как наш
обработчик отработал, передаем
управление на сохраненный адрес.</p>

<p>Программа progA.com поступит точно
также. Перед тем, как установить
обработчик на свою процедуру, она
сперва получает адрес прежнего
(оригинального) обработчика (т.е. в
данном случае - ядра DOS, т.к. никакие
резидентные программы не
загружены), вызывая функцию 35h
прерывания 21h, либо прочитав адрес
напрямую из таблицы векторов
прерываний.</p>

<p>Продолжим. ProgA.com отработает и
передаст управление по
предварительно сохраненному
адресу на предыдущую процедуру
обработки int 21h.</p>

<p>Получает управление ядро DOS.
Выполняет свои действия и
возвращается. Спрашивается, куда и
как?</p>

<p>Естественно, что командой iret,
которая вытаскивает из стека
предварительно занесенный в него
адрес. Какой? На progA.com, либо на нашу
программу, выполнившую команду int
21h?</p>

<p>Все зависит от того, каким образом
progA.com передало управление. Как уже
не раз отмечалось в предыдущих
выпусках, существует два способа
передачи управления прежнему
(оригинальному) обработчику:</p>

<p><strong>1. jmp dword ptr cs:[Int_21h_vect]</strong></p>

<p>и</p>

<p><strong>2. pushf</strong><font size="3"><strong><br>
</strong></font><strong>call dword ptr cs:[int_21h_vect]</strong></p>

<p><strong>В первом случае</strong> команда
iret передаст управление сразу нашей
программе, которая вызывала
прерывание 21h командой int 21h. Это и
понятно: jmp в стек ничего не кладет.
Получается, что перед выполнением
команды jmp... в стеке находится адрес
возврата на нашу программу (если,
конечно, progA.com не нарушает работу
стека). Команда IRET обработчика 21h
ядра DOS вытащит со стека адрес
возврата на нашу программу и все!
Наша программа пойдет работать
дальше, даже не &quot;подозревая&quot; о
том, что некая progA.com сидит в памяти и
контролирует вызов 21h-ого
прерывания!</p>

<p><strong>Во втором случае</strong> после
выполнения IRET управление получит
progA.com. Здесь также все понятно:
команда call заносит в стек адрес
возврата. IRET и вытащит со стека его!
Зачем нужен pushf - вы уже знаете...</p>

<p>Что же будет дальше делать progA.com?
Она может посмотреть, что вернула
функция и выполнить определенные
действия. Затем выполнит команду
IRET, которая вытащит со стека адрес
возврата на нашу программу, которая
и вызывала 21h-ое прерывание
командой int 21h.</p>

<p>Для чего нужно программе progA.com
перехватывать int 21h? Да по разным
причинам. Многие из них мы уже
рассмотрели. Например, контроль за
открытием / закрытием файла,
чтением / записью да и за всем, что
выполняет прерывание 21h!</p>

<p>Вы уловили суть? Очень надеюсь...
Если нет, то попробуйте внимательно
прочитать еще раз.</p>

<p>Итак, вернемся.</p>

<p>Мы остановились на том, что progA.com
&quot;повисла&quot; на 21h прерывание,
предварительно сохранив в своем
теле адрес оригинального
обработчика (т.е. обработчика ядра
DOS, т.е. 1234:0000h). Теперь при выполнении
команды int 21h управление получает
сперва progA.com, а затем уже ядро DOS.</p>

<p>Теперь мы загружаем еще одну
программу progB.com, которая также
перехватит 21h-ое прерывание!
Смотрим:</p>

<table border="1" cellpadding="0" cellspacing="1" width="80%">
    <tr>
        <td bgcolor="#8BC5C5"><strong>Адрес</strong></td>
        <td bgcolor="#8BC5C5"><strong>Кто перехватывает</strong></td>
        <td bgcolor="#8BC5C5"><strong>Куда
        отправляет после обработки</strong></td>
    </tr>
    <tr>
        <td>1234:0000h</td>
        <td>Ядро DOS</td>
        <td>Никуда</td>
    </tr>
    <tr>
        <td>2345:0000h</td>
        <td>progA.com</td>
        <td>1234:0000h</td>
    </tr>
    <tr>
        <td>3456:0000h</td>
        <td>progB.com</td>
        <td>2345:0000h</td>
    </tr>
</table>

<p>Теперь какая-то программа (ну,
например, NC.EXE) вызывает int 21h. Что
происходит?</p>

<p>Int 21h кладет в стек адрес возврата,
достает с таблицы векторов
прерываний адрес 21h-ого прерывания
(т.е. 3456:0000h) и передает ему
управление. ProgB.com выполняет то, что
хочет и передает управление на
адрес прежнего (оригинального)
обработчика 21h-ого прерывания,
который был ей предварительно
сохранен (т.е. на 2345:0000h, т.е. progA.com).
ProgA.com, в свою очередь, делает то, что
хочет и т.д. по цепочке, пока
управление не получит ядро DOS. Т.о.
на одно прерывание можно
&quot;насаживать&quot; неограниченного
число резидентов.</p>

<p>Теперь возникает вопрос: как
удалять резидент из памяти?</p>

<p>Вернемся к таблице.</p>

<table border="1" cellpadding="0" cellspacing="1" width="80%">
    <tr>
        <td bgcolor="#8BC5C5"><strong>Адрес</strong></td>
        <td bgcolor="#8BC5C5"><strong>Кто перехватывает</strong></td>
        <td bgcolor="#8BC5C5"><strong>Куда
        отправляет после обработки</strong></td>
    </tr>
    <tr>
        <td>1234:0000h</td>
        <td>Ядро DOS</td>
        <td>Никуда</td>
    </tr>
    <tr>
        <td>2345:0000h</td>
        <td>Resid27.com</td>
        <td>1234:0000h</td>
    </tr>
</table>

<p>Думаю, что пояснения не требуются.
Но есть несколько вопросов:</p>

<p>________</p>

<p>1. Как нам узнать, куда загрузилась
программа Resid27.com?</p>

<p>2. Как нам узнать адрес
обработчика прерывания ядра DOS?</p>

<p>3. Как нам удалить программу из
памяти?</p>

<p>________</p>

<p>Все ответы очень просты.</p>

<p>1. Помните, как мы передавали
&quot;позывной&quot; нашему резиденту.
Если он откликался, значит уже есть
в памяти; если нет - то пока не
загружен.</p>

<p>Таким же способом можно получить
сегмент и смещение процедуры
обработки 21h-ого прерывания. Сперва
проверим на повторную загрузку (mov
ax,9988h / int 21h), а затем отправим
какое-нибудь число (в нашем примере
- 9999h). Тогда наш резидент, получив 9999h
в AX, моментально выходит из
процедуры, передавая в
определенных регистрах
необходимую информацию, а именно:
сегмент и смещение резидентной
части, сегмент и смещение
оригинального обработчика 21h-ого
прерывания (в данном случае - ядра
DOS). Этого будет вполне достаточно
для удаления резидента.</p>

<p>Затем, убедившись, что резидент
загружен и получив необходимую
информацию для удаления, можно
приступать к освобождению памяти.</p>

<p>Делаем буквально следующее:</p>

<p>1. Запрещаем все прерывания
командой cli;</p>

<p>2. Восстанавливаем адрес
оригинального обработчика (т.е.
ядра DOS);</p>

<p>3. Освобождаем память функцией 49h;</p>

<p>4. Разрешаем прерывания командой sti.</p>

<p>Все! Резидента как не бывало!!!</p>

<p><font size="4"><strong>Но!</strong></font></p>

<p>Представим такую ситуацию.
Допустим, после нашего резидента
загрузился еще один, который также
перехватил 21h-ое прерывание. Тогда
получаем следующее:</p>

<table border="1" cellpadding="0" cellspacing="1" width="80%">
    <tr>
        <td bgcolor="#8BC5C5"><strong>Адрес</strong></td>
        <td bgcolor="#8BC5C5"><strong>Кто перехватывает</strong></td>
        <td bgcolor="#8BC5C5"><strong>Куда
        отправляет после обработки</strong></td>
    </tr>
    <tr>
        <td>1234:0000h</td>
        <td>Ядро DOS</td>
        <td>Никуда</td>
    </tr>
    <tr>
        <td>2345:0000h</td>
        <td>Resid27.com</td>
        <td>1234:0000h</td>
    </tr>
    <tr>
        <td>3456:0000h</td>
        <td>ProgA.com</td>
        <td>2345:0000h</td>
    </tr>
</table>

<p>Возникает вопрос: что произойдет,
если мы удалим Resid27.com из памяти?
Подумайте!!!</p>

<p>Ответ: программа, выполняющая
команду int 21h, передаст управление на
адрес 3456:0000h, т.е. программе progA.com.
ProgA.com, отработав, передаст
управление на адрес 2345:0000h. Но что
будет находится по этому адресу,
если мы удалим Resid27.com?</p>

<p>Возникает еще один вопрос: а можно
ли тогда вообще удалить Resid27.com, если
после него загрузился еще один
резидент, который также
перехватывает 21h-ое прерывание?</p>

<p>Ответ: а никак! Нужно сперва
удалить progA.com, а затем уже удалять
Resid27.com.</p>

<p><em>Примечание.</em> Resid27.com - это
программа, которую мы написали.
Удалить чужой резидент очень
сложно. Например, Volcov Commander может
удалять резиденты. Надеюсь, вы
поймете, как он это делает. Но
обратите внимание, что удаляет он
их снизу вверх. Советую
поэкспериментировать с VC. <strong>Очень
советую...</strong></p>

<p>___________</p>

<p>Что еще осталось? Осталось только
прочитать комментарии к
файлам-приложениям, которых у нас
сегодня три.</p>

<p><font size="4"><strong>Как
экспериментировать с прилагаемыми
файлами?</strong></font></p>

<p>1. Запустите TEST27.COM.</p>

<p>2. Запустите RESID27.COM без параметров
в командной строке.</p>

<p>3. Запустите снова TEST27.COM.</p>

<p>4. Запустите RESID27.COM с параметром /u
(т.е. resid27.com /u).</p>

<p>5. Запустите снова TEST.COM.</p>

<p>6. Запустите RESID27.COM.</p>

<p>7. Запустите RESID27_.COM.</p>

<p>8. Запустите RESID27.COM с параметром /u
(т.е. resid27.com /u).</p>

<p>9. Прочтите описания в
файлах-приложениях, а также еще раз
рассылку.</p>

<p>10. Задавайте вопросы нашим
экспертам и наслаждайтесь жизнью!</p>

<p><b>Удачи!</b></p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="tusoffka"><font
        color="#004080" size="5"><strong>Тусоffка</strong></font></a></td>
    </tr>
</table>
</center></div>

<p>Итак, подача заявок на участие в
Тусоffке <strong><u>прекращена</u></strong>.
Всего подано заявок: 31. Точное время
и место встречи будет сообщено по
почте персонально каждому
подавшему заявку. Ориентировочно:
конец мая - начало июня, Москва.
Место встречи одно из следующих:
центр города, Парк Культуры,
Гребной канал, Тушино, ближайшее
Подмосковье... Просьба ко всем, кто
подал заявку: напишите, где бы Вы
хотели встретиться. Забыл я это в
форме указать...</p>

<p>Вами предложено много разных
интересных тем. Надеюсь, что мы все
обсудим!</p>

<p>К сожалению, последнее письмо от
Олега (дата получения: 17 апреля)
было получено с небольшими
искажениями в электронном адресе
отправителя. Прошу Вас, Олег,
отправить мне на e-mail Вашу заявку
повторно. Спасибо.</p>

<hr>

<p><font size="4" face="Arbat-Bold"><strong>С
уважением,</strong></font></p>

<p><font size="3"><strong>Калашников Олег: </strong></font><a
href="mailto:Assembler@Kalashnikoff.ru"><font size="3"><strong>Assembler@Kalashnikoff.ru</strong></font></a><font
size="3"><strong><br>
Мой ICQ No.: </strong></font><font color="#226622" size="3"><strong>68951340</strong></font><font
size="3"><strong><br>
My ICQ secretary No. </strong><strong><u>(только
по-английски!)</u></strong><strong>: </strong></font><font
color="#226622" size="3"><strong>115592286</strong></font><font
size="3"><strong><br>
URL сайта подписчиков: </strong></font><a
href="http://www.Kalashnikoff.ru"><font size="3"><strong>http://www.Kalashnikoff.ru</strong></font></a></p>

<p align="left"><strong>______________</strong></p>

<p align="left"><strong>По вопросам
сотрудничества, рекламы и
спонсорства обращайтесь:</strong></p>

<ol>
    <li><font size="2">Публичное размещение
        материала из рассылки: </font><a
        href="mailto:Cooperation@Kalashnikoff.ru"><font size="2">Cooperation@Kalashnikoff.ru</font></a></li>
    <li><font size="2">Реклама на сайте, в
        книге и рассылках: </font><a
        href="http://www.Kalashnikoff.ru/Reklama.html"><font
        size="2">http://www.Kalashnikoff.ru/Reklama.html</font></a><font
        size="2">, </font><a
        href="mailto:Reklama@Kalashnikoff.ru"><font size="2">Reklama@Kalashnikoff.ru</font></a></li>
    <li><font size="2">Издание книги по
        материалам рассылки
        (спонсорство): </font><a
        href="mailto:Sponsor@Kalashnikoff.ru"><font size="2">Sponsor@Kalashnikoff.ru</font></a></li>
</ol>

<hr>

<p align="center"><font color="#004040" size="4"><strong><u>Наши
друзья</u></strong></font></p>

<p align="left">Подписка на рассылку <a
href="mailto:darlok@mail2000.ru">Сергея
Никифорова</a> &quot;<a
href="http://subscribe.ru/catalog/comp.soft.prog.vbs">Программирование
на Visual Basic и ASP</a>&quot; на <a
href="http://subscribe.ru/">Subscribe.ru</a> (код
рассылки: <strong>comp.soft.prog.vbs</strong>).</p>

<p align="left">Название и сайт автора: <strong>Visual
Basic Streets, </strong><a href="http://www.vbstreets.ru"><strong>http://www.vbstreets.ru</strong></a>.</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#DDEEFF" bordercolor="#808080"
bordercolorlight="#FFFFFF">
    <tr>
        <td colspan="3" bgcolor="#BDDEFF"><font color="#400040"
        size="1"><strong>(C) Москва, 2001.
        Авторское право принадлежит
        Калашникову О.А.</strong> Публичное
        размещение материала из
        рассылки, а также его
        использование полностью или
        частично в коммерческих или
        иных подобных целях без
        письменного согласия автора
        влечет ответственность за
        нарушение авторских прав.</font></td>
    </tr>
</table>
</center></div>

<hr>

<p align="center">[<a href="028.htm">Следующий выпуск</a>] [<a target=_BLANK href="http://www.Kalashnikoff.ru/">На главную страницу</a>]</p>

<HR NOSHADE><CENTER>
<a TARGET=_blank href=lite.lbe.ru/oleg77?1012 target=_top> 
<img src=http://lite.lbe.ru/cgi-bin/banner/oleg77?1012 width=468 height=60 border=0 alt="List Banner Exchange lite" ismap></a></CENTER>

<HR NOSHADE><CENTER>
<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript><p align="center"><a 
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" 
target="_blank"><img src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG" align="middle" border="0"></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"> 
<script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> 
<!-- SpyLOG --> 
 
 <a target=_top href="http://www.one.ru"><img src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&t=9" width=88 height=31 alt="be number one" border=0></a> 
 
 <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a 
target=_top href="http://top.list.ru/jump?from=87856"><img 
src="http://top.list.ru/counter?js=na;id=87856;t=54" 
border=0 height=31 width=88 
alt="TopList"></a></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script> 
 
<br><br> 

</BODY></HTML>
