<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="keywords"
content="assembler asembler ассемблер асемблер программирование програмирование вирус антивирус программа низкоуровневое прерывание сегментация сегмент регистр резидент DOS Windows">
<meta name="author"
content="Assembler@Kalashnikoff.ru Автор рассылки Калашников Олег">
<meta name="GENERATOR" content="Microsoft FrontPage Express 2.0">
<title>Kalashnikoff.ru - Ассемблер? Это просто!.. (Выпуск № 029) (Запуск программ)</title>
<STYLE>
<!-- a:link, a:visited, a:active { text-decoration: none; color: #226622} 
a:hover { text-decoration: bold; color: #662266; } 
 .ff { 
font-family : Arial, helvetica, sans-serif; 
font-style : normal; 
font-variant : normal; 
} -->
</STYLE>
</head>

<body bgcolor="#CFE7E7" body>
<div align="center"><center>

<table border="1" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#CDCD9C">
    <tr>
        <td colspan="3" width="100%"><p align="center"><font
        color="#004080" size="5"><em><strong>Ассемблер?
        Это просто! Учимся
        программировать</strong></em></font> <font
        color="#000000" size="2"><br>
        ______________________________________</font></p>
        <p align="center"><font size="4">Выпуск N 029 (</font><a
        href="#startprog"><font size="4">Запуск
        программ</font></a><font size="4">)</font></p>
        </td>
    </tr>
</table>
</center></div>

<p align="center"><font color="#004080" size="5"
face="Monotype Corsiva"><b>Приветствую вас,
уважаемые подписчики!</b></font></p>

<p align="left"><font color="#000000" size="4"><strong>Сегодня
в номере:</strong></font></p>

<dir type="disc">
    <li><p align="left"><a href="#newsfornew">Информация
        для новых подписчиков</a></p>
    </li>
    <li><p align="left"><a href="#news">Новости</a></p>
    </li>
    <li><p align="left"><a href="#letters">Ваши письма</a></p>
    </li>
    <li><p align="left"><a href="#startprog">Запуск
        программ</a></p>
    </li>
    <li><p align="left"><a href="#partners">Наши
        партнеры</a></p>
    </li>
</dir>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="newsfornew"><font
        color="#004080" size="5" face="Times New Roman"><strong>Информация
        для новых подписчиков</strong></font></a>
        </td>
    </tr>
</table>
</center></div>

<p align="left"><font size="3">Благодарю Вас, что
подписались на рассылку <em>&quot;Ассемблер?
Это просто! Учимся
программировать&quot;</em>. Надеюсь, что
Вы не останетесь равнодушны к ней и
почерпнете море полезной
информации, а также повысите свой
уровень в &quot;общении&quot; с
IBM-совместимыми компьютерами.</font></p>

<p align="left"><font size="3">Прежде, чем
приступать к изучению материала в
данном выпуске, Вам необходимо
внимательно ознакомиться с
предыдущими. Я уверен, что Вы очень
быстро и без труда догоните
остальных подписчиков, не смотря на
то, что у нас уже 29 выпуск.</font></p>

<p align="left"><font size="3">Все, что нужно для
изучения Ассемблера (предыдущие
выпуски, необходимые программы,
документацию, форму для подачи
вопроса экспертам, а также многое
другое), можно найти на сайте </font><a
href="http://www.Kalashnikoff.ru"><font size="3">http://www.Kalashnikoff.ru</font></a><font
size="3">. Рекомендую Вам сперва
ознакомиться с разделом <em>&quot;Для
новых подписчиков&quot;</em>.</font></p>

<p align="left"><font size="2">Если у Вас нет
выхода в Сеть, то предыдущие
выпуски рассылки, файлы-приложения
и информацию для новеньких можно
получить по почте, направив пустое
письмо по адресу </font><a
href="mailto:AssmIssues@Kalashnikoff.ru"><font size="2">AssmIssues@Kalashnikoff.ru</font></a><font
size="2">. Архив (420 Кб) будет выслан Вам
автоматически в течение <strong><u>двух
рабочих</u></strong> дней с момента
получения Вашего письма. <em><strong>Однако,
пожалуйста, не злоупотребляйте
этим</strong></em><em>, т. к. высылка писем
подобного объема несет
существенную нагрузку на почтовые
сервера</em>. Обращаю также Ваше
внимание на тот факт, что
бесплатные сервера (mail.ru, beep.ru, newmail.
ru и т.п.) не всегда работают
корректно. Если письмо к Вам не
придет в указанный выше период, то
попробуйте отправить запрос еще
раз.</font></p>

<hr>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="news"><font
        color="#004080" size="5"><strong>Новости</strong></font></a></td>
    </tr>
</table>

<p><font color="#004080"><strong>1. Начала работать
рассылка </strong><em><strong>&quot;Ассемблер?
Это просто! Учимся программировать
(FAQ)&quot;</strong></em><strong>.</strong></font> Честно
говоря, даже не думал, что вопросов
будет так много, да и вовсе не
ожидал, что эксперты будут так
оперативно давать ответы.
Очередной раз выражаю
благодарность ВСЕМ экспертам, а
также подписчикам, задающим
вопросы.</p>

<p align="center">____________</p>

<p><font color="#004080"><strong>2. Сайт переехал
на новую хостинговую платформу</strong></font>
<a href="http://www.majordomo.ru">Majordomo.ru</a>, в связи
с чем были небольшие перебои в
работе сайта, за что приношу свои
извинения (об этом я старался
заранее сообщать на головной
странице сайта).</p>

<p><strong>Для чего нужно было
переходить к новому хостеру?</strong></p>

<p>Плюсы очевидны:</p>

<p>1. Теперь я могу обрабатывать
почту Перлом, что позволит
экспертам и подписчикам, задающим
вопросы, отправлять их (вопросы /
ответы) по почте, не заходя на сайт.
Осталось дело &quot;за малым&quot;:
написать программу обработки
поступающих вопросов / ответов.</p>

<p>2. Существенно увеличен размер
почтового ящика (до 75 Мб).</p>

<p>3. Возможность использования crontab
(если правильно пишу). Это такая
штука, которая позволяет запускать
какую-нибудь программу на Перле в
определенное время. Очень удобно,
например, для обновления базы
данных; высылки предыдущих
выпусков (скажем, каждые 30 минут
проверять ящик и высылать письма.
Для этого мне необязательно сидеть
в Сети и пользоваться The Bat!) и пр.</p>

<p>4. Возможность создания
поддоменов (доменов третьего
уровня). Кстати, новый адрес форума
теперь такой: <a href="http://forum.kalashnikoff.ru">http://forum.kalashnikoff.ru</a>.
Вскоре планирую полностью
разделить программирование и
законодательство.</p>

<p>5. Использование MySQL. Правда, пока
толком не разобрался что это вообще
такое, но, думаю, со временем
научусь всему (говорят, что MySQL - это
программа для создания баз данных.
Если так, то экспертные группы
будут работать гораздо быстрее.
Нужно только время...).</p>

<p>В общем, еще дополнительно много
чего нового.</p>

<p>Пользуясь случаем, хотел бы
выразить огромную благодарность
Службе техподдержки Majordomo за
оказанную помощь и понимание.</p>

<p align="center">____________</p>

<p><font color="#004080" size="3"><strong>3. Открыты
еще две рассылки:</strong></font></p>

<p>1. <em><strong>&quot;От Советского
Информбюро&quot;</strong></em>
(state.politics.discussion):<br>
<em>В рассылке рассматриваются
различные точки зрения по поводу
развала СССР, объединения СНГ,
политики НАТО, действий
президентов различных стран,
способы возрождения России и стран
СНГ, Союзный Договор между Россией
и Беларусью и пр. Кроме этого,
обсуждения и воспоминания прежних
советских времен, плюсы и минусы,
ностальгия по прошлому (или
наоборот), проблемы современной
молодежи и многое другое... </em></p>

<p>2. <em><strong>&quot;Было время... Был я
ламмер...&quot;</strong></em> (rest.joke.lammer):<br>
<em>Реальные юморные истории,
анекдоты, рассказы, шутки и многое
другое от Настоящих
Ассемблерщиков!</em></p>

<p>Подписаться можно в приведенной
ниже форме:</p>

<form action="http://subscribe.ru/member/quick" method="GET"
target="_top">
    <input type="hidden" name="action" value="quick"><div
    align="left"><table border="1" cellpadding="2"
    cellspacing="0">
        <tr>
            <td align="center" colspan="2" bgcolor="#FCF5E9"><font
            size="3"><strong>Рассылки </strong></font><a
            href="http://subscribe.ru/"><font size="3"><strong>Subscribe.Ru</strong></font></a><font
            size="4"><strong> </strong></font></td>
        </tr>
        <tr>
            <td colspan="2" bgcolor="#FFFFFF"><font size="2"><strong><input
            type="checkbox" checked name="grp"
            value="state.politics.discussion"> От
            Cоветского Информбюро</strong><br>
            <strong><input type="checkbox" checked name="grp"
            value="rest.joke.lammer"> Было время...
            Был я ламмер...</strong></font><p><font
            size="2"><input type="checkbox" name="grp"
            value="comp.soft.prog.faq"> Ассемблер?
            Это просто! Учимся
            программировать (FAQ)</font></p>
            </td>
        </tr>
        <tr>
            <td align="center" colspan="2" bgcolor="#FFFFFF"><font
            size="2"><input type="text" size="20" maxlength="100"
            name="email" value="ваш e-mail"
            style="font-size: 9pt"> <input type="submit"
            value="OK" style="font-size: 9pt"></font></td>
        </tr>
        <tr>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="format" size="1">
                <option value="html">HTML</option>
                <option value="text">TEXT </option>
                <option value="phone">SMS</option>
                <option value="palm">PALM</option>
            </select></font></td>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="lang" size="1">
                <option value="win">windows</option>
                <option value="koi">КОИ-8 </option>
                <option value="lat">Латиница</option>
            </select></font></td>
        </tr>
    </table>
    </div>
</form>

<p>Первый выпуск рассылки <em><strong>&quot;Было
время... Был я ламмер...&quot;</strong></em>
уже готов и выйдет в самое
ближайшее время, где я расскажу
свою историю знакомства с
компьютерами, Ассемблером,
студенческие годы и пр.</p>

<p>Надеюсь, что рассылки будут
интересны вам!</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="letters"><font
        color="#004080" size="5" face="Times New Roman"><strong>Ваши
        письма</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="left"><font size="3"><em><strong>Олег, у меня
к тебе есть небольшое предложение.</strong></em></font></p>

<p align="left"><font size="3"><em>Давай как-нибудь
займемся написанием собственной
операционной системы, а? Писать под
&quot;окна&quot;, конечно, интересно, но в
них столько &quot;БАГОВ&quot;... Давай
что-нибудь СВОЕ сделаем, нас ведь
много... Что-нибудь типа Линукса (в
смысле свободного кода)... Интересно
ведь...</em></font></p>

<p align="left"><font size="3"><em>Давай просто еще
раз проведем голосование... А?</em></font></p>

<p align="left"><font size="3"><em>__________</em></font></p>

<p align="left"><font size="3">С удовольствием!
Если это заинтересует соответствующее
количество подписчиков, то будем
делать рассылку. Жду письма от
заинтересованных лиц: </font><a
href="mailto:OS@Kalashnikoff.ru"><font size="3">OS@Kalashnikoff.ru</font></a><font
size="3">.</font></p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="startprog"><font
        color="#004080" size="5"><strong>Запуск
        программ</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="center">&nbsp;</p>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="80%">
    <tr>
        <td align="center"><font size="4"><strong>4BH(1).asm<br>
        </strong></font><textarea name="S1" rows="4" cols="20">
;              4Bh(1).ASM - программа к рассылке № 029

; (С) Авторские права на файлы-приложения принадлежат подписчикам рассылки
; &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки:
; Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

; --- Ассемблирование (получение *.com файла) ---
;При использовании MASM 6.11 - 6.13:
;ML.EXE 4Bh(1).asm /AT

;При использовании TASM:
;TASM.EXE 4Bh(1).asm
;TLINK.EXE 4Bh(1).obj /t/x

;______________________________________________________



;__________________________________________________________________________
;
;!!! ВНИМАНИЕ! Сперва прочтите 29 выпуск, иначе ничего не будет понятно !!!
;__________________________________________________________________________


;Программа загружает файл (File) НЕ через COMMAND.COM с командной строкой
;(Comm_line) 'abc'.

 .186 ;shr bx,4 работает на 186+ процессоре!
CSEG segment
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Start:
      mov bx,offset Finish
      shr bx,4
      inc bx
      mov ah,4Ah
      int 21h    ;Ужимаем размер отведенной памяти до метки Finish

;Ужимаем стек, т.к. он находится в &quot;хвосте&quot; сегмента, на место которого
;будет загружена программа
      mov sp,0FFh

; --- Готовим EPB ---
      mov bx,offset EPB
      mov C_F,cs ;Сегмент командной строки (смещение уже занесено! См. ниже)

; --- Сохраняем ВСЕ регистры, т.к. они будут разрушены!!! ---
      pusha
      push ds
      push es
      mov SS_Seg,ss
      mov SP_Seg,sp

; --- Запускаем программу ---
      mov ah,4Bh  ;Функция EXEC (EXECute - запус программы)
      mov dx,offset File ;Имя файла для запуска
      mov al,0    ;Загрузка и запуск
      int 21h

; --- Восстанавливаем регистры ---
      mov ss,cs:SS_Seg
      mov sp,cs:SP_Seg
      pop es
      pop ds
      popa

      mov ah,9
      jnc OK      ;Не было ошибок - сообщаем &#25;


;ОШИБКА ПРИ ЗАПУСКЕ!
      mov dx,offset Mess_Error
      int 21h
      int 20h

;Успешная загрузка программы
OK:
      mov dx,offset Mess_OK
      int 21h
      int 20h

;Вот, что мы получим, если с помощью данной программы мы загрузим DN,
;а из DN - Volcov Commander (вырезка из VC):

; Размер   Программа      Перехватываемые прерывания
;----------------------------------------------------
; 53 776   DOS 7.10       01 02 03 04 0E &lt;==== Системная часть DOS
;     64   system         19
;  6 928   KEYB           09 E0
;  3 824   WIN            EA F5
;  3 120   vmm32          33 67
;  1 280   DN.COM         FF             &lt;==== Из DN загружаю 4BH(1).COM
;  7 456   COMMAND        2E             &lt;==== Первым грузится Command.com
;    864   4BH(1).COM                    &lt;==== Потом только 4BH(1).COM
;  1 296   dn.com         2F             &lt;==== 4BH(1) загружает DN.COM
;  7 264   COMMAND        22             &lt;==== Из DN загружаю VC (опять через Command.com!)
; 76 096   VC.COM         00 1B 21 23 24 &lt;==== VC загружен!
;491 200   free memory


;ОБРАТИТЕ ВНИМАНИЕ, что 4BH(1).COM НЕ загружает COMMAND.COM, в отличие от
;DN.COM! Т.е. мы грузим программу напрямую!

;ЕЩЕ МОМЕНТ: 4BH(1).COM естественно НЕ перехватывает НИКАКИХ прерываний, что
;видно из приведенной выше таблицы. Это называется &quot;пассивный полурезидент&quot;.
;Он получит управление только тогда, когда отработают ВСЕ загруженные после
;него программы! Т.е. нам нужно будет выйти из VC (COMMAND.COM автоматически
;выгружается), а затем из DN.

;Суть понятна? Уверен, что так!

;Файл, который будем загружать
File db 'test.com',0
;File db 'c:\dn\dn.com',0

;Командная строка:
;5      - длина строки (включая 0Dh)
;' abcd' - сама строка (первый символ - пробел!)
;0Dh    - признак окончания строки
Comm_line db 5,' abcd',0Dh


; === Exec Parameter Block (EPB) для функции 4Bh ===
EPB:
Env dw 0   ;Сегмент среды (окружения DOS) для загружаемой программы
C_O dw offset Comm_line ;Смещение командной строки +
C_F dw 0   ;+ сегмент командной строки
    dd 0   ;FCB (не используется)
    dd 0   ;FCB (не используется)
Len dw $-EPB  ;Длина EPB


Mess_OK db 0Dh,0Ah,0Ah, 'Сообщение от 4B(1).com: Программа была успешно загружена и выполнена!',0Ah,0Dh,0Ah,0Ah,'$'
Mess_Error db 0Dh,0Ah,0Ah, 'Сообщение от 4B(1).com: Файл не найден!',0Ah,0Dh,0Ah,0Ah,'$'

; Переменные для хранения сегментных регистров
SS_Seg dw ?
SP_Seg dw ?

; Метка конца программы (урезаем память до этой метки)
Finish equ $

CSEG ends
end Start</textarea></td>
        <td align="center"><font size="4"><strong>4BH(2).asm<br>
        </strong></font><textarea name="S1" rows="4" cols="20">
;              4Bh(2).ASM - программа к рассылке № 029

;__________________________________________________________________________
;
;!!! ВНИМАНИЕ! Сперва прочтите 29 выпуск, иначе ничего не будет понятно !!!
;__________________________________________________________________________


;Программа загружает файл (File) используя COMMAND.COM с командной строкой
;(Comm_param) 'abc'.

 .186
CSEG segment
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Start:
      mov bx,offset Finish
      shr bx,4
      inc bx
      mov ah,4Ah
      int 21h    ;Ужимаем размер отведенной памяти до метки Finish

;Ужимаем стек, т.к. он находится в &quot;хвосте&quot; сегмента, на место которого
;будет загружена программа
      mov sp,0FFh

; --- Готовим EPB ---
      mov bx,offset EPB
      mov C_F,cs ;Сегмент командной строки (смещение уже занесено! См. ниже)

; --- Сохраняем ВСЕ регистры, т.к. они будут разрушены!!! ---
      pusha
      push ds
      push es
      mov SS_Seg,ss
      mov SP_Seg,sp

; --- Запускаем программу ---
      mov ah,4Bh  ;Функция EXEC (EXECute - запус программы)
      mov dx,offset File ;Имя файла для запуска
      mov al,0    ;Загрузка и запуск
      int 21h

; --- Восстанавливаем регистры ---
      mov ss,cs:SS_Seg
      mov sp,cs:SP_Seg
      pop es
      pop ds
      popa

      mov ah,9
      jnc OK      ;Не было ошибок - сообщаем &#25;


;ОШИБКА ПРИ ЗАПУСКЕ!
      mov dx,offset Mess_Error
      int 21h
      int 20h

;Успешная загрузка программы
OK:
      mov dx,offset Mess_OK
      int 21h
      int 20h

;Вот, что мы получим, если с помощью данной программы мы загрузим DN,
;а из DN - Volcov Commander (вырезка из VC):

; Размер   Программа      Перехватываемые прерывания
;----------------------------------------------------
;53 776   DOS 7.10       01 02 03 04 0E
;    64   system         19
; 6 928   KEYB           09 E0
; 3 824   WIN            EA F5
; 3 120   vmm32          33 67
; 1 280   DN.COM         FF              &lt;==== Из DN загружаю 4BH(2).COM
; 7 456   COMMAND        2E              &lt;==== Первым грузится Command.com
;   880   4BH(2).COM                     &lt;==== Потом только 4BH(2).COM
; 7 264   command                        &lt;==== 4BH(2) загружает COMMAND.COM!
; 1 296   DN.COM         2F              &lt;==== И только потом DN.COM
; 7 280   COMMAND        22              &lt;==== И т.д. (как из прошлого примера)
;76 096   VC.COM         00 1B 21 23 24


;Файл, который будем загружать
File db 'c:\command.com',0

;Командная строка здесь должна содержать (см. ниже):
;1. Длина командной строки (до 256 байт) (Comm_size)
;2. &quot;/С &quot;, указывающий COMMAND.COM, что нужно загрузить, выполнить и выйти
;   из COMMAND.COM (Comm_switch)
;3. Имя файла для загрузки (Comm_file)
;4. Командная строка для загружаемого из COMMAND.COM файла (Comm_param)
Comm_line:
Comm_size   db 21
Comm_switch db ' /C '
Comm_file   db 'c:\dn\dn.com'
;Comm_file   db 'test(1).com'
;Comm_file   db 'dir /p'

Comm_param  db ' abc'
Comm_last   db 0Dh

;ВНИМАНИЕ! Через COMMAND.COM можно выполнять также ЛЮБЫЕ внутренние
;команды DOS, как DIR, CLS, TYPE и пр (см. выше &quot;dir /p&quot;).

;!!! НЕ ЗАБЫВАЙТЕ ИЗМЕНЯТЬ ДЛИНУ КОММАНДНОЙ СТРОКИ !!!


; === Exec Parameter Block (EPB) для функции 4Bh ===
EPB:
Env dw 0   ;Сегмент среды (окружения DOS) для загружаемой программы
C_O dw offset Comm_line ;Смещение командной строки +
C_F dw 0   ;+ сегмент командной строки
    dd 0   ;FCB (не используется)
    dd 0   ;FCB (не используется)
Len dw $-EPB  ;Длина EPB


Mess_OK db 0Dh,0Ah,0Ah, 'Сообщение от 4B(2).com: Программа была успешно загружена и выполнена!',0Ah,0Dh,0Ah,0Ah,'$'
Mess_Error db 0Dh,0Ah,0Ah, 'Сообщение от 4B(2).com: Файл не найден!',0Ah,0Dh,0Ah,0Ah,'$'

; Переменные для хранения сегментных регистров
SS_Seg dw ?
SP_Seg dw ?

; Метка конца программы (урезаем память до этой метки)
Finish equ $

CSEG ends
end Start</textarea></td>
    </tr>
    <tr>
        <td align="center" colspan="2"><br>
        <strong>Test.asm</strong><br>
        <textarea name="S1" rows="2" cols="20">
;            TEST.ASM - дополнительная программа к рассылке № 29

; (С) Авторское право на файл-приложение принадлежит подписчикам рассылки &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки: Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

;   === Начало программы: ===
cseg segment
assume cs:cseg, ds:cseg, ss:cseg, es:cseg
org 100h

Begin:
       mov ah,9
       mov dx,offset Mess_start
       int 21h

       mov ah,2       ;Функция вывода одного символа на экран

       mov si,80h     ;Адрес командной строки
       lodsb
       or al,al
       lodsb
       jnz Next_char

       mov ah,9
       mov dx,offset Error_String
       int 21h
       ret

Next_char:
       lodsb          ;Получаем первый символ
       cmp al,0Dh     ;Это 0Dh?
       jz End_param   ;Да - тогда первый параметр закончился &#25;

Next_param:
       mov dl,al      ;Нет, не нуль. Тогда выводим полученный символ...
       int 21h        ;...на экран в текущую позицию курсора
       jmp short Next_char ; Приступаем к следующему символу... &#24;

End_param:
       int 20h

Mess_start db 'Сообщение от Test.com: Командная строка: $'
Error_String db 'НЕ ВВЕДЕНА!',0Ah,0Dh,0Ah,0Ah,'$'

cseg ends
end Begin</textarea></td>
    </tr>
</table>
</center></div>

<form
action="http://www.Kalashnikoff.ru/cgi-bin/download.cgi?Assembler/Issues/Enclosures/029.exe"
method="POST" name="Enclosure">
    <p align="center"><input type="submit" name="B1"
    value="Получить приложение в тексте"></p>
</form>

<hr>

<p>Сегодня целый выпуск посвящен
функции 4Bh прерывания 21h (загрузка и
запуск программ). Почему так? Дело в
том, что запустить программу на
Ассемблере - задача нетривиальная,
как может показаться с первого
взгляда, тем более, что поступает
много вопросов по этой теме.</p>

<p>Итак-с, начнем...</p>

<p>Обратите внимание, что в
приложении находятся три небольших
файла: 4BH(1).ASM, 4BH(2).ASM и Test.asm. Не
спешите их ассемблировать!
Прочтите сперва выпуск до конца!</p>

<p>Прежде, чем запустить программу,
необходимо тщательно
подготовиться. Что нужно сделать:</p>

<p>1. Выделить память для загружаемой
программы;</p>

<p>2. Ужать стек, если это com-файл;</p>

<p>3. Сохранить необходимые регистры;</p>

<p>4. Подготовить EPB;</p>

<p>5. Подготовить строку с именем
файла, который будем запускать;</p>

<p>6. Подготовить командную строку;</p>

<p>7. Сохранить сегментные регистры
(если необходимо);</p>

<p>8. Сохранить стековые регистры (SS и
SP) в переменных;</p>

<p>9. Запустить программу (вызвать int
21h).</p>

<p>С этого момента (с момента вызова
21h-ого прерывания) наша программа
(родительская) находится в памяти
до тех пор, пока запущенная
(порожденная) программа не
отработает.</p>

<p>Как только она отработала,
управление получает наша
(родительская) программа. Что
делаем дальше:</p>

<p>1. Восстанавливаем стековые
регистры (SS и SP);</p>

<p>2. Восстанавливаем сохраненные в
стеке регистры (сегментные и пр.,
если их сохраняли);</p>

<p>3. Производим другие необходимые
действия.</p>

<p>Вот, собственно, и все.</p>

<p>___________________</p>

<p>Теперь рассмотрим, как это все
происходит на практике.</p>

<p><strong>Шаг 1: Отводим (урезаем) память</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">(1) mov
        bx,offset Finish<br>
        (2) shr bx,4<br>
        (3) inc bx<br>
        (4) mov ah,4Ah<br>
        (5) int 21h</font></td>
    </tr>
</table>

<p>Надеюсь, что вы помните о том, что
традиционно метка Finish у нас
последняя.</p>

<p><strong>Зачем нужно урезать память
перед загрузкой?</strong></p>

<p>Как вы уже знаете, после загрузки
программы, вся память отводится
только этой программе.
Следовательно, если мы попытаемся
загрузить другую программу, то
получим ошибку о недостатке
свободной памяти (</p>

<p>В первой строке загружаем в
регистр BX адрес (смещение)
последнего байта нашей программы.
Это понятно.</p>

<p><strong>Зачем же во второй строке мы
сдвигаем на 4 бита вправо это
смещение?</strong> Дело в том, что
функция 4Ah (изменение размера
отведенной памяти) требует
указания в регистре BX блока памяти
размером 16 байт. Т.е., загрузив в BX
единицу, мы отведем не один байт, а
сразу шестнадцать (т.е. один
параграф).</p>

<p>Загружая в BX адрес последнего
байта нашей программы, мы получаем
не количество параграфов, а
количество байт. Т.о., не разделив BX
на 16, мы отведем памяти в 16 раз
больше. Делим же мы так: просто
сдвинем число в BX на 4 вправо, что
эквивалентно делению BX на 16. Мы это
уже проходили...</p>

<p><strong>А для чего увеличиваем BX на
единицу (3)?</strong> Для уверенности.
Лучше отведем на 16 байт больше, чем
на один меньше...</p>

<p>Теперь у нас BX содержит
количество параграфов (блоков
памяти по 16 байт), которые заняла
наша программа в памяти.</p>

<p align="center">___________</p>

<p><strong>Шаг 2: Переносим стек в
область PSP (0FEh).</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">(1) mov
        sp,0FEh</font></td>
    </tr>
</table>

<p>Зачем? Вспомните, что при загрузке
com-программы в память, смещение
стека находится в самом низу
сегмента, в который загрузилась
программа (т.е. 0FFFEh). Но мы ведь
ужимаем память до метки Finish!
Получается, что программа будет
загружаться в первый байт после
этой метки. Т.о. мы затираем стек.</p>

<p>Чтобы этого не произошло,
перенесем стек в область PSP (все
равно она не используется в нашем
примере, а это лишние 256 байт, куда
можно переместить указатель стека).</p>

<p align="center">___________</p>

<p><strong>Шаг 3: Готовим EPB.</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">(1) mov
        bx,offset EPB<br>
        (2) mov C_F,cs</font></td>
    </tr>
</table>

<p><strong>Что такое EPB?</strong></p>

<p>EPB - EXEC Parameter Block - блок параметров
функции загрузки файла. В этом
блоке должна содержаться следующая
информация:</p>

<table border="1" cellpadding="0" cellspacing="1" width="100%">
    <tr>
        <td align="center" width="10%"><strong>Смещение</strong></td>
        <td align="center" width="10%"><strong>Длина</strong></td>
        <td align="center" width="80%"><strong>Содержимое</strong></td>
    </tr>
    <tr>
        <td align="center" width="10%">00h</td>
        <td align="center" width="10%">2</td>
        <td width="80%">Сегмент окружения DOS
        для порождаемого процесса</td>
    </tr>
    <tr>
        <td align="center" width="10%">02h</td>
        <td align="center" width="10%">4</td>
        <td width="80%">Смещение и сегмент
        адреса командной строки</td>
    </tr>
    <tr>
        <td align="center" width="10%">06h</td>
        <td align="center" width="10%">4</td>
        <td width="80%">Первый адрес блока FCB</td>
    </tr>
    <tr>
        <td align="center" width="10%">0Ah</td>
        <td align="center" width="10%">4</td>
        <td width="80%">Второй адрес блока FCB</td>
    </tr>
    <tr>
        <td align="center" width="10%">0Eh</td>
        <td align="center" width="10%">2</td>
        <td width="80%">Длина EPB</td>
    </tr>
</table>

<p>А вот, как мы обозначаем его в
Ассемблере:</p>

<table border="0" width="65%" bgcolor="#E6E6E6">
    <tr>
        <td><font size="2" face="Arial">; === Exec Parameter
        Block (EPB) для функции 4Bh ===<strong><br>
        EPB:<br>
        Env dw 0 </strong>;Сегмент среды
        (окружения DOS) для загружаемой
        программы<strong><br>
        C_O dw offset Comm_line </strong>;Смещение
        командной строки +<strong><br>
        C_F dw 0 </strong>;+ сегмент командной
        строки<strong><br>
        dd 0 </strong>;FCB 1<strong><br>
        dd 0 </strong>;FCB 2<strong><br>
        Len dw $-EPB </strong>;Длина EPB</font></td>
    </tr>
</table>

<p>Сравните с приведенной выше
таблицей.</p>

<p><strong>Сегмент окружения DOS.</strong></p>

<p>Мы уже знаем, что такое окружение
DOS. Рассматривали подробно данную
тему в предыдущих выпусках. Но на
всякий случай напомню.</p>

<p>Окружение DOS хранит в себе
настройки (текущие параметры),
которые передаются, в частности,
при загрузке ОС в файле autoexec.bat.
Например:</p>

<p><font size="2" face="Arial">TEMP=C:\WINDOWS\TEMP<br>
PROMPT=$p$g<br>
COMSPEC=C:\WINDOWS\COMMAND.COM<br>
PATH=D:\PERL\BIN;C:\WINDOWS<br>
windir=C:\WINDOWS<br>
BLASTER=A220 I5 D1 H5 P330 T6 E620</font></p>

<p>Посмотреть текущие параметры
можно выполнив внутреннюю команду
set в приглашении DOS.</p>

<p>Итак, если в поле &quot;Сегмент
окружения DOS...&quot; находится 0, то
порожденная программа получит те
параметры, которые получила наша
программа (т.е. значения передаются
по умолчанию).</p>

<p>Если же для порождаемого процесса
(для загружаемой программы) мы
хотим передать свои параметры, то
нам нужно выделить блок памяти в
отдельном сегменте, внести туда
необходимые значения и в EPB по
смещению 0 занести сегмент
отведенного блока (как это делать -
рассмотрим ниже).</p>

<p>Но, как правило, в это поле
практически все программы заносят
нуль.</p>

<p><strong>Для чего нужно вообще
создавать свое окружение DOS?</strong>
Ну, в разных случаях... Например,
некоторая антивирусная программа,
запуская чужую, может не передать
текущее окружение, принимая во
внимание тот факт, что некоторые
вирусы размножаются по пути (PATH),
который они сами находят в памяти
(вспомним из прошлых выпусков, что
найти сегмент окружения DOS можно по
смещению 2Ch сегмента, в который
загрузилась программа. Смещение
всегда будет равно нулю).</p>

<p>Вроде все понятно. Но имейте в
виду, что если вы решили создать
свое окружение, то нужно
придерживаться определенных
правил. Как именно устроено
окружение DOS - смотрите 23 выпуск
рассылки. Там все подробнейшим
образом расписано. Вот по такому
образу и подобию вам необходимо
будет создавать свое окружение для
порождаемого процесса.</p>

<p>Обратите также внимание, что нам
нужно заносить только один байт
(смещение), а не два (сегмент +
смещение). Как уже отмечалось выше,
смещение всегда будет равно нулю.</p>

<p><strong>Смещение и сегмент командной
строки.</strong></p>

<p>Здесь все просто. Создаем некий
массив и заносим в это поле ВНАЧАЛЕ
смещение, а ЗАТЕМ сегмент этого
массива.</p>

<p>Например, так (командная строка):</p>

<table border="0" width="65%" bgcolor="#E5E5E5">
    <tr>
        <td><font color="#000000" size="3" face="Arial">Comm_line
        db 5,' abcd',0Dh</font></td>
    </tr>
</table>

<p>А теперь обратите внимание, что мы
по умолчанию в EPB заносим смещение,
а затем &quot;вручную&quot; сегмент
данной командной строки (см. выше
EPB):</p>

<p><font size="2" face="Arial"><strong>C_O dw offset Comm_line </strong>;Смещение
командной строки<br>
<strong>mov C_F,cs </strong>;Сегмент командной
строки</font></p>

<p align="left">Уверен, что вы знаете, как
устроена командная строка, т.к. мы
неоднократно ее уже разбирали. Тем
не менее, опишу вкратце (по
приведенному выше примеру (Comm_line)):</p>

<p align="left"><strong>Первый байт</strong> -
длина строки (включая символ 0Dh);<br>
<strong>Остальные байты</strong> - сама
строка;<br>
<strong>Последний байт</strong> - 0Dh
(обязательно!).</p>

<p align="left"><strong>Первый и второй адрес
блоков FCB.</strong></p>

<p align="left">Как правило, уже не
используются, поэтому я не буду их
вообще касаться в данной рассылке.
Скажу только, что заносите в них
всегда нули, и все будет хорошо!</p>

<p align="center">________________</p>

<p><strong>Шаг 4: Сохраняем регистры</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">(1) pusha<br>
        (2) push ds<br>
        (3) push es<br>
        (4) mov SS_Seg,ss<br>
        (5) mov SP_Seg,sp</font></td>
    </tr>
</table>

<p>Заносить в стек или сохранять
иным образом такие регистры, как AX,
BX, CX, DX, SI, DI и т.п. не обязательно,
если вы, конечно, не сохраняете в
них информацию, которая
понадобится после завершения
порожденного процесса. Однако, в
нашем примере мы это делаем. Для
наглядности и полноты (строка (1)).</p>

<p>Сегментные регистры (DS и ES) также
сохранять не обязательно, если они
все перед запуском новой программы
были равны CS. Просто в таком случае
(если они равны CS), мы можем после
завершения порожденного процесса
выполнить следующие действия:</p>

<p>push cs<br>
push cs<br>
pop ds<br>
pop es</p>

<p>Но мы сегментные регистры
все-таки сохраним (строки (2) - (3)).</p>

<p>Затем идут регистры указателя
стека (SS:SP). Сохранить в стеке мы их
не можем. Думаю, что это понятно и
так. Для такой цели выделяем две
переменные, в которые их и занесем (SS_Seg,
SP_Seg). Иного способа не существует...</p>

<p><strong>Шаг 5: Запуск программы</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">(1) mov
        ah,4Bh<br>
        (2) mov dx,offset File<br>
        (3) mov al,0<br>
        (4) int 21h</font></td>
    </tr>
</table>

<p>Итак, функция 4Bh (1). В DX заносим
смещение строки с файлом (2). Это все
просто.</p>

<p>Далее. Подфункция 0 функции 4Bh
прерывания 21h - загрузка и запуск
программы (3).</p>

<p>Это значит, что программа будет
загружена в память и запущена.</p>

<p>Существуют также подфункция 1,
которая только загружает
программу, но не передает ей
управление.</p>

<p>И подфункция 3 - загрузка оверлея.</p>

<p>Подфункции 1 и 3 используются
редко, и мы их пока рассматривать не
будем. Наша цель - заставить
программу загрузиться и
выполниться.</p>

<p>Все! После выполнения строки (4)
пойдет загрузка. Следующая за ней
строка получит управление только
тогда, когда завершит работу
загруженная программа.</p>

<p align="center">_________________</p>

<p>После того, как запущенная
программа отработала, необходимо
произвести &quot;восстановительные
работы&quot;, а именно:</p>

<p><strong>Шаг 1: Восстановление
регистров стека</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">mov
        ss,cs:SS_Seg<br>
        mov sp,cs:SP_Seg</font></td>
    </tr>
</table>

<p>Это первое, что мы должны сделать,
т.к. запущенный процесс поменял эти
регистры, а без стека мы как без рук!</p>

<p>Обратите внимание: т.к. мы не
уверены, что отработанная
программа не поменяла регистры DS,
то обращаемся к переменным SS_Seg и
SP_Seg, используя регистр CS, который,
как мы уже знаем, всегда равен тому
сегменту, в котором выполняется
текущая команда.</p>

<p><strong>Шаг 2: Восстановление иных
сохраненных регистров</strong></p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3" face="Arial">pop es<br>
        pop ds<br>
        popa</font></td>
    </tr>
</table>

<p>В данном случае мы сохраняли эти
регистры (см. выше).</p>

<p>Вот и все! Можно, конечно, еще и
память &quot;вернуть на место&quot;, но
это ни к чему. В следующем выпуске,
где я вставлю процедуру запуска
файла в оболочку, вы увидите, как мы
будем восстанавливать урезанную
память.</p>

<hr>

<p>Ну что, уважаемые читатели,
сложно? Нисколько! Почему же тогда
поступало столько вопросов на эту
тему?</p>

<p>Удачных вам экспериментов!
Дополнительную информацию вы, как
всегда, найдете в
файлах-приложениях. Уверен, что вы
разберетесь! Внимательно
ознакомьтесь с тремя прилагаемыми
файлами. Это позволит вам лучше
понять принцип запуска программ на
Ассемблере!</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="partners"><font
        color="#004080" size="5"><strong>Наши
        партнеры</strong></font></a></td>
    </tr>
</table>
</center></div>

<p><font size="4"><strong>1. Рассылка &quot;</strong></font><a
href="http://subscribe.ru/catalog/comp.prog.info"><font size="4"><strong>Уроки
для начинающих программистов</strong></font></a><font
size="4"><strong>&quot;.</strong></font></p>

<p>Одна из лучших рассылок по
программированию для начинающих.
Проект <a href="http://prog.agava.ru">Эдуарда
Дмитриева</a>.</p>

<p align="center"><font size="4"><strong>___________</strong></font></p>

<p><font size="4"><strong>2. Рассылка Сергея
Никифорова &quot;</strong></font><a
href="http://subscribe.ru/catalog/comp.soft.prog.vbs"><font
size="4"><strong>Программирование на Visual
Basic и ASP</strong></font></a><font size="4"><strong>&quot;</strong></font>
на <a href="http://subscribe.ru/">Subscribe.ru</a> (код
рассылки: <strong>comp.soft.prog.vbs</strong>).</p>

<p><font size="3">Название и сайт автора: <strong>Visual
Basic Streets, </strong></font><a href="http://www.vbstreets.ru"><font
size="3"><strong>http://www.vbstreets.ru</strong></font></a><font
size="3">.</font></p>

<p align="center"><font size="4"><strong>___________</strong></font></p>

<p><font size="4">3. <strong>Рассылка &quot;Мир
программирования на Visual BASIC и HTML&quot;</strong>
(</font><a href="http://soobcha-vb.narod.ru/alex"><font size="4">http://soobcha-vb.narod.ru/alex</font></a><font
size="4">):</font></p>

<form action="http://subscribe.ru/member/quick" method="GET"
target="_top" target="_top">
    <input type="hidden" name="action" value="quick"><input
    type="hidden" name="grp" value="comp.design.snoozex"><div
    align="center"><center><table border="1" cellpadding="2"
    cellspacing="0">
        <tr>
            <td align="center" bgcolor="#FCF5E9"><font size="2">Подписаться
            на рассылку </font><a
            href="http://snoozex.da.ru/"><font size="2">Кувалина
            Алексея</font></a><font size="2"> <br>
            Мир программирования на Visual
            BASIC и HTML</font></td>
        </tr>
        <tr>
            <td align="center" bgcolor="#FFFFFF"><font size="2"><input
            type="text" size="20" name="email"
            value="ваш e-mail" maxlen="100"
            style="font-size: 9pt"> <input type="submit"
            value="OK"> </font></td>
        </tr>
    </table>
    </center></div>
</form>

<hr>

<p><font size="4" face="Arbat-Bold"><strong>С
уважением,</strong></font></p>

<p><font size="3"><strong>Калашников Олег: </strong></font><a
href="mailto:Assembler@Kalashnikoff.ru"><font size="3"><strong>Assembler@Kalashnikoff.ru</strong></font></a><font
size="3"><strong><br>
Мой ICQ No.: </strong></font><font color="#226622" size="3"><strong>68951340</strong></font><font
size="3"><strong><br>
URL сайта подписчиков: </strong></font><a
href="http://www.Kalashnikoff.ru"><font size="3"><strong>http://www.Kalashnikoff.ru</strong></font></a><font
size="3"><strong><br>
Форма для подачи вопроса: </strong></font><a
href="http://www.Kalashnikoff.ru/Experts/Question.html"><font
size="3"><strong>http://www.Kalashnikoff.ru/Experts/Question.html</strong></font></a></p>

<p align="left"><strong>______________</strong></p>

<p align="left"><strong>По вопросам
сотрудничества, рекламы и
спонсорства обращайтесь:</strong></p>

<ol>
    <li><font size="2">Публичное размещение
        материала из рассылки: </font><a
        href="mailto:Cooperation@Kalashnikoff.ru"><font size="2">Cooperation@Kalashnikoff.ru</font></a>
    </li>
    <li><font size="2">Реклама на сайте, в
        книге и рассылках: </font><a
        href="http://www.Kalashnikoff.ru/Reklama.html"><font
        size="2">http://www.Kalashnikoff.ru/Reklama.html</font></a><font
        size="2">, </font><a
        href="mailto:Reklama@Kalashnikoff.ru"><font size="2">Reklama@Kalashnikoff.ru</font></a>
    </li>
    <li><font size="2">Издание книги по
        материалам рассылки
        (спонсорство): </font><a
        href="mailto:Sponsor@Kalashnikoff.ru"><font size="2">Sponsor@Kalashnikoff.ru</font></a>
    </li>
</ol>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#DDEEFF" bordercolor="#808080"
bordercolorlight="#FFFFFF">
    <tr>
        <td colspan="3" bgcolor="#BDDEFF"><font color="#400040"
        size="1"><strong>(C) Москва, 2001.
        Авторское право принадлежит
        Калашникову О.А.</strong> Публичное
        размещение материала из
        рассылки, а также его
        использование полностью или
        частично в коммерческих или
        иных подобных целях без
        письменного согласия автора
        влечет ответственность за
        нарушение авторских прав.</font></td>
    </tr>
</table>
</center></div><!--noindex-->

<hr noshade>

<div align="center">

<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript>

<p align="center"><a
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"><img
src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG"
align="middle" border="0"></a> <a
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a>
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1"
target="_blank"><script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> <!-- SpyLOG --> <a
href="http://www.one.ru" target="_top"><img
src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&amp;t=9"
alt="be number one" border="0"></a> <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script
language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script
language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script
language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a
href="http://top.list.ru/jump?from=87856" target="_top"><img
src="http://top.list.ru/counter?js=na;id=87856;t=54"
alt="TopList" border="0"></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script></a>
<br>
<br>
<script>
// <!--
var rand = Math.round((Math.random() * (10000000 - 1)));
var login = "oleg77";
document.write("<a href=http://www.lbe.ru/cgi-bin/href/");
document.write(login + "?" + rand + " target=_top>");
document.write("<img src=http://www.lbe.ru/cgi-bin/banner/");
document.write(login + "?" + rand + " width=468 height=60");
document.write(" border=0 alt=LBE ismap></a>");
// -->
</script> <noscript> <a
href="http://www.lbe.ru/cgi-bin/href/oleg77?53826" target="_top"><img
src="http://www.lbe.ru/cgi-bin/banner/oleg77?53826"
alt="List Banner Exchange" border="0" ismap></a> </noscript> <br>
<a href="http://www.Kalashnikoff.ru/Reklama.html"><font size="1"
face="Courier New"><u>Реклама на сайте
Kalashnikoff.ru</u></font></a></p>

<p align="center">[<a href="030.htm">Следующий выпуск</a>] [<a target=_BLANK href="http://www.Kalashnikoff.ru/">На главную страницу</a>]</p>

<HR NOSHADE><CENTER>
<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript><p align="center"><a 
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" 
target="_blank"><img src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG" align="middle" border="0"></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"> 
<script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> 
<!-- SpyLOG --> 
 
 <a target=_top href="http://www.one.ru"><img src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&t=9" width=88 height=31 alt="be number one" border=0></a> 
 
 <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a 
target=_top href="http://top.list.ru/jump?from=87856"><img 
src="http://top.list.ru/counter?js=na;id=87856;t=54" 
border=0 height=31 width=88 
alt="TopList"></a></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script> 
 
<br><br> 

</body>
</html>
