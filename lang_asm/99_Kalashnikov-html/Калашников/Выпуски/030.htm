<html>

<head>
<meta http-equiv="Content-Type"
content="text/html; charset=windows-1251">
<meta name="keywords"
content="assembler asembler ассемблер асемблер программирование програмирование вирус антивирус программа низкоуровневое прерывание сегментация сегмент регистр резидент DOS Windows">
<meta name="author"
content="Assembler@Kalashnikoff.ru Автор рассылки Калашников Олег">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<title>Kalashnikoff.ru - Ассемблер? Это просто!.. (Выпуск № 030) (XMS-память)</title>
<STYLE>
<!-- a:link, a:visited, a:active { text-decoration: none; color: #226622} 
a:hover { text-decoration: bold; color: #662266; } 
 .ff { 
font-family : Arial, helvetica, sans-serif; 
font-style : normal; 
font-variant : normal; 
} -->
</STYLE>
</head>

<body bgcolor="#CFE7E7" body>
<div align="center"><center>

<table border="1" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#CDCD9C">
    <tr>
        <td colspan="3" width="100%"><p align="center"><font
        color="#004080" size="5"><em><strong>Ассемблер?
        Это просто! Учимся
        программировать</strong></em></font> <font
        color="#000000" size="2"><br>
        ______________________________________</font></p>
        <p align="center"><font size="4">Выпуск N 030 (</font><a
        href="#XMS"><font size="4">XMS-память</font></a><font
        size="4">)</font></p>
        </td>
    </tr>
</table>
</center></div>

<p align="center"><font color="#004080" size="5"
face="Monotype Corsiva"><b>Здравствуйте,
уважаемые подписчики!</b></font></p>

<p align="left"><font color="#000000" size="4"><strong>Сегодня
в номере:</strong></font></p>

<dir type="disc">
    <li><p align="left"><a href="#newsfornew">Информация
        для новых подписчиков</a></p>
    </li>
    <li><p align="left"><a href="#Тусоffка">Тусоffка</a></p>
    </li>
    <li><p align="left"><a href="#free">Отпуск</a></p>
    </li>
    <li><p align="left"><a href="#Suggestions">Предложения</a></p>
    </li>
    <li><p align="left"><a href="#XMS">XMS-память</a></p>
    </li>
    <li><p align="left"><a href="#partners">Наши
        партнеры</a></p>
    </li>
</dir>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="newsfornew"><font
        color="#004080" size="5" face="Times New Roman"><strong>Информация
        для новых подписчиков</strong></font></a>
        </td>
    </tr>
</table>
</center></div>

<p align="left"><font size="3">Благодарю Вас, что
подписались на рассылку <em>&quot;Ассемблер?
Это просто! Учимся
программировать&quot;</em>. Надеюсь, что
Вы не останетесь равнодушны к ней и
почерпнете море полезной
информации, а также повысите свой
уровень в &quot;общении&quot; с
IBM-совместимыми компьютерами.</font></p>

<p align="left"><font size="3">Прежде, чем
приступать к изучению материала в
данном выпуске, Вам необходимо
внимательно ознакомиться с
предыдущими. Я уверен, что Вы очень
быстро и без труда догоните
остальных подписчиков, не смотря на
то, что у нас уже 30 выпуск.</font></p>

<p align="left"><font size="3">Все, что нужно для
изучения Ассемблера (предыдущие
выпуски, необходимые программы,
документацию, форму для подачи
вопроса экспертам, а также многое
другое), можно найти на сайте </font><a
href="http://www.Kalashnikoff.ru"><font size="3">http://www.Kalashnikoff.ru</font></a><font
size="3">. Рекомендую Вам сперва
ознакомиться с разделом <em>&quot;Для
новых подписчиков&quot;</em>.</font></p>

<p align="left"><font size="2"><strong>Для тех, кто не
имеет выхода в Интернет.<br>
</strong>К огромному сожалению, я пока
не имею постоянного доступа к Интернету и почте. Поэтому высылка
архива по e-mail временно
приостановлена... Извините за
доставленные неудобства...</font></p>

<hr>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="Тусоffка"><font
        color="#004080" size="5"><strong>Тусоffка</strong></font></a></td>
    </tr>
</table>

<p>Вот, уважаемые читатели, и прошла
первая тусоffка, посвященную
программированию на Ассемблере.</p>

<p>Что можно сказать? Если честно, то
я планировал, что все это
произойдет совсем по-другому. Но то,
что получилось, это тоже не плохо. Я
очень надеюсь, что следующая
тусоffка пройдет более массово и
более слажено.</p>

<p>Тем не менее, я благодарю всех, кто
пришел! Огромное вам всем спасибо!</p>

<p>Т.к. я потерял все, имеющиеся у
меня, электронные адреса и номера ICQ
подписчиков, то хотел бы попросить
написать мне тех, кто присутствовал
на тусоffке. Мне нужно выслать вам
кое-что... Как только я получу доступ
к почте, сразу вам отвечу.</p>

<hr>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="free"><font
        color="#004080" size="5"><strong>Отпуск</strong></font></a></td>
    </tr>
</table>

<p>Уважаемые читатели! В настоящий
момент я нахожусь в отпуске и не
имею постоянного выхода в Интернет,
поэтому не могу отвечать на ваши
письма. Но как только я вернусь к
своим делам, то сразу сообщу об этом
на сайте.</p>

<p>Этот выпуск я отправляю из интернет-кафе. Поэтому просьба: не
пишите пока мне письма, т.к. я все
равно не смогу отвечать...</p>

<p align="center">________</p>

<p>Недавно удалось посмотреть объем
своего почтового ящика и был
безмерно удивлен тем, что его
размер порядка 120 Мб!!! Это ж сколько
писем-то пришло за месяц!!!</p>

<p align="center">________</p>

<p>Обратите также внимание, что я не
закачал на сайт файлы-приложения в
архиве. К сожалению, не было
возможности. Поэтому вам придется
сохранить файл старым добрым
способом, а именно: скопировать в
буфер обмена, а затем вставить в
какую-нибудь оболочку.</p>

<p align="center">________</p>

<p>Находясь в отпуске вдалеке от
Интернета, у меня появилось много
свободного времени, которое я
посвящаю написанию книги. За неделю
дела продвинулись очень далеко. И
это хорошо! Скоро будет готово!</p>

<p>В книге будут также приведены
некоторые интересные письма
подписчиков, ответы экспертов из
рассылки FAQ, а также многое другое
(если технический редактор не
вырежет это). Если кто-либо из вас не
согласен с тем, чтобы опубликовать
вашу информацию в книге, то
напишите мне.</p>

<p align="center">________</p>

<p>Хотелось бы поблагодарить всех
экспертов, отвечающих на вопросы
подписчиков в рассылке
&quot;Ассемблер? Это просто! Учимся
программировать (FAQ)&quot;. Даже не
знаю, чтобы я делал без вас...</p>

<p><font color="#004080"><strong>Выражаю
отдельную благодарность эксперту </strong></font><font
color="#004080" size="4"><strong>Dron</strong></font><font
color="#004080"><strong> за оказанную помощь.</strong></font></p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="Suggestions"><font
        color="#004080" size="5"><strong>Предложения</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="left"><font size="3">В прошлом выпуске
я опубликовал письмо одного
подписчика, который предложил
попробовать написать свою
собственную операционную систему.
Я даже не ожидал, что эту идею
поддержат такое количество
читателей (порядка 48 человек)!</font></p>

<p align="left"><font size="3">В настоящий момент
открыта рассылка, которую ведет
эксперт Dron. Уже вышло несколько
номеров. Подписаться можно в приведенной ниже форме.</font></p>

<form action="http://subscribe.ru/member/quick" method="GET"
target="_top">
    <input type="hidden" name="action" value="quick"><div
    align="left"><table border="1" cellpadding="2"
    cellspacing="0">
        <tr>
            <td align="center" colspan="2" bgcolor="#FCF5E9"><font
            size="3"><strong>Рассылки </strong></font><a
            href="http://subscribe.ru/"><font size="3"><strong>Subscribe.Ru</strong></font></a><font
            size="4"><strong> </strong></font></td>
        </tr>
        <tr>
            <td colspan="2" bgcolor="#FFFFFF"><font size="2"><strong><input
            type="checkbox" checked name="grp"
            value="comp.soft.prog.asmos">
            Операционная система &quot;с
            нуля&quot; на Ассемблере и С</strong><br>
            <input type="checkbox" name="grp"
            value="comp.soft.prog.faq"> Ассемблер?
            Это просто! Учимся
            программировать (FAQ)</font></td>
        </tr>
        <tr>
            <td align="center" colspan="2" bgcolor="#FFFFFF"><font
            size="2"><input type="text" size="20" maxlength="100"
            name="email" value="ваш e-mail"
            style="font-size: 9pt"> <input type="submit"
            value="OK" style="font-size: 9pt"></font></td>
        </tr>
        <tr>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="format" size="1">
                <option value="html">HTML</option>
                <option value="phone">SMS</option>
                <option value="palm">PALM</option>
            </select></font></td>
            <td align="center" valign="top" bgcolor="#FFFFFF"><font
            size="2"><select name="lang" size="1">
                <option value="win">windows</option>
                <option value="koi">КОИ-8 </option>
            </select></font></td>
        </tr>
    </table>
    </div>
</form>

<p>Надеюсь, что рассылка будет
интересна вам!</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="XMS"><font
        color="#004080" size="5"><strong>XMS-память</strong></font></a></td>
    </tr>
</table>
</center></div>

<p align="center">&nbsp;</p>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="80%">
    <tr>
        <td align="center"><font color="#804040" size="4"><strong>1.
        XMSmem.asm<br>
        </strong></font><textarea name="S1" rows="4" cols="20">
;              XMSMEM.ASM - программа к рассылке № 030
;                   Определяем объем памяти XMS

; (С) Авторские права на файлы-приложения принадлежат подписчикам рассылки
; &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки:
; Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

; --- Ассемблирование (получение *.com файла) ---
;При использовании MASM 6.11 - 6.13:
;ML.EXE XMSMEM.asm /AT

;При использовании TASM:
;TASM.EXE XMSMEM.asm
;TLINK.EXE XMSMEM.obj /t/x


.386
.8087
CSEG segment use16
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Start:
     mov ah,9
     mov dx,offset Mess_about
     int 21h

;Проверим на наличие Himem.sys в памяти...
     mov ax,4300h
     int 2Fh

     cmp al,80h
     je Himem_loaded  ;Если AL = 80h, то Himem.sys загружен.

;Иначе выводим сообщение о том, что Himem в памяти не обнаружен...
     mov ah,9
     mov dx,offset Mess_nohimem
     int 21h
     ret


Himem_loaded:
;Готовим XMS-память (отводим блок в XMS-памяти)
     call Prepare_XMS

     ret



;=== Готовим XMS-память ===
Prepare_XMS proc
     mov ax,4310h
     int 2Fh

     mov word ptr XMS_Addr,bx
     mov word ptr XMS_Addr+2,es  ;Сохраним обработчик XMS-функций

     mov ah,88h   ;Получить кол-во Кб XMS-памяти (всего)
     call dword ptr XMS_Addr
     mov dword ptr Number_dec,edx ;Сохраним кол-во Кб XMS-памяти

     mov dx,offset Mess_TotalMemory
     mov ah,9
     int 21h

     mov ah,3
     mov bh,0
     int 10h ;Читаем текущую позицию курсора

     add dx,8
     mov ah,2
     int 10h ;Установим курсор на 8 позиций правее, после выведенного сообщения

     call Out_dec ;Выводим кол-во килобайт XMS в текущую позицию курсора

     mov dx,offset Mess_cursor
     mov ah,9
     int 21h
     ret
Prepare_XMS endp


;=== Вывод десятичного числа на экран с использованием сопроцессора ===
;Здесь без комментариев... См. предыдущие выпуски...
Out_dec proc
    finit

    fstcw Dat
    or Dat,0C00h
    fldcw Dat
    fldz
    fild Divider
    fild Number_dec
    fst st(7)

Next_sym:
    fprem
    fistp Dat
    call Out_sym
    fld st(6)
    fdiv st,st(1)
    frndint
    fst st(7)
    fcom st(2)
    fstsw ax
    and ax,4500h
    cmp ax,4000h
    jnz Next_sym
Finish_dec:
    ret

Number_dec dq 0

Divider dw 10
Dat dw ?
Out_dec endp

;=== Вывод одного символа на экран в текущую позицию курсора ===
Out_sym proc
    push dx

    mov ah,2
    mov dl,byte ptr Dat
    add dl,'0'
    int 21h
    pop dx

    dec dx
    mov ah,2
    mov bh,0
    int 10h

    ret
Out_sym endp


Mess_about db 0Ah, 0Dh, 'XMSMEM - определяем объем XMS-памяти.',0Ah, 0Dh
           db 'Рассылка &quot;Ассемблер? Это просто! Учимся программировать&quot;, Выпуск № 030',0Ah,0Dh
           db 'http://www.Kalashnikoff.ru. E-mail: Assembler@Kalashnikoff.ru',0Ah,0Dh,0Ah
           db '(C) Авторские права на файлы-приложения принадлежат всем подписчикам рассылки.',0Ah, 0Dh, 0Ah
           db 9,9,'=== Россия, Москва, 2001 год ===',0Ah,0Dh,'$'

Mess_nohimem db 'Драйвер Himem.sys не загружен! Невозможно использовать XMS-память!!!'
Mess_cursor db 0Ah, 0Dh,'$'

Mess_TotalMemory db 0Ah,0Ah,0Dh,'Всего XMS-памяти (Килобайт):$'

XMS_Addr dw ?
CSEG ends
end Start</textarea></td>
        <td align="center"><font color="#6A6A00" size="4"><strong>2.
        XMSblock.asm<br>
        </strong></font><textarea name="S1" rows="4" cols="20">
;              XMSBLOCK.ASM - программа к рассылке № 030

; (С) Авторские права на файлы-приложения принадлежат подписчикам рассылки
; &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки:
; Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

; --- Ассемблирование (получение *.com файла) ---
;При использовании MASM 6.11 - 6.13:
;ML.EXE XMSBLOCK.asm /AT

;При использовании TASM:
;TASM.EXE XMSBLOCK.asm
;TLINK.EXE XMSBLOCK.obj /t/x


.386
.8087
CSEG segment use16
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Start:
     mov ah,9
     mov dx,offset Mess_about
     int 21h

;Перенесем стек в PSP, т.к. будем ужимать сегмент...
     mov sp,0FEh

;Проверим на наличие Himem.sys в памяти...
     mov ax,4300h
     int 2Fh

     cmp al,80h
     je Himem_loaded

;Иначе выводим сообщение о том, что Himem в памяти не обнаружен...
     mov ah,9
     mov dx,offset Mess_nohimem
     int 21h
     ret


Himem_loaded:
;Готовим основную память (ужимаем и отводим два блока по 64Кб)
     call Prepare_memory

;Готовим XMS-память (отводим блок в XMS-памяти)
     call Prepare_XMS

;Читаем файл в ОСНОВНУЮ память
     call Open_file
     call Read_file
     call Close_file

;Выводим:
;&quot;Прочитали файл в основную память...
;Выводим то, что находится в ОСНОВНОЙ памяти:&quot;
     mov ah,9
     mov dx,offset Mess_first
     int 21h
     xor ah,ah
     int 16h

;Выводим то, что прочитали в ОСНОВНУЮ память (в Buffer1)
     mov ax,Buffer1
     call Out_file

;Выводим:
;&quot;---------------------------&quot;
     mov ah,9
     mov dx,offset Mess_second
     int 21h
     xor ah,ah
     int 16h

;Переносим прочитанные байты из основной памяти в расширенную, а
;а затем обратно в основную.
     call Move_toXMS

;Выводим то, что пересылалось (основная --&gt; XMS --&gt; основная, но в другой
;сегмент (Buffer2))
      mov ax,Buffer2
      call Out_file


;Выводим:
;&quot;Оба сообщения должны совпадать!!! Иначе и быть не может!!!&quot;
     mov ah,9
     mov dx,offset Mess_third
     int 21h

;Возврат из программы
     ret



;=== Готовим XMS-память ===
Prepare_XMS proc
     mov ax,4310h
     int 2Fh

     mov word ptr XMS_Addr,bx
     mov word ptr XMS_Addr+2,es  ;Сохраним обработчик XMS-функций

     mov ah,88h   ;Получить кол-во Кб XMS-памяти (всего)
     call dword ptr XMS_Addr
     mov dword ptr Number_dec,edx ;Сохраним кол-во Кб XMS-памяти

     mov ah,9
     mov dx,1024   ;Отводим 1024Кб XMS-памяти
     call dword ptr XMS_Addr
     or ax,ax
     jnz XMS_OK

     mov ah,9
     mov dx,offset XMS_Error
     int 21h

     int 20h

XMS_OK:
     mov XMS_id,dx  ;Сохраним ID отведенного блока

     ret
Prepare_XMS endp



; --- Открываем файл ---
Open_file proc
     mov ax,3D00h
     mov dx,offset File_name
     int 21h
     jnc Next_stp

     mov ah,9
     mov dx,offset Mess_errfile
     int 21h
     int 20h

Next_stp:
     mov Handle,ax
     mov bx,ax
     ret
Open_file endp

; --- Читаем файл в основную память ---
Read_file proc
     mov ah,3Fh
     mov cx,0FFFFh
     xor dx,dx
     mov ds,Buffer1
     int 21h
     push cs
     pop ds
     mov Bytes,ax         ;Сохраним кол-во прочитанных байт
     ret
Read_file endp

; --- Закрываем файл ---
Close_file proc
     mov bx,Handle
     mov ah,3Eh
     int 21h
     ret
Close_file endp

; --- Выводим прочитанный файл ---
Out_file proc
     mov cx,Bytes   ;Кол-во прочитанных байт
     mov ds,ax      ;Сегмент - в DS
     xor bx,bx
     mov ah,2

Next_byte:
     mov dl,[bx]
     int 21h
     inc bx
     loop Next_byte

     push cs
     pop ds

     ret
Out_file endp

; === Готовим основную память ===
Prepare_memory proc
      mov bx,offset Finish
      shr bx,4
      inc bx
      mov ah,4Ah
      int 21h    ;Ужимаем размер отведенной памяти до метки Finish

; -- Отводим память
      mov ah,48h
      mov bx,4096 ; 4096 * 16 = 65536 байт
      int 21h
      jc Error_main
      mov Buffer1,ax  ;Сохраним сегмент первого отведенного блока

      mov ah,48h
      mov bx,4096 ; 4096 * 16 = 65536 байт
      int 21h
      jc Error_main
      mov Buffer2,ax  ;Сохраним сегмент второго отведенного блока

  ret

Error_main:
;Ошибка?
      mov ah,9
      mov dx,offset Error_alloc
      int 21h
      int 20h

Buffer1 dw ?
Buffer2 dw ?
Prepare_memory endp

; === Пересылаем прочитанные данные в XMS память и обратно в основную ===
Move_toXMS proc

;&lt;&lt;&lt; Сперва из основной в РАСШИРЕННУЮ &gt;&gt;&gt;

      mov ax,Bytes
      mov word ptr XMS_str,ax   ;Кол-во пересылаемых байт

      mov word ptr XMS_offsrc,0 ;Смещение в основной памяти
      mov ax,Buffer1
      mov word ptr XMS_offsrc+2,ax  ;Сегмент в основной памяти

      mov ax,XMS_id             ;Идентификатор приемника (т.е. XMS-памяти)
      mov XMS_rec,ax

      mov ah,0Bh
      mov si,offset XMS_str
      call dword ptr XMS_Addr


;&lt;&lt;&lt; Теперь из расширенной в ОСНОВНУЮ &gt;&gt;&gt;

      mov ax,Bytes
      mov word ptr XMS_str,ax   ;Кол-во пересылаемых байт

      mov ax,XMS_id
      mov XMS_src,ax

      mov dword ptr XMS_offsrc,0

      mov XMS_rec,0

      mov ax,Buffer2
      mov word ptr XMS_offrec,0
      mov word ptr XMS_offrec+2,ax

      mov ah,0Bh
      mov si,offset XMS_str
      call dword ptr XMS_Addr

 ret

XMS_str    dd 0 ;Кол-во байт для пересылки
XMS_src    dw 0 ;Источник
XMS_offsrc dd 0 ;Смещение в блоке-источнике или адрес в основной памяти
XMS_rec    dw 0 ;Идентификатор приемника
XMS_offrec dd 0 ;Смещение в блоке-приемнике или адрес в основной памяти

Move_toXMS endp

Mess_about db 0Ah, 0Dh, 'XMSBLOCK - читаем файл в XMS-память.',0Ah, 0Dh
           db 'Рассылка &quot;Ассемблер? Это просто! Учимся программировать&quot;, Выпуск № 030',0Ah,0Dh
           db 'http://www.Kalashnikoff.ru. E-mail: Assembler@Kalashnikoff.ru',0Ah,0Dh,0Ah
           db '(C) Авторские права на файлы-приложения принадлежат всем подписчикам рассылки.',0Ah, 0Dh, 0Ah
           db 9,9,'=== Россия, Москва, 2001 год ===',0Ah,0Dh,'$'

Mess_errfile db 'Ошибка: указанный в переменной File_name файл не удалось открыть!',0Ah,0Ah,0Dh,'$'

Mess_nohimem db 'Драйвер Himem.sys не загружен! Невозможно использовать XMS-память!!!'
Mess_cursor db 0Ah, 0Dh,'$'

XMS_error db 'Ошибка распределения XMS-памяти!',0Ah, 0Dh,'$'

Error_alloc db 'Ошибка распределения основной памяти!',0Ah, 0Dh,'$'
XMS_Addr dd ?
XMS_id dw ?

Mess_first db 0Ah,0Ah,0Dh,'Прочитали файл в основную память...',0Ah,0Dh,'Выводим то, что находится в ОСНОВНОЙ памяти:',0Ah,0Ah,0Dh,'$'

Mess_second db 0Ah,0Ah,0Dh,'-------------------------------------------',0Ah,0Ah,0Dh,'Теперь выводим то, что переслано из ОСНОВНОЙ в РАСШИРЕННУЮ (XMS),',0Ah,0Dh,'а затем обратно в ОСНОВНУЮ память:',0Ah,0Ah,0Dh,'$'

Mess_third db 0Ah,0Ah,0Dh,'Оба сообщения должны совпадать!!! Иначе и быть не может!!!',0Ah,0Dh,0Dh,'$'

Handle dw ?
File_name db 'c:\autoexec.bat',0
Bytes dw 0
Number_dec dw 0

Finish equ $

CSEG ends
end Start</textarea></td>
    </tr>
    <tr>
        <td align="center" colspan="2"><br>
        <font color="#004623" size="4"><strong>3. XMScopy.asm</strong></font><font
        color="#004623"><br>
        </font><textarea name="S1" rows="4" cols="25">
;              XMSCOPY.ASM - программа к рассылке № 030
;                   Копируем файл с использованием XMS

; (С) Авторские права на файлы-приложения принадлежат подписчикам рассылки
; &quot;Ассемблер? Это просто! Учимся программировать&quot;
; Автор рассылки:
; Калашников Олег Александрович (e-mail: Assembler@Kalashnikoff.ru)
;                 http://www.Kalashnikoff.ru

; --- Ассемблирование (получение *.com файла) ---
;При использовании MASM 6.11 - 6.13:
;ML.EXE XMSCOPY.asm /AT

;При использовании TASM:
;TASM.EXE XMSCOPY.asm
;TLINK.EXE XMSCOPY.obj /t/x


.386
.8087
CSEG segment use16
assume cs:CSEG, ds:CSEG, es:CSEG, ss:CSEG
org 100h

Start:
     mov ah,9
     mov dx,offset Mess_about
     int 21h

     mov sp,0FEh

;Проверим на наличие Himem.sys в памяти...
     mov ax,4300h
     int 2Fh
     cmp al,80h
     je Himem_loaded

     mov ah,9
     mov dx,offset Mess_nohimem
     int 21h
     ret


Himem_loaded:
     call Prepare_memory
     call Prepare_XMS

;Копируем файл...
     call Copy_file
     ret



;=== Готовим XMS-память ===
Prepare_XMS proc
     mov ax,4310h
     int 2Fh
     mov word ptr XMS_Addr,bx
     mov word ptr XMS_Addr+2,es  ;Сохраним обработчик XMS-функций

     mov ah,88h   ;Получить кол-во Кб XMS-памяти (всего)
     call dword ptr XMS_Addr
     mov dword ptr Number_dec,edx ;Сохраним кол-во Кб XMS-памяти

     cmp edx,0FFFFh
     jbe Ok_XMS

     mov edx,0FFFFh

Ok_XMS:
     mov ah,9
     call dword ptr XMS_Addr
     mov XMS_id,dx  ;Сохраним ID отведенного блока

     ret
Prepare_XMS endp

; === Готовим основную память ===
Prepare_memory proc
      mov bx,offset Finish
      shr bx,4
      inc bx
      mov ah,4Ah
      int 21h    ;Ужимаем размер отведенной памяти до метки Finish

; -- Отводим память
      mov ah,48h
      mov bx,4096 ; 4096 * 16 = 65536 байт
      int 21h
      jc Error_main
      mov Buffer,ax  ;Сохраним сегмент первого отведенного блока

  ret

Error_main:
;Ошибка?
      mov ah,9
      mov dx,offset Error_alloc
      int 21h
      int 20h

Prepare_memory endp

; === Копирование файла ===
Copy_file proc
     call Check_file

;Выводим сообщение &quot;Читаю файл...&quot;
     mov ah,9
     mov dx,offset Info1
     int 21h

;--- Читаем файл в память
Next_portion:
     xor eax,eax
     mov ah,3Fh
     mov cx,0FFFFh
     xor dx,dx
     mov bx,Handle
     mov ds,Buffer
     int 21h
     push cs
     pop ds
     jc Error_copy

     mov Bytes,eax
     add Total_bytes,eax
     call Move_to_XMS

     cmp Bytes,0FFFFh
     je Next_portion

     mov ah,3Eh
     mov bx,Handle
     int 21h

;--- Пишем файл
;Выводим сообщение &quot;Пишу файл... &quot;
     mov ah,9
     mov dx,offset Info2
     int 21h

     mov dword ptr XMS_offsrc,0

     mov ah,3Ch
     xor cx,cx
     mov dx,offset File_new
     int 21h
     mov Handle,ax

int 3
Next_portion2:
     call Move_from_XMS

     mov ecx,Total_bytes
     cmp ecx,0FFFFh
     jbe Save_bytes

     sub Total_bytes,0FFFFh
     mov ecx,0FFFFh
     jmp short Step2

Save_bytes:
     mov Total_bytes,0

Step2:
     mov ah,40h
     xor dx,dx
     mov bx,Handle
     mov ds,Buffer
     int 21h
     push cs
     pop ds
     jc Error_copy

     cmp Total_bytes,0
     jnz Next_portion2

  ret

Error_copy:
     mov ah,9
     mov dx,offset Mess_errcopy
     int 21h
     int 20h

Copy_file endp

; === Пересылаем прочитанные данные в XMS память ===
Move_to_XMS proc
      mov eax,Bytes
      mov XMS_str,eax   ;Кол-во пересылаемых байт

      mov XMS_src,0

      mov word ptr XMS_offsrc,0 ;Смещение в основной памяти
      mov ax,Buffer
      mov word ptr XMS_offsrc+2,ax  ;Сегмент в основной памяти

      mov ax,XMS_id             ;Идентификатор приемника (т.е. XMS-памяти)
      mov XMS_rec,ax

      mov ah,0Bh
      mov si,offset XMS_str
      call dword ptr XMS_Addr

      mov eax,Total_bytes
      mov XMS_offrec,eax

 ret
;XMS_str    dd 0 ;Кол-во байт для пересылки
;XMS_src    dw 0 ;Источник
;XMS_offsrc dd 0 ;Смещение в блоке-источнике или адрес в основной памяти
;XMS_rec    dw 0 ;Идентификатор приемника
;XMS_offrec dd 0 ;Смещение в блоке-приемнике или адрес в основной памяти
Move_to_XMS endp

; === Пересылаем прочитанные данные из XMS памяти ===
Move_from_XMS proc
      mov dword ptr XMS_str,0FFFFh

      mov ax,XMS_id
      mov XMS_src,ax

      mov XMS_rec,0

      mov ax,Buffer
      mov word ptr XMS_offrec,0     ;Смещение в основной памяти
      mov word ptr XMS_offrec+2,ax  ;Сегмент в основной памяти

      mov ah,0Bh
      mov si,offset XMS_str
      call dword ptr XMS_Addr

      add XMS_offsrc,0FFFFh
      ret

;XMS_str    dd 0 ;Кол-во байт для пересылки
;XMS_src    dw 0 ;Источник
;XMS_offsrc dd 0 ;Смещение в блоке-источнике или адрес в основной памяти
;XMS_rec    dw 0 ;Идентификатор приемника
;XMS_offrec dd 0 ;Смещение в блоке-приемнике или адрес в основной памяти
Move_from_XMS endp




; --- Проверим, существует ли исходный файл и новый файл ---
Check_file proc
     mov ax,3D00h
     mov dx,offset File_new
     int 21h
     jc Step1

     mov ah,9
     mov dx,offset Mess_exist
     int 21h

     xor ah,ah
     int 16h
     push ax

     mov ah,2
     mov dl,al
     int 21h

     mov ah,9
     mov dx,offset Mess_cursor
     int 21h

     pop ax
     cmp al,'y'
     je Step1
     cmp al,'Y'
     je Step1

     int 20h

Step1:
     mov ax,3D00h
     mov dx,offset File_name
     int 21h
     jnc Step2

     mov ah,9
     mov dx,offset Mess_noexist
     int 21h

     int 20h

Step2:
     mov Handle,ax
     mov bx,ax
  ret
Check_file endp


Mess_about db 0Ah, 0Dh, 'XMSCOPY - Копируем файл с использованием XMS.',0Ah, 0Dh
           db 'Рассылка &quot;Ассемблер? Это просто! Учимся программировать&quot;, Выпуск № 030',0Ah,0Dh
           db 'http://www.Kalashnikoff.ru. E-mail: Assembler@Kalashnikoff.ru',0Ah,0Dh,0Ah
           db '(C) Авторские права на файлы-приложения принадлежат всем подписчикам рассылки.',0Ah, 0Dh, 0Ah
           db 9,9,'=== Россия, Москва, 2001 год ===',0Ah,0Dh,'$'

Mess_nohimem db 'Драйвер Himem.sys не загружен! Невозможно использовать XMS-память!!!'
Mess_cursor db 0Ah, 0Dh,'$'

Error_alloc db 'Ошибка распределения основной памяти!',0Ah, 0Dh,'$'

Mess_errcopy db 0Ah,0Dh,'Ошибка при копировании!',0Ah,0Dh,'$'
Info1 db 0Ah,0Ah,0Dh,'Читаю файл...$'
Info2 db 0Dh,'Пишу файл... $'

Mess_noexist db 'Не могу открыть файл '
File_name    db 'c:\file.txt',0
             db '!',0Ah, 0Dh,'$'

Mess_exist db 'Файл '
File_new   db 'c:\filenew.txt',0
           db 'уже существует! Заменить его (Y/N)?$'

XMS_Addr dd ?
Number_dec dd ?
Buffer dw ?
Bytes dd 0
Total_bytes dd 0

XMS_str    dd 0 ;Кол-во байт для пересылки
XMS_src    dw 0 ;Источник
XMS_offsrc dd 0 ;Смещение в блоке-источнике или адрес в основной памяти
XMS_rec    dw 0 ;Идентификатор приемника
XMS_offrec dd 0 ;Смещение в блоке-приемнике или адрес в основной памяти

XMS_id dw ?

Handle dw ?

Finish equ $

CSEG ends
end Start</textarea></td>
    </tr>
</table>
</center></div>

<hr>

<p>Сегодня рассмотрим работу
XMS-памяти. А именно:</p>

<ol>
    <li>Определим объем доступной
        XMS-памяти (XMSmem.asm);</li>
    <li>Скопируем файл Autoexec.bat в
        XMS-память, а затем выведем его
        на экран (XMSblock.asm);</li>
    <li>Научимся копировать файлы,
        используя XMS-память (XMScopy.asm).</li>
</ol>

<p>В приложении вы видите три файла,
каждый из которых выполняет свою
отдельную функцию. Как обычно будем
изучать от простого к сложному (XMSmem,
XMSblock, XMScopy).</p>

<p>Прежде, чем приступать к
рассмотрению материала, я хотел бы
отметить следующие аспекты:</p>

<p>1. Для получения доступа к
XMS-памяти необходимо загрузить
драйвер HIMEM.SYS либо подобный ему,
который откроет линию A20, а также
загрузит процедуры для работы с
расширенной памятью.</p>

<p>2. Для использования расширенной
(XMS) памяти в DOS, необходимо
прибегать к помощи прерываний и
процедур. Иного способа не
существует. Пересылка данных при
помощи команд MOVS не годится. Также
невозможно читать, например, файл
сразу в расширенную память.</p>

<p>3. Работа с XMS-памятью задача
нетривиальная, как может
показаться на первый взгляд. Более
того, отладчики типа AFD, CodeView, Turbo
Debugger и т.п. не позволяют
просматривать содержимое
расширенной памяти. Это значит, что
при возникновении каких-либо
ошибок в программе, придется самому
исследовать и искать ошибку (без
помощи отладчика), что, безусловно,
усложняет процесс отладки.<br>
Однако, подобных трудностей не
возникает у программ, которые
написаны под ОС Windows. В данной
операционной системе используется
совсем другой принцип обращения к
расширенной памяти (примерно так,
как мы обращаемся к основной памяти
в DOS).</p>

<hr>

<p align="center"><font size="4"><strong>Программа
XMSmem.asm.<br>
</strong></font><font size="3"><strong>Подготовка к
использованию расширенной памяти и
вывод объема XMS-памяти.</strong></font></p>

<p>Теперь можно приступать к
изучению материала.</p>

<p>Первое, что мы сделаем, - определим
объем доступной XMS-памяти, и выведем
кол-во килобайт на экран при помощи
известной нам уже процедуры с
использованием сопроцессора (ее мы
рассматривать уже не будем) (<strong>см.
файл XMSmem.asm</strong> - мы пока будем его
рассматривать как самый простой).</p>

<p>Как уже отмечалось выше, для того,
чтобы использовать расширенную
память, необходимо чтобы в памяти
присутствовал специальный драйвер,
который бы открыл доступ к ней. В DOS /
Windows такой файл называется HIMEM.SYS.
Если загрузить DOS без этого
драйвера, то программы смогут
обращаться только к основной
памяти (640 Кб). Следовательно, все
файлы-приложения будут работать
только, если загружен указанный
выше файл (или его аналог).</p>

<p>Первое, что нужно сделать -
проверить наличие драйвера HIMEM.SYS в
памяти. Это позволяет сделать
функция 4300h прерывания 2Fh:</p>

<p><strong>Функция 4300h прерывания 2Fh -
проверка на присутствие в памяти
драйвера HIMEM.SYS:</strong></p>

<table border="1" cellpadding="0" cellspacing="0" width="45%">
    <tr>
        <td bgcolor="#61AFAF"><strong>Вход:</strong></td>
        <td>AX = 4300h</td>
    </tr>
    <tr>
        <td bgcolor="#61AFAF"><strong>Выход:</strong></td>
        <td>AL = 80h - драйвер загружен</td>
    </tr>
</table>

<p>Делаем буквально следующее (во
избежание недоразумений, проверка
будет осуществляться во всех трех
файлах-приложениях):</p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3">...<em><br>
        ;Проверим на наличие Himem.sys в
        памяти...</em></font><font color="#002D59" size="3"
        face="Arial"><br>
        mov ax,4300h<br>
        int 2Fh<br>
        <br>
        cmp al,80h<br>
        je Himem_loaded </font><font color="#002D59" size="3"><em>;Если
        AL = 80h, то Himem.sys загружен.</em></font><font
        color="#002D59" size="3" face="Arial"><br>
        <br>
        </font><font color="#002D59" size="3"><em>;Иначе
        выводим сообщение о том, что Himem
        в памяти не обнаружен...<br>
        </em>...</font></td>
    </tr>
</table>

<p>Если драйвер присутствует, то
можно попробовать отвести блок
расширенной памяти. Для этого
вызываем процедуру Prepare_XMS, которая
подготовится к работе с
расширенной памятью, а также
отведет блок.</p>

<p>Все процедуры по управлению
XMS-памятью вызываются не через
прерывания (как функции DOS - INT 21h), а с
использованием команды дальний CALL
и указанием после нее сегмента и
смещения самой процедуры. Получить
точку входа (адрес) процедур по
управлению XMS-памятью позволяет
функция 4310h прерывания 2Fh:</p>

<p><strong>Функция 4301h прерывания 2Fh -
получить точку входа процедур
управления XMS-памятью:</strong></p>

<table border="1" cellpadding="0" cellspacing="0" width="45%">
    <tr>
        <td bgcolor="#61AFAF"><strong>Вход:</strong></td>
        <td>AX = 4310h</td>
    </tr>
    <tr>
        <td bgcolor="#61AFAF"><strong>Выход:</strong></td>
        <td>ES = сегмент, BX = смещение</td>
    </tr>
</table>

<p>Ниже рассмотрим это на примере.</p>

<p>После того, как получили точку
входа, все остальные обращения к
процедурам работы с XMS-памятью
будут осуществляться следующим
образом (естественно,
предварительно подготовив
регистры или массивы данных):</p>

<p><font face="Arial">call dword ptr cs:XMS_Addr</font></p>

<p>Итак, получаем обработчик
XMS-функций и количество килобайт
расширенной памяти:</p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3">...<em><br>
        </em></font><font color="#002D59" size="3" face="Arial">mov
        ax,4310h<br>
        int 2Fh</font><p><font color="#002D59" size="3"
        face="Arial">mov word ptr XMS_Addr,bx<br>
        mov word ptr XMS_Addr+2,es </font><font color="#002D59"
        size="3"><em>;Сохраним обработчик
        XMS-функций</em></font></p>
        <p><font color="#002D59" size="3" face="Arial">mov ah,88h
        </font><font color="#002D59" size="3"><em>;Получить
        кол-во Кб XMS-памяти</em></font><font
        color="#002D59" size="3" face="Arial"><br>
        call dword ptr XMS_Addr<br>
        mov dword ptr Number_dec,edx </font><font color="#002D59"
        size="3"><em>;Сохраним полученное
        число<br>
        </em>...</font></p>
        </td>
    </tr>
</table>

<p>Как видно из примера, функция
возвращает количество <u>килобайт
(НЕ байт!) в 32-х разрядный регистр EDX</u>.
</p>

<p>Теперь осталось только вывести
полученный результат, используя
написанную нами и изученную
процедуру вывода десятичного числа
(Out_dec).</p>

<p><b>Обращаю ваше внимание</b> на тот момент,
что количество килобайт свободной XMS-памяти
возвращает операционная система, которая
берет информацию не из CMOS, а ведет учет
самостоятельно. Это значит, что та
информация, которую вернет функция, может
не соответствовать реальной (DOS может
указать не только реальный объем XMS-памяти,
но и добавить к нему размер SWAP-файла Windows<span lang="EN-US" style="mso-ansi-language:EN-US">,</span>
либо наоборот показать меньший размер, чем
есть на самом деле, вычтя из реального
объема размер памяти, отведенный под кэш).</p>

<p>Очень надеюсь, что все понятно!</p>

<hr>

<p align="center"><font size="4"><strong>Программа
XMSblock.asm.<br>
</strong></font><font size="3"><strong>Чтение файла в
расширенную память и вывод его на
экран.</strong></font></p>

<p>Рассматривать подготовку и
отведение блока расширенной памяти
мы уже не будем. В данном файле все
происходит аналогично
вышеописанному, кроме того, что мы
еще и отводим блок расширенной
памяти при помощи функции 09h
процедуры управления XMS-памятью.
При этом DX должен содержать размер
отводимой памяти в килобайтах:</p>

<table border="0" width="65%" bgcolor="#FFFFFF">
    <tr>
        <td><font color="#002D59" size="3">...<em><br>
        </em></font><font color="#002D59" size="3" face="Arial">mov
        ah,9<br>
        mov dx,1024 </font><font color="#002D59" size="3"><em>;Отводим
        1024Кб XMS-памяти</em></font><font
        color="#002D59" size="3" face="Arial"><br>
        call dword ptr XMS_Addr<br>
        or ax,ax </font><font color="#002D59" size="3"><em>;Ошибка?</em></font><font
        color="#002D59" size="3" face="Arial"><br>
        jnz XMS_OK</font><font color="#002D59" size="3"><em><br>
        </em></font><font color="#002D59" size="3" face="Arial"><em>...<br>
        </em></font><font color="#002D59" face="Arial">XMS_OK:<br>
        mov XMS_id,dx </font><font color="#002D59"><em>;Сохраним
        ID отведенного блока<br>
        </em>...</font></td>
    </tr>
</table>

<p>В случае, если произошла ошибка
(запрашиваемый блок больше
имеющегося в распоряжении и т.п.), AX
не равен нулю и содержит код ошибки.</p>

<p>Если ошибки не произошло, то DX
содержит идентификационный номер
отведенного блока. В дальнейшем мы
будем обращаться к отведенному
блоку, используя этот номер (как при
открытии файла функции 3Dh
прерывания 21h выдает номер
открытого файла).</p>

<p align="center">______________</p>

<p><strong>Итак, теперь рассмотрим
работу с расширенной памятью.</strong></p>

<p>Как я уже упоминал выше, загружать
данный напрямую в XMS-память в DOS
невозможно. Для этого используется
основная память (640 Кб). Сперва
загружаем данные в отведенный
массив в основной памяти, затем при
помощи специальной процедуры
пересылаем их в расширенную.
Пересылка осуществляется блоками,
но не более, чем по 64Кб.</p>

<p>В программе XMSblock.asm мы сперва
читаем файл C:\AUTOEXEC.BAT в отведенный
массив в основной памяти и выводим.
Затем перебрасываем прочитанные
байты в расширенную память и
обратно в основную, <u>но уже по
другому адресу</u>. И снова выводим
то, что перебрасывали. Идентичность
выводимой информации подтверждает
то, что программа не имеет ошибок.</p>

<hr size="1">

<p align="center"><font size="4"><strong>Структура
массива при работе с XMS-памятью</strong></font></p>

<p>Для работы с XMS-памятью (пересылка
данных) заведем специальный массив.
Для удобства зададим каждой
переменной название. В дальнейшем
адрес данного массива будет
загружаться в регистры DS:SI перед
вызовом специальных подфункций
функции управления XMS-памятью.</p>

<table border="0" bgcolor="#FFFFFF">
    <tr>
        <td width="30%"><font color="#002D59" face="Arial">...<br>
        XMS_str dd 0<br>
        XMS_src dw 0<br>
        XMS_offsrc dd 0<br>
        XMS_rec dw 0<br>
        XMS_offrec dd 0<br>
        ...</font></td>
        <td><font color="#002D59"><em><br>
        ;Кол-во байт для пересылки<br>
        ;Источник<br>
        ;Смещение в блоке-источнике или
        адрес в основной памяти<br>
        ;Идентификатор приемника<br>
        ;Смещение в блоке-приемнике или
        адрес в основной памяти<br>
        </em></font></td>
    </tr>
</table>

<p>Рассмотрим отдельно каждую
переменную.</p>

<p><font face="Arial"><strong>1. XMS_str</strong></font> (два
слова) - должна содержать
количество байт для пересылки из
основной памяти в XMS либо наоборот.</p>

<p><font face="Arial"><strong>2. XMS_src</strong></font>
(слово) - указывает идентификатор
источника. Если эта переменная
равна нулю, то источником (откуда
пересылаются данные) является
основная память. В противном
случае, переменная должна
содержать идентификатор
отведенного блока XMS-памяти,
который получаем при отведении
блока (см. выше - XMS_id).</p>

<p><font face="Arial"><strong>3. XMS_offsrc</strong></font><strong>
</strong>(два слова) - содержит смещение
в блоке-источнике (если копирование
идет из расширенной памяти в
основную) или сегмент:смещение в
основной памяти (если копирование
идет из основной памяти в
расширенную).</p>

<p><font face="Arial"><strong>4. XMS_rec</strong></font>
(слово) - указывает идентификатор
приемника. Если эта переменная
равна нулю, то приемником (куда
пересылаются данные) является
основная память. В противном
случае, переменная должна
содержать идентификатор
отведенного блока XMS-памяти,
который получаем при отведении
блока (см. выше - XMS_id).</p>

<p><font face="Arial"><strong>5. XMS_offrec</strong></font>
(два слова) - содержит смещение в
блоке-приемнике (если копирование
идет в расширенную память из
основной) или сегмент:смещение в
основной памяти (если копирование
идет из расширенной памяти в
основную).</p>

<hr size="1">

<p>Теоретически мы рассмотрели
работу с XMS-памятью. Вам осталось
лишь изучить внимательно
прилагаемый файл XMSblock.asm и описания
к нему.</p>

<hr>

<p align="center"><font size="4"><strong>Программа
XMScopy.asm.<br>
</strong></font><font size="3"><strong>Копирование
файла с использованием расширенной
памяти.</strong></font></p>

<p><strong>ВНИМАНИЕ!<br>
</strong>1. Программа корректно
копирует файл, размер которого не
превышает объем XMS-памяти,
установленной в вашем компьютере!
Т.е. Если в вашей машине стоит 16Мб
ОЗУ, то максимальный размер файла,
который можно скопировать с
помощью этой программы, будет 16 Мб
минус 640 Кб.</p>

<p>2. Программа копирует файл C:\FILE.TXT в
C:\FILENEW.TXT.</p>

<p>Все эти недоработки вы сможете
сами легко доделать. Я же привел
простейший алгоритм копирования
файла, дабы не нагружать рассылку.
Впоследствии мы будем использовать
подобный алгоритм в нашей оболочке.</p>

<p><strong>Принцип работы программы:</strong></p>

<ul>
    <li><strong>Читаем файл C:\FILE.TXT в
        память...</strong></li>
    <li>Читаем 64 Кб файла в основную
        память;</li>
    <li>Перебрасываем его в
        расширенную память;</li>
    <li>Сдвигаем указатель,
        указывающий куда помещать
        следующую порцию данных в
        расширенную память;</li>
    <li>Если не достигнут конец файла,
        то читаем следующий блок.</li>
</ul>

<ul>
    <li><strong>Файл целиком загружен в
        память. Начинаем записывать
        прочитанные данные в файл
        C:\FILENEW.TXT...</strong></li>
    <li>Перебрасываем 64Кб из
        расширенной памяти в основную;</li>
    <li>Записываем данные в
        предварительно созданный файл
        C:\FILENEW.TXT;</li>
    <li>Сдвигаем указатель
        расширенной памяти;</li>
    <li>Перебрасываем следующий блок,
        если не достигнут конец
        данных...</li>
</ul>

<p>Уверен, что если вы уяснили весь
приведенный выше материал, то и без
проблем разберетесь с этой
программой. Все элементарно!</p>

<p align="center">______________</p>

<p>А на сегодня все! Я начинаю
готовить следующий выпуск. До
встречи, друзья мои!</p>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#9CCDCD">
    <tr>
        <td align="center" width="100%"><a name="partners"><font
        color="#004080" size="5"><strong>Наши
        партнеры</strong></font></a></td>
    </tr>
</table>
</center></div>

<p><font size="2" face="Arial">1. Рассылка Сергея
Никифорова &quot;</font><a
href="http://subscribe.ru/catalog/comp.soft.prog.vbs"><font
size="2" face="Arial">Программирование на
Visual Basic и ASP</font></a><font size="2" face="Arial">&quot;</font><font
size="1" face="Arial"> на </font><a href="http://subscribe.ru/"><font
size="1" face="Arial">Subscribe.ru</font></a><font size="1"
face="Arial"> (код рассылки: comp.soft.prog.vbs).
Название и сайт автора: Visual Basic Streets, </font><a
href="http://www.vbstreets.ru"><font size="1" face="Arial">http://www.vbstreets.ru</font></a><font
size="1" face="Arial">.</font></p>

<p><font size="2" face="Arial">2. Рассылка &quot;Мир
программирования на Visual BASIC и HTML&quot;
(</font><a href="http://soobcha-vb.narod.ru/alex"><font size="2"
face="Arial">http://soobcha-vb.narod.ru/alex</font></a><font
size="2" face="Arial">).</font></p>

<hr>

<p><font size="4" face="Arbat-Bold"><strong>С
уважением,</strong></font></p>

<p><font size="3"><strong>Калашников Олег: </strong></font><a
href="mailto:Assembler@Kalashnikoff.ru"><font size="3"><strong>Assembler@Kalashnikoff.ru</strong></font></a><font
size="3"><strong><br>
Мой ICQ No.: </strong></font><font color="#226622" size="3"><strong>68951340</strong></font><font
size="3"><strong><br>
URL сайта подписчиков: </strong></font><a
href="http://www.Kalashnikoff.ru"><font size="3"><strong>http://www.Kalashnikoff.ru</strong></font></a><font
size="3"><strong><br>
Форма для подачи вопроса: </strong></font><a
href="http://www.Kalashnikoff.ru/Experts/Question.html"><font
size="3"><strong>http://www.Kalashnikoff.ru/Experts/Question.html</strong></font></a></p>

<p align="left"><strong>______________</strong></p>

<p align="left"><strong>По вопросам
сотрудничества, рекламы и
спонсорства обращайтесь:</strong></p>

<ol>
    <li><font size="2">Публичное размещение
        материала из рассылки: </font><a
        href="mailto:Cooperation@Kalashnikoff.ru"><font size="2">Cooperation@Kalashnikoff.ru</font></a>
    </li>
    <li><font size="2">Реклама на сайте, в
        книге и рассылках: </font><a
        href="http://www.Kalashnikoff.ru/Reklama.html"><font
        size="2">http://www.Kalashnikoff.ru/Reklama.html</font></a><font
        size="2">, </font><a
        href="mailto:Reklama@Kalashnikoff.ru"><font size="2">Reklama@Kalashnikoff.ru</font></a>
    </li>
    <li><font size="2">Издание книги по
        материалам рассылки
        (спонсорство): </font><a
        href="mailto:Sponsor@Kalashnikoff.ru"><font size="2">Sponsor@Kalashnikoff.ru</font></a>
    </li>
</ol>

<hr>
<div align="center"><center>

<table border="0" cellpadding="0" cellspacing="0" width="100%"
bgcolor="#DDEEFF" bordercolor="#808080"
bordercolorlight="#FFFFFF">
    <tr>
        <td colspan="3" bgcolor="#BDDEFF"><font color="#400040"
        size="1"><strong>(C) Москва, 2001.
        Авторское право принадлежит
        Калашникову О.А.</strong> Публичное
        размещение материала из
        рассылки, а также его
        использование полностью или
        частично в коммерческих или
        иных подобных целях без
        письменного согласия автора
        влечет ответственность за
        нарушение авторских прав.</font></td>
    </tr>
</table>
</center></div>

<hr noshade>
<div align="center">

<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript>

<p align="center"><a
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"><img
src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG"
align="middle" border="0"></a> <a
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a>
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1"
target="_blank"><script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> <!-- SpyLOG --> <a
href="http://www.one.ru" target="_top"><img
src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&amp;t=9"
alt="be number one" border="0"></a> <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script
language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script
language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script
language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a
href="http://top.list.ru/jump?from=87856" target="_top"><img
src="http://top.list.ru/counter?js=na;id=87856;t=54"
alt="TopList" border="0"></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script></a>
<br>
<br>
<script>
// <!--
var rand = Math.round((Math.random() * (10000000 - 1)));
var login = "oleg77";
document.write("<a href=http://www.lbe.ru/cgi-bin/href/");
document.write(login + "?" + rand + " target=_top>");
document.write("<img src=http://www.lbe.ru/cgi-bin/banner/");
document.write(login + "?" + rand + " width=468 height=60");
document.write(" border=0 alt=LBE ismap></a>");
// -->
</script> <noscript> <a
href="http://www.lbe.ru/cgi-bin/href/oleg77?53826" target="_top"><img
src="http://www.lbe.ru/cgi-bin/banner/oleg77?53826"
alt="List Banner Exchange" border="0" ismap></a> </noscript> <br>
<a href="http://www.Kalashnikoff.ru/Reklama.html"><font size="1"
face="Courier New"><u>Реклама на сайте
Kalashnikoff.ru</u></font></a></p>

<p align="center">[<a href="031-I.htm">Следующий выпуск</a>] [<a target=_BLANK href="http://www.Kalashnikoff.ru/">На главную страницу</a>]</p>


<HR NOSHADE><CENTER>
<!-- SpyLOG v2 f:0211 --><script language="javascript">  
u="u496.71.spylog.com";d=document;nv=navigator;na=nv.appName;p=1;  
bv=Math.round(parseFloat(nv.appVersion)*100);  
n=(na.substring(0,2)=="Mi")?0:1;rn=Math.random();z="p="+p+"&rn="+rn;y="";  
y+="<a href='http://"+u+"/cnt?f=3&p="+p+"&rn="+rn+"' target=_blank>";  
y+="<img src='http://"+u+"/cnt?"+z+  
"&r="+escape(d.referrer)+"&pg="+escape(window.location.href)+"' border=0 width=88 height=31 alt='SpyLOG'>";  
y+="</a>"; d.write(y);if(!n) { d.write("<"+"!--"); }//--></script><noscript><p align="center"><a 
href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" 
target="_blank"><img src="http://u496.71.spylog.com/cnt?p=1" alt="SpyLOG" align="middle" border="0"></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"></noscript></a> 
<a href="http://u496.71.spylog.com/cnt?f=3&amp;p=1" target="_blank"> 
<script language="javascript1.2"><!-- if(!n) { d.write("--"+">"); }//--></script></a> 
<!-- SpyLOG --> 
 
 <a target=_top href="http://www.one.ru"><img src="http://cnt.one.ru/cgi-bin/cnt.cgi?id=16871&t=9" width=88 height=31 alt="be number one" border=0></a> 
 
 <script language="JavaScript"><!-- 
d=document;a='';a+=';r='+escape(d.referrer) 
js=10//--></script><script language="JavaScript1.1"><!-- 
a+=';j='+navigator.javaEnabled() 
js=11//--></script><script language="JavaScript1.2"><!-- 
s=screen;a+=';s='+s.width+'*'+s.height 
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth) 
js=12//--></script><script language="JavaScript1.3"><!-- 
js=13//--></script><script language="JavaScript"><!-- 
d.write('<a href="http://top.list.ru/jump?from=87856"'+ 
' target=_top><img src="http://top.list.ru/counter'+ 
'?id=87856;t=54;js='+js+a+';rand='+Math.random()+ 
'" alt="TopList"'+' border=0 height=31 width=88></a>') 
if(js>11)d.write('<'+'!-- ')//--></script><noscript><a 
target=_top href="http://top.list.ru/jump?from=87856"><img 
src="http://top.list.ru/counter?js=na;id=87856;t=54" 
border=0 height=31 width=88 
alt="TopList"></a></noscript><script language="JavaScript"><!-- 
if(js>11)d.write('--'+'>')//--></script> 
 
<br><br> 

</body>
</html>
