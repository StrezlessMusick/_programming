%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: 3Channels_Ann.dvi
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMMI12 CMR10 CMR12 CMBX12
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips 3Channels_Ann.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2007.04.11:1517
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /ed{exch def}def /gs{gsave dup scale}def /gsw{gs /width ed width setlinewidth}def
/p1{/y1 ed /x1 ed}def /p2{/y2 ed /x2 ed}def /abox{newpath x1 y1 moveto
x1 y2 lineto x2 y2 lineto x2 y1 lineto closepath}def

 /arrowdown{ /nwidth { width 1 add } def newpath 0 nwidth 1.5 mul neg
moveto nwidth 1.2 mul nwidth 3 mul rlineto nwidth 2.4 mul neg 0 rlineto
nwidth 1.2 mul nwidth 3 mul neg rlineto closepath fill } def

 /arrowup{ /nwidth { width 1 add } def newpath 0 nwidth 1.5 mul moveto
nwidth 1.2 mul nwidth 3 mul neg rlineto nwidth 2.4 mul neg 0 rlineto
nwidth 1.2 mul nwidth 3 mul rlineto closepath fill } def

 /arrowright{ /nwidth { width 1 add } def newpath nwidth 1.5 mul 0
moveto nwidth 3 mul neg nwidth 1.2 mul rlineto 0 nwidth 2.4 mul neg
rlineto nwidth 3 mul nwidth 1.2 mul rlineto closepath fill } def

 /gluon{ gsw /num ed /ampi ed /dy ed /dx ed p1 /dy dy y1 sub def /dx
dx x1 sub def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate
dy dx atan rotate /num num 0.5 sub round def /inc dr num 2 mul 2 add
div def /amp8 ampi 0.9 mul def amp8 0 lt {/amp8 amp8 neg def} if /x1
inc 2 mul def newpath 0 0 moveto inc 0.1 mul ampi 0.5 mul inc 0.5 mul
ampi inc 1.4 mul ampi curveto x1 amp8 add dup ampi exch ampi neg dup
x1 exch curveto 2 1 num { pop x1 amp8 sub dup ampi neg exch ampi dup
x1 inc add exch curveto /x1 x1 inc dup add add def x1 amp8 add dup
ampi exch ampi neg dup x1 exch curveto } for x1 amp8 sub dup ampi neg
exch ampi dup x1 inc 0.6 mul add exch curveto x1 inc 1.5 mul add ampi
dr inc 0.1 mul sub ampi 0.5 mul dr 0 curveto stroke grestore } def

 /photon{ gsw /num ed /ampi ed p2 p1 /dy y2 y1 sub def /dx x2 x1 sub
def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate dy dx atan
rotate /num num 2 mul 0.5 sub round def /x2 dr num div def /pi 3.141592
def /sign 1 def 1 1 num { pop newpath 0 0 moveto 4 3 div x2 mul pi
div dup neg x2 add 4 3 div ampi sign mul mul dup 3 1 roll x2 0 curveto
stroke /sign sign neg def x2 0 translate } for grestore } def

 /zigzag{ gsw /num ed /ampi ed p2 p1 /dy y2 y1 sub def /dx x2 x1 sub
def /dr dx dx mul dy dy mul add sqrt def x1 y1 translate dy dx atan
rotate /num num 2 mul 0.5 sub round def /x2 dr num div def /pi 3.141592
def /sign 1 def 1 1 num { pop newpath 0 0 moveto x2 2 div ampi sign
mul lineto x2 0 lineto stroke /sign sign neg def x2 0 translate } for
grestore } def

 /photonarc{ gsw /num ed /ampli ed /arcend ed /arcstart ed /radius
ed translate /num num 2 mul round def arcend arcstart lt { /arcend
arcend 360 add def } if /arcend arcend arcstart sub num div def arcstart
rotate /arcstart arcend 2 div def /cp arcend cos def /sp arcend sin
def /cp2 arcstart cos def /sp2 arcstart sin def newpath 1 1 num { pop
radius 0 moveto /beta radius arcend mul 180 ampli mul div def /tt sp
cp beta mul sub cp sp beta mul add div def /amp1 radius ampli add 8
mul beta cp2 mul sp2 sub mul beta 4 cp add mul tt cp mul 3 mul sp 4
mul sub add radius mul sub beta tt sub 3 mul div def radius ampli add
8 mul cp2 mul 1 cp add radius mul sub 3 div amp1 sub dup radius sub
beta mul amp1 dup radius cp mul sub tt mul radius sp mul add radius
cp mul radius sp mul curveto /ampli ampli neg def arcend rotate } for
stroke grestore } def

 /gluearc{ gsw /num ed /ampi ed /arcend ed /arcstart ed /radius ed
translate arcstart rotate /darc arcend arcstart sub def /dr darc 180
div 3.141592 mul radius mul def /const darc dr div def /num num 0.5
sub round def /inc dr num 2 mul 2 add div def /amp8 ampi 0.9 mul def
/amp1 radius ampi add def /amp2 radius ampi sub def /amp3 radius ampi
2 div add def /amp4 amp1 inc amp8 add const mul cos div def /amp5 amp2
amp8 const mul cos div def /amp6 amp1 inc 0.6 mul amp8 add const mul
cos div def /amp7 amp1 inc 0.9 mul const mul cos div def amp8 0 lt
{/amp8 amp8 neg def} if /x1 inc 2 mul def newpath radius 0 moveto inc
0.1 mul const mul dup cos amp3 mul exch sin amp3 mul inc 0.5 mul const
mul dup cos amp7 mul exch sin amp7 mul inc 1.4 mul const mul dup cos
amp1 mul exch sin amp1 mul curveto x1 amp8 add const mul dup cos amp6
mul exch sin amp6 mul x1 amp8 add const mul dup cos amp5 mul exch sin
amp5 mul x1 const mul dup cos amp2 mul exch sin amp2 mul curveto 2
1 num { pop x1 amp8 sub const mul dup cos amp5 mul exch sin amp5 mul
x1 amp8 sub const mul dup cos amp4 mul exch sin amp4 mul x1 inc add
const mul dup cos amp1 mul exch sin amp1 mul curveto /x1 x1 inc dup
add add def x1 amp8 add const mul dup cos amp4 mul exch sin amp4 mul
x1 amp8 add const mul dup cos amp5 mul exch sin amp5 mul x1 const mul
dup cos amp2 mul exch sin amp2 mul curveto } for x1 amp8 sub const
mul dup cos amp5 mul exch sin amp5 mul x1 amp8 sub const mul dup cos
amp6 mul exch sin amp6 mul x1 inc 0.6 mul add const mul dup cos amp1
mul exch sin amp1 mul curveto x1 inc 1.5 mul add const mul dup cos
amp7 mul exch sin amp7 mul dr inc 0.1 mul sub const mul dup cos amp3
mul exch sin amp3 mul dr const mul dup cos radius mul exch sin radius
mul curveto stroke grestore } def

 /arrowarc{ gsw /arcend ed /arcstart ed /radius ed translate newpath
0 0 radius arcstart arcend arc stroke arcstart arcend gt { /arcend
arcend 360 add def } if arcstart arcend add 2 div rotate radius 0 translate
arrowup grestore } def

 /longarrowarc{ gsw /arcend ed /arcstart ed /radius ed translate arcstart
arcend gt { /arcend arcend 360 add def } if /arcmid 540 width 1 add
mul 3.14159 div radius div def newpath 0 0 radius arcstart arcend arcmid
sub arc stroke arcend arcmid 2 div sub rotate radius 0 translate arrowup
grestore } def

 /dasharrowarc{ gsw /dsize ed /arcend1 ed /arcstart1 ed /radius ed
translate arcend1 arcstart1 lt { /arcend1 arcend1 360 add def } if
/arcmid1 arcend1 arcstart1 add 2 div def 0 0 radius arcstart1 arcmid1
dsize width 1 dashcarc 0 0 radius arcmid1 arcend1 dsize width 1 dashcarc
arcmid1 rotate radius 0 translate arrowup grestore } def

 /arrowarcn{ gsw /arcend ed /arcstart ed /radius ed translate newpath
0 0 radius arcstart arcend arcn stroke arcstart arcend lt { /arcstart
arcstart 360 add def } if arcstart arcend add 2 div rotate radius 0
translate arrowdown grestore } def

 /longarrowarcn{ gsw /arcend ed /arcstart ed /radius ed translate arcstart
arcend lt { /arcstart arcstart 360 add def } if /arcmid 540 width 1
add mul 3.14159 div radius div def newpath 0 0 radius arcstart arcend
arcmid add arcn stroke arcend arcmid 2 div add rotate radius 0 translate
arrowdown grestore } def

 /dasharrowarcn{ gsw /dsize ed /arcend1 ed /arcstart1 ed /radius ed
translate arcstart1 arcend1 lt { /arcstart1 arcstart1 360 add def }
if /arcmid1 arcstart1 arcend1 add 2 div def 0 0 radius arcmid1 arcstart1
dsize width 1 dashcarc 0 0 radius arcend1 arcmid1 dsize width 1 dashcarc
arcmid1 rotate radius 0 translate arrowdown grestore } def

 /arrowline{ gsw p2 p1 /dx x2 x1 sub def /dy y2 y1 sub def /dr dx dx
mul dy dy mul add sqrt def x1 y1 translate newpath 0 0 moveto dx dy
rlineto stroke dy dx atan rotate dr 2.0 div 0 translate arrowright
grestore } def

 /longarrow{ gsw p2 p1 /dx x2 x1 sub def /dy y2 y1 sub def /dr dx dx
mul dy dy mul add sqrt def x1 y1 translate dy dx atan rotate newpath
0 0 moveto dr width 3 mul sub 0 rlineto stroke dr width 1.5 mul sub
0 translate arrowright grestore } def

 /dasharrowline{ gsw /dsize ed p2 p1 /dx x2 x1 sub def /dy y2 y1 sub
def /dr dx dx mul dy dy mul add sqrt 2 div def x1 y1 translate dy dx
atan rotate 0 0 dr 0 dsize width 1 dashline dr 0 translate 0 0 dr 0
dsize width 1 dashline arrowright grestore } def

 /line{ gsw p2 p1 newpath x1 y1 moveto x2 y2 lineto stroke grestore
} def

 /dashline{ gsw /dsize ed p2 p1 /r y2 y1 sub dup mul x2 x1 sub dup
mul add sqrt def /dsize r dsize 2 mul div 0.5 sub round dup 0 le {
pop 0 } if 2 mul 1 add r exch div def [dsize dsize] 0 setdash newpath
x1 y1 moveto x2 y2 lineto stroke grestore } def

 /carc{ gsw /arcend ed /arcstart ed /radius ed translate newpath 0
0 radius arcstart arcend arc stroke grestore } def

 /dashcarc{ gsw /dsize ed /arcend ed /arcstart ed /radius ed translate
/dr arcend arcstart sub dup 0 lt { 360 add } if 3.14159 mul 180 div
radius mul def /dsize dr dsize 2 mul div 0.5 sub round dup 0 le { pop
0 } if 2 mul 1 add dr exch div def [dsize dsize] 0 setdash newpath
0 0 radius arcstart arcend arc stroke grestore } def

 /vertex{ gs /dotsize ed translate newpath 0 0 dotsize 0 360 arc 0
setgray fill stroke grestore } def

 /bcirc{ gsw /radius ed translate 1 setgray newpath 0 0 radius 0 360
arc fill 0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def

 /gcirc{ gsw /gcolor ed /radius ed translate 1 setgray newpath 0 0
radius 0 360 arc fill gcolor setgray newpath 0 0 radius 0 360 arc fill
0 setgray newpath 0 0 radius 0 360 arc stroke grestore } def

 /box{ gsw p2 p1 abox stroke grestore } def

 /bbox{ gsw p2 p1 1 setgray abox fill 0 setgray abox stroke grestore
} def

 /gbox{ gsw /gcolor ed p2 p1 1 setgray abox fill gcolor setgray abox
fill 0 setgray abox stroke grestore } def

 /btext{ gsw /fsize ed /thetext ed translate /hsize thetext stringwidth
pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul 3 div neg
def /x2 x1 neg def /y2 y1 neg def 1 setgray abox fill 0 setgray abox
stroke hsize 2 div neg fsize 3 div neg moveto thetext show grestore
} def

 /b2text{ gsw /fsize ed /text2 ed /text1 ed translate /hsize1 text1
stringwidth pop def /hsize2 text2 stringwidth pop def hsize1 hsize2
lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize fsize
add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def /y2
y1 neg def 1 setgray abox fill 0 setgray abox stroke hsize1 2 div neg
fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul 6 div neg
moveto text2 show grestore } def

 /gtext{ gsw /fsize ed /thetext ed /graysc ed translate /hsize thetext
stringwidth pop def /x1 hsize fsize add 2 div neg def /y1 fsize 2 mul
3 div neg def /x2 x1 neg def /y2 y1 neg def graysc setgray abox fill
0 setgray abox stroke hsize 2 div neg fsize 3 div neg moveto thetext
show grestore } def

 /g2text{ gsw /fsize ed /text2 ed /text1 ed /graysc ed translate /hsize1
text1 stringwidth pop def /hsize2 text2 stringwidth pop def hsize1
hsize2 lt { /hsize hsize2 def } { /hsize hsize1 def } ifelse /x1 hsize
fsize add 2 div neg def /y1 fsize neg 7 mul 6 div def /x2 x1 neg def
/y2 y1 neg def graysc setgray abox fill 0 setgray abox stroke hsize1
2 div neg fsize 6 div moveto text1 show hsize2 2 div neg fsize 5 mul
6 div neg moveto text2 show grestore } def

 /ptext{ gs /text ed /fsize ed /mode ed 3 1 roll translate rotate mode
3 lt { 0 fsize neg translate } { mode 6 lt { /mode mode 3 sub def 0
fsize 2 div neg translate } { /mode mode 6 sub def } ifelse } ifelse
/fsize text stringwidth pop def mode 1 eq { fsize 2 div neg 0 translate
} { mode 2 eq { fsize neg 0 translate } if } ifelse 0 0 moveto text
show grestore } def

 /goval{ gsw /gcolor ed /x1 ed /x2 ed /radius ed translate x1 rotate
x2 radius div 1.0 scale 1 setgray newpath 0 0 radius 0 360 arc fill
gcolor setgray newpath 0 0 radius 0 360 arc fill 0 setgray newpath
0 0 radius 0 360 arc stroke grestore } def

 /oval{ gsw /x1 ed /x2 ed /radius ed translate x1 rotate x2 radius
div 1.0 scale 0 setgray newpath 0 0 radius 0 360 arc stroke grestore
} def

 /docurve{ x1 2 mul x2 add 3 div y1 y0 sub x1 x0 sub div x2 x0 sub
mul y2 y0 sub x2 x0 sub div x1 x0 sub mul add y1 add y0 2 mul add 3
div x1 x2 2 mul add 3 div y2 y3 sub x2 x3 sub div x1 x3 sub mul y1
y3 sub x1 x3 sub div x2 x3 sub mul add y2 add y3 2 mul add 3 div x2
y2 curveto } def

 /makecurve{ gsw /points ed /ss points length 2 idiv 2 mul def newpath
ss 4 gt { /x1 points 0 get def /y1 points 1 get def /x2 points 2 get
def /y2 points 3 get def /x3 points 4 get def /y3 points 5 get def
/x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div y2 y1 sub x2 x1
sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul y1 2 mul add
y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed /x0 points ii
get def /y0 points ii 1 add get def /x1 points ii 2 add get def /y1
points ii 3 add get def /x2 points ii 4 add get def /y2 points ii 5
add get def /x3 points ii 6 add get def /y3 points ii 7 add get def
docurve } for /x0 points ss 6 sub get def /y0 points ss 5 sub get def
/x1 points ss 4 sub get def /y1 points ss 3 sub get def /x2 points
ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul x1 sub def
/y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub 2 mul x2 x1
sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve } { ss
4 eq { points 0 get points 1 get moveto points 2 get points 3 get lineto
} if } ifelse stroke grestore } def

 /makedashcurve{ gsw /dsize ed /points ed /ss points length 2 idiv
2 mul def newpath ss 4 gt { /x1 points 0 get def /y1 points 1 get def
/x2 points 2 get def /y2 points 3 get def /x3 points 4 get def /y3
points 5 get def /x0 x1 2 mul x2 sub def /y0 y3 y2 sub x3 x2 sub div
y2 y1 sub x2 x1 sub div sub 2 mul x2 x1 sub dup mul x3 x1 sub div mul
y1 2 mul add y2 sub def x1 y1 moveto docurve 0 2 ss 8 sub { /ii ed
/x0 points ii get def /y0 points ii 1 add get def /x1 points ii 2 add
get def /y1 points ii 3 add get def /x2 points ii 4 add get def /y2
points ii 5 add get def /x3 points ii 6 add get def /y3 points ii 7
add get def docurve } for /x0 points ss 6 sub get def /y0 points ss
5 sub get def /x1 points ss 4 sub get def /y1 points ss 3 sub get def
/x2 points ss 2 sub get def /y2 points ss 1 sub get def /x3 x2 2 mul
x1 sub def /y3 y2 y1 sub x2 x1 sub div y1 y0 sub x1 x0 sub div sub
2 mul x2 x1 sub dup mul x2 x0 sub div mul y2 2 mul add y1 sub def docurve
} { ss 4 eq { points 0 get points 1 get moveto points 2 get points
3 get lineto } if } ifelse centerdash stroke grestore } def

 /pathlength{ flattenpath /dist 0 def { /yfirst ed /xfirst ed /ymoveto
yfirst def /xmoveto xfirst def } { /ynext ed /xnext ed /dist dist ynext
yfirst sub dup mul xnext xfirst sub dup mul add sqrt add def /yfirst
ynext def /xfirst xnext def } {} {/ynext ymoveto def /xnext xmoveto
def /dist ynext yfirst sub dup mul xnext xfirst sub dup mul add sqrt
add def /yfirst ynext def /xfirst xnext def } pathforall dist } def

 /centerdash{ /pathlen pathlength def /jj pathlen dsize div 2.0 div
cvi def /ddsize pathlen jj 2.0 mul div def [ddsize] ddsize 2 div setdash
} def

 /logaxis{ gsw /offset ed /hashsize ed /nlogs ed p2 p1 x1 y1 translate
/y2 y2 y1 sub def /x2 x2 x1 sub def y2 x2 atan rotate /rr x2 dup mul
y2 dup mul add sqrt def offset 0 ne { /offset offset ln 10 ln div def
} if /offset offset dup cvi sub def newpath 0 0 moveto rr 0 lineto
/lsize rr nlogs div def 0 1 nlogs { /x2 ed x2 offset ge { /y2 x2 offset
sub lsize mul def y2 rr le { y2 0 moveto y2 hashsize 1.2 mul lineto
} if } if } for stroke width 0.6 mul setlinewidth newpath 0 1 nlogs
{ /x2 ed 2 1 9 { ln 10 ln div x2 add /xx2 ed xx2 offset ge { /y2 xx2
offset sub lsize mul def y2 rr le { y2 0 moveto y2 hashsize 0.8 mul
lineto } if } if } for } for stroke grestore } def

 /linaxis{ gsw /offset ed /hashsize ed /perdec ed /numdec ed p2 p1
x1 y1 translate /y2 y2 y1 sub def /x2 x2 x1 sub def y2 x2 atan rotate
/rr x2 dup mul y2 dup mul add sqrt def newpath 0 0 moveto rr 0 lineto
/x1 rr numdec perdec mul div def /y1 rr numdec div def /offset offset
x1 mul def 0 1 numdec { y1 mul offset sub dup 0 ge { dup rr le { dup
0 moveto hashsize 1.2 mul lineto } if } if } for stroke width 0.6 mul
setlinewidth newpath offset cvi 1 numdec perdec mul offset add { x1
mul offset sub dup 0 ge { dup rr le { dup 0 moveto hashsize 0.8 mul
lineto } if } if } for stroke grestore } def
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
/UniqueID 5000769 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2BF8E09B
5C68BEBF37982B2EC24C4A8F927B7258C1F0760DED0B878876FCD6C8851050EE
257EF55E205A3E8DBEA00D414CFE0660D3F872F2BAF09AE5EAA6FE3885718C2E
1CE5C1EAEE486C0C906C7636582A6577AF487919D3AE12866DC44797209FD335
EAB0B2790481E2A73A563B6B434DD9E536BFE1B1FAFB1910439B3719A12141CE
3E5BD8CB1EF0D940D5F79BF54D54A15C1D3B38C941D53C584FBD5CE0657A4010
240F5F50ABCECC4B67AA896CA4CD7779A9D7DA5236FE6CB450B4F7647AB63D93
48A7C962CB5326E7DB5E78B88B54C735BEA177E505F24EB07565DD94B8DF2AE6
CAEC9F89AD5C5D5DF636B69F24D31E87E7F1E403BE3C0B109FAC6835325F0177
A260C4B57F4258DFE93B9FE5ADA511A2A2056566F752FAB5F16262D67B6CA663
32E949E1BA2160FE7FCDB9967F2F5B795ED6F5153F58C525DAA0362D2C5C3C75
7834B65E5B17919E8744686730A164F1F269134FF6FE175C20C40B7659D50798
3F6C232107AB14AA3925D5661D0DCD2626BA773028BC20590705E3953D153E4C
97B31E69B804C777871FE0BEE1349409ED203B38904193CD8E088B09E87F530F
438CAA26ED8DB380EDCD608BB63F71C4D5C16143D181850CD0604E2B5BEE9BC4
9D26703D2F8877C029E270106016F01640DDFC6145F4FC8E7C2CD0837C963A9F
B1B18D6664FD49DAAFE6BCE2D09FE275DAE4F62089D4B815F6ED8049712C49A7
BEE2672BABD0A18964C55723E3606F5385E5AAC56315CF71945274BD25CB0183
FFCC6C022717B7AEF7DD7358AFF38EDDEDE839FA9D13CDA1C1127AC9F7550AD2
166D3D6674DA3E306FC3D1436622DBDFC5F4D4FFBFEBD44FB8CCBD36AF1E8B2F
8C8B009B1EFD59777CC2C2429173920734B6160BEBDF99FC5FEAB19F19E75C81
F1EB0A13DBA545666F9189C1EB733B9ACC435226A3127A524D5FF0847CC891C4
7D6C800A1094051B49D6135A5887218CA35FD2EC830637F4D3C637F577738783
2CACC8D46E3F249C115A56CB6EDB44C17459C22E90F0605D43EF02ABA7557D65
FD045E0C081990FC8C14FDC6E1983CCC1C64CFFF1D71B9AA82E41EDCB5FCE4C5
15CD20794DD58DD868C7285E6A548BBA12701DF8510075B31453FFC6F7D92DF9
A4DD0F502A4D2DEAB1F103F5E44C974E1997E9104DC72E9CF159FB88E09A329C
ACD07DBD7206B71859CE3B27708BD7F81C49ED433068584DA25A19CBB95E81FD
CB23C01431E7134E2C80053CFC2658681D78B823EE5AD11D4F4812EF37A58E0D
36205C002E69BB0D6D201A367138AA6CC428B8D6888AC19CD65A6F1F9BCAC05B
69760313D3DDEDB26C5E203178EFE85C34317E57907226B53E55A837BCC118EE
F348B78B7BB63363C20E5F2A1FA52F9D2FA0DE648FED5E2B36EDEF951E11816B
C6FFB28B7468F5CC0D0079D3C98E8EB680777B3A271510AF50E8E582E3C15262
4F665D25B9C9025F7B2B9AAAB69507CD86D2C4A7DB508F9254C741594EC077FB
07EC05EF94F0600FD0409635B54CD3DA00F10E4065B4BD8D4E0C5971D7C11032
73D5FC1A7E619A8F713BAD69CD794E2F4DCDF5341616CD42487EDFD5222CC80D
DAED70AD50E6B9F3CC34E30BCF7988D274C1C8EF669D60B02B65335A6F5795A9
E386865C702535A50F51B8BC5DC0474F0CAE193F7097EF722927ED30774C819C
02CC5F7125473F23E06B8176BC217906AEFAC25EDD7812ECF200BF1398F20434
3256268C947C77B0CA1F62C5C68FF67F398F8918E79AAADC1B43C7EBF04F7174
CDFCE9A68DA10A536D087FCE3AE5E9685745D12CE2DB07D78C86FC05E132DE2E
45A147677105A0F33856B6FC6B2398A647C00B19FEFFF52B70F2DDF5D644EEDF
25410EE0982D67BE4C4CCC0687952C5949FABE17858F753E2C68367E5AD17961
D4868C31A9885D9D0AD963FA703FCF5CE6D60BB540F5958BCE7F2547226A2573
E212BBE51D22AB30
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD9B29E43E50
0DDD39AA60A89537A4286846D1231E731DE0F7BE080340A268DE289842867224
D5C6A2AE401593EAD23FC1BCEEC91186C588A362E565593ABD5835B13443CA5B
E4CE1116AE41EE557D31E340C9426E909A4B54BA76208B9055E0B8C38458866A
A9BDE2A7C62A5A4EF3185BD4E5ACAF094906C8E72344D343C7E306F8C5E5BE3D
75CFF7872B37B3D6B732FA583B9B68613BC013CA02A4E21C17A841B0DD5AD4F4
F3F791170464C7C0A06FA4AE181AD36C6F052B9CA7CD2222EB8D4EE4C616AF21
57F42BDEB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC390F0303E36E09AF75
2659C90B837112B11D993027CA8BA9B5720A124F63E7DBABB2F0303A6D876536
B55707F5C2F3D8090BA7F3C3776E669E5B78D3C03B6E07436B6560B5906E0348
19F295F12536FFD558FBA1AB51DC370B95A56E0B988CA064E0AC7F9101EA7481
AE0BE8FB1A69E4B782DE4E821305F50FE95C34D782990F0D0B632FC12B1E324F
1710B2002E0F3F132ED94495BC1892BB688C4FF28BEFE906F5D076592306D8BC
30833BD11CF1198C51BE09B0721EC7211F164A664AB4C7C6FE7EA206A7ABC433
66FAAD8EF6D6DD77674A3480CBFA62794496BF327BA0BCF7739D813518451BBF
41F9D9F03F1466758C192E2BC0FE74616331609D6DD131325357A24634E1B3FB
059814C123CA62478537A6492B618815B78DB298E699E6064DCF24EEDD570C6D
62190EB9D3874C0A69B7FE6CC9CF1C0C94CA8B063A6E51A2EBF371201F691698
603E3F46EBAC5A090D47F298AAEC19DFE4B799C53C2F6D7064E8CA2A1ED79CBA
9E40AF6056C9C2397905EFB38C7A0A493BC913183B4ED45919983F6D150B38D6
D4C7BD25F607B71CF5FBFBB6FCCF61E99EB296A3D506B5280699E195143ACBD3
0BB1D83A517CC0782838E841097AFF22AA52B2E50B03FF1BA61ECF38F6EA1CFE
CAE0A97A6B6E5F057D827932FACF0A26C9CA9571953E4B063F8786A2224DD06E
6F847ED6529B148F72F87C3465153C08EEBFA366A5E6014194218B7B67442A99
1BD8464AC846E6FB2BEAB1C50FC86F14593989ABE8315AB743B99CA480017014
292CDE9EC6501255528D7E728393FDB800ECF658CF44CB38BAD1F8E4351503F8
D666C9C56B62035939EBB51E7E2CCFB9B2E975FA2274585B92699E5476D4038D
D5C6AE6C2ACA729C8206D97B282050B2F48BACA695ACBC5624DEFD9266D6A56F
27B040A85F3C488E1E913D1E31CC7568CB45D0E69DE9F3408853B192DA9DD058
DE403768CEC2EF0150253BE8F0F62355CA274A62D21A0AEB9FD341D570453B09
E383DCBD60C5FD4E0C6B628CB4EB5F2485D3652AED98D5FCA95429107CFC8FD4
AC9E994056DBC52152001A4331B3F144366DF785D15F7D6E91C0BD9D7A8AE524
33085DFD9F8ED181E4EFC532F2623655E4F1FAEC1E6B8099B645D7A3D170FA70
F82555AD3EF894D173FB84663A58CB6784849E66289D7CB46BDBA3BA62777B6A
76A462A568BDFDE98936B1FFE854DF2BEA49F1C7E73A084C148BD6119585FFBF
92BD63D9E73A52F22D0B69E21C05BC4022D934D6E1ACAE819F9A67F75C64B046
C5D9DD9887C73B41F9C27644F2A62A1CDB7983C0F055C3E87DB5B2E8AEFEEB8C
BF6DA44B42493225939C9E3B27D36D18C3EC991DF5F9D00581BB6CA32BA929EF
19260E17D3F6C93EE9CE4C73AD860372251EE87C515B2153ACE6562C6132BD6D
8474A434CD324934D7296544EFBA1327EF1741F595B5D4F414A5C1D2991FD8A8
395353E7F99B71DCFAC84CFD8483B257DDF56D3C3DCDC8FB8718E2717E21E839
B4BA6E36B9A6898E18A965B473C325FA13466DE9F20BABF2FB027E7677B1649B
2757533A57BB16E1FD570B0F3A428D5F9B8B219C8F9279908EFDE3F3AD92F5BE
056330C02876E15796B57858555336D293
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA01F44870FC8D92C1C5B6821794636CE3E2B32279985B327D0FE583EF053CD5
39A863DFA76044B9B6CFABFB22C8BF9126E617BFC091A6AF2B830026E6C4D6C1
ABDAA045D91790F99917A1B0919C42C81508EC61E3E436B06A04B309E8F84776
DCA0195E9A8BF2BEBB49386EB93CB56A157959F4488C0E67945814F4704EBA90
8884AB84284FA0E58F65127074458363E5A5504D88A31C2EE5CF4421803E8892
3A55A389058F3E4A6F5A3313AC34A06DAE5E8BBB9F579FD003F271A9D51707AA
3C23E689C2886A82D9A10DD65ED1DA6CE467F68D0F4594FE758EB1F1A619B1E4
F0797106153A67866DD5CD2A31850D8A1EE484B5805C2D13B93E02BB9A41F1F2
B3BCC7FE94F82631764337CF06038F2A3602C5187B70C7712FCBE7D1D0E080A0
45C31D44D6571F783F3B6258F3662479C71C609C78DCA23F6A1E0006C7AD7488
FED517B1DA24965A36353430BF76822F03D8E9D22BF94251A0B805A1A1162C3A
97679FA4C5E1E52487139D57465EA29E4A5853E5A9ED5740CDAFA63D517A52E5
F45D8E051BD94F879A3B9388D8457BC11F3D12CA877AF7DCDF05651B4355AE7C
6AE5629A2AE3417CE849629FA8B0DE9D9EF5CFA98B6BA70ECD347E7F3F4A8968
AF82D91B2A88449A542520464C8AE9A429D0D77448709AB45387840FB6E68BA8
0D69284D288808E348B1C23BF70D18C0C6731050765A33EEF00580A2CAC131F4
2B0E5C268030B92094B8C25A1CB16FC8B9894FB9D125023E790B22CD7013036B
D13A401FE1D210DE6F25C3ABCC0A4367CB61C6D332BE305C5863D7DC44B44774
54525A72D56D2B3A218579A99FC39382D1669C1283845E53F440CF104DEB9B4F
EA96FFF57FA1107BA2ADBEA7DAE79DD3AABEFB369EE71875292F47EF895A9DCA
BC0FD739EBE5307B49B40876B58509120F48F13D11D2A3E50657635B65CD6A7D
01979656B182D713E9F45655DC2C6431890C2673F4818805F9927A70BE9BEC36
215E712F09BA8B9E1EE79460872A2D0FEFB0C3BD6D225BC6F25E7CF47448299D
E77F8B0934DA074B393C26B5E482E92F25C4F24ABFF371B6AB3A327C7FADB904
15FF0616D6839AA0B1C03981B94B82B70D06B2D87E7C0899920B9A2A452E01A0
3C4D2637C8738572307364791CECF269E9DAAD8898157E428B97C6E43257209A
D48E8AAC4B1C2844F8A2D319B4A1B85EB90C662A4151C579C46CEA6635098425
A7B3EC7366D265A19BEE4222D3F3A9950A662776ACAAAEA1977C2161DF3C642B
2D2821622A4FDAD7A7235E651CA528FD99DB001FF3F6587846587A472259E538
E23319E09A2A9EF24288A484B332D83A9FDCA1C60ED691B78352FC868A9AC13D
41597298ABC337B2D35102A867BDCA5D75EAA9075533152CBA668C2A800E2B82
70519656F1D9CBDF49D5DD3E14DAEF60A6A71B231CBBF5E2027BC0D20133154C
960EA75677206A9A4108DB6C4D4A4D4BBCD5058E8540316A0DC862106BCCD84F
26262C682EA17F2475F54FBFA2EC341EFE842DA223F64A05AA1E32BF1FA3751E
7D5249FFF8EAA2B47209A5937C4C6BEBE607D4C89247E0EAD62B46866EAB4419
E2A89CF9BD519A8372ABB81B4A5F0DBEB3D24C0E40DF8F19AC67B4FDEB6A5CE8
8EBB7BDDA9E24B7BFEAFF186011DE6698F6E64BF2B75905CAEBD0A5C94D0208D
22AE767236C66709A7F97215777078F0DEB95CEE359A40CE3430B365A4DA5F5D
CB81A66C51D71AB55BC88923A760D4C516101EA1699626EEA45DC6CFCD5E2432
4D5E6F62116A91FB237932F301281C34C1EEC0A31D77CCC6A2773AA81892CF90
7FEF839982050B57A164481D2027B242657D33F820B6FE45B8D2F9193CB6287C

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (3Channels_Ann.dvi)
@start /Fa 139[44 4[56 62 1[31 2[31 62 2[51 1[50 1[54
12[78 84[{ TeXf7b6d320Encoding ReEncodeFont }10 99.6264
/CMBX12 rf /Fb 233[59 22[{ TeXf7b6d320Encoding ReEncodeFont }1
119.552 /CMR12 rf /Fc 203[42 42 42 42 49[{
 TeXf7b6d320Encoding ReEncodeFont }4 83.022 /CMR10 rf
/Fd 143[59 9[58 29[97 58[61 13[{ TeXaae443f0Encoding ReEncodeFont }4
119.552 /CMMI12 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop -562 969 a @beginspecial @setspecial
270 0 add 40 0 add 34 5 90 0.02 0.5 1.0 goval showpage


@endspecial @beginspecial @setspecial
240 0 add 40 0 add 200 0 add 70 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial
@setspecial
200 0 add 10 0 add 240 0 add 40 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial @setspecial
340 0 add 70 0 add 300 0 add 40 0 add 3 0.5 1.0 dashline showpage
 
@endspecial
@beginspecial @setspecial
300 0 add 40 0 add 340 0 add 10 0 add 2 7 0.5 1.0 photon showpage
 
@endspecial @beginspecial
@setspecial
200 0 add 16 0 add 220 0 add 32 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial @setspecial
200 0 add 64 0 add 220 0 add 48 0 add 0.5 1.0 arrowline showpage
 
@endspecial
@beginspecial @setspecial
320 0 add 32 0 add 340 0 add 16 0 add 0.5 1.0 arrowline showpage
 
@endspecial @beginspecial
@setspecial
320 0 add 48 0 add 340 0 add 64 0 add 0.5 1.0 arrowline showpage
 
@endspecial 1046 534 a Fd(p)1105 552 y Fc(1)1046
750 y Fd(p)1105 768 y Fc(2)2291 750 y Fd(p)2350 768 y
Fc(3)2291 534 y Fd(p)2350 552 y Fc(4)1088 311 y Fb(\026)1063
342 y Fd(f)1063 974 y(f)2310 941 y(\015)2290 345 y(H)1110
1168 y Fa(The)38 b(annihilation)i(c)m(hannel)1845 5151
y Fc(1)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
