usage: git [--version] [--help]
			[-C <path>] [-c name=value]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p|--paginate|--no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           <command>
		   [<args>]

Наиболее просто используемые команды гит это:
   fetch      Скачивает объекты и ссылки из другого репозитория
   pull       Получает из и интегрирует с другим репозиторием или локальной веткой
   push       обновляет удаленные ссылки по ассоциированным объектам
   clone      клонирует репозиторий в новую директорию

   add        Добавляет содержимое файла в индекс
   bisect     Ищет бинарным поиском изменение, которое привело к багу
   branch     Перечисляет, создает, или удаляет ветки
   checkout   Checkout ветку или пути в раюочее дерево
   commit     записывает изменения в репозиторий
   diff       показывает изменения между коммитами, коммитом и рабочим деревом, итд
   grep       Печатает строки, соответствующие паттерну
   init       Создает пустой Git репозиторий или переинициализирует существующий
   log        Показывает логи коммитов
   merge      Объединяет вдве или бьолее истории разработки вместе
   mv         перемещает или переименовывает файл, директрию, или символьную ссылку
>> Fetch - получать
   rebase     Forward-port local commits to the updated upstream head (?)
   reset      Reset current HEAD to the specified state
   rm         удаляет файлы из рабочего дерева и из индекса
   show       показывает различные типы объектов
   status     показывает статус рабочего дерева
   tag        Создает, перечисляет, удаляет или проверяет a tag object signed with GPG (?)

'git help -a' и 'git help -g' перечисляет доступные подкоманды и некоторые концептуальные гайды.
См. 'git help <command>' или 'git help <concept>' чтобы прочитать о соответствующих подкомагндах или соответстаиях.

=== Общие гайды Git: ===

   attributes   Определячет атрибуты на путь
   glossary     A Git glossary
   ignore       Specifies intentionally untracked files to ignore
   modules      Defining submodule properties
   revisions    Specifying revisions and ranges for Git
   tutorial     A tutorial introduction to Git (for version 1.5.1 or newer)
>> workflows - рабочие процессы
   workflows    An overview of recommended workflows with Git

'git help -a' and 'git help -g' lists available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.

Если руководства и этой книги недостаточно и вам нужна персональная помощь,
вы можете попытаться поискать её на каналах #git и #github IRC-сервера Freenode (irc.freenode.net).
Обычно там сотни людей, отлично знающих Git, которые могут помочь

=== git config ===
опции:
/etc/gitconfig - --system
~/.gitconfig - --global
.git/config - <default>
git config [опция] переменная значение - устанавливает значение переменной

--list - перечисляет заданные опции
git config [опция] переменная - показывает значение переменной
//если переменная определена в нескольких местах, она выводится несколько раз

переменные:
user.name=Scott Chacon
user.email=schacon@gmail.com
core.editor=emacs
merge.tool=vimdiff
//Git умеет делать слияния при помощи kdiff3, tkdiff, meld, xxdiff, emerge, vimdiff, gvimdiff, ecmerge и opendiff,
//но вы можете настроить и другую утилиту. Подробнее об этом написано в главе 7.
color.status=auto
color.branch=auto
color.interactive=auto
color.diff=auto

