subr.el - basic lisp subroutines





2 Практика вычисления
***********************

Перед изучением, как писать определения функций в Emacs Lisp, 
>> spend - тратить, проводить 
полезно потратить немного времени вычисляя различные выражения которые уже написаны.
Эти выражения должны быть списками с функциями в качастве первого (и часто только) элемента.
По этому некоторые функции associated with buffers are both simple and interesting, we will start with those.
In this section, we will evaluate a few of these.
In another section, we will study the code of several other buffer-related functions, to see how they were written.

How to Evaluate
===============

   Whenever you give an editing command to Emacs Lisp, such as the command to move the cursor or to scroll the screen,
you are evaluating an expression, the first element of which is a function.  
This is how Emacs works.

   When you type keys, you cause the Lisp interpreter to evaluate an expression and that is how you get your results.  
Even typing plain text involves evaluating an Emacs Lisp function, in this case, one that uses `self-insert-command', 
which simply inserts the character you typed.
>> keystroke - нажатие клавиши
>> stroke - ход
The functions you evaluate by typing keystrokes are called "interactive" functions, or "commands"; 
how you make a function interactive will be illustrated in the chapter on how to write function definitions.
*Note Making a Function Interactive: Interactive.

   In addition to typing keyboard commands, we have seen a second way to evaluate an expression:
by positioning the cursor after a list and typing `C-x C-e'.  
This is what we will do in the rest of this section.
There are other ways to evaluate an expression as well; these will be
described as we come to them.

   Besides being used for practicing evaluation, the functions shown in
the next few sections are important in their own right.  A study of
these functions makes clear the distinction between buffers and files,
how to switch to a buffer, and how to determine a location within it.

