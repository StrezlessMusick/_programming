<html>
<head>
<title>bash(1)</title>
<link rel="stylesheet" href="../citforum.css">
<style>

</style>

<meta http-equiv="content-type" content="text/html; charset=Windows-1251">
</head>
<body bgcolor=#FFFFFF link=#006890 vlink=#003860 alink=#800000 text=#000000 topmargin="0" marginheight="0">
<a name=top></a>





<!-- counters -->
<table cellpadding=0 cellspacing=0 border=0>
<tr>
<td><!--TopList COUNTER--><script language="JavaScript"><!--
d=document;js=10;a=';r='+escape(d.referrer)
//--></script><script language="JavaScript1.1"><!--
js=11;a+=';j='+navigator.javaEnabled()
//--></script><script language="JavaScript1.2"><!--
js=12;s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
//--></script><script language="JavaScript1.3"><!--
js=13//--></script><script language="JavaScript"><!--
d.write('<img src="http://top.list.ru/counter'+
'?id=26978;js='+js+a+'" alt="" height=1 width=1>')
if(js>11)d.write('<'+'!-- ')//--></script><noscript><img
src="http://top.list.ru/counter?js=na;id=26978"
height=1 width=1 alt=""></noscript><script language="JavaScript"><!--
if(js>11)d.write('--'+'>')
//--></script><!--TopList COUNTER--></td>
<td><!--LiveInternet counter--><script language="JavaScript"><!--
document.write('<img src="http://counter.yadro.ru/hit?r'+
escape(document.referrer)+((typeof(screen)=='undefined')?'':
';s'+screen.width+'*'+screen.height+'*'+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+';u'+escape(document.URL)+
';i'+escape('Жж'+document.title)+';'+Math.random()+
'" width=1 height=1 alt="">')//--></script><!--/LiveInternet--></td>
<td><img src="http://counter.rambler.ru/top100.cnt?13078" alt="" width=1 height=1 border=0></td>
</tr></table>
<!-- end of counters -->



<center><table width=990 cellpadding=0 cellspacing=0>
<tr><td>

    <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr valign=bottom>
  <td align="left"><a href="http://citforum.ru/"><img src="../../../pictures/logos/citlogo8.gif" width=140 height=44 border=0 alt=Logo></a></td>

      <td align="right" width="100%" style="padding-bottom: 10px"><nobr><font size=2><b>Море(!) аналитической информации!</b></font></nobr></td>
    </tr>
    </table>




<center style="margin-top: 3px">
<!--  AdRiver code START. Type:728x90 Site: citforum PZ: 0 BN: 1 -->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write(
'<iframe src="http://ad.adriver.ru/cgi-bin/erle.cgi?'
+ 'sid=137295&bn=1&target=blank&bt=36&pz=0&rnd=' + RndNum4NoCash + '&tail256=' + ar_Tail
+ '" frameborder=0 vspace=0 hspace=0 width=728 height=90 marginwidth=0'
+ ' marginheight=0 scrolling=no></iframe>');
//--></script>
<noscript>
<a href="http://ad.adriver.ru/cgi-bin/click.cgi?sid=137295&bn=1&bt=36&pz=0&rnd=1013420086" target=_blank>
<img src="http://ad.adriver.ru/cgi-bin/rle.cgi?sid=137295&bn=1&bt=36&pz=0&rnd=1013420086" alt="-AdRiver-" border=0 width=728 height=90></a>
</noscript>
<!--  AdRiver code END  -->

</center>


</td></tr>
<tr><td>

<table cellpadding=0 cellspacing=0 border=0 width=100% style="padding-top: 3px">
<tr><td>
<table   cellspacing=0 cellpadding=0 border=0 width=100%>
<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=931 height=1 alt="" border=0></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 alt="" border=0></td></tr>
<tr><td bgcolor=#008080>

<table cellspacing=1 cellpadding=3 border=0 width=100%>
<tr>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/consulting/">IT-консалтинг</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/SE/">Software Engineering</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/programming/">Программирование</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/database/">СУБД</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/security/">Безопасность</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/internet/">Internet</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/nets/">Сети</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/operating_systems/">Операционные системы</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/hardware/">Hardware</a></font></td>
<!--
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/faq/>FAQ (ЧаВО)</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/howto/>HOWTO</a></font></td>
--> 
</tr>
</table>

</td></tr>
</table>

</td></tr>
<tr><td>
<table cellpadding=0 cellspacing=0 border=0 width=100% style="padding-top: 3px">
<tr valign=top>

<td width=98% style="padding: 0 5px">


<div class="document">

<div align=right><i>2004 г</i></div>
<h3>bash(1)</h3>
<i>
<a href="mailto:bfox@gnu.ai.mit.edu">Брайан Фокс (Brian Fox)</a>, Free Software Foundation,<br>
<a href="mailto:chet@ins.CWRU.Edu">Чет Реми (Chet Ramey)</a>, Case Western Reserve University
<br>перевод <a href="mailto:valera@openxs.kiev.ua">В. Кравчук</a>, <a target="_blank" href="http://ln.com.ua/~openxs">OpenXS Initiative</a></i><br>
<p><a href="index.shtml">содержание</a></p>
<div align="justify">









<h4><a name="redirection">ПЕРЕНАПРАВЛЕНИЕ</a></h4>

<p>Перед выполнением команды ее входной и выходной потоки могут быть 
<i>перенаправлены</i> с помощью специальных конструкций, обрабатываемых командным
интерпретатором. Перенаправления также можно использовать для открытия и закрытия
файлов в текущей среде работы командного интерпретатора. Следующие операторы
перенаправления могут предшествовать <i>простой команде</i> или указываться в любом 
ее месте, или указываться после <i>команды</i>. Перенаправления обрабатываются в 
порядке их указания, слева направо.</p>

<p>В следующих описаниях если номер дескриптора файла не указан и первый символ
оператора перенаправления - <b>&lt;</b>, выполняется перенаправление стандартного
входного потока (дескриптор файла 0). Если же первым символом оператора
перенаправления является символ <b>&gt;</b>, выполняется перенаправление стандартного
выходного потока (дескриптор файла 1).</p>

<p>В слове, идущем за оператором перенаправления в следующих описаниях, если не
сказано иначе, выполняется подстановка фигурных скобок, замена тильды, 
подстановка значений параметров, подстановка результатов выполнения команд,
вычисление арифметических выражений, удаление кавычек и подстановка имен 
файлов. Если в результате получается более одного слова, командный 
интерпретатор <b>bash</b> выдает сообщение об ошибке.</p>

<p>Учтите, что порядок указания перенаправлений имеет значение. Например, команда</p>
<dl><dt></dt><dd><tt>
          ls > dirlist 2>&1
</tt></dd></dl>

<p>перенаправляет в файл <b>dirlist</b> стандартный выходной поток и стандартный поток 
ошибок, тогда как команда</p>
<dl><dt></dt><dd><tt>
          ls 2>&1 > dirlist
</tt></dd></dl>

<p>перенаправляет в файл <b>dirlist</b> только стандартный выходной поток, поскольку
стандартный поток ошибок был направлен туде же, куда и стандартный выходной поток
до его перенаправления в файл <b>dirlist</b>.</p>

<p>Ошибка при открытии или создании файла приводит к отмене перенаправления.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="stdin_redir">Перенаправление входного потока</a></h5>
  
<p>Перенаправление входного потока приводит к открытию на чтение файла,
имя которого получается в результате подстановок в <b>слове</b>, через дескриптор
файла <b>n</b>, или как стандартного входного потока (дескриптор файла 0), если 
<b>n</b> не указано.</p>

<p>В общем случае перенаправление входного потока имеет вид:</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]&lt;<b>слово</b>
</tt></dd></dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="stdout_redir">Перенаправление выходного потока</a></h5>

<p>Перенаправление входного потока приводит к открытию на запись файла,
имя которого получается в результате подстановок в <b>слове</b>, через дескриптор
файла <b>n</b>, или как стандартного выходного потока (дескриптор файла 1), если <b>n</b>
не указано. Если файл не существует, он создается; если существует - он 
усекается до нулевого размера.</p>

<p>В общем случае перенаправление выходного потока имеет вид:</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]&gt;<b>слово</b>
</tt></dd></dl>

<p>Если используется оператор перенаправления <b>&gt;</b> и с помощью встроенной команды 
<b>set</b> установлена опция <a href="BASH.1_4.shtml#noclobber"><b>noclobber</b></a>, перенаправление не будет выполнено, если
файл с соответствующим именем существует и является обычным файлом.
Если используется оператор перенаправления <b>&gt;|</b>, либо оператор 
перенаправления - <b>&gt;</b> и опция <b>noclobber</b> с помощью встроенной команды 
<a href="BASH.1_4.shtml#set"><b>set</b></a> не 
установлена, перенаправление выполняется, даже если соответствующий файл существует.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="append_redir_stdout">Добавление перенаправленного вывода</a></h5>

<p>Такое перенаправление вывода приводит к открытию файла, имя которого получается
в результате подстановок в <b>слове</b>, в режиме добавления через дескриптор файла
<b>n</b>, или к добавлению в стандартный выходной поток (дескриптор файла 1) если
<b>n</b> не указано. Если файл не существует, он создается.</p>

<p>Перенаправление вывода на добавление имеет следующий общий вид:</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]>&gt;<b>слово</b>
</tt></dd></dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="stdout_stderr_redir">Перенаправление стандартного выходного потока и стандартного потока ошибок</a></h5>

<p>Командный интерпретатор <b>bash</b> позволяет перенаправить как стандартный выходной
поток (дескриптор файла 1), так и стандартный поток ошибок (дескриптор файла 2)
в файл, имя которого получается в результате подстановок в <b>слове</b>.</p>

<p>Для этого предлагается два формата конструкции перенаправления:</p>
<dl><dt></dt><dd><tt>
          &&gt;<b>слово</b>
</tt></dd></dl>
и
<dl><dt></dt><dd><tt>
          &gt;&<b>слово</b>
</tt></dd></dl>

<p>Первый формат является предпочтительным. Эта конструкция семантически 
эквивалентна следующей:</p>
<dl><dt></dt><dd><tt>
          &gt;<b>слово</b> 2&gt;&1
</tt></dd></dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="here_doc">Конструкция "документ здесь"</a></h5>

<p>При этом типе перенаправления командный интерпретатор будет читать входные 
данные из текущего файла, пока не встретится строка, содержащая только указанное
<b>слово</b> (без хвостовых пробелов). Все прочитанные до этого строки затем 
используются как стандартный входной поток для команды.</p>

<p>Конструкция "документ здесь" имеет следующий формат:</p>
<dl><dt></dt><dd><tt><pre>
&lt;&lt;[-]<b>слово</b>
        <b>документ-здесь</b>
<b>ограничитель</b>
</pre></tt></dd></dl>

<p>В <b>слове</b> не выполняется подстановка значений параметров, результатов выполнения
команд, имен файлов или вычисление арифметических выражений. Если в <b>слове</b> есть 
замаскированный символ, <b>ограничитель</b> является результатом удаления символов 
маскировки из <b>слова</b>. Если в <b>слове</b> нет замаскированных символов, во всех строках 
"документа здесь" выполняется подстановка значений параметров, результатов
выполнения команд и вычисление арифметических выражений. В этом случае
пара <b>\&lt;перевод строки&gt;</b> игнорируется, и необходимо использовать <b>\</b> для маскировки
символов <b>\</b>, <b>$</b> и <b>`</b>.</p>

<p>Если в качестве оператора перенаправления используется &lt;&lt;-, то все
начальные табуляции из входных строк и строки, содержащей <b>ограничитель</b>,
удаляются. Это позволяет естственным образом выравнивать конструкции
"документ здесь" в сценариях командного интерпретатора.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="dupli_file_descr">Дублирование дескрипторов файлов</a></h5>

<p>Оператор перенаправления</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]&lt;&<b>слово</b>
</tt></dd></dl>
<p>используется для дублирования дескрипторов входных файлов. Если в результате
подстановок <b>слово</b> представляет собой одну или несколько цифр, дескриптор
файла <b>n</b> становится копией соответствующего дескриптора файла. Если
файл с дескриптором, задаваемым цифрами <b>слова</b>, не открыт на чтение, возникает 
ошибка перенаправления. Если после подстановок в <b>слове</b> получается <b>-</b>,
файл с дескриптором <b>n</b> закрывается. Если <b>n</b> не указано, используется
стандартный входной поток (дескриптор файла 0).</p>

<p>Оператор</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]&gt;&<b>слово</b>
</tt></dd></dl>
<p>используется аналогично для дублирования дескрипторов выходных файлов. Если
<b>n</b> не указано, используется стандартный выходной поток (дескриптор файла 1).
Если цифры в <b>слове</b> не задают дескриптор файла, открытого на запись, возникает
ошибка перенаправления. В качестве специального случая, если <b>n</b> не указано и <b>слово</b>
после подстановок не представляет собой одну или несколько цифр, стандартный
выходной поток и стандартный поток ошибок перенаправляются так, как было
описано выше.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="open_file_desc_rw">Открытие дескрипторов файлов для чтения и записи</a></h5>

<p>Оператор перенаправления</p>
<dl><dt></dt><dd><tt>
          [<b>n</b>]&lt;&gt;<b>слово</b>
</tt></dd></dl>
<p>вызывает открытие файла, имя которого получается в результате подстановок
в <b>слове</b>, для чтения и записи через дескриптор файла <b>n</b> или через дескриптор
файла 0, если <b>n</b> не указано. Если файл не существует, он создается.</p>

<h4><a name="aliases">ПСЕВДОНИМЫ</a></h4>

<p><i>Псеводнимы</i> позволяют подставлять вместо первого слова простой команды строку.
Командный интерпретатор поддерживает список псевдонимов, которые можно 
устанавливать и удалять с помощью встроенных команд <a href="BASH.1_4.shtml#alias"><b>alias</b></a> и
<a href="BASH.1_4.shtml#unalias"><b>unalias</b></a> (см. раздел 
"<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" ниже). Первое слово
каждой команды, если оно не взято в кавычки, ищется в списке псевдонимов.
Если соответствующий псевдоним найден, слово заменяется текстом псевдонима.
Имя псевдонима и подставляемый текст может включать любые допустимые входные данные
для командного интерпретатора, включая перечисленные ранее <i>метасимволы</i>. 
Единственное исключение - имя псевдонима не может содержать знак <b>=</b>.
Первое слово текста псевдонима также ищется в списке псевдонимов, но если оно
совпадает с именем подставляемого псевдонима, повторной подстановки не 
происходит. Это означает, что можно задать псевдоним <b>ls</b> для <b>ls -F</b>,
например, и <b>bash</b> не будет пытаться выполнять рекурсивные подстановки в тексте
псевдонима. Если последний символ текста псевдонима - пробел, следующее за
псевдонимом слово исходной команды также ищется в списке псевдонимов и,
если найдено, заменяется.</p>

<p>Псевдонимы создаются и просматриваются с помощью комадны <a href="BASH.1_4.shtml#alias"><b>alias</b></a>,
а удаляются с помощью команды <a href="BASH.1_4.shtml#unalias"><b>unalias</b></a>.</p>

<p>Нет механизма передачи аргументов в подставляемый текст. Если необходимы
аргументы, используйте функцию командного интерпретатора.</p>

<p>Псевдонимы не подставляются, если командный интерпретатор не является 
интерактивным, если только с помощью встроенной команды <a href="BASH.1_4.shtml#shopt"><b>shopt</b></a> 
не установлена опция <a href="BASH.1_3.shtml#expand_aliases"><b>expand_aliases</b></a> 
(см. описание команды <a href="BASH.1_4.shtml#shopt"><b>shopt</b></a> ниже, в разделе
"<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>").</p>

<p>Правила определения и использования псевдонимов несколько запутаны. 
Командный интерпретатор <b>bash</b> всегда читает по крайней мере одну
полную строку ввода, прежде чем выполнять любые указанные в ней команды.
Псевдонимы подставляются при чтении строки, а не при ее выполнении. Поэтому
определение псевдонима, заданное в одной строке с другой командой, не учитывается,
пока не будет прочитана следующая строка. Команды, идущие после определения
псевдонима в той же строке, этот новый псевдоним не учитывают. Это поведение
также необходимо учитывать при выполнении функций. Псевдонимы подставляются
при чтении определения функции, а не при ее выполнении, поскольку определение
функции само является составной командой. Как следствие, псевдонимы, определенные
в функции, не доступны до тех пор, пока функция не выполнится. Для простоты,
всегда задавайте определения псевдонимов в отдельной строке и не используйте
команду <a href="BASH.1_4.shtml#alias"><b>alias</b></a> в составных командах.</p>

<p>Практически все варианты использования псевдонимов покрываются функциями
командного интерпретатора.</p>

<h4><a name="functions">ФУНКЦИИ</a></h4>

<p>Функция командного интерпретатора, определенная как было представлено ранее
в разделе "<a href="BASH.1_1.shtml#shell_syntax"><b>СИНТАКСИС КОМАНД</b></a>", сохраняет под заданным именем 
последовательность команд для выполнения в дальнейшем. 
Функции выполняются в контексте текущего командного интерпретатора; для их
интерпретации не создается новый процесс (сравните с выполнением сценария
командного интерпретатора). При вызове функции ее аргументы становятся 
позиционными параметрами. Специальный параметр <b>#</b> обновляется, отражая
это изменение. Позиционный параметр 0 не изменяется. Все остальные особенности
среды выполнения командного интерпретатора у функции и вызывающей ее команды
идентичны, только обработчик сигнала <b>DEBUG</b> (см. описание встроенной команды
<a href="BASH.1_4.shtml#trap"><b>trap</b></a> в разделе 
"<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" ниже) не наследуется.</p>

<p>Можно объявлять локальные переменные функции с помощью встроенной команды
<a href="BASH.1_4.shtml#local"><b>local</b></a>. Обычно переменные и их значения совместно используются функцией и
вызвавшей ее командой.</p>

<p>Если в функции выполняется встроенная команда <a href="BASH.1_4.shtml#return"><b>return</b></a>, эта функция
завершается, и выполнение продолжается со следующей команды после вызова 
функции. Когда функция завершается, восстанавливаются значения позиционных 
параметров и специального параметра <b>#</b>, которые были до выполнения функции.</p>

<p>Имена и определения функций можно получить с помощью опции <b>-f</b> встроенных
команд <a href="BASH.1_4.shtml#declare"><b>declare</b></a> или <a href="BASH.1_4.shtml#typeset"><b>typeset</b></a>. 
С опцией <b>-F</b> встроенные команды <a href="BASH.1_4.shtml#declare"><b>declare</b></a> и 
<a href="BASH.1_4.shtml#typeset"><b>typeset</b></a> будут выдавать только имена функций. Функции можно
экспортировать, с помощью опции <b>-f</b> встроенной команды <a href="BASH.1_4.shtml#export"><b>export</b></a>,
так что они будут автоматически определены в порожденных командных 
интерпретаторах.</p>

<p>Функции могут быть рекурсивными. Глубина рекурсии не ограничена.</p>

<h4><a name="arithmetic_eval">ВЫЧИСЛЕНИЕ АРИФМЕТИЧЕСКИХ ВЫРАЖЕНИЙ</a></h4>

<p>Командный интерпретатор в определенных случаях обеспечивает вычисление 
арифметических выражений (см. встроенную команду <a href="BASH.1_4.shtml#let"><b>let</b></a> и подраздел
"<a href="BASH.1_2.shtml#arithmetic"><b>Подстановка арифметических выражений</b></a>" ранее). 
Вычисление выполняется в 
длинных целых числах без проверки переполнения, хотя деление на 0
перехватывается и выдается соответствующее сообщение об ошибке. 
Операторы в следующем списке сгруппированы по уровням с одинаковым
приоритетом. Уровни перечислены в порядке убывания приоритета.</p>
<dl>
<dt><b>- +</b></dt><dd>
унарные минус и плюс</dd>
<dt><b>! ~ </b></dt><dd>
логическое и побитовое отрицание</dd>
<dt><b>**</b></dt><dd>
возведение в степень</dd>
<dt><b>* / %</b></dt><dd>
умножение, деление, получение остатка от деления</dd>
<dt><b>+ -</b></dt><dd>
сложение, вычитание</dd>
<dt><b>&lt;&lt; &gt;&gt;</b></dt><dd>
побитовый сдвиг влево и вправо</dd>
<dt><b>&lt;= &gt;= &lt; &gt;</b></dt><dd>
сравнение</dd>
<dt><b>== !=</b></dt><dd>
равенство и неравенство</dd>
<dt><b>&</b></dt><dd>
побитовое И</dd>
<dt><b>^</b></dt><dd>
побитовое исключающее ИЛИ</dd>
<dt><b>|</b></dt><dd>
побитовое ИЛИ</dd>
<dt><b>&&</b></dt><dd>
логическое И</dd>
<dt><b>||</b></dt><dd>
логическое ИЛИ</dd>
<dt><b>выражение?выражение:выражение</b></dt><dd>
условное вычисление</dd>
<dt><b>= *= /= %= += -=</b></dt><dd>
присваивание</dd>
</dl>

<p>В качестве операндов можно использовать переменные командного интерпретатора;
перед вычислением выполняется подстановка значений параметров. Значение
параметра в арифметическом выражении приводится к длинному целому. 
Чтобы переменную командного интерпретатора можно было использовать в
арифметических выражениях, ее атрибут <b>integer</b> устанавливать
не обязательно.</p>

<p>Константы с начальным 0 интерпретируются как восьмеричные числа.
Начальные <b>0x</b> или <b>0X</b> обозначают шестнадцатеричную константу.
В остальных случаях числа имеют вид <b>[основание#]n</b>, где <b>основание</b> -
десятичное число от 2 до 64, представляющее основание системы счисления,
а <b>n</b> - число в этой системе счисления. Если основание не указано,
используется основание 10. Цифры, большие 9, представляются
строчными буквами, прописными буквами, символами <b>_</b> и <b>@</b>, именно в таком порядке.
Если основание меньше или равно 36, прописные и строчные буквы эквивалентны и
используются для представления чисел от 10 до 35.</p>

<p>Операторы вычисляются в порядке приоритетов. Сначала вычисляются подвыражения в
круглых скобках, которые позволяют переопределить представленные выше
стандартные приоритеты операторов.</p>

<h4><a name="conditional_expr">УСЛОВНЫЕ ВЫРАЖЕНИЯ</a></h4>

<p>Условные выражения используются составной командой <b>[[</b> и встроенными командами
<a href="BASH.1_4.shtml#test"><b>test</b></a> и <b>[</b> для проверки атрибутов файла и выполнения 
строковых и арифметических
сравнений. Выражения формируются из следующих унарных и бинарных элементарных
условий. Если любой из аргументов <b>файл</b> в одном из условий имеет вид <b>/dev/fd/n</b>, 
проверяется файл с дескриптором <b>n</b>.</p>
<dl>
<dt><b>-a файл</b></dt><dd>
Истинно, если <b>файл</b> существует.</dd>
<dt><b>-b файл</b></dt><dd>
Истинно, если <b>файл</b> существует и являтся специальным блочным устройством.</dd>
<dt><b>-c файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является специальным символьным устройством.</dd>
<dt><b>-d файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является каталогом.</dd>
<dt><b>-e файл</b></dt><dd>
Истинно, если <b>файл</b> существует</dd>
<dt><b>-f файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является обычным файлом.</dd>
<dt><b>-g файл</b></dt><dd>
Истинно, если <b>файл</b> существует и имеет установленный бит <b>SGID</b>.</dd>
<dt><b>-h файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является символической связью.</dd>
<dt><b>-k файл</b></dt><dd>
Истинно, если <b>файл</b> существует и имеет установленный "клейкий" бит.</dd>
<dt><b>-p файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является именованным каналом (FIFO).</dd>
<dt><b>-r файл</b></dt><dd>
Истинно, если <b>файл</b> существует и доступен для чтения.</dd>
<dt><b>-s файл</b></dt><dd>
Истинно, если <b>файл</b> существует и имеет ненулевой размер.</dd>
<dt><b>-t fd</b></dt><dd>
Истинно, если дескриптор файла <b>fd</b> открыт и связан с терминалом.</dd>
<dt><b>-u файл</b></dt><dd>
Истинно, если <b>файл</b> существует и имеет установленный бит <b>SUID</b>.</dd>
<dt><b>-w файл</b></dt><dd>
Истинно, если <b>файл</b> существует и доступен для записи.</dd>
<dt><b>-x файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является выполняемым.</dd>
<dt><b>-O файл</b></dt><dd>
Истинно, если <b>файл</b> существует и принадлежит пользователю, задаваемому текущим
эффективным идентификатором пользователя.</dd>
<dt><b>-G файл</b></dt><dd>
Истинно, если <b>файл</b> существует и принадлежит группе, задаваемой текущим
эффективным идентификатором группы.</dd>
<dt><b>-L файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является символической связью.</dd>
<dt><b>-S файл</b></dt><dd>
Истинно, если <b>файл</b> существует и является сокетом.</dd>
<dt><b>-N файл</b></dt><dd>
Истинно, если <b>файл</b> существует и был изменен с момента последнего чтения.</dd>
<dt><b>файл1 -nt файл2</b></dt><dd>
Истинно, если <b>файл1</b> новее (в соответствии с датой изменения), чем <b>файл2</b>.</dd>
<dt><b>файл1 -ot файл2</b></dt><dd>
Истинно, если <b>файл1</b> старее, чем <b>файл2</b>.</dd>
<dt><b>файл1 -ef файл2</b></dt><dd>
Истинно, если <b>файл1</b> и <b>файл2</b> находятся на одном устройстве и имеют одинаковые
номера индексных дескрипторов.</dd>
<dt><b>-o опция</b></dt><dd>
Истинно, если установлена указанная <b>опция</b> командного интерпретатора. Список
опций см. далее в описании опции <a href="BASH.1_4.shtml#set-o"><b>-o</b></a> встроенной 
команды <a href="BASH.1_4.shtml#set"><b>set</b></a>.</dd>
<dt><b>-z строка</b></dt><dd>
Истинно, если длина <b>строки</b> - ноль (т.е. строка - пустая).</dd>
<dt><b>-n строка<br>
строка</b></dt><dd>
Истинно, если длина <b>строки</b> - не ноль.</dd>
<dt><b>строка1 == строка2</b></dt><dd>
Истинно, если строки совпадают. Вместо <b>==</b> можно использовать просто <b>=</b>.</dd>
<dt><b>строка1 != строка2</b></dt><dd>
Истинно, если строки не совпадают.</dd>
<dt><b>строка1 &lt; строка2</b></dt><dd>
Истинно, если <b>строка1</b> в текущей локали при лексикографическом
упорядочении предшествует <b>строке2</b>.</dd>
<dt><b>строка1 &gt; строка2</b></dt><dd>
Истинно, если <b>строка1</b> в текущей локали при лексикографическом
упорядочении идет после <b>строки2</b>.</dd>
<dt><b>arg1 OP arg2</b></dt><dd>
Оператор <b>OP</b> - один из следующих: <b>-eq</b>, <b>-ne</b>, <b>-lt</b>,
<b>-le</b>, <b>-gt</b> или <b>-ge</b>. Эти бинарные арифметические операторы возвращают 
истину, если <b>arg1</b> равен, не равен, меньше, меньше или равен,больше, больше или равен
<b>arg2</b>, соответственно. Аргументы <b>arg1</b> и <b>arg2</b> могут быть любыми целыми числами.</dd>
</dl>

<h4><a name="simple_command">ОБРАБОТКА ПРОСТОЙ КОМАНДЫ</a></h4>

<p>При обработке простой команды командный интерпретатор делает, слева направо,
следующие подстановки, присваивания и перенаправления.</p>

<ol>
<li>Слова, помеченные синтаксическим анализатором как присваивания переменным 
(те, что идут перед именем команды) и перенаправления, сохраняются для
дальнейшей обработки.</li>
<li>В остальных словах выполняются подстановки и замены. Если после этого
остались какие-то слова, первое из них считается именем команды, а остальные -
ее аргументами.</li>
<li>Перенаправления выполняются так, как описано ранее 
в разделе "<a href="BASH.1_3.shtml#redirection"><b>ПЕРЕНАПРАВЛЕНИЕ</b></a>".</li>
<li>В тексте после <b>=</b> в каждом присваивании переменной перед присваиванием 
выполняется замена тильды, подстановка значений параметров, подстановка 
результатов выполнения команд и вычисление арифметических выражений, а также
удаление кавычек.</li>
</ol>

<p>Если в результате имени команды нет, присваивания переменным влияют на среду
текущего командного интерпретатора. В противном случае, переменные добавляются в 
среду выполняемой команды и не влияют на среду текущего командного 
интерпретатора. Если происходит попытка присвоить значение переменной с атрибутом
только для чтения, выдается сообщение об ошибке и команда завершается с
ненулевым статусом выхода.</p>

<p>Если в результате имени команды нет, перенаправления выполняются,
но не влияют на среду текущего командного интерпретатора. При ошибке
перенаправления команда завершается с ненулевым статусом выхода.</p>

<p>Если после подстановок имя команды осталось, выполнение продолжается так,
как описано ниже. В противном случае, выполнение команды завершается.
При этом если выполнялись подстановки результатов выполнения команд,
статус выхода будет равен статусу последней команды, результаты которой были
подставлены. Если подстановок результатов выполнения команд не было, команда
завершается со статусом выхода ноль.</p>

<h4><a name="command_exec">ВЫПОЛНЕНИЕ КОМАНДЫ</a></h4>

<p>После разбиения команды на слова, если в результате получилась простая команда
с необязательным списком аргументов, выполняются следующие действия.<p>

<p>Если имя команды не содержит сиволов косой черты, командный интерпретатор
пытается ее найти. Если существует функция командного интерпретатора с
таким именем, она вызывается как было описано выше 
в разделе "<a href="BASH.1_3.shtml#functions"><b>ФУНКЦИИ</b></a>".
Если же функции с таким именем нет, командный интерпретатор ищет ее в списке
встроенных команд. Если такая встроенная команда есть, она выполняется.</p>

<p>Если имя не является именем функции или именем встроенной команды и не содержит
пробелы, командный интерпретатор <b>bash</b> просматривает каждый
каталог в значении переменной <b>PATH</b> в поисках выполняемого файла с 
соответствующим именем. Для запоминания полных имен выполняемых файлов
<b>bash</b> использует хэш-таблицу (см. описание команды <a href="BASH.1_4.shtml#hash"><b>hash</b></a> 
в разделе "<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" далее). 
Полный поиск по каталогам в <b>PATH</b>
выполняется только если команда не найдена в этой хэш-таблице.
Если команда при таком поиске не найдена, командный интерпретатор выдает 
соответствующее сообщение и завершает выполнение команды со статусом выхода 127.</p>

<p>Если команда найдена или имя команды содержит косые черты, командный 
интерпретатор выполняет соответствующую команду в отдельной среде выполнения.
Аргумент 0 устанавливается равным имени команды, и ей передаются параметры,
соответствующие аргументам в командной строке, если они заданы.</p>

<p>Если выполнить команду не удалось, потому что файл не соответствует поддерживаемым 
выполняемым форматам, и этот файл не является каталогом, предполагается,
что файл является <i>сценарием командного интерпретатора</i>, содержащим его команды.
Для его выполнения запускается порожденный командный интерпретатор. Этот
порожденный командный интерпретатор переинициализируется, как если бы для
обработки сценария был вызван новый командный интерпретатор, но только 
местонахождения команд, запомненные родительским интерпретатором (см. описание
команды <a href="BASH.1_4.shtml#hash"><b>hash</b></a> ниже в разделе 
"<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>"),
передаются порожденному.</p>

<p>Если текст в файле начинается с <b>#!</b>, остаток первой строки задает интерпретатор
для программы. Командный интерпретатор запускает указанный интерпретатор
в операционных системах, которые не поддерживают соответствующий формат 
выполняемого файла непосредственно. Этому интерпретатору в качестве аргументов
передается один необязательный аргумент, затем имя интерпретатора из первой
строки программы, затем имя самой программы и ее аргументы, если они заданы.</p>

<h4><a name="shell_exec_env">СРЕДА ВЫПОЛНЕНИЯ КОМАНД</a></h4>

<p>У командного интерпретатора есть <i>среда выполнения</i>, содержащая следующие
компоненты:</p>
<ul>
<li>открытые файлы, унаследованные командным интерпретатором при вызове, с учетом
изменений, вызванных перенаправлениями, переданными встроенной 
команде <a href="BASH.1_4.shtml#exec"><b>exec</b></a></li>

<li>текущий рабочий каталог, установленный командами <a href="BASH.1_4.shtml#cd"><b>cd</b></a>, 
<a href="BASH.1_3.shtml#pushd"><b>pushd</b></a> или <a href="BASH.1_4.shtml#popd"><b>popd</b></a>, 
или унаследованный командным интерпретатором при вызове</li>

<li>маска режима создания файла, установленная с помощью команды <a href="BASH.1_4.shtml#umask"><b>umask</b></a>
или унаследованная от родительского процесса</li>

<li>текущие обработчики сигналов, установленные с помощью <a href="BASH.1_4.shtml#trap"><b>trap</b></a></li>

<li>параметры командного интерпретатора, установленные путем присваивания 
переменным или унаследованные из среды родительского процесса</li>

<li>функции командного интерпретатора, заданные в ходе выполнения или унаследованные
из среды родительского процесса</li>

<li>опции, установленные при вызове (как стандартные, так и заданные явно в 
командной строке) или установленные с помощью комнады <a href="BASH.1_4.shtml#set"><b>set</b></a></li>

<li>опции, установленные с помощью команды <a href="BASH.1_4.shtml#shopt"><b>shopt</b></a></li>

<li>псевдонимы, заданные с помощью команды <a href="BASH.1_4.shtml#alias"><b>alias</b></a></li>

<li>идентификаторы различных процессов, в том числе, для фоновых заданий, значение
параметра <b>$$</b> и значение параметра <b>$PPID</b></li>
</ul>

<p>Когда необходимо выполнить команду, не являющуюся встроенной или функцией
командного интерпретатора, она вызывается в отдельной среде выполнения, 
состоящей из указанных ниже компонентов. Если не указано иначе, все значения
наследуются от командного интерпретатора.</p>
<ul>
<li>открытые файлы командного интерпретатора плюс любые изменения и дополнения,
заданные для команды перенаправлениями</li>

<li>текущий рабочий каталог</li>

<li>маска режима создания файлов</li>

<li>переменные командного интерпретатора, помеченные как экспортированные, а также 
переменные, экспортированные для команды и переданные в среде</li>

<li>наследуются установленные в родительском командном интерпретаторе обработчики
сигналов, а сигналы, в нем игнорировавшиеся, также игнорируются.</li>
</ul>
<p>Команда, вызванная в этой отдельной среде, не может повлиять на среду
выполнения родительского командного интерпретатора.</p>

<p>Команды, результаты которых необходимо подставить, и асинхронные команды 
вызываются в средах порожденных командных интерпретаторов, которые совпадают
со средой родительского, но обработчки сигналов устанавливаются такие, как были 
унаследованы родительским командным интерпретатором при вызове.
Встроенные команды, вызываемые как часть конвейера, также выполняются в среде 
порожденного командного интерпретатора. Изменения в среде порожденного
командного интерпретатора не затрагивают среду выполнения родительского.</p>

<h4><a name="environment">СРЕДА</a></h4>

<p>При вызове программы ей передается массив строк, который называют <i>средой</i>.
Это список пар имя-значение вида <b>name=value</b>.</p>

<p>Командный интерпретатор позволяет манипулировать средой несколькими способами.
При вызове командный интерпретатор просматривает свою среду и создает 
одноименный параметр для каждого имени, автоматически <i>экспортируя</i> его для
порожденных процессов. Выполняемые команды наследуют среду. Команды
<a href="BASH.1_4.shtml#export"><b>export</b></a> и <a href="BASH.1_4.shtml#declare"><b>declare  -x</b></a>  
позволяют добавлять и удалять параметры и функции из 
среды. Если значение параметра, входящего в среду, изменено, новое значение
становится частью среды, заменяя старое. Среда, наследуемая выполняемой командой,
состоит из начальной среды командного интерпретатора, значения которой могли
быть изменены в ходе его работы, за исключением пар, удаленных с помощью
команды <a href="BASH.1_4.shtml#unset"><b>unset</b></a>, и новых параметров, добавленных с 
помощью команд <a href="BASH.1_4.shtml#export"><b>export</b></a> и <a href="BASH.1_4.shtml#declare"><b>declare -x</b></a>.</p>

<p>Среда для любой <i>простой команды</i> или функции может быть временно дополнена путем
задания перед именем присваиваний параметрам, как описано ранее в разделе
"<a href="BASH.1_2.shtml#parameters"><b>ПАРАМЕТРЫ</b></a>". Эти операторы присваивания влияют 
только на среду вызываемой команды.</p>

<p>Если установлена опция <a href="BASH.1_4.shtml#set-k"><b>-k</b></a>, (см. описание встроенной команды 
<a href="BASH.1_4.shtml#set"><b>set</b></a> ниже), то все параметры с присвоенными при вызове значениями, 
а не только предшествующие имени команды, помещаются в ее среду.</p>

<p>Когда командный интерпретатор <b>bash</b> вызывает внешнюю команду, переменная <b>_</b>
устанавливается равной полному имени файла команды и передается этой команде
в среде.</p>

<h4><a name="exit_status">СТАТУС ВЫХОДА</a></h4>

<p>С точки зрения командного интерпретатора, команда, завершившаяся со статусом
выхода 0, сработала успешно. Статус выхода 0 означает успешное завершение.
Ненулевой статус выхода означает неудачу. Если работа команды прервана сигналом,
командный интерпретатор <b>bash</b> использует в качестве статуса выхода
значение 128+сигнал.</p>

<p>Если команда не найдена, порожденный для ее выполнения процесс возвращает
статус выхода 127. Если команда найдена, но не является выполняемой, 
возвращается статус выхода 126.</p>

<p>Если команда не сработала, поскольку ошибка произошла при подстановках или 
перенаправлениях, возвращается положительный статус выхода.</p>

<p>Встроенные команды интерпретатора возвращают статус 0 (<b>истина</b>) при успешном
выполнении, и ненулевой статус (<b>ложь</b>), если при выполнении произошла ошибка.
При некорректном использовании все встроенные команды возвращают статус 2.</p>

<p>Сам командный интерпретатор <b>bash</b> возвращает статус выхода последней выполненной
команды, если только не обнаруживает синтаксическую ошибку. В этом случае
он завершает работу с ненулевым статусом. См. также описание встроенной
команды <a href="BASH.1_4.shtml#exit"><b>exit</b></a> ниже.</p>

<h4><a name="signals">СИГНАЛЫ</a></h4>

<p>Когда командный интерпретатор <b>bash</b> работает в интерактивном режиме,
при отсутствии обработчиков сигналов, он игнорирует сигнал <b>SIGTERM</b> (так что
команда <a href="BASH.1_3.shtml#kill"><b>kill 0</b></a> не прекращает работу интерактивного 
командного интерпретатора),
а сигнал <b>SIGINT</b> перехватывается и обрабатывается (так, что встроенная команда
<a href="BASH.1_4.shtml#wait"><b>wait</b></a> им не прерывается). Во всех случаях, 
<b>bash</b> игнорирует сигнал <b>SIGQUIT</b>.
Если действует управление заданиями, <b>bash</b> игнорирует сигналы <b>SIGTTIN</b>,
<b>SIGTTOU</b> и <b>SIGTSTP</b>.</p>

<p>У синхронных заданий, запущенных командным интерпретатором <b>bash</b>,
устанавливаются обработчики сигналов, унаследованные командным интерпретатором
от родительского процесса. Если управление заданиями не действует, асинхронные
команды также игнорируют сигналы <b>SIGINT</b> и <b>SIGQUIT</b>. Команды, выполняемые для
подстановки результатов выполнения, игнорируют сигналы управления заданиями
<b>SIGTTIN</b>, <b>SIGTTOU</b> и <b>SIGTSTP</b>, посланные с клавиатуры.</p>

<p>По умолчанию командный интерпретатор завершает работу при получении сигнала
<b>SIGHUP</b>. Перед завершением он посылает сигналы <b>SIGHUP</b> всем заданиям, как
выполняющимся, так и остановленным. Остановленным заданиям предварительно 
посылается сигнал <b>SIGCONT</b>, гарантирующий получение ими сигнала <b>SIGHUP</b>. Для
предотвращения послыки интерпретатором сигнала конкретному заданию, его
необходимо удалить из таблицы заданий с помощью встроенной 
команды <a href="BASH.1_4.shtml#disown"><b>disown</b></a>
(см. раздел "<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" далее) 
или пометить как не получающие сигнал <b>SIGHUP</b> 
с помощью <a href="BASH.1_4.shtml#disown"><b>disown -h</b></a>.</p>

<p>Если с помощью команды <a href="BASH.1_4.shtml#shopt"><b>shopt</b></a> установлена опция 
командного интерпретатора <a href="BASH.1_4.shtml#huponexit"><b>huponexit</b></a>, 
<b>bash</b> посылает сигнал <b>SIGHUP</b> всем заданиям при завершении
работы интерактивного начального командного интерпретатора.</p>

<p>При получении командным интерпретатором <b>bash</b> сигнала, для которого установлен
обработчик, в то время, когда ожидается завершение команды, обработчик
не выполняется, пока команда не завершится. Когда <b>bash</b> ожидает завершения
асинхронной команды с помощью встроенной команды <a href="BASH.1_4.shtml#wait"><b>wait</b></a>, 
получение сигнала, для которого установлен обработчик, приводит к немедленному 
завершению встроенной команды <a href="BASH.1_4.shtml#wait"><b>wait</b></a> со статусом выхода 
более 128 сразу же после выполнения кода обработчика.</p>

<h4><a name="job_control">УПРАВЛЕНИЕ ЗАДАНИЯМИ</a></h4>

<p><i>Управление заданиями</i> - это возможность избирательно останавливать 
(<i>приостанавливать</i>) выполнение процессов и продолжать (<i>возобновлять</i>)
их выполнение в дальнейшем. Пользователи обычно делают это через 
интерактивный интерфейс, совместно реализуемый драйвером терминала и
командным интерпретатором <b>bash</b>.</p>

<p>Командный интерпретатор связывает <i>задание</i> с каждым конвейером. Он поддерживает
таблицу выполняющихся заданий, которую можно просматривать с помощью
команды <a href="BASH.1_3.shtml#jobs"><b>jobs</b></a>. 
При запуске задания асинхронно (<i>в фоновом режиме</i>) <b>bash</b> 
выдает строку следующего вида:</p>
<dl><dt></dt><dd><tt>
          [1] 25647
</tt></dd></dl>
<p>показывающую, что это задание с номером 1, а идентификатор последнего
процесса в конвейере, связанном с данным заданием - 25647. Все процессы в одном
конвейере являются частями одного задания. Командный интерпретатор <b>bash</b>
использует понятие <i>задания</i> как основу для управления заданиями.</p>

<p>Для упрощения реализации пользовательского интерфейса для управления заданиями
система поддерживает понятие <i>идентификатора группы процессов текущего терминала</i>.
Члены этой группы процессов (процессы, идентификатор группы процессов которых
равен идентификатору группы процессов терминала) получают сигналы с клавиатуры,
например, сигнал <b>SIGINT</b>. Эти процессы называют <i>приритетными</i> (процессами переднего
плана). <i>Фоновые</i> процессы - это те, идентификатор группы процессов которых не
совпадает с терминальным; таким процессам сигналы с клавиатуры не посылаются.
Только приоритетные процессы могут читать данные с терминала и выдавать
данные в него. Фоновые процессы, пытающиеся читать с терминала (или выдавать 
в него данные) получают от драйвера терминала сигнал <b>SIGTTIN</b> (<b>SIGTTOU</b>),
который, если не перехвачен, приостанавливает работу процесса.</p>

<p>Если операционная система, в которой работает <b>bash</b>, поддерживает управление
заданиями, <b>bash</b> позволяет его использовать. При нажатии клавиши <i>приостановки</i>
(обычно <b>^Z</b>, <b>Control-Z</b>) по ходу работы процесса, этот процесс останавливается и
управление возвращается командному интерпретатору <b>bash</b>. При нажатии клавиши
<i>отложенной приостановки</i> (обычно <b>^Y</b>, <b>Control-Y</b>) процесс останавливается при 
попытке чтения данных с терминала, и управление возвращается командному
интерпретатору <b>bash</b>. Затем пользователь может управлять состоянием этого задания,
используя команду <a href="BASH.1_4.shtml#bg"><b>bg</b></a> для его продолжения в фоновом режиме, 
команду <a href="BASH.1_4.shtml#fg"><b>fg</b></a> - для
продолжения в приоритетном режиме или команду <a href="BASH.1_3.shtml#kill"><b>kill</b></a> для его прекращения.
Нажатие <b>^Z</b> срабатывает немедленно и имеет дополнительный побочный
эффект в виде сброса данных, ожидающих вывода и ввода.</p>

<p>Командный интерпретатор поддерживает несколько способов сослаться на задание.
Символ <b>%</b> означает начало имени задания. На задание с номером <b>n</b> можно
сослаться как <b>%n</b>. На задание можно сослаться также с помощью префикса имени
команды, использованной для его начала, или подстроки, входящей в 
соответствующую командную строку. Например, <b>%ce</b> ссылается на остановленное 
задание <b>ce</b>. Если префикс соответствует нескольким заданиям, <b>bash</b> выдает
сообщение об ошибке. Обращение вида <b>%?ce</b>, с другой стороны, ссылается на любое
задание, в командной строке которого содержится подстрока <b>ce</b>. Если эта 
подстрока содержится в нескольких заданиях, <b>bash</b> выдает сообщение об ошибке.
Строки <b>%%</b> и <b>%+</b> обозначают <i>текущее задание</i> командного интерпретатора -
последнее задание, остановленное при работе в приоритетном режиме или запущенное в
фоновом режиме. На <i>предыдущее задание</i> можно сослаться с помощью строки <b>%-</b>.
В результатах работы команд, связанных с управлением заданиями, (в частности,
в результатах выполнения команды <a href="BASH.1_3.shtml#jobs"><b>jobs</b></a>), текущее задание всегда 
помечается знаком <b>+</b>, а предыдущее - знаком <b>-</b>.</p>

<p>Для перевода задания в приоритетный режим достаточно ввести только его имя:
<b>%1</b> - это синоним для команды "<b>fg %1</b>", переводящей задание 1 из фонового
в приоритетный режим. Аналогично, команда "<b>%1  &</b>" продолжает работу задания
1 в фоновом режиме и эквивалентна команде "<b>bg %1</b>".</p>

<p>Об изменении состояния задания командный интерпретатор узнает сразу.
Обычно <b>bash</b> информирует об изменениях в состоянии заданий при выдаче очередного
приглашения, чтобы не прерывать этой информацией выдачу любых других результатов.
Если с помощью встроенной команды <a href="BASH.1_4.shtml#set"><b>set</b></a> установлена 
опция <a href="BASH.1_4.shtml#set-b"><b>-b</b></a>, <b>bash</b> информирует о таких изменениях немедленно.</p>

<p>Если при наличии остановленных заданий происходит попытка выхода из <b>bash</b>,
командный интерпретатор выдает соответствующее предупреждение. Затем
с помощью команды <a href="BASH.1_3.shtml#jobs"><b>jobs</b></a> можно проверить состояние этих заданий. Если
сразу же выполняется повторная попытка завершить работу, командный интерпретатор не выдает
предупреждения и остановленные задания прекращаются.</p>

<h4><a name="prompting">ПРИГЛАШЕНИЯ</a></h4>

<p>При интерактивной работе командный интерпретатор <b>bash</b> выдает первичное 
приглашение, <b>PS1</b>, когда он готов к вводу команды, и вторичное приглашение,
<b>PS2</b>, когда для завершения команды необходимы дополнительные данные. 
Командный интерпретатор <b>bash</b> позволяет настраивать эти строки приглашения 
с помощью ряда маскируемых обратной косой специальных символов со следующими
значениями:</p>
<dl><dt></dt><dd>
<table border=0 cellspacing=4 width="90%">
<tr width="10%" valign=top><td><b>\a</b></td><td>
символ сигнала ASCII (звонок - 07)</td></tr>
<tr valign=top><td><b>\d</b></td><td>
дата в формате "День_недели Месяц Число" (т.е., "Tue May 26")</td></tr>
<tr valign=top><td><b>\e</b></td><td>
управляющий символ ASCII (033)</td></tr>
<tr valign=top><td><b>\h</b></td><td>
имя хоста вплоть до первого символа '<b>.</b>'</td></tr>
<tr valign=top><td><b>\H</b></td><td>
имя хоста</td></tr>
<tr valign=top><td><b>\n</b></td><td>
перевод строки</td></tr>
<tr valign=top><td><b>\r</b></td><td>
возврат каретки</td></tr>
<tr valign=top><td><b>\s</b></td><td>
имя командного интерпретатора - базовое имя из параметра <b>$0</b> (часть полного
имени после последней косой черты)</td></tr>
<tr valign=top><td><b>\t</b></td><td>
текущее время в 24-часовом формате <b>ЧЧ:ММ:СС</b></td></tr>
<tr valign=top><td><b>\T</b></td><td>
текущее время в 12-часовом формате <b>ЧЧ:ММ:СС</b></td></tr>
<tr valign=top><td><b>\@</b></td><td>
текущее время в 12-часовом формате am/pm (утра/вечера)</td></tr>
<tr valign=top><td><b>\u</b></td><td>
имя текущего пользователя</td></tr>
<tr valign=top><td><b>\v</b></td><td>
версия командного интерпретатора <b>bash</b> (например, 2.00)</td></tr>
<tr valign=top><td><b>\V</b></td><td>
релиз командного интерпретатора <b>bash</b>, версия + уровень исправлений 
(например, 2.00.0)</td></tr>
<tr valign=top><td><b>\w</b></td><td>
текущий рабочий каталог</td></tr>
<tr valign=top><td><b>\W</b></td><td>
базовое имя текущего рабочего каталога</td></tr>
<tr valign=top><td><b>\!</b></td><td>
порядковый номер данной команды в списке истории</td></tr>
<tr valign=top><td><b>\#</b></td><td>
порядковый номер данной команды</td></tr>
<tr valign=top><td><b>\$</b></td><td>
если эффективный идентификатор пользователя - 0, то <b>#</b>, иначе - <b>$</b></td></tr>
<tr valign=top><td><b>\nnn</b></td><td>
символ, соответствующий восьмеричному числу <b>nnn</b></td></tr>
<tr valign=top><td><b>\\</b></td><td>
обратная косая</td></tr>
<tr valign=top><td><b>\[</b></td><td>
начало последовательности непечатных символов, которая может использоваться 
для включения в приглашение управляющих символов терминала</td></tr>
<tr valign=top><td><b>\]</b></td><td>
завeршение последовательности непечатных символов</td></tr>
</table>
</dd></dl>

<p>Порядковый номер команды и порядковый номер команды в списке истории обычно
различаются: порядковый номер в списке истории задает ее позицию в списке,
который может содержать команды, прочитанные из файла истории
(см. раздел "<a href="BASH.1_4.shtml#history"><b>ИСТОРИЯ ВЫПОЛНЕНИЯ КОМАНД</b></a>" далее), тогда как порядковый
номер команды задает ее позицию в списке команд, выполненных в текущем сеансе
командного интерпретатора. После декодирования строки приглашения в ней
выполняется подстановка значений параметров, подстановка результатов выполнения
команд, результатов вычисления арифметических выражений, подстановка строк и
удаление кавычек, в зависимости от значения опции командного интерпретатора
<a href="BASH.1_4.shtml#promptvars"><b>promptvars</b></a> 
(см. описание команды <a href="BASH.1_4.shtml#shopt"><b>shopt</b></a> в разделе 
"<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" далее).</p>

<h4><a name="readline">БИБЛИОТЕКА READLINE</a></h4>

<p>Это библиотека, обрабатывающая входные данные при работе командного
интерпретатора в интерактивном режиме, если при его вызове не была указана
опция <a href="BASH.1_1.shtml#noediting"><b>--noediting</b></a>. По умолчанию, команды редактирования 
строки подобны используемым в редакторе <b>emacs</b>. Также предоставляется интерфейс для 
редактирования командной строки в стиле редактора <b>vi</b>. Для отключения 
возможности редактирования после запуска командного интерпретатора используются
опции <b>+o emacs</b> или <b>+o vi</b> встроенной команды <a href="BASH.1_4.shtml#set"><b>set</b></a> 
(см. раздел "<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" ниже).</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_notation">Соглашения по записи команд readline</a></h5>

<p>В этом разделе для записи нажимаемых клавиш используются соглашения в стиле
редактора <b>emacs</b>. <i>Управляющие клавиши</i> обозначаются <b>C-клавиша</b>, так что <b>C-n</b>
сокращенно обозначает <b>Control-N</b>. Аналогично, <i>метаклавиши</i> обозначаются
<b>M-клавиша</b>, так что <b>M-x</b> обозначает <b>Meta-X</b>. (На клавиатурах, где нет клавиши 
<b>meta</b>, <b>M-x</b> обозначает <b>ESC x</b>, т.е. нажать клавишу <b>Escape</b> и затем 
нажать клавишу <b>x</b>. Тем самым, клавиша <b>ESC</b> реализует префикс <b>meta</b>. 
Комбинация <b>M-C-x</b> обозначает <b>ESC-Control-x</b>, или нажать клавишу <b>Escape</b>,
затем, удерживая клавишу <b>Control</b>, нажать клавишу <b>x</b>.)</p>

<p>Команды библиотеки <b>readline</b> могут иметь числовые <i>аргументы</i>, обычно обозначающие 
количество повторений. Иногда, однако, они являются признаком значимости аргумента.
Передача отрицательного аргумента команде, работающей с дальнейшим текстом
(например, <b>kill-line</b>) приводит к ее применению к предшествующему тексту.
Команды, работа которых отличается от описанной здесь, специально отмечены ниже.</p>

<p>Если команда <i>удаляет</i> текст, этот текст сохраняется для дальнейшего извлечения 
(вставки). Удаленый текст помещается в кольцевой буфер. Последовательные удаления
пополняют буфер, формируя единицу вставки. Команды, не удаляющие текст,
разделяют фрагменты в кольцевом буфере удаления.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_init">Инициализация библиотеки readline</a></h5>

<p>Библиотека <b>readline</b> настраивается с помощью команд в <i>файле инициализации</i>
(файл <b>inputrc</b>). В качестве имени этого файла берется значение переменной
<b>INPUTRC</b>. Если эта переменная не установлена, используется стандартный файл,
<b>~/.inputrc</b>. При запуске программы, использующей библиотеку <b>readline</b>, 
файл инициализации читается и устанавливаются соответствующие переменные
и горячие клавиши. В файле инициализации <b>readline</b> допускаются лишь несколько
простых конструкций. Пустые строки игнорируются. Строки, начинающиеся символом
<b>#</b>, являются <i>комментариями</i>. Строки, начинающиеся символом <b>$</b>, обозначают <i>условные
конструкции</i>. Остальные строки обозначают установки горячих клавиш и присваивания
значений переменным.</p>

<p>Стандартные горячие клавиши можно изменить в файле <b>inputrc</b>. Другие программы, 
использующие эту библиотеку, могут добавлять собственные команды и горячие 
клавиши.</p>

<p>Например, поместив в файл инициализации</p>
<dl><dt></dt><dd><tt>
M-Control-u: universal-argument
</tt></dd></dl>
или
<dl><dt></dt><dd><tt>
C-Meta-u: universal-argument
</tt></dd></dl>
<p>мы привязываем к комбинации клавиш <b>M-C-u</b> команду <b>universal-argument</b> библиотеки
<b>readline</b>.</p>

<p>Распознаются следующие имена символов: <b>RUBOUT</b>, <b>DEL</b>, <b>ESC</b>, 
<b>LFD</b>, <b>NEWLINE</b>, <b>RET</b>, <b>RETURN</b>, <b>SPC</b>, <b>SPACE</b> и <b>TAB</b>. Кроме
имен команд, библиотека <b>readline</b> позволяет привязывать к клавишам строки,
которые будут вставляться при их нажатии (т.е. задвать макроподстановки).</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_bindings">Горячие клавиши readline</a></h5>

<p>Привязки клавиш в файле <b>inputrc</b> задаются с помощью простого синтаксиса.
Необходимо указать только имя команды или текст макроподстановки, и горячие
клавиши, с которыми его надо связать. Горячие клавиши можно задавать двумя 
способами: как символическое имя клавиши, возможно, с префиксом <b>Meta-</b> или 
<b>Control-</b>, или как комбинацию клавиш. При использовании формы 
<b>имя_клавиши:имя_функции или макроподстановка</b>, <b>имя_клавиши</b> просто задается на
английском. Например:</p>
<dl><dt></dt><dd><tt>
Control-u: universal-argument<br>
Meta-Rubout: backward-kill-word<br>
Control-o: "&gt; output"
</tt></dd></dl>
<p>В этом примере комбинация клавиш <b>C-u</b> связывается с функцией <b>universal-argument</b>,
<b>M-DEL</b> - с функцией <b>backward-kill-word</b>, а <b>C-o</b> - с макроподстановкой, указанной 
в правой части (т.е. приведет к вставке текста <b>&gt; output</b> в строку).</p>

<p>Во второй форме, <b>"комбинация_клавиш":имя_функции или макроподстановка</b>, комбинация
клавиш отличается от использованного выше имени клавиши тем, что может
задаваться в двойных кавычках. При этом можно использовать некоторые
управляющие символы в стиле GNU Emacs, как в следующем примере.</p>
<dl><dt></dt><dd><tt>
"\C-u": universal-argument<br>
"\C-x\C-r": re-read-init-file<br>
"\e[11~": "Function Key 1"
</tt></dd></dl>
<p>В этом примере, комбинация клавиш <b>C-u</b> опять связывается с функцией
<b>universal-argument</b>. Комбинация <b>C-x C-r</b> связывается с функцией <b>re-read-init-file</b>,
а комбинация <b>ESC [ 1 1 ~</b> будет приводить к вставке текста <b>Function Key 1</b>.
Полный набор управляющих последовательностей в стиле GNU Emacs представлен ниже.</p>
<dl><dt></dt><dd>
<table border=0 width="90%" cellspacing=4>
<tr><td width="10%"><b>\C-</b></td><td>
префикс клавиши <b>Control</b></td></tr>
<tr><td><b>\M-</b></td><td>
префикс клавиши <b>Meta</b></td></tr>
<tr><td><b>\e</b></td><td>
управляющий символ</td></tr>
<tr><td><b>\\</b></td><td>
обратная косая</td></tr>
<tr><td><b>\"</b></td><td>
символ "</td></tr>
<tr><td><b>\'</b></td><td>
символ '</td></tr>
</table>
</dd></dl>

<p>Помимо управляющих последовательностей в стиле GNU  Emacs, имеется еще один
набор управляющих последовательностей, начинающихся с обратной косой:</p>

<dl><dt></dt><dd>
<table border=0 width="90%" cellspacing=4>
<tr><td width="10%"><b>\a</b></td><td>
предупреждение (звонок)</td></tr>
<tr><td><b>\b</b></td><td>
забой (backspace)</td></tr>
<tr><td><b>\d</b></td><td>
удаление символа (delete)</td></tr>
<tr><td><b>\f</b></td><td>
перевод страницы (form feed)</td></tr>
<tr><td><b>\n</b></td><td>
новая строка</td></tr>
<tr><td><b>\r</b></td><td>
возврат каретки</td></tr>
<tr><td><b>\t</b></td><td>
горизонтальная табуляция</td></tr>
<tr><td><b>\v</b></td><td>
вертикальная табуляция</td></tr>
<tr><td valign=top><b>\nnn</b></td><td>
символ, ASCII-код которого имеет восьмеричное значение <b>nnn</b> (от одной до трех цифр)</td></tr>
<tr><td><b>\xnnn</b></td><td>
символ, ASCII-код которого имеет щестнадцатеричное значение <b>nnn</b>
(от одной до трех цифр)</td></tr>
</table>
</dd></dl>

<p>При вводе текста макроподстановки необходимо для ее обозначения указывать 
одиночные или двойные кавычки. Текст без кавычек считается именем функции. В теле
макроподстановки интерпретируются перечисленные выше управляющие 
последовательности, начинающиеся с обратной косой. Обратная косая маскирует
любой другой символ в тексте макроподстановки, в том числе, символы <b>"</b> и <b>'</b>.</p>

<p>Командный интерпретатор <b>bash</b> позволяет просмотреть или изменить текущие горячие
клавиши библиотеки <b>readline</b> с помощью встроенной команды <a href="BASH.1_4.shtml#bind"><b>bind</b></a>.
Режим редактирования можно переключать в ходе интерактивной работы с помощью опции
<a href="BASH.1_4.shtml#set-o"><b>-o</b></a> встроенной команды <a href="BASH.1_4.shtml#set"><b>set</b></a> 
(см. раздел "<a href="BASH.1_4.shtml#shell_builtin"><b>ВСТРОЕННЫЕ КОМАНДЫ ИНТЕРПРЕТАТОРА</b></a>" ниже).</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_variables">Переменные readline</a></h5>

<p>Библиотека <b>readline</b> поддерживает переменные, которые можно использовать для
дополнительной настройки ее работы. Значение переменной можно установить в файле
<b>inputrc</b> или с помощью оператора вида</p>
<dl><dt></dt><dd><tt>
set имя_переменной значение
</tt></dd></dl>
<p>За исключением явно указанных случаев, переменные <b>readline</b> могут иметь значения
<b>On</b> или <b>Off</b>. Ниже представлены эти переменные и их стандартные значения:</p>
<dl>
<dt><b>bell-style (audible)</b></dd><dd>
Управляет тем, что происходит, когда библиотека <b>readline</b> должна выдать звонок 
(звуковой сигнал) терминала. Если задано значение <b>none</b>, <b>readline</b> никогда не 
выдает звуковой сигнал. Если задано значение <b>visible</b>, <b>readline</b> использует 
визуальный сигнал, если он поддерживается терминалом. Если задано значение
<b>audible</b>, <b>readline</b> пытается выдать звуковой сигнал терминала.</dd>
<dt><b>comment-begin ("#")</b></dt><dd>
Строка, вставляемая при выполнении команды <b>insert-comment</b> библиотеки <b>readline</b>.
Эта команда привязана к клавишам <b>M-#</b> в режиме <b>emacs</b> и к клавише <b>#</b> в режиме <b>vi</b>.</dd>
<dt><b>completion-ignore-case (Off)</b></dt><dd>
Если установлено значение <b>On</b>, библиотека <b>readline</b> выполняет подстановку имен файлов
и дополнение командной строки с учетом регистра.</dd>
<dt><b>completion-query-items (100)</b></dt><dd>
Определяет, когда у пользователя запрашивают подтверждение выдачи всех завершений 
команды, генерируемых командой <b>possible-completions</b>. Можно задавать любое
неотрицательное целочисленное значение. Если количество возможных завершений
больше или равно значению этой переменной, у пользователя запрашивают, желает
ли он все их увидеть; иначе они просто выдаются на терминал.</dd>
<dt><b>convert-meta (On)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет преобразовывать символы с установленным
восьмым битом в последовательность символов ASCII путем сброса восьмого бита и
добавления управляющего символа (фактически, используя управляющий символ как 
мета-префикс).</dd>
<dt><b>disable-completion (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> не будет выполнять завершение слов. Символы 
завершения будут вставляться в строку буквально.</dd>
<dt><b>editing-mode (emacs)</b></dt><dd>
Управляет тем, с каким набором горячих клавиш начинает работать библиотека <b>readline</b> -
анаголичным <b>emacs</b> или <b>vi</b>. Переменная <b>editing-mode</b> может иметь значения <b>emacs</b> или <b>vi</b>.</dd>
<dt><b>enable-keypad (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет пытаться включить поддержку цифрового
блока клавиатуры справа при вызове. Некоторым системам это необходимо для поддержки
клавиш со стрелками.</dd>
<dt><b>expand-tilde (Off)</b></dt><dd>
Если установлено значение <b>On</b>, при попытке завершеная слов выполняется замена тильды.</dd>
<dt><b>horizontal-scroll-mode (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет использовать одну строку для показа, 
прокручивая ее при необходимости в одной строке, когда ее длина превышает ширину 
экрана, а не перенося визуально на новую строку.</dd>
<dt><b>input-meta (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет поддерживать ввод восьмибитовых
символов (т.е. не будет сбрасывать старший бит символов при чтении), независимо
от того, поддерживает ли восьмибитовые символы терминал. Имя <b>meta-flag</b> - синоним
для данной переменной.</dd>
<dt><b>isearch-terminators ("C-[C-J")</b></dt><dd>
Строка символов, которые должны прекращать инкрементный поиск без последующего
выполнения символа как команды. Если значение этой переменной не задано, инкрементный
поиск будут прекращать клавиши <b>ESC</b> и <b>C-J</b>.</dd>
<dt><b>keymap (emacs)</b></dt><dd>
Устанавливает текущую раскладку горячих клавиш для <b>readline</b>. Допускаются имена раскладок
<b>emacs</b>, <b>emacs-standard</b>, <b>emacs-meta</b>, <b>emacs-ctlx</b>, <b>vi</b>, <b>vi-command</b> и <b>vi-insert</b>. 
<b>vi</b> эквивалентно <b>vi-command</b>; <b>emacs</b> эквивалентно <b>emacs-standard</b>. Стандартное значение -
<b>emacs</b>; значение переменной <b>editing-mode</b> также влияет на горячие клавиши.</dd>
<dt><b>mark-directories (On)</b></dt><dd>
Если установлено значение <b>On</b>, к завершенным именам каталогов добавляется косая черта.</dd>
<dt><b>mark-modified-lines (Off)</b></dt><dd>
Если установлено значение <b>On</b>, перед строками списка истории команд, которые были изменены,
выдается звездочка (<b>*</b>).</dd>
<dt><b>output-meta (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет выдавать символы с установленным
восьмым битом непосредственно, а не как управляющую последовательность,
начинающуюся метасимволом.</dd>
<dt><b>print-completions-horizontally (Off)</b></dt><dd>
Если установлено значение <b>On</b>, <b>readline</b> будет выдавать возможные завершения
отсортированные в алфавитном порядке по горизонтали, в строках, а не по вертикали,
в столбцах.</dd>
<dt><b>show-all-if-ambiguous (Off)</b></dt><dd>
Изменяет стандартное поведение функций завершения. Если установлено значение <b>On</b>,
для слов, имеющих более одного возможного завершения, список возможных
выдается сразу, а не после звукового сигнала.</dd>
<dt><b>visible-stats (Off)</b></dt><dd>
Если установлено значение <b>On</b>, к именам файлов при выдаче возможных завершений
добавляется символ, задающий их тип в соответствии с функцией <b>stat(2)</b>.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_conditional">Управляющие конструкции readline</a></h5>

<p>Библиотека <b>readline</b> реализует средства, аналогичные по духу возможностям
условной компиляции препроцессора языка C и позволяющие назначать горячие клавиши или
присваивать значения переменным в зависимости от условий. Поддерживается
четыре директивы анализатора.</p>
<dl>
<dt><b>$if</b></dt><dd>
Конструкция <b>$if</b> позволяет назначать те или иные клавиши в зависимости от используемого 
режима редактирования, тип терминала или приложения, использующего библиотеку
<b>readline</b>. Текст условия продолжается до конца строки - никакие завершающие символы
не нужны.
<dl>
<dt><b>mode</b></dt><dd>
Форма <b>mode=</b> директивы <b>$if</b> используется для проверки того, работает ли библиотека
<b>readline</b> в режиме <b>emacs</b> или <b>vi</b>. Ее можно использовать совместно с командой
<b>set keymap</b>, например, для установки горячих клавиш стандарта <b>emacs</b> и
раскладки <b>emacs-ctlx</b> только если <b>readline</b> запускается в режиме <b>emacs</b>.
</dd>
<dt><b>term</b></dt><dd>
Форма <b>term=</b> может использоваться для включения специфических горячих клавиш
для данного терминала, в частности, для привязки последовательностей символов к
функциональным клавишам терминала. Слово справа от символа <b>=</b> сравнивается с
полным именем терминала и частью имени терминала до первого вхождения <b>-</b>.
Это позволяет задавать, например, <b>sun</b> для сопоставления как с <b>sun</b>, так и 
с <b>sun-cmd</b>.
</dd>
<dt><b>приложение</b></dt><dd>
Конструкция <B>приложение</B> используется для включения специфических настроек
приложения. Каждая программа, использующая библиотеку <b>readline</b>, устанавливает
имя приложения, а в инициализационном файле можно проверять установку определенного
значения. Это можно использовать для привязки клавиш к функциям, существенным для 
конкретной программы. Например, следующая команда задает последовательность клавиш,
берущую в кавычки текущее или предыдущее слово в <b>bash</b>:
<dl><dt></dt><dd><tt>
$if Bash<br>
# Взять в кавычки текущее или предыдущее слово<br>
"\C-xq": "\eb\"\ef\""<br>
$endif
</tt></dd></dl>
</dl>
</dd>

<dt><b>$endif</b></dt><dd>
Эта команда, как видно по предыдущему примеру, завершает команду <b>$if</b>.
</dd>
<dt><b>$else</b></dt><dd>
Команды в этой ветке директивы <b>$if</b> выполняются, если не выполнено условие проверки.
</dd>
<dt><b>$include</b></dt><dd>
Эта директива принимает в качестве аргумента имя файла и читает команды и привязки
клавиш из этого файла. Например, следующая директива требует прочитать файл
<b>/etc/inputrc</b>:
<dl><dt></dt><dd><tt>
$include  /etc/inputrc
</tt></dd></dl>
</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="searching">Поиск</a></h5>

<p>Библиотека <b>readline</b> предлагает команды для поиска в списке истории команд 
(см. раздел "<a href="BASH.1_4.shtml#history"><b>ИСТОРИЯ ВЫПОЛНЕНИЯ КОМАНД</b></a>" ниже) строк, содержащих определенную подстроку. Имеется два режима поиска: инкрементный и не инкрементный.</p>

<p>Инкрементные поиски начинаются прежде, чем пользователь закончит ввод искомой строки.
Привводе каждого символа искомой строки, <b>readline</b> выдает следующую
запись из списка истории, соответствующую уже набранной подстроке. При
инкрементном поиске достаточно ввести ровно столько символов, сколько надо
для нахождения интересующей команды. Символы значения переменной
<b>isearch-terminators</b> используются для завершения инкрементного поиска. Если
значение этой переменной не задано, инкрементный поиск прерывается клавишами

<b>Escape</b> и <b>Control-J</b>. Нажатие <b>Control-G</b> прерывает инкрементный поиск и восстанавливает
исходную строку. При завершении поиска, запись из списка истории, содержащая строку 
поиска, становится текущей строкой. Для поиска других соответствующих записей в 
списке истории, нажмите <b>Control-S</b> или <b>Control-R</b>, в зависимости от направления
поиска. В результате, будет выполнен поиск в обратном или прямом направлении
следующей записи, соответствующей уже набранному фрагменту строки. Ввод любой другой
последовательности символов, привязанной к команде библиотеки <b>readline</b>,
приводит к завершению поиска и выполнению команды. Например, нажатие клавиши <b>Enter</b>
завершит поиск и выполнит выбранную команду из списка истории.</p>

<p>При неинкрементом поиске перед началом поиска читается вся искомая строка. Искомая строка
может быть набрана пользователем или быть частью содержимого текущей строки.</p>

<h5>&nbsp;&nbsp;&nbsp;   <a name="readline_command_names">Имена команд readline</a></h5>

<p>Ниже представлен список имен команд и стандартные комбинации клавиш, к
которым они привязаны. Имена команд, для которых не указана комбинация
клавиш, по умолчанию ни к какой комбинации не привязаны.</p>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_command_moving">Команды для перемещения</a></h5>
<dl>
<dt><b>beginning-of-line (C-a)</b></dt><dd>
Перемещает курсор в начало текущей строки.</dd>
<dt><b>end-of-line (C-e)</b></dt><dd>
Перемещает курсор в конец строки.</dd>
<dt><b>forward-char (C-f)</b></dt><dd>
Перемещает курсор на один символ вперед.</dd>
<dt><b>backward-char (C-b)</b></dt><dd>
Перемещает курсор на один символ назад.</dd>
<dt><b>forward-word (M-f)</b></dt><dd>
Перемещает курсор на одно слово вперед. Слова состоят из алфавитно-цифровых 
символов (букв и цифр).</dd>
<dt><b>backward-word (M-b)</b></dt><dd>
Переходит к началу текущего или предыдущего слова. Слова состоят из 
алфавитноцифровых символов (букв и цифр).</dd>
<dt><b>clear-screen (C-l)</b></dt><dd>
Очищает экран, оставляя текущую строку вверху экрана. При указании аргумента
обновляет текущую строку, не очищая экрана.</dd>
<dt><b>redraw-current-line</b></dt><dd>
Обновляет текущую строку.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_command_history">Команды для работы со списком истории</a></h5>
<dl>
<dt><b>accept-line (Newline, Return)</b></dt><dd>
Принимает строку, независимо от позиции курсора. Если эта строка - не пустая,
добавляет ее в список истории в соответствии с состоянием переменной
<b>HISTCONTROL</b>. Если строка представляет собой измененную строку из списка 
истории, то строка истории восстанавливается в исходное состояние.</dd>
<dt><b>previous-history (C-p)</b></dt><dd>
Извлекает предыдущую команду из списка истории, возвращаясь к началу списка.</dd>
<dt><b>next-history (C-n)</b></dt><dd>
Извлекает следующую команду из списка истории, направляясь к концу списка.</dd>
<dt><b>beginning-of-history (M-<)</b></dt><dd>
Переходит к первой строке в списке истории.</dd>
<dt><b>end-of-history (M->)</b></dt><dd>
Переходит к концу истории введенных команд, т.е. к текущей вводимой строке.</dd>
<dt><b>reverse-search-history (C-r)</b></dt><dd>
Ищет команду среди предыдущих, начиная с текущей строки и продвигаясь, при 
необходимости, к началу списка истории. Этот поиск - инкрементный.</dd>
<dt><b>forward-search-history (C-s)</b></dt><dd>
Поиск далее, начиная с текущей строки и продвигаясь, при необходимости,
к концу списка истории. Этот поиск - инкрементный.</dd>
<dt><b>non-incremental-reverse-search-history (M-p)</b></dt><dd>
Неинкрементный поиск введенной пользователем строки в обратном направлении, 
начиная с текущей строки.</dd>
<dt><b>non-incremental-forward-search-history (M-n)</b></dt><dd>
Неинкрементный поиск введенной пользователем строки далее, 
начиная с текущей строки.</dd>
<dt><b>history-search-forward</b></dt><dd>
Поиск далее в списке истории строки символов от начала текущей строки до
<i>позиции курсора</i> (текущей позиции). Этот поиск - не инкрементный.</dd>
<dt><b>history-search-backward</b></dt><dd>
Поиск в обратном направлении в списке истории строки символов от начала 
текущей строки до позиции курсора (текущей позиции). Этот поиск - не инкрементный.</dd>
<dt><b>yank-nth-arg (M-C-y)</b></dt><dd>
Вставляет первый аргумент предыдущей команды (обычно это второе слово
предыдущей строки) в текущую позицию курсора. Если указан аргумент <b>n</b>,
вставляет <b>n</b>-ное слово предыдущей команды (слова в предыдущей команде нумеруются
с 0). Если аргумент - отрицательный, вставляется <b>n</b>-ное слово от конца
предыдущей команды.</dd>
<dt><b>yank-last-arg (M-., M-_)</b></dt><dd>
Вставляет последний аргумент предыдущей команды (последнее слово в предыдущей
записи списка истории). Если указан аргумент, работает так же, как и
команда <b>yank-nth-arg</b>. При последовательном вызове команды
<b>yank-last-arg</b> выполняется проход в обратном направлении по списку истории,
со вставкой последнего аргумента очередной строки.</dd>
<dt><b>shell-expand-line (M-C-e)</b></dt><dd>
Выполняет подстановки в строке по аналогии с командным интерпретатором.
Выполняются подстановки псевдонимов и команд из списка истории,
а также подстановка слов. Описание подстановки команд из списка истории
см. далее в разделе "<a href="BASH.1_4.shtml#history_expansion"><b>ПОДСТАНОВКА КОМАНД ИЗ СПИСКА ИСТОРИИ</b></a>".</dd>
<dt><b>history-expand-line (M-^)</b></dt><dd>
Выполняет подстановку команд из списка истории в текущей строке.
Описание подстановки команд из списка истории
см. далее в разделе "<a href="BASH.1_4.shtml#history_expansion"><b>ПОДСТАНОВКА КОМАНД ИЗ СПИСКА ИСТОРИИ</b></a>".</dd>
<dt><b>magic-space</b></dt><dd>
Выполняет подстановку команд из списка истории в текущей строке 
и добавляет пробел. Описание подстановки команд из списка истории
см. далее в разделе "<a href="BASH.1_4.shtml#history_expansion"><b>ПОДСТАНОВКА КОМАНД ИЗ СПИСКА ИСТОРИИ</b></a>".</dd>
<dt><b>alias-expand-line</b></dt><dd>
Выполняет подстановку псевдонимов в текущей строке. Описание подстановки
псевдонимов см. ранее в разделе ""<a href="BASH.1_3.shtml#aliases"><b>ПСЕВДОНИМЫ</b></a>".</dd>
<dt><b>history-and-alias-expand-line</b></dt><dd>
Выполняет подстановки псевдонимов и команд из списка истории в текущей строке.</dd>
<dt><b>insert-last-argument (M-., M-_)</b></dt><dd>
Синоним для команды <b>yank-last-arg</b>.</dd>
<dt><b>operate-and-get-next (C-o)</b></dt><dd>
Принимает текущую строку для выполнения и извлекает следующую строку
после текущей из списка истории для редактирования. Аргументы игнорируются.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;   <a name="changing_text">Команды для изменения текста</a></h5>
<dl>
<dt><b>delete-char (C-d)</b></dt><dd>
Удаляет символ в позиции курсора. Если текущая позиция - начало строки,
в строке нет символов и последняя нажатая клавиша не привязана к команде
<b>delete-char</b>, возвращает <b>EOF</b>.</dd>
<dt><b>backward-delete-char (Backspace)</b></dt><dd>
Удаляет символ перед курсором. При указании числового аргумента
сохраняет удаленный текст в <i>кольцевом буфере</i> (kill ring).</dd>
<dt><b>forward-backward-delete-char</b></dt><dd>
Удаляет символ в позиции курсора, если куросор не в конце строки, - в
этом случае удаляется символ перед курсором. По умолчанию эта команда ни к
какой комбинации клавиш не привязана.</dd>
<dt><b>quoted-insert (C-q, C-v)</b></dt><dd>
Добавляет следующий набранный символ буквально. Так можно вставлять, например,
символы типа <b>C-q</b>.</dd>
<dt><b>tab-insert (C-v TAB)</b></dt><dd>
Вставляет символ табуляции.</dd>
<dt><b>self-insert (a, b, A, 1, !, ...)</b></dt><dd>
Вставляет набранный символ.</dd>
<dt><b>transpose-chars (C-t)</b></dt><dd>
Переносит символ перед текущей позицией за текущую позицию. Текущая позиция 
также перемещается вперед на один символ. Если текущая позиция - конец строки,
меняет местами два символа перед текущей позицией. Отрицательные аргументы не
поддерживаются.</dd>
<dt><b>transpose-words (M-t)</b></dt><dd>
Переносит предыдущее слово за слово, на котором (или после которого) стоит 
курсор. Курсор перемещается в конец перенесенного слова.</dd>
<dt><b>upcase-word (M-u)</b></dt><dd>
Переводит в верхний регистр текущее (или следующее слово). Если указан 
отрицательный аргумент, переводит в верхний регистр предыдущее слово, но не
меняет текущей позиции.</dd>
<dt><b>downcase-word (M-l)</b></dt><dd>
Переводит в нижний регистр текущее (или следующее слово). Если указан 
отрицательный аргумент, переводит в верхний регистр предыдущее слово, но не
меняет текущей позиции.</dd>
<dt><b>capitalize-word (M-c)</b></dt><dd>
Начинает с прописной буквы текущее или следующее слово. Если указан
отрицательный аргумент, начинает с прописной буквы предыдущее слово, но
не меняет текущей позиции.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="kill_yank">Удаление и вставка</a></h5>
<dl>
<dt><b>kill-line (C-k)</b></dt><dd>
Удаляет текст от текущей позиции курсора до конца строки.</dd>
<dt><b>backward-kill-line (C-x Backspace)</b></dt><dd>
Удаляет текст до начала строки.</dd>
<dt><b>unix-line-discard (C-u)</b></dt><dd>
Удаляет текст от текущей позиции до начала строки. Удаленный текст помещается в
<i>кольцевой буфер</i>.</dd>
<dt><b>kill-whole-line</b></dt><dd>
Удаляет все символы текущей строки, независимо от позиции курсора.</dd>
<dt><b>kill-word (M-d)</b></dt><dd>
Удаляет символы от курсора до конца слова или, если курсор стоит между словами, до 
конца следующего слова. Границы слов определяются так же, как и для
команды <b>forward-word</b>.</dd>
<dt><b>backward-kill-word (M-Backspace)</b></dt><dd>
Удаляет слово перед курсором. Границы слова определяются так же,
как и в команде <b>backward-word</b>.</dd>
<dt><b>unix-word-rubout (C-w)</b></dt><dd>
Удаляет слово перед курсором, используя в качестве ограничителя слов <i>пробельные 
символы</i>. Границы слова, таким образом, отличаются от принятых в команде
<b>backward-kill-word</b>.</dd>
<dt><b>delete-horizontal-space (M-\)</b></dt><dd>
Удаляет все пробелы и символы табуляции вокруг текущей позиции.</dd>
<dt><b>kill-region</b></dt><dd>
Удаляет весь текст от текущей позиции до отметки (запомненной позиции
курсора). Этот текст называют <i>областью</i> (region).</dd>
<dt><b>copy-region-as-kill</b></dt><dd>
Копирует текст области в буфер.</dd>
<dt><b>copy-backward-word</b></dt><dd>
Копирует слово перед текущей позицией в буфер. Границы слов определяются так же,
как в команде <b>backward-word</b>.</dd>
<dt><b>copy-forward-word</b></dt><dd>
Копирует слово после текущей позиции в буфер. Границы слов определяются так же,
как в команде <b>forward-word</b>.</dd>
<dt><b>yank (C-y)</b></dt><dd>
Вставляет верхний элемент кольцевого буфера в позиции курсора.</dd>
<dt><b>yank-pop (M-y)</b></dt><dd>
Прокручивает кольцевой буфер и вставляет новый верхний элемент. Работает
только после команды <b>yank</b> или <b>yank-pop</b>.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="numberic_args">Числовые аргументы</a></h5>
<dl>
<dt><b>digit-argument (M-0, M-1, ..., M--)</b></dt><dd>
Добавляет соответствующую цифру к уже накопленному аргументу или начинает
новый аргумент. <b>M--</b> начинает отрицательный аргумент.</dd>
<dt><b>universal-argument</b></dt><dd>
Это еще один способ задания аргумента. Если после этой команды идет одна
или несколько цифр, возможно, начинающихся со знака минус, эти цифры образуют
аргумент. Если после команды идут цифры, повторное выполнение 
<b>universal-argument</b> завершает числовой аргумент, в противном случае -
игнорируется. В качестве специального случая, если сразу после команды идет
символ, отличный от цифры или знака минус, аргумент <b>count</b> для следующей
команды умножается на четыре. Аргумент <b>count</b> первоначально имеет занчение 1, 
так что при первом выполнении получается четыре, затем - шестнадцать и так далее.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="completing">Завершение</a></h5>
<dl>
<dt><b>complete (TAB)</b></dt><dd>
Пытается завершить текст, введенный до текущей позиции.
Командный интерпретатор <b>bash</b> пытается выполнить завершение,
рассматривая текст последовательно как обращение к переменной 
(если текст начинается с <b>$</b>), как имя пользователя (если текст начинается 
с <b>~</b>), как имя хоста (если текст начинается с <b>@</b>), или как команду 
(включая псевдонимы и функции). Если ни одним из этих способов завершить
строку не удалось, выполняется попытка завершения имени файла.</dd>
<dt><b>possible-completions (M-?)</b></dt><dd>
Список возможных завершений текста до текущей позиции.</dd>
<dt><b>insert-completions (M-*)</b></dt><dd>
Вставляет все завершения введенного текста, генерируемые командой
<b>possible-completions</b>.</dd>
<dt><b>menu-complete</b></dt><dd>
Аналогична команде <b>complete</b>, но заменяет завершаемое слово
первым из возможных завершений. Повторное выполнение команды
<b>menu-complete</b> вставляет следующий элемент из списка возможных завершений.
В конце списка завершений выдается сигнал и восстанавливается исходный 
текст. Аргумент <b>n</b> вызывает преход на <b>n</b> позиций вперед в списке завершений;
отрицательный аргумент вызывает переход по списку в обратном направлении. 
Предполагается привязка этой команды к клавише <b>TAB</b>, но стандартно она ни к
какой комбинации клавиш не привязана.</dd>
<dt><b>delete-char-or-list</b></dt><dd>
Удаляет символ в позиции курсора, если курсор не находится в начале
или в конце строки (аналогично команде <b>delete-char</b>). Если курсор - в конце
строки, ведет себя аналогично команде <b>possible-completions</b>. Эта
команда стандартно ни к какой комбинации клавиш не привязана.</dd>
<dt><b>complete-filename (M-/)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции как имя файла.</dd>
<dt><b>possible-filename-completions (C-x /)</b></dt><dd>
Выдает возможные завершения текста до текущей позиции, интерпретируемого как
имя файла.</dd>
<dt><b>complete-username (M-~)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции как имя пользователя.</dd>
<dt><b>possible-username-completions (C-x ~)</b></dt><dd>
Выдает возможные завершения текста до текущей позиции, интерпретируемого как
имя пользователя.</dd>
<dt><b>complete-variable (M-$)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции как обращение к
переменной командного интерпретатора.</dd>
<dt><b>possible-variable-completions (C-x $)</b></dt><dd>
Выдает возможные завершения текста до текущей позиции, интерпретируемого как
обращение к переменной командного интерпретатора.</dd>
<dt><b>complete-hostname (M-@)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции как имя хоста.</dd>
<dt><b>possible-hostname-completions (C-x @)</b></dt><dd>
Выдает возможные завершения текста до текущей позиции, интерпретируемого как
имя хоста.</dd>
<dt><b>complete-command (M-!)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции как имя команды.
При завершении команд текст сопоставляется последовательно с псевдонимами, 
зарезервированными словами, функциями командного интерпретатора, 
встроенными функциями командного интерпретатора и, наконец, 
с именами выполняемых файлов.</dd>
<dt><b>possible-command-completions (C-x !)</b></dt><dd>
Выдает возможные завершения текста до текущей позиции, интерпретируемого как
имя команды.</dd>
<dt><b>dynamic-complete-history (M-TAB)</b></dt><dd>
Пытается завершить введенный текст до текущей позиции, сравнивая его
со строками из списка истории выполненных команд в поисках возможных
соответствий.</dd>
<dt><b>complete-into-braces (M-{)</b></dt><dd>
Выполняет завершение имени файла и возвращает список возможных завершений
в фигурных скобках, чтобы он мог быть обработан командным интерпретатором
(см. раздел "<b>Подстановка значений в фигурных скобках</b>" ранее).</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="keyboard_macros">Клавиатурные макросы</a></h5>
<dl>
<dt><b>start-kbd-macro (C-x ()</b></dt><dd>
Начинает запоминание набранных символов в текущий <i>клавиатурный макрос</i>.</dd>
<dt><b>end-kbd-macro (C-x ))</b></dt><dd>
Завершает запоминание набранных символов в текущий клавиатурный макрос и
сохраняет его определение.</dd>
<dt><b>call-last-kbd-macro (C-x e)</b></dt><dd>
Выполняет последний определенный клавиатурный макрос, выводя символы
макроса так, как если бы они были введены с клавиатуры.</dd>
</dl>

<h5>&nbsp;&nbsp;&nbsp;  <a name="readline_misc_commands">Прочие команды</a></h5>
<dl>
<dt><b>re-read-init-file (C-x C-r)</b></dt><dd>
Перечитывает содержимое файла <b>inputrc</b> и учитывает все указанные в нем
привязки клавиш и значения переменных.</dd>
<dt><b>abort (C-g)</b></dt><dd>
Прерывает текущую команду редактирования и выдает сигнал терминала
(вид сигнала задается командой <b>bell-style</b>).</dd>
<dt><b>do-uppercase-version (M-a, M-b, M-x, ...)</b></dt><dd>
Если символ <b>x</b>, введенный вместе с клавишей <b>Meta</b>, является символом нижнего
регистра, выполнить команду, привязанную к соответствующему символу
в верхнем регистре.</dd>
<dt><b>prefix-meta (ESC)</b></dt><dd>
Рассматривать следующий введенный символ как предваренный клавишей <b>Meta</b>.
<b>ESC f</b> эквивалентно <b>Meta-f</b>.</dd>
<dt><b>undo (C-_, C-x C-u)</b></dt><dd>
Инкрементная отмена, запоминаемая отдельно для каждой строки.</dd>
<dt><b>revert-line (M-r)</b></dt><dd>
Отмена всех изменений текущей строки. Аналогично выполнению команды
<b>undo</b> несколько раз до возвращения строки в исходное состояние.</dd>
<dt><b>tilde-expand (M-&)</b></dt><dd>
Выполняет замену тильды в текущем слове.</dd>
<dt><b>set-mark (C-@, M-&lt;space&gt;)</b></dt><dd>
Устанавливает метку в текущей позиции. Если задан числовой аргумент, метка
устанавливается в соответствующей позиции.</dd>
<dt><b>exchange-point-and-mark (C-x C-x)</b></dt><dd>
Меняет местами метку и текущую позицию. Текущей позицией курсора становится
запомненная в метке, а прежняя позиция курсора запоминается в метке.</dd>
<dt><b>character-search (C-])</b></dt><dd>
Читается символ, и курсор переводится на следующее вхождение этого
символа. Отрицательный аргумент означает поиск предыдущего вхождения.</dd>
<dt><b>character-search-backward (M-C-])</b></dt><dd>
Читается символ, и курсор переводится на предыдущее вхождение этого
символа. Отрицательный аргумент означает поиск следующего вхождения.</dd>
<dt><b>insert-comment (M-#)</b></dt><dd>
Значение переменной <b>comment-begin</b> библиотеки <b>readline</b> вставляется в
начало текущей строки, и строка принимается, как если бы была нажата
клавиша <b>Enter</b>. В результате, текущая строка становится <i>комментарием</i>
командного интерпретатора.</dd>
<dt><b>glob-expand-word (C-x *)</b></dt><dd>
Слово перед текущей позицией рассматривается как шаблон имен файлов и
вместо него вставляется список соответствующих имен файлов.</dd>
<dt><b>glob-list-expansions (C-x g)</b></dt><dd>
Выдается список имен файлов, генерируемых командой 
<b>glob-expand-word</b>, а затем снова исходная строка.</dd>
<dt><b>dump-functions</b></dt><dd>
Выдает все функции и комбинации клавиш, к которым они привязаны, в
выходной поток <b>readline</b>. Если задан числовой аргумент,
результат форматируется так, что его можно непосредственно включить в файл <b>inputrc</b>.</dd>
<dt><b>dump-variables</b></dt><dd>
Выдает все <i>изменяемые</i> переменные <b>readline</b> вместе с их значениями в
выходной поток <b>readline</b>. Если задан числовой аргумент,
результат форматируется так, что его можно непосредственно включить в файл <b>inputrc</b>.</dd>
<dt><b>dump-macros</b></dt><dd>
Выдает все комбинации клавиш <b>readline</b>, привязанные к макросам, и
строки, которые выдаются при их нажатии. Если задан числовой аргумент,
результат форматируется так, что его можно непосредственно включить в файл <b>inputrc</b>.</dd>
<dt><b>display-shell-version (C-x C-v)</b></dt><dd>
Выдает информацию о версии текущего экземпляра командного интерпретатора <b>bash</b>.</dd>
</dl>



<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="index.shtml">содержание</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="BASH.1_2.shtml">назад</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="BASH.1_4.shtml">вперед</a></p>
</div>
</div>


<center><div style="width:500px; border:1px solid black; text-align: left;">  
  <div id="gfi_slide2" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/languard/?utm_source=citforum&utm_medium=banner&utm_campaign=languard" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/LANSS-1413629426-7a56c.png" width="183" height="30" alt="GFI LanGuard"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Поиск и автоматическое устранение уязвимостей в сети</td></tr>
    <tr><td colspan=2 align=center>Инвентаризация и управление программным обеспечением</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide1" style="display: block;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/mailessentials/?utm_source=citforum&utm_medium=banner&utm_campaign=mailessentials" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/ME-1413629452-7a56c.png" width="235" height="30" alt="GFI MailEssentials"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Защита от спама и вирусов для почтового сервера №1</td></tr>
    <tr><td colspan=2 align=center>Качество фильтрации выше 99%, без ложных срабатываний</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide4" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/archiver/?utm_source=citforum&utm_medium=banner&utm_campaign=archiver" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/AR-1422970393-7a56c.png" width="164" height="30" alt="GFI Archiver"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Резервное копирование электронных писем и документов</td></tr>
    <tr><td colspan=2 align=center>Быстрый поиск по архиву, анализ контента, отчетность</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide3" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/webmonitor/?utm_source=citforum&utm_medium=banner&utm_campaign=webmonitor" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/WM-1413629470-7a56c.png" width="214" height="30" alt="GFI WebMonitor"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Контроль и безопасность доступа сотрудников в веб</td></tr>
    <tr><td colspan=2 align=center>Более 460.000.000 веб-сайтов в базе по категориям</td></tr>
    </table>
	  </a>
  </div>
  <div style="background:#F0F0F0; padding:2px; font-family: 'Open Sans', sans-serif !important; font-size:12px !important; color:black !important; text-align:center;">
    <b>30 дней бесплатно.</b> Техническая поддержка на русском.
  </div>
  <script>
    (function addEvent(element, event, fn) {
      if (element.addEventListener){
        element.addEventListener(event, fn, false);
      }else if (element.attachEvent){
        element.attachEvent('on' + event, fn);
      }
    })(window, 'load', function(){
      window.gfi_slides=4;
      window.gfi_slider=1;
      setInterval(function(){
        for(var i=1; i<=window.gfi_slides; i++){
          document.getElementById("gfi_slide"+i).style.display="none";
        }
        window.gfi_slider++;
        if (window.gfi_slider>window.gfi_slides){
          window.gfi_slider=1
        }
        document.getElementById("gfi_slide"+window.gfi_slider).style.display="block";
      }, 6000)
    });
  </script>
</div>
</center>

<center>


</center>

</td>


<td>

<table cellspacing=0 cellpadding=0 border=0 width="100%" align=right><tr>
<td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0></td>
<td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=2 height=1 border=0></td>
<td>

<table cellpadding=0 cellspacing=0 border=0>

<tr><td align="center"><!--  AdRiver code START. Type:240x400 Site: citforum PZ: 0 BN: 1 -->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write(
'<iframe src="http://ad.adriver.ru/cgi-bin/erle.cgi?'
+ 'sid=137295&bn=1&target=blank&bt=22&pz=0&rnd=' + RndNum4NoCash + '&tail256=' + ar_Tail
+ '" frameborder=0 vspace=0 hspace=0 width=240 height=400 marginwidth=0'
+ ' marginheight=0 scrolling=no></iframe>');
//--></script>
<noscript>
<a href="http://ad.adriver.ru/cgi-bin/click.cgi?sid=137295&bn=1&bt=22&pz=0&rnd=1132854728" target=_blank>
<img src="http://ad.adriver.ru/cgi-bin/rle.cgi?sid=137295&bn=1&bt=22&pz=0&rnd=1132854728" alt="-AdRiver-" border=0 width=240 height=400></a>
</noscript>

<!--  AdRiver code END  --></td></tr>



<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#ffffff>
<font size=2>
<p><b>Новости мира IT:</b>
<ul class=column>
<!--<b><a target=_blank href=http://citcity.ru/20070/>4&#x2013;5 декабря пройдёт &#xab;Платформа 2009&#xbb;</a></b>
<hr>-->

<li>06.02 - <a href=http://citforum.ru/news/33352/>В Почте и на портале Mail.Ru заработала двухфакторная аутентификация</a><li>06.02 - <a href=http://citforum.ru/news/33351/>Apple задумалась над созданием поисковой системы</a><li>06.02 - <a href=http://citforum.ru/news/33350/>IBM открыла первый центр предоставления услуг в России</a><li>06.02 - <a href=http://citforum.ru/news/33349/>Платформа Windows RT официально закрыта</a><li>06.02 - <a href=http://citforum.ru/news/33348/>Toshiba выпустила флеш-брелоки с шифрованием и клавиатурой для ввода пароля</a><li>06.02 - <a href=http://citforum.ru/news/33347/>Motorola бьёт рекорды продаж смартфонов после перехода в Lenovo</a><li>06.02 - <a href=http://citforum.ru/news/33346/>Buhel SoundGlasses: беспроводная гарнитура в солнцезащитных очках</a><li>06.02 - <a href=http://citforum.ru/news/33345/>Microsoft приобретет разработчика календарей для iOS и Android</a><li>05.02 - <a href=http://citforum.ru/news/33344/>Проведены первые операции через национальную систему платёжных карт</a><li>05.02 - <a href=http://citforum.ru/news/33343/>Рейтинг Rookies Award определил лучшие открытые проекты, созданные в 2014 году</a><li>05.02 - <a href=http://citforum.ru/news/33342/>OneBoard PRO+: механическая клавиатура со встроенным Android-компьютером</a><li>05.02 - <a href=http://citforum.ru/news/33341/>Проект FreeBSD переходит на новую модель поддержки релизов</a><li>05.02 - <a href=http://citforum.ru/news/33340/>IBM расширила штат инженеров, работающих над техпроцессами тоньше 7 нм</a><li>05.02 - <a href=http://citforum.ru/news/33339/>ARM представила 64-битное ядро Cortex-A72</a><li>05.02 - <a href=http://citforum.ru/news/33338/>Yota Devices заключила мировое соглашение в споре с PocketBook</a><li>05.02 - <a href=http://citforum.ru/news/33337/>На долю LTE-моделей впервые пришлось больше половины продаж смартфонов в России</a><li>04.02 - <a href=http://citforum.ru/news/33336/>Почта Mail.Ru предлагает пользователям убраться в ящике</a><li>04.02 - <a href=http://citforum.ru/news/33335/>Российский образовательный онлайн-проект привлек 2,1 миллиона долларов</a><li>04.02 - <a href=http://citforum.ru/news/33334/>&#xab;Яндекс&#xbb; внедрил двухфакторную аутентификацию</a><li>04.02 - <a href=http://citforum.ru/news/33333/>Sony продала подразделение видеоигр</a>

</ul>
<p><a target=_blank href=http://citforum.ru/news/><b>Архив новостей</b></a>
</font>
<p align=right><a href=http://citforum.ru/news/rss/news.xml><img src="../../../pictures/xml_rss.gif" border=0 width=36 height=14></a>
</td></tr>


<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td style="padding-left: 5px; min-width: 240px"><p><b>Последние комментарии:</b>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33329/#comments>Минкомсвязь предлагает перенести домены в компании-регистраторы в РФ</a>&nbsp;(12)<br>
		<div class=comments_menu_date>Суббота 07.02, 21:22		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33352/#comments>В Почте и на портале Mail.Ru заработала двухфакторная аутентификация</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:08		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33349/#comments>Платформа Windows RT официально закрыта</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:04		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33307/#comments>В метро Петербурга запустили систему бесконтактных платежей PayPass</a>&nbsp;(13)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:01		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33313/#comments>Ideum Duet: кофейный столик с двумя встроенными компьютерами и двумя ОС</a>&nbsp;(7)<br>
		<div class=comments_menu_date>Пятница 06.02, 21:32		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33346/#comments>Buhel SoundGlasses: беспроводная гарнитура в солнцезащитных очках</a>&nbsp;(2)<br>
		<div class=comments_menu_date>Пятница 06.02, 21:25		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33347/#comments>Motorola бьёт рекорды продаж смартфонов после перехода в Lenovo</a>&nbsp;(1)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:36		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33306/#comments>Прибыль Microsoft упала на 11 %</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:20		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/32977/#comments>Новый &#xab;антипиратский&#xbb; закон вступит в силу 1 мая 2015 года</a>&nbsp;(35)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:16		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33328/#comments>МТС создаст отечественный аналог Skype</a>&nbsp;(5)<br>
		<div class=comments_menu_date>Пятница 06.02, 00:18		</div>
	</div></td></tr>

<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td><div id="cse" style="width: 100%;">Loading</div>
<script src="http://www.google.com/jsapi" type="text/javascript"></script>
<script type="text/javascript"> 
  google.load('search', '1', {language : 'ru'});
  google.setOnLoadCallback(function() {
    var customSearchControl = new google.search.CustomSearchControl('018117224161927867877:xbac02ystjy');
    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    customSearchControl.draw('cse');
  }, true);
</script>
<link rel="stylesheet" href="http://www.google.com/cse/style/look/default.css" type="text/css" />
</td></tr>

<tr><td align="center"><!-- Soloway 240x400 code START-->
<script language="javascript" type="text/javascript"><!--
if(typeof(ar_cn)=="undefined") var ar_cn=1;
var ar_Tail=document.referrer ? escape(document.referrer) : 'unknown';
var ar_link="http://ad.adriver.ru/cgi-bin/erle.cgi?sid=126751&bt=49&target=blank&tail256=" + ar_Tail;
document.write('<div style="visibility:hidden;height:0px;"><iframe id="ar_container_'+ar_cn+'" width=1 height=1 marginwidth=0 marginheight=0 scrolling=no frameborder=0><\/iframe><\/div><div id="ad_ph_'+ar_cn+'"><\/div>');
function ar_getDoc(t,n,l){var doc;if(t<100){if(document.all && !window.opera){doc = window.frames['ar_container_'+n].document}
else if(document.getElementById){doc=document.getElementById('ar_container_'+n).contentDocument}
if(!doc){setTimeout('ar_getDoc('+(++t)+','+n+',"'+l+'")', 100)}else {var RndNum4NoCash = Math.round(Math.random() * 1000000000);
doc.write ('<sc'+'ript language="JavaScript" type="text/javascript">var ar_bnum='+n+';<\/sc'+'ript>');
doc.write ('<sc'+'ript language="JavaScript" type="text/javascript" src="'+l+'&rnd='+RndNum4NoCash+'"><\/sc'+'ript>');}}}
(function(num,link){function addEvent(e,t,f){if(e.addEventListener)e.addEventListener(t,f,false);else if(e.attachEvent)e.attachEvent('on'+t,f)}
function removeEvent(e,t,f){if(e.removeEventListener)e.removeEventListener(t,f,false);else if(e.detachEvent)e.detachEvent('on'+t,f)}
var BannerLoader={top:0,height:400,cm:document.compatMode=="CSS1Compat",
scroll:function(){var ch=self.innerHeight||this.cm&&document.documentElement.clientHeight||document.body.clientHeight;
var st=self.pageYOffset||this.cm&&document.documentElement.scrollTop||document.body.scrollTop;
var sh=self.scrollHeight||this.cm&&document.documentElement.scrollHeight||document.body.scrollHeight;
if((st-this.top<=this.height*0.2&&st+ch-this.top>=this.height*0.8)||(sh-this.top<=this.height*0.8&&(sh-st-ch<1||sh<ch))){
removeEvent(window,'scroll',this.sfunc);ar_getDoc(0,num,link)}},
sfunc: function(){BannerLoader.scroll()},init:function(){var t=this,obj=document.getElementById('ad_ph_'+num);
if(obj){while(obj.offsetParent){t.top += obj.offsetTop; obj = obj.offsetParent}
addEvent(window,'scroll',this.sfunc);t.scroll()}}};addEvent(window, 'load', function(){BannerLoader.init()})})(ar_cn++,ar_link);
//--></script>
<!-- Soloway 240x400 code END -->
</td></tr>

<tr><td align="center">
<font size="2"><a class=head href=http://forum.citforum.ru/>Форумы</a>
<a class=head href=http://citforum.ru/gazeta/>Газета</a></font>
</td></tr>
</table>

</td>
<td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=2 height=1 border=0></td>
<td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0></td>
</tr></table>

</td>
 <!--no_right-->

</tr>
</table>
</td>

</tr></table>

<p>
<table   cellspacing=0 cellpadding=0 border=0 width=100%>
<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=931 height=1 alt="" border=0></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 alt="" border=0></td></tr>
<tr><td bgcolor=#008080>

<table cellspacing=1 cellpadding=3 border=0 width=100%>
<tr>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/consulting/">IT-консалтинг</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/SE/">Software Engineering</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/programming/">Программирование</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/database/">СУБД</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/security/">Безопасность</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/internet/">Internet</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/nets/">Сети</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/operating_systems/">Операционные системы</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/hardware/">Hardware</a></font></td>
<!--
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/faq/>FAQ (ЧаВО)</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/howto/>HOWTO</a></font></td>
--> 
</tr>
</table>

</td></tr>
</table>

<p>

<table width=100%>
<tr><td>
<a href="http://citforum.ru/about/"><font size=2>Информация для рекламодателей</font></a> 
</td><td><font size=2>PR-акции, размещение рекламы &mdash; <a href="mailto:adv@citforum.ru">adv@citforum.ru</a>,
<br>тел. +7 495 6608306, ICQ 232284597</font>
</td><td align=right><font size=2>Пресс-релизы &mdash; <a href=mailto:pr@citforum.ru>pr@citforum.ru</a></font>
</td></tr></table>


<table cellspacing=0 cellpadding=0 border=0 width="100%"><tr><td><img src="../../../pictures/1x1.gif" width=1 height=5 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr></table>

<table cellspacing=0 cellpadding=4 border=0 width=100%><tr>
<td><font size=2>
<a href=http://www.citforum.ru/feedback.php?page=/operating_systems/manpages/bash/BASH.1_3.shtml&server=citforum.ru>Послать комментарий</a><br>
<a href="http://citforum.ru/how.shtml">Информация для авторов</a>

</font></td>

<td><a href=http://top100.rambler.ru/cgi-bin/stats_top100.cgi?13078><img src="../../../pictures/logos/banner-88x31-rambler-darkblue2.gif" width=88 height=31 border=0 alt="Rambler's Top100"></a></td>
<td><!--TopList LOGO--><a target=_top href="http://top.list.ru/jump?from=26978"><img src="http://top.list.ru/counter?id=26978;t=54;l=1" border=0 height=31 width=88 alt="TopList"></a><!--TopList LOGO--></td>
<td>
<!--LiveInternet logo--><a href="http://www.liveinternet.ru/click" target=_blank><img
src="http://counter.yadro.ru/logo?12.6" border=0
alt="liveinternet.ru: показано число просмотров за 24 часа, посетителей за 24 часа и за сегодня"
width=88 height=31></a><!--/LiveInternet-->
</td>

<td align=right valign=bottom><FONT SIZE=1 face="Arial, sans-serif">This Web server launched on February 24, 1997<br>
Copyright &copy; 1997-2000 CIT, &copy; 2001-2015 <a href="http://citforum.ru/info.shtml">CIT Forum</a></font></td>
</tr></table>

<table cellspacing=0 cellpadding=0 border=0 width=100%><tr><td bgcolor=#daecd7><img src="../../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr><tr><td bgcolor=#008080><img src="../../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr></table>
<table cellspacing=0 cellpadding=0 border=0 width=100%><tr><td align=center><font size=1 face="Arial, sans-serif"><b>Внимание!</b> Любой из материалов, опубликованных на этом сервере, не может быть  воспроизведен в какой бы то ни было форме и какими бы то ни было средствами без письменного разрешения владельцев авторских прав. <a href="http://citforum.ru/copyright.shtml">Подробнее...</a></td></tr></table>


</table></center>


<!-- AdGravity Javascript code START-->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write('<sc' + 'ript language="JavaScript" src="http://ad.adriver.ru/cgi-bin/erle.cgi?sid=126751&bt=16&target=blank&tail256="' + ar_Tail + '"></sc' + 'ript>');
//--></script>
<!-- AdGravity Javascript code END -->



</body>
</html>
