<html>

<head>

<META NAME="Key Words" CONTENT="Информационные технологии,операционные системы,ОС,команды,Unix,описание,синтаксис,man,man pages,manual,OS">

<META NAME="Robots" CONTENT="all">

<META NAME="Document-state" CONTENT="Static">



<title>VI(1)</title>

<link rel="stylesheet" href="citforum.css">
<style>

</style>

<meta http-equiv="content-type" content="text/html; charset=Windows-1251">
</head>
<body bgcolor=#FFFFFF link=#006890 vlink=#003860 alink=#800000 text=#000000 topmargin="0" marginheight="0">
<a name=top></a>





<!-- counters -->
<table cellpadding=0 cellspacing=0 border=0>
<tr>
<td><!--TopList COUNTER--><script language="JavaScript"><!--
d=document;js=10;a=';r='+escape(d.referrer)
//--></script><script language="JavaScript1.1"><!--
js=11;a+=';j='+navigator.javaEnabled()
//--></script><script language="JavaScript1.2"><!--
js=12;s=screen;a+=';s='+s.width+'*'+s.height
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth)
//--></script><script language="JavaScript1.3"><!--
js=13//--></script><script language="JavaScript"><!--
d.write('<img src="http://top.list.ru/counter'+
'?id=26978;js='+js+a+'" alt="" height=1 width=1>')
if(js>11)d.write('<'+'!-- ')//--></script><noscript><img
src="http://top.list.ru/counter?js=na;id=26978"
height=1 width=1 alt=""></noscript><script language="JavaScript"><!--
if(js>11)d.write('--'+'>')
//--></script><!--TopList COUNTER--></td>
<td><!--LiveInternet counter--><script language="JavaScript"><!--
document.write('<img src="http://counter.yadro.ru/hit?r'+
escape(document.referrer)+((typeof(screen)=='undefined')?'':
';s'+screen.width+'*'+screen.height+'*'+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+';u'+escape(document.URL)+
';i'+escape('Жж'+document.title)+';'+Math.random()+
'" width=1 height=1 alt="">')//--></script><!--/LiveInternet--></td>
<td><img src="http://counter.rambler.ru/top100.cnt?13078" alt="" width=1 height=1 border=0></td>
</tr></table>
<!-- end of counters -->



<center><table width=990 cellpadding=0 cellspacing=0>
<tr><td>

    <table width="100%" border="0" cellspacing="0" cellpadding="0">
    <tr valign=bottom>
  <td align="left"><a href="http://citforum.ru/"><img src="../../pictures/logos/citlogo8.gif" width=140 height=44 border=0 alt=Logo></a></td>

      <td align="right" width="100%" style="padding-bottom: 10px"><nobr><font size=2><b>Море(!) аналитической информации!</b></font></nobr></td>
    </tr>
    </table>




<center style="margin-top: 3px">
<!--  AdRiver code START. Type:728x90 Site: citforum PZ: 0 BN: 1 -->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write(
'<iframe src="http://ad.adriver.ru/cgi-bin/erle.cgi?'
+ 'sid=137295&bn=1&target=blank&bt=36&pz=0&rnd=' + RndNum4NoCash + '&tail256=' + ar_Tail
+ '" frameborder=0 vspace=0 hspace=0 width=728 height=90 marginwidth=0'
+ ' marginheight=0 scrolling=no></iframe>');
//--></script>
<noscript>
<a href="http://ad.adriver.ru/cgi-bin/click.cgi?sid=137295&bn=1&bt=36&pz=0&rnd=1013420086" target=_blank>
<img src="http://ad.adriver.ru/cgi-bin/rle.cgi?sid=137295&bn=1&bt=36&pz=0&rnd=1013420086" alt="-AdRiver-" border=0 width=728 height=90></a>
</noscript>
<!--  AdRiver code END  -->

</center>


</td></tr>
<tr><td>

<table cellpadding=0 cellspacing=0 border=0 width=100% style="padding-top: 3px">
<tr><td>
<table   cellspacing=0 cellpadding=0 border=0 width=100%>
<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=931 height=1 alt="" border=0></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 alt="" border=0></td></tr>
<tr><td bgcolor=#008080>

<table cellspacing=1 cellpadding=3 border=0 width=100%>
<tr>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/consulting/">IT-консалтинг</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/SE/">Software Engineering</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/programming/">Программирование</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/database/">СУБД</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/security/">Безопасность</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/internet/">Internet</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/nets/">Сети</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/operating_systems/">Операционные системы</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/hardware/">Hardware</a></font></td>
<!--
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/faq/>FAQ (ЧаВО)</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/howto/>HOWTO</a></font></td>
--> 
</tr>
</table>

</td></tr>
</table>

</td></tr>
<tr><td>
<table cellpadding=0 cellspacing=0 border=0 width=100% style="padding-top: 3px">
<tr valign=top>

<td width=98% style="padding: 0 5px">


<div class="document">




<h3 align=center>VI(1)</h3>

<p align=justify><b>ИМЯ</b><br>

vi, view,vedit - активизирует экранно-ориентированный редактор

<p><b>СИНТАКСИС</b>

<pre>

	vi [option...] [command...] [filename...]

	view [option...] [command...] [filename...]

	vedit [option...] [command...] [filename...]

</pre>

<p align=justify><b>ОПИСАНИЕ</b><br>

Редактор vi  предлагает мощный набор операций для редактирования текста,  основанный на некотором  множестве  мнемонических

команд. Большинство  команд  - это одиночные клавиши,  которые

выполняют простые функции редактирования.  Программа vi открывает "окно" размером с экран дисплея,  в котором вы можете редактировать ваш файл. При помощи vi содержимое этого файла может быть легко и быстро изменено. При редактировании обеспечивается обратная визуальная связь (имя vi - сокращение от слова

"visual").

<p align=justify>Команда view аналогична vi, за исключением того, что автоматически устанавливается опция "только чтение" (-R).  При использовании view файл изменяться не может.

<p align=justify>Команда vedit  аналогична vi,  за исключением различия в установках опций.  vedit использует режим novice,  включает  опцию

magic, устанавливает опцию report=1, вызывает showmode и устанавливает redraw.

<p align=justify>Опция showmode информирует пользователя vedit об используемом

им режиме,  выводя сообщение в нижнем правом углу экрана. Например, после  использования  команды  ESC-i  будет  напечатано

предложение "INSERT MODE" (режим вставки).

<p align=justify>Необходимо отметить,  что вы не можете установить опцию novice

из пределов vi или  ex.  Если  вы  хотите  использовать  опцию

novice, вы должны использовать утилиту vedit. (Существует возможность устанавливать опцию nonovice из пределов vedit).

<p align=justify>vi и строковый редактор ex - это один и тот же редактор: имена

vi  и  ex идентифицируют скорее особый пользовательский интерфейс чем функциональное различие. Различие в  пользовательском

интерфейсе,  однако,  совершенно  поразительное.  ex  - мощный

строчно-ориентированный редактор, схожий с редактором ed.  Однако,  и в 'ex', и в 'ed' визуальная корректировка экрана терминала ограничена, а команды вводятся с  командной  строки.  С

другой стороны, vi - это экранно-ориентированный редактор, устроенный таким образом, где то, что вы видите на экране, точно

соответствует содержимому файла, который вы редактируйте.

<p align=justify>В командной строке vi допустимы следующие опции:

<table>

<tr valign=top><th>-t <td> Эквивалент первоначальной команды tag; редактирует файл,

содержащий признак  tag (тег),  и устанавливает редактор

согласно определению этого признака.

<tr valign=top><th>-r <td> Используется при восстановлении,  когда имело место повреждение редактора или всей системы,  отыскивает последнюю сохраненную версию указанного файла.  Если  файл  не

определен, то  эта опция выводит список сохраненных файлов.

<tr valign=top><th>-l <td> Специфическая для редактирования LISP,  эта опция  устанавливает опции showmatch и lisp.

<tr valign=top><th>-Wn <td> По умолчанию устанавливает "окно" размером 'n'.  Чрезвычайно удобно в наборных устройствах,  чтобы начинать работу в малом окне.

<tr valign=top><th>-R <td> Устанавливает опцию "только чтение",  при этом файлы могут только просматриваться, но не редактироваться.

</table>

<p align=justify><b>БУФЕР РЕДАКТИРОВАНИЯ</b><br>

vi не  выполняет никаких операций редактирования над указанным

вами файлом.  Вместо этого он работает с копией вашего  файла,

которая находится в буфере редактирования.

<p align=justify>Когда вы  активизируйте  vi с одним аргументом - именем файла,

этот файл копируется во временной буфер редактирования. Редактор запоминает имя файла,  определенного при вызове, таким образом, что позднее он может скопировать содержимое буфера  редактирования обратно  в  указанный файл.  Содержимое заданного

файла не изменяется до тех пор,  пока все изменения  не  будут

скопированы обратно в первоначальный файл.

<p align=justify><b>РЕЖИМЫ РАБОТЫ</b><br>

Внутри vi существует три отдельных режима:

<p align=justify><b>Режим команды:</b> в этом режиме сигнал с клавиатуры интерпретируется как команда редактирования.

<p align=justify><b>Режим вставки:</b> перейти в этот режим можно набором любых команд

вставки, присоединения,  открытия,  подстановки, изменения или

замещения, имеющихся в vi. В этом режиме символы, набранные на

клавиатуре, вставляются в буфер редактирования.

<p align=justify><b>Режим переключения в 'ex':</b>  редакторы vi и ex почти одинаковы.

отличаясь, в основном,  только пользовательским интерфейсом. В

vi команды - это одиночные клавиши.  В ex  командами  являются

строки текста,  завершенные нажатием клавиши RETURN.  vi имеет

специальную команду  "escape",  которая  позволяет  перейти  к

большинству  строчно-ориентированных команд редактора ex.  Для

использования режима переключения в ex  наберите  символ  ':'.

Этот символ  отобразится  в  командной строке как указатель на

следующую команду редактора ex. Выполняемая команда может быть

прервана нажатием клавиши INTERRUPT.  Большинство команд обработки файла выполняется в режиме переключения в ex  (например,

команды чтения  из файла и записи из буфера редактирования обратно в файл).

<p align=justify><b>СПЕЦИАЛЬНЫЕ КЛАВИШИ</b><br>

В редакторе vi существует несколько специальных клавиш. Следующие клавиши используются для редактирования,  ограничения или

прерывания команд и командных строк:

<table>

<tr valign=top><th>ESC<td>

Используется для возврата в режим команды vi  или  для  отмены

неполностью набранной команды.

<tr valign=top><th>RETURN<td>

Завершает команды ex в режиме переключения в ex. Также используется для начала новой строки в режиме вставки.

<tr valign=top><th>INTERRUPT<td>

Часто то же самое, что и клавиша DEL или RUBOUT во многих терминалах. Генерирует прерывание,  выдавая редактору указание на

остановку текущей работы.  Используется для прекращения  любой

выполняемой команды.

<tr valign=top><th>/<td>

Используется для определения строки, по которой осуществляется

поиск. Знак  "косая  черта"  появляется в строке состояния как

указатель на шаблон поиска.  Знак вопроса '?' работает  также,

только поиск в файле ведется назад (т.е.  в обратном направлении).

<tr valign=top><th>:<td>

Двоеточие является  указателем на команду редактора ex.  После

него вы можете набрать любую команду редактора ex,  затем  нажать клавишу ESC или RETURN, после чего заданная команда будет

выполнена.

</table>

<p align=justify>В режиме вставки могут использоваться следующие символы:

<table>

<tr valign=top><th>BKSP<td>

В текущей строке возвращает курсор назад на один символ.  Последний символ, набранный перед BKSP, удаляется из входного буфера, но остается на экране дисплея.

<tr valign=top><th>Ctrl-U<td>

Перемещает курсор назад на первый символ вставки  или  перезапускает ввод.

<tr valign=top><th>Ctrl-V<td>

Удаляет специальное значение  следующего  набранного  символа.

Используйте Ctrl-V  для вставки управляющих символов.  Символы

"перевод строки" и Ctrl-J не могут быть вставлены в текст иначе, как символы "новая строка".  Ctrl-Q и Ctrl-S захватываются

операционной системой перед тем, как будут обработаны редактором vi, поэтому они тоже не могут быть вставлены как текст.

<tr valign=top><th>Ctrl-W<td>

Перемещает курсор назад на первый символ последнего  вставленного слова.

<tr valign=top><th>Ctrl-T<td>

При вводе,  с установкой опции autoindent и в  начале  текущей

строки введение этого символа обеспечит вставку пустого пространства размером shiftwidth.

<tr valign=top><th>Ctrl-@<td>

Введенный в качестве первого символа при вводе,  он заменяется

на последний вставленный текст,  и ввод прекращается.  Из последней вставки  запоминается  только  128 символов.  Если было

вставлено более 128 символов, то эта команда символы не вставляет. Символ  Ctrl-@ не может находиться в файле,  даже заключенный в кавычки.

</table>

<p align=justify><b>НАЧАЛО РАБОТЫ И ВЫХОД ИЗ РЕДАКТОРА VI</b><br>

Для входа в редактор vi наберите:

<table>

<tr valign=top><th align=left>vi <td>   Редактирует пустой буфер редактирования

<tr valign=top><th align=left>vi file   <td>    Редактирует указанный файл

<tr valign=top><th align=left>vi +123 file  <td> Переходит на строку с номером 123

<tr valign=top><th align=left>vi +45 file  <td>   Переходит на строку с номером 45

<tr valign=top><th align=left>vi +/word file <td>   Ищет первое вхождение слова "word"

<tr valign=top><th align=left>vi +/tty file <td>  Ищет первое вхождение слова "tty"

</table>

Существует несколько путей выхода из редактора vi:

<table>

<tr valign=top><th>ZZ<td>

Содержимое буфера  редактирования  записывается  в файл только

при условии, что были сделаны какие-либо изменения.

<tr valign=top><th>:x<td>

Содержимое буфера  редактирования  записывается  в файл только

при условии, что были сделаны какие-либо изменения.

<tr valign=top><th>:q!<td>

Отменяет сеанс редактирования.  Восклицательный знак указывает

редактору vi на необходимость безусловного выхода. В этом случае содержимое буфера редактирования не переписывается.

</table>

<p align=justify><b>КОМАНДЫ РЕДАКТОРА VI</b><br>

vi -  это визуальный редактор с "окном" в редактируемом файле.

То, что вы видите на экране, является представлением редактора

vi содержимого файла. Команды не вызывают никаких изменений на

экране, пока не будет нажата команда  исполнения.  Большинство

команд могут использовать счетчик,  стоящий перед ними и показывающий число повторов команды.  Этот  параметр  в  следующих

описаниях команд не задан,  но он подразумевается, если не отвегнут каким-нибудь стоящим перед ним аргументом. Когда редактор vi получает команду неправильного формата, он сигнализирует об этом звонком.

<p align=justify><b>ПЕРЕМЕЩЕНИЕ КУРСОРА</b><br>

Клавиши управления  курсором позволяют вам перемещать ваш курсор по файлу. Следует отметить, в частности, клавиши направления (если они имеются на вашем терминале),  клавиши управления

курсором H, J, K, L и SPACEBAR, BKSP, Ctrl-N и Ctrl-P. Эти три

набора клавиш выполняют одинаковые функции.

<dl>

<dt><b>Forward Space (Перемещение вперед):</b><dd> I, SPACEBAR, клавиша перемещения вправо.

<dt>Синтаксис: <dd>I

<br>     SPACEBAR

<br>     Клавиша перемещения вправо

<dt>Функция: <dd> Перемещает  курсор на один символ вперед.  Если задан

счетчик, то перемещает вперед на указанное число символов.  Вы

не можете переместиться за предел конца строки.

<p><dt><b>

Backspace (Перемещение назад):</b><dd>  h,  BKSP,  клавиша перемещения

влево.

<dt>Синтаксис: <dd>h

<br>     BKSP

<br>     Клавиша перемещения влево

<dt>Функция: <dd> Перемещает  курсор  на один символ назад.  Если задан

счетчик, то перемещает назад на указанное число  символов.  Вы

не можете переместиться за предел начала строки.

<p><dt><b>

Next Line (Следующая строка):</b><dd> +, RETURN, Ctrl-N, LF.

<dt>Синтаксис: <dd>+

<br>     RETURN

<dt>Функция: <dd><dd> Перемещает курсор вниз на начало следующей строки.

<dt>Синтаксис:<dd> j

<br>     Ctrl-N

<br>     LF

<br>     Клавиша перемещения вниз

<dt>Функция: <dd> Перемещает курсор вниз на одну строку, оставляя его в

прежней колонке. Обратите внимание на различие между этими командами и предыдущим набором команд (+, RETURN), которые перемещают курсор на НАЧАЛО cледующей строки.

<p><dt><b>

Previous Line (Предыдущая строка):</b><dd> -, k, Ctrl-P, клавиша перемещения вверх.

<dt>Синтаксис: <dd>k

<br>     Ctrl-P

<br>     Клавиша перемещения вверх

<dt>Функция: <dd> Перемещает курсор на одну строку вверх,  оставляя его

в прежней колонке.  Если задан счетчик, то курсор перемещается

на указанное число строк.

<dt>Синтаксис: <dd><dt>Функция: <dd> Перемещает  курсор на начало предыдущей строки.  Если

задан счетчик, то курсор перемешается на указанное число строк.

<p><dt><b>

Beginning of Line (Начало строки): </b><dd>O, ^.

<dt>Синтаксис: <dd>^

 <br>    O

<dt>Функция: <dd> Перемещает курсор на начало текущей строки.  Обратите

внимание, что 'O' всегда возвращает курсор  на  первый  символ

текущей строки.  Знак '^' работает несколько иначе: он перемещает курсор на первый символ строки,  который не является меткой табуляции или пробелом.  Это очень удобно при редактировании файла,  имеющего большое число абзацев,  например,  текста

программы.

<p><dt><b>

End of Line (Конец строки):</b><dd> $

<dt>Синтаксис: <dd>$

<dt>Функция: <dd> Перемещает  курсор  в конец текущей строки.  Обратите

внимание, что курсор находится над последним символом в  строке. Если  задан  счетчик,  то  курсор  перемещается  на (счетчик-1)-строк вперед в конец строки.

<p><dt><b>

Goto Line (Перейти к строке):</b><dd> G

<dt>Синтаксис: <dd>G

<dt>Функция: <dd> Перемещает  курсор  на  начало   строки   с   номером

linenumber. Если аргумент line number не задан,  то курсор перемещается на начало последней строки файла.  Для  определения

номера текущей строки нажмите Ctrl-G.

<p><dt><b>

Column (Колонка):</b><dd> |

<dt>Синтаксис: <dd>|

<dt>Функция: <dd> Перемещает  курсор в текущей строке в позицию с номером column. Если этот аргумент не задан, то курсор перемещается в первую позицию текущей строки.

<p><dt><b>

Word Forward (Перемещение вперед на слово):</b><dd> w, W.

<dt>Синтаксис: <dd>w

<br>     W

<dt>Функция: <dd> Перемещает курсор вперед на начало следующего  слова.

Команда 'w' ищет слово,  определенное как строку буквенно-числовых символов,  разделенных пунктуацией или пустым пространством (например,  метка табуляции, символ новой строки или пробел). Команда 'W' ищет слово, определенное как строку непустых

символов.

<p><dt><b>

Back Word (Перемещение назад на слово):</b><dd> b, B.

<dt>Синтаксис: <dd>b

 <br>    B

<dt>Функция: <dd> Перемещает курсор назад на начало текущего слова. Команда 'b' ищет слово,  определенное как строку буквенно-числовых символов, разделенных пунктуацией или пустым пространством

(например, метки табуляции, символы новой строки или пробелы).

Команда 'B' ищет слово,  определенное как строку непустых символов. Если курсор уже находится внутри слова, то он перемещается назад, на начало этого слова.

<p><dt><b>

End (Конец):</b><dd> e, E.

<dt>Синтаксис: <dd>e

<br>     E

<dt>Функция: <dd> Перемещает курсор в конец слова.  Команда 'e' перемещает курсор на последний символ слова,  где  слово  определено

как строка буквенно-числовых символов, разделенных пунктуацией

или пустым пространством (например,  метки табуляции,  символы

новой строки  или  пробелы).  Команда 'E' перемещает курсор на

последний символ слова, где слово определено как строка непустых  символов.  Если курсор уже находится внутри слова,  то он

перемещается на конец этого слова.

<p><dt><b>

Sentence (Предложение): </b><dd>(, ).

<dt>Синтаксис: <dd>(

<br>     )

<dt>Функция: <dd> Перемещает курсор в начало (левая скобка) или в конец

предложения (правая скобка). Предложение определено как последовательность символов,  заканчивающаяся  точкой  (.),  знаком

вопроса (?) или восклицательным знаком (!) и следующими за ними двумя пробелами или символами новой строки. Предложение начинается с первого непустого символа,  за которым следует  все

предложение. Предложение  также ограничено параграфом или разделителями разделов. Смотрите ниже.

<p><dt><b>

Paragraph (Параграф): </b><dd>{, }.

<dt>Синтаксис: <dd>{

<br>     }

<dt>Функция: <dd> Перемещает  курсор на начало ({) или конец (}) параграфа. Параграф определен опцией paragraph. По умолчанию параграфы разделены макросами команды nroff - '.IP',  '.LP',  '.P',

'.QP', '.bp'. Параграфы также начинаются после пустых строк.

<p><dt><b>

Section (Раздел):</b><dd> [[, ]].

<dt>Синтаксис: <dd>[[

<br>     ]]

<dt>Функция: <dd> Перемещает  курсор на начало ([[) или конец (]]) раздела. Раздел определен опцией section.  По  умолчанию  разделы

разделены макросами команды nroff - '.NH', '.SH'. Разделы также начинаются с  символов  "прогон  страницы"  (Ctrl-L)  и  со

строк, начинающихся со знака ({).

<p><dt><b>

Match Delimiter (Согласующий разделитель): </b><dd>%.

<dt>Синтаксис: <dd>%

<dt>Функция: <dd> Перемещает курсор на согласующий разделитель, которым

могут быть круглая, операторная или фигурная скобки. Это очень

удобно при  согласовании пар вложенных круглых,  операторных и

фигурных скобок.

<p><dt><b>

Home (Возврат на исходное место): </b><dd>H.

<dt>Синтаксис: <dd>[offset] H

<dt>Функция: <dd> Перемещает курсор в верхний левый  угол  экрана.  Используйте эту  команду для быстрого перемещения наверх экрана.

Если задан  параметр  offset,  то   курсор   возвращается   на

(offset-1)-линий от вершины экрана.  Необходимо отметить,  что

команда 'dH' уничтожает все строки от текущей строки до  верхней строки, показанной на экране.

<p><dt><b>

Middle Screen (Середина экрана):</b><dd> M.

<dt>Синтаксис: <dd>M

<dt>Функция: <dd> Перемещает курсор на начало средней линии экрана. Используйте эту команду для быстрого перемещения курсора в середину экрана сверху или снизу экрана.  Необходимо отметить, что

команда 'dM' удаляет все строки,  от текущей до выбранной  командой 'M'.

<p><dt><b>

Lower Screen (Низ экрана):</b><dd> L.

<dt>Синтаксис: <dd>[offset] L

<dt>Функция: <dd> Перемещает курсор на нижнюю строку экрана. Используйте эту команду для быстрого перемещения в нижнюю часть экрана.

Если задан   параметр   offset,   то  курсор  возвращается  на

(offset-1)-линий от самого низа экрана.  Необходимо  отметить,

что команда  'dL'  уничтожает все линии,  от текущей до нижней

линии, показанной на экране.

<p><dt><b>

Previous Context (Предыдущий контекст):</b><dd> ", ".

<dt>Синтаксис: <dd>"

<br>     'character (символ)

<br>     "

<br>     'character (символ)

<dt>Функция: <dd> Перемещает  курсор на предыдущий контекст или на контекст, отмеченный командой 'm'. Если одиночная кавычка или обратная кавычка  сдвоена,  то курсор перемещается на предыдущий

контекст. Если после такой же кавычки задан одиночный  символ,

то курсор перемещается в место расположения указанной кавычки,

как определенной командой 'm'. Предыдущий контекст - это место

в файле последнего несвязанного (nonrelative) перемещения курсора. Одиночная кавычка (') используется  для  перемещения  на

начало начало строки,  представляющей предыдущий контекст. Обратная кавычка (') используется для перемещения к  предыдущему

контексту внутри строки.

</dl>

<p align=justify><b>КОМАНДЫ ЭКРАНА</b><br>

Команды экрана не являются командами  управления  перемещением

курсора и  не  могут  использоваться  в  командах удаления как

разграничители объектов текста. Однако команды экрана осуществляют перемещение текста и очень удобны для страничной организации или "прокрутки" информации из файла на  экране  дисплея.

Эти команды описаны ниже.

<dl>

<dt><b>

Scroll (Прокрутка): </b><dd>Ctrl-U, Ctrl-D.

<dt>Синтаксис: <dd>[size] Ctrl-U

<br>     [size] Ctrl-D

<dt>Функция: <dd> "Прокручивает" экран на половину окна вверх  (Ctrl-U)

или вниз (Ctrl-D).  Если задан аргумент size,  то производится

прогон на (size)-строк.  Это значение  запоминается  для  всех

последующих операций "прокрутки".

<p><dt><b>

Page (Разбиение на страницы):</b><dd> Ctrl-F, Ctrl-B.

<dt>Синтаксис: <dd>Ctrl-F

<br>     Ctrl-B

<dt>Функция: <dd> Постранично листает экран вперед и назад.  Если  возможно, то между страницами сохраняются две неразрывные строки.

Предварительно заданный счетчик указывает  число  страниц,  на

которое надо передвинуть вперед или назад.

<p><dt><b>

Status (Состояние):</b><dd> Ctrl-G.

<dt>Синтаксис: <dd>Bell

<br>     Ctrl-G

<dt>Функция: <dd> Высвечивает состояние редактора vi в  строке  состояния. Это  показывает  вам имя редактируемого файла,  был ли он

изменен, номер текущей строки,  число строк в файле и  процент

файла (в строках), предшествующий месту нахождения курсора.

<p><dt><b>

Zero Screen (Обнуление экрана): </b><dd>z

<dt>Синтаксис: <dd>[linenumber]z[size]RETURN

<br>     [linenumber]z[size].

<br>     [linenumber]z[size]<dt>Функция: <dd> Перерисовывает  содержимое  экрана  дисплея с текущей

строки, расположенной или "обнуленной" (zeroed) в верхней части, в середине или в нижней части экрана, соответственно. Если

вы задаете аргумент size,  то число высвечиваемых линий  равно

size. Если задан стоящий впереди аргумент linenumber, то строка с номером linenumber размещается вверху экрана.  Если  последний аргумент - RETURN, то текущая строка размещается вверху

экрана. Если последний аргумент - (.),  то текущая строка размещается в середине экрана.  Если последний аргумент - (-), то

текущая строка размещается внизу экрана.

<p><dt><b>

Redraw (Перерисовка):</b><dd> Ctrl-R, Ctrl-L.

<dt>Синтаксис: <dd>Ctrl-R

<br>     Ctrl-L

<dt>Функция: <dd> Перерисовывает содержимое экрана. Используйте эту команду для стирания любых системных  сообщений,  которые  могут

накладываться на информацию, содержащуюся на вашем экране. Необходимо отметить, что системные сообщения не влияют на редактируемый вами файл.

</dl>

<p align=justify><b>ВСТАВКА ТЕКСТА</b><br>

Команды вставки текста всегда переводят вас в  режим  вставки.

Выход из режима вставки всегда осуществляется нажатием клавиши

ESC. Следующие команды вставки  являются  "чистыми"  командами

вставки; при их применении текст не уничтожается.  Эти команды

отличаются от команд модификации текста - изменения, замещения

и подстановки,  которые  сначала  удаляют,  а  затем вставляют

текст за одну операцию.

<dl>

<dt><b>

Insert (Вставить):</b><dd> i, I.

<dt>Синтаксис: <dd>i[text]ESC

<br>     I[text]ESC

<dt>Функция: <dd> Вставляет текст text в буфер редактирования.  Команда

'i' переводит вас в режим  вставки.  Текст  вставляется  перед

символом, расположенным под курсором. Для вставки новой строки

нажмите RETURN.  Для выхода из режима вставки нажмите ESC. Команда 'I'  также  переводит  вас в режим вставки,  но начинает

вставлять текст с начала текущей строки, а не перед курсором.

<p><dt><b>

Append (Присоединить):</b><dd> a, A.

<dt>Синтаксис: <dd>a[text]ESC

<br>     A[text]ESC

<dt>Функция: <dd> Присоединяет текст text к содержимому буфера редактирования. Команда 'a' работает точно также,  как  команда  'i',

только вставка  текста  начинается  после курсора,  а не перед

ним. Это является одной из возможностей  добавления  текста  в

конец строки.  Команда 'A' начинает вставку текста в конце текущей строки, а не после курсора.

<p><dt><b>

Open New Line (Открыть новую строку):</b><dd> o, O.

<dt>Синтаксис: <dd>o[text]ESC

<br>     O[text]ESC

<dt>Функция: <dd> Открывает новую строку и вставляет текст. Команда 'o'

открывает новую строку под текущей строкой, команда 'O' открывает новую строку над текущей строкой.  После того,  как новая

строка открыта, обе команды работают аналогично команде 'I'.

</dl>

<p align=justify><b>УДАЛЕНИЕ ТЕКСТА</b><br>

Большинство команд  удаления текста используют в качестве оператора выполнения клавишу 'D'. Этот оператор удаляет текстовые

объекты, ограниченные курсором и командой перемещения курсора.

Удаленный текст всегда продолжает храниться в буфере.  Команды

удаления описаны ниже.

<dl>

<dt><b>

Delete Character (Удалить символ):</b><dd> x, X.

<dt>Синтаксис: <dd>x

<br>     X

<dt>Функция: <dd> Удаляет символ.  Команда 'x' удаляет символ,  находящийся под курсором. При заданном впереди счетчике count удаляется (count)-символов вправо от символа,  стоящего под  курсором. Это  быстрый  и легкий способ удалить несколько символов.

Команда 'X' удаляет символ,  расположенный перед курсором. При

заданном впереди  счетчике  count удаляется (count)-символов в

обратном направлении, начиная с символа, стоящего перед курсором.

<p><dt><b>

Delete (Удалить): </b><dd>d, D.

<dt>Синтаксис: <dd>d cursor-movement

<br>     dd

<br>     D

<dt>Функция: <dd> УУдаляет текстовый объект. Команда 'd' в качестве аргумента берет  cursor-movement  (перемещение  курсора).   Если

cursor-movement - внутристрочная команда, то производится удаление от курсора до конца  текстового  объекта,  ограниченного

аргументом cursor-movement.   Удаление  в  прямом  направлении

(вперед) удаляет символ,  расположенный под курсором; удаление

в обратном    направлении   (назад)   не   выполняется.   Если

cursor-movement - многострочная команда,  то удаление производится с текущей строки,  включая ее саму, до текстового объекта, ограниченного аргументом cursor-movement.

</dl>

<p align=justify>Команда 'dd' удаляет целые строки.  Команда 'D' удаляет все от

позиции курсора, включая ее, до конца текущей строки.

<p align=justify>Удаленный текст автоматически заносится в стек буферов, пронумерованных от 1 до 9.  Самый последний удаленный  текст  также

размещается в специальном буфере удаления, который имеет логический номер 0.  Этот специальный буфер  является  буфером  по

умолчанию для всех команд 'put' (поместить), используя двойные

кавычки (") для указания номера буфера  для  команд  удаления,

помещения и "выдергивания".  Доступ к буферам с 1 по 9-й может

быть организован командами 'p','P' (поместить) с присоединением двойных кавычек к номеру буфера. Например, команда:

<pre>

	"4p

</pre>

<p align=justify>помещает содержимое  буфера  удаления  с номером 4 в ваш буфер

редактирования под текущей строкой.  Необходимо отметить,  что

последний удаленный текст помещается по умолчанию,  и указание

номера буфера при этом не требуется.

<p align=justify><b>МОДИФИКАЦИЯ ТЕКСТА</b><br>

Команды модификации текста,  все вызывают замену одного текста

другим. Это  означает,  что некоторый текст,  вероятно,  будет

удален. Все команды модификации текста могут быть отменены командой 'u'.

<dl>

<dt><b>

Undo (Уничтожить сделанное):</b><dd> u, U.

<dt>Синтаксис: <dd>u

 <br>    U

<dt>Функция: <dd> Уничтожает результат последней  команды  вставки  или

удаления. Команда  'u'  уничтожает результат последней команды

вставки или удаления.  Это означает,  что после выполнения команды вставки  команда 'u' удаляет вставленный текст,  а после

команды удаления - вставляет текст обратно.  В целях уничтожения все  команды модификации текста рассматриваются как выполняюшие вставку.  Команда 'U' восстанавливает текущую строку  в

ее первоначальное состояние,  прежде чем она была отредактирована, независимо от того,  сколько раз она  редактировалась  с

того момента, когда вы перешли на нее.

<p><dt><b>

Repeate (Повторить): </b><dd>.

<dt>Синтаксис: <dd>.

<dt>Функция: <dd> Повторяет последнюю команду вставки или удаления. Существует специальный случай для повтора команд 'p' и 'P'. Когда эти  команды стоят перед именем буфера удаления,  следующая

команда 'u' высвечивает содержимое буфера удаления.

<p><dt><b>

Change (Изменить):</b><dd> c, C.

<dt>Синтаксис: <dd>c cursor-movement text ESC

<br>     C text ESC

<br>     cc text ESC

<dt>Функция: <dd> Изменяет текстовый объект и  заменяет  его  на  текст

text. Текст вставляется,  как по команде 'i'. Знак доллара ($)

отмечает степень изменения.  Команда 'c' изменяет  произвольно

выбранный текстовый атрибут,  ограниченный курсором и аргументом cursor-movement.  Команды 'C' и 'cc'  обрабатывают  строки

целиком и по выполняемым функциям идеинтичны.

<p><dt><b>

Replace (Заменить):</b><dd> r, R.

<dt>Синтаксис: <dd>r char

<br>     R text ESC

<dt>Функция: <dd> Заменяет символ или строку на char или text.  Используйте 'r'  для  замены одиночного символа,  а 'R' - для замены

всей строки. Счетчик count обеспечивает (count)-кратную вставку текста.

<p><dt><b>

Substitute (Подставить): </b><dd>s, S.

<dt>Синтаксис: <dd>s text ESC

<br>     S text ESC

<dt>Функция: <dd> Замещает текущий символ или  текущую  строку  текстом

text. Используйте  команду  's'  для замены одиночного символа

новым текстом.  Используйте команду  'S'  для  замены  текущей

строки новым  текстом.  Если  впереди задан счетчик count,  то

текст вставляется (count)-раз вместо заменяемого  символа  или

строки, в зависимости от того, какая команда используется.

<p><dt><b>

Filter (Фильтрация): </b><dd>!

<dt>Синтаксис: <dd>! cursor-movement cmd RETURN

<dt>Функция: <dd> Фильтрует  текстовый объект,  ограниченный курсором и

аргументом cursor-movement, посредством какой-либо команды cmd

системы XENIX. Например, следующая команда сортирует все строки, расположенные между курсором и нижней часть экрана,  заменяя отсортированные строки другими, определенными строками:

<pre>

	!L sort

</pre>

<p align=justify>Как часть команды cmd могут быть включены аргументы и метасимволы shell;  однако стандартный ввод и вывод всегда связаны  с

текстовым объектом, над которым выполняется фильтрация.

<p><dt><b>

Join Lines (Объединить строки):</b><dd> J.

<dt>Синтаксис: <dd>J

<dt>Функция: <dd> Объединяет текущую строку со следующей строкой.  Если

задан счетчик count, то объединяется (count)-строк.

<p><dt><b>

Shift (Сдвинуть): </b><dd>&lt;, >.

<dt>Синтаксис: <dd>>[cursor-movement]

<br>     &lt;[cursor-movement]

<br>     >>

<br>     &lt;&lt;

<dt>Функция: <dd> Сдвигает текст вправо (>) или влево (&lt;).  Текст сдвигается на   количество   позиций,    определяемое    значением

shiftwidth, которое обычно равно восьми пропускам.  Обе команды, > и &lt;, сдвигают все строки в текстовом объекте, ограниченные курсором и аргументом cursor-movement. Команды >> и &lt;&lt; выполняют действие над целыми строками. Все версии команды могут

использовать стоящий впереди счетчик для увеличения числа объектов, над которыми выполняется операция.

</dl>

<p align=justify><b>ПЕРЕМЕЩЕНИЕ ТЕКСТА</b><br>

Команды перемещения текста перемещают его в/из буферов, поименованных от 'a' до 'z' и из буферов удаления с номерами  от  1

до 9. Эти команды или "выдергивают" текст из буфера редактирования и помещают его  в  определенный  буфер,  или  "помещают"

текст в  буфер  редактирования из поименованного буфера или из

буфера удаления.  По умолчанию текст помещается и  извлекается

из "безымянного" буфера, в котором также размещается последний

удаленный текст.  Таким образом,  совершенно  резонно  удалить

текст, затем передвинуть ваш курсор в то место, куда вы хотите

вставить удаленный текст, и после этого поместить текст обратно в  буфер редактирования,  в новое место,  с помощью команды

'p'/'P'.

<p align=justify>Поименованные буферы наиболее удобны  для  сохранения  дорожки

нескольких частей  текста,  которую  вы хотите иметь постоянно

наготове для более позднего доступа к этим текстам, или их перемещения и переразмещения.  Эти буферы поименованы буквами от

'a' до 'z'. Для ссылки в команде на один из этих бууферов (или

на один из буферов удаления) используйте знак кавычки.  Например, для извлечения строки из файла в буфер 'a' наберите "ayy.

Для того,  чтобы поместить этот текст обратно в файл, наберите

"ap.

<p align=justify>Если вы удаляете текст в буфере с именем 'A',  а  не  'a',  то

текст присоединяется  к  содержимому буфера.  Необходимо отметить, что содержимое поименованных буферов не разрушается  при

переключении файлов.  Поэтому  вы  должны  удалить или извлечь

текст в буфер,  выбрать новый файл и затем  выполнить  команду

'put'. Содержимое  буферов  теряется  при выходе из редактора,

поэтому будьте осторожны.

<dl>

<dt><b>

Put (Поместить): </b><dd>p, P.

<dt>Синтаксис: <dd>["alphanumeric]p

<br>     ["alphanumeric]P

<dt>Функция: <dd> Помещает текст из буфера в буфер редактирования. Если

имя буфера-источника не указано, то текст выбирается из "безымянного" буфера.  Команда 'p' помещает текст под текущей строкой или после курсора,  в зависимости от того,  содержит буфер

полную строку или нет.  Команда 'P' помещает текст или над текущей строкой,  или перед курсором, в зависимости от того, содержит буфер неполную строку или нет.

<p><dt><b>

Yank (Извлечь): </b><dd>y, Y.

<dt>Синтаксис: <dd>["letter]y cursor-movement

<br>     ["letter]yy

<br>     ["letter]Y

<dt>Функция: <dd> Копирует текст из буфера редактирования в поименованный буфер.  Если имя буфера не указано,  то текст помещается в

"безымянный" буфер.  Если  используется строчная буква letter,

то текст добавляется в буфер,  не переписывая  и  не  разрушая

предыдущее содержимое. Когда в качестве аргумента используется

cursor-movement, то извлекается ограниченный текстовый объект.

Команды 'Y'  и  'yy'  извлекают одну строку,  или,  если задан

счетчик, несколько строк.

</dl>

<p align=justify><b>ПОИСК</b><br>

Команды поиска осуществляют поиск текста, соответствующего заданному регулярному выражению и находящегося в буфере редактирования, в прямом или обратном направлении.

<dl>

<dt><b>

Search (Найти): </b><dd>/, ?

<dt>Синтаксис: <dd>/[pattern]/[offset]RETURN

<br>     /[pattern]RETURN

<br>     ?[pattern]?[offset]RETURN

<br>     ?[pattern]RETURN

<dt>Функция: <dd> Осуществляет поиск текста,  соответствующего  шаблону

pattern, в прямом (/) или обратном (?) направлении. Строка является действительным  регулярным  выражением.   Если   шаблон

pattern не задан, то для поиска используется последнее используемое значение pattern.  После второго разделителя может быть

задан аргумент offset, определяющий начало строки, относительно строки, в которой был найден шаблон pattern. Например,

<pre>

	/word/</pre>

<p align=justify>находит начало строки,  непосредственно предшествующей строке,

содержащей слово "word". Другая команда:

<pre>

	/word/+2

</pre>

<p align=justify>находит начало  строки,  стоящей  на  две строки дальше от той

строки, которая содержит слово "word".  Смотрите  также  опции

ignorecase и magic.

<p><dt><b>

Next String (Следующая строка):</b><dd> n, N.

<dt>Синтаксис: <dd>n

<br>     N

<dt>Функция: <dd> Повторяет последнюю команду поиска.  КОманда 'n' повторяет поиск в том же направлении, что и последняя команда поиска. Команда 'N' повторяет поиск в направлении, противоположном направлению последней команды поиска.

<p><dt><b>

Finf Character (Найти символ): </b><dd>f, F.

<dt>Синтаксис: <dd>f char

<br>     F char

<br>     ;

<br>     ,

<dt>Функция: <dd> Находит символ char в текущей строке. Команда 'f' выполняет поиск в прямом направлении,  команда 'F' - в обратном.

Знак (;) повторяет поиск последнего символа. Запятая (,) меняет направление поиска на противоположное.

<p><dt><b>

To Character (Перейти к символу): </b><dd>t, T.

<dt>Синтаксис: <dd>t char

<br>     T char

<br>     ;

<br>     ,

<dt>Функция: <dd> Помещает курсор над символом char. Знак (;) повторяет

поиск последнего  символа.  Знак (,) меняет направление поиска

на обратное.

<p><dt><b>

Mаrk (Отметить): </b><dd>m

<dt>Синтаксис: <dd>m letter

<dt>Функция: <dd> Отмечает место в файле,  где находится буква  letter.

Вы можете  переместиться к этой отметке при помощи команды 'to

mark', описанной ниже.  Это часто удобно использовать для создания метки,  перемещения  курсора от этой метки в необходимом

направлении и затем удаления от курсора до метки 'a' с помощью

команды d'a.

<p><dt><b>

To Mark (Перейти на метку): </b><dd>', '.

<dt>Синтаксис: <dd>'letter

<br>     'letter

<dt>Функция: <dd> Перемещает курсор на метку letter. Эта команда позволяет вам переместиться к месту расположения метки. Метки обозначаются одиночными строчными буквами алфавита.  Прежде чем вы

сможете переместиться к метке,  вам необходимо сначала создать

ее с помощью команды 'm'.  Знак (') перемещает вас  непосредственно в  позицию  расположения метки внутри строки;  знак (')

перемещает вас на начало строки,  содержащей метку. Необходимо

отметить, что эти команды являются также разрешенными командами перемещения курсора.

</dl>

<p align=justify><b>КОМАНДЫ ВЫХОДА И ПЕРЕКЛЮЧЕНИЯ</b><br>

Существует несколько команд, которые используются для переключения режима команды vi и для выхода из редактора. Эти команды

описаны ниже.

<dl>

<dt><b>

ex Escape (Переключить на режим 'ex'):</b><dd> ':'

<dt>Синтаксис: <dd>:

<dt>Функция: <dd> Вводит  режим  переключения в 'ex' для выполнения команды редактора ex.  В строке состояния  появляется  двоеточие

(:) как подсказка-указание для ввода ex-команды.  Затем вы можете ввести ex-команду, закончить ее символами RETURN или ESC,

после чего эта команда выполнится.  Затем вам предложат нажать

клавишу RETURN для возврата в  режим  команды  vi.  При  вводе

ex-команды или  при  ее  выполнении  вы  можете нажать клавишу

INTERRUPT для прекращения того,  что вы собирались  делать,  и

для возврата в режим команды vi.

<p><dt><b>

Exit Editor (Выход из редактора):</b><dd> ZZ

<dt>Синтаксис: <dd>ZZ

<dt>Функция: <dd> Осуществляет  выход из режима команды vi и записывает

редактируемый файл,  если были сделаны  какие-либо  изменения.

При этом вы возвращаетесь в тот интерпретатор shell,  из которого был запущен редактор vi.

<p><dt><b>

Quit to ex (Возврат в режим 'ex'):</b><dd> Q

<dt>Синтаксис: <dd>Q

<dt>Функция: <dd> Вводит режим редактора ex.  Когда вы сделайте это, то

будете  редактировать тот же файл. Вы можете вернуться в режим

редактора vi, набрав команду vi в редакторе ex.

</dl>

<p align=justify><b>КОМАНДЫ РЕДАКТОРА EX</b><br>

Ввод двоеточия  (:)  при  нахождении  в  режиме команды выдает

подсказку-указание (:) в строке состояния.  Это подсказка  для

ввода команды, доступной в строковом редакторе ex. В основном,

ex-команды позволяют вам записывать в/читать из файлов, переключать на shell или менять редактируемые файлы.

<p align=justify>Большинство этих команд выполняет действия,  которые оказывают

влияние на "текущий" по умолчанию файл.  Текущим обычно считается файл,  который вы выбрали при запуске редактора vi,  хотя

текущий файл может быть изменен командой file(f) или  командой

next(n). По  основным  характеристикам эти команды совпадают с

аналогичными командами редактора ex.  Все подобные команды редактора ex  прекращаются  по нажатию клавиш RETURN или ESC.  В

наших примерах мы будем использовать RETURN.  Ввод команды заканчивается нажатием INTERRUPT.

<p align=justify><b>СТРУКТУРА КОМАНДЫ</b><br>

В качестве  имен большинства ex-команд используются английские

слова, а доступной для  использования  аббревиатурой  являются

начальные буквы  этих  слов.  В описаниях обслуживаются только

аббревиатуры как наиболее часто используемая форма записи  команды. В пользу часто используемых  команд  решается  проблема

неопределенности аббревиатур. Например, для команды substitute

в качестве аббревиатуры можно использовать 's', в то время как

наиболее короткой доступной формой записи команды set является

'se'.

<p align=justify>Большинство команд использует стоящие впереди адреса,  определяющие строки, над которыми необходимо выполнять действие. Ряд

команд также  может содержать следующий за ними счетчик count,

показывающий число строк, которые захватываются при вызове команды. Числа  count  при  необходимости  округляются в сторону

меньшего значения.  Таким образом,  команда '10p'  высвечивает

десятую строку в буфере, а команда 'move 5' перемещает текущую

строку за строку с номером 5.

<p align=justify>Некоторые команды также используют другую информацию или параметры, размещенные  после  имени команды.  В качестве примеров

можно привести  имена  опций  в  команде  set,  например,  set

number, имя  файла в команде edit,  регулярное выражение в команде substitute,  или адрес назначения для команды copy. Например:

<pre>

	1,5 copy 25

</pre>

<p align=justify>Ряд команд  имеет  варианты.  Разная  форма команды вызывается

указанием восклицательного знака (?) сразу за именем  команды.

Некоторые из вариантов,  назначаемых по умолчанию, могут контролироваться с помощью опций;  в этом  случае  восклицательный

знак отменяет назначение, принятое по умолчанию.

<p align=justify>Дополнительно к этому,  большое число команд использует флаги,

включая символы 'p' и 'l'. Эти два символа должны стоять после

пробела или метки табуляции.  В таком случае, команда, обозначенная этими символами, выполняется после того, как выполнится

команда. Т.к.  редактор  ex  высвечивает  обновленную  текущую

строку после каждого обновления, необходимость в использовании

'p' возникает  редко.  С этими флагами может быть задано любое

число знаков '+' и '-'. Если они используются, то перед выполнением команды  печати  к  значению текущей строки добавляется

определенное смещение.

<p align=justify>Большинство команд,  изменяющих содержимое буфера редактирования, обеспечивает обратную связь,  если число изменений превышает предел,  заданный параметром report option.  Эта обратная

связь помогает  обнаружить нежелательные большие изменения таким образом,  что они затем могут быть легко и быстро отменены

командой undo.  После  выполнения команд с глобальным эффектом

вы будете проинформированы,  если суммарный объем изменений  в

нескольких строках,  расположенных в буфере, превысит заданный

предел во время выполнения этой команды.

<p align=justify><b>АДРЕСОВАНИЕ КОМАНДЫ</b><br>

Следующие обозначения определяют синтаксис адресования строк в

ex-командах:

<dl>

<dt><tt>

. (точка)</tt><dd>

Текущая строка. Большинство команд представляет текущую строку

как ппоследнюю строку, которую они обрабатывали. Текущая строка для большинства команд является адресом по умолчанию,  поэтому знак точки редко используется в качестве адреса.

<p><dt><tt>

n</tt><dd>

n-строка в буфере редактирования;  строки пронумерованы последовательно, начиная с 1.

<p><dt><tt>

$</tt><dd>

Последняя строка в буфере.

<p><dt><tt>

%</tt><dd>

Аббревиатура для "1,$"; определяет желаемый буфер.

<p><dt><tt>

+n или -n</tt><dd>

Смещение 'n' относительно текущей строки буфера.  Формы записи

'.+3', '+3', '+++' идеинтичны. Если текущая строка имеет номер

100, то приведенные записи указывают на строку с номером 103.

<p><dt><tt>

/pattern/ или ?pattern?</tt><dd>

Сканирует текст вперед или назад, соответственно, в поиске регулярного выражения,  заданного шаблоном pattern. Сканирование

ведется обычно до конца буфера. Если вы хотите только распечатать следующую строку, содержащую pattern, хвостовые знаки (/)

и (?)  могут быть опущены.  Если параметр pattern пропущен или

пустой, то выделяется строка, соответствующая последнему определенному регулярному  выражению.  Формы RETURN и ??RETURN выполняют сканирование, используя последнее указанное регулярное

выражение. После  замещения  RETURN и ??RETURN будут выполнять

сканирование, используя это замещенное регулярное выражение.

<p><dt><tt>

" или 'x</tt><dd>

Перед каждым независимым перемещением знака точки (.), определяющего текущую строку,  предыдущая строка отмечается  меткой,

роль которого обычно выполняет символ ("). Это облегчает ссылку или возврат на этот предыдущий контекст. Метки устанавливаются командой  'm' редактора vi,  используя одиночную строчную

букву в качестве имени метки. На отмеченную строку позже можно

сослаться с помощью записи 'x, где x - имя метки.

</dl>

<p align=justify>Адреса команд  состоят  из серии адресов,  разделенных знаками

(,) или (;). Такие адресные списки сравниваются слева направо.

Если адрес разделен знаком (;), то знак текущей строки (.) устанавливается в  значение  предыдущего  адресного   выражения,

прежде чем будет интерпретирован следующий адрес.  Если задано

больше адресов,  чем требуется команде,  то,  по крайней мере,

один или два последних адреса игнорируются. ЕСли команда имеет

два адреса,  то первая адресуемая строка должна предшествовать

второй строке в буфере.  В списке адресов допускается спецификация пустого адреса;  в этом случае по умолчанию  принимается

знак текущей  строки (.).  Таким образом,  ",100" эквивалентно

".,100". Если перед командой,  не требующей адреса,  он все же

задан, то это считается ошибкой.

<p align=justify><b>ФОРМАТ КОМАНДЫ</b><br>

Для всех ex-команд используется следующий формат:

<pre>

	[address][command][!][parameters][count][flags]

	[адрес][команда][!][параметры][счетчик][флаги]

</pre>

<p align=justify>Все части необязательны, в зависимости отк оманды и ее опций.

Следующая часть описывает специальные команды.

<p align=justify><b>КОМАНДЫ СПИСКА АРГУМЕНТОВ</b><br>

Команды списка  аргументов  позволяют  вам  работать с набором

файлов посредством запоминания списка имен файлов, которые определяются при активизации редактора vi. Команда args позволяет вам проверить этот список. Команда file дает вам информацию

о текущем файле. Команда n(next) позволяет вам либо редактировать следующий файл из списка аргументов,  либо изменить  список. Команда rewind позволяет вам перезапустить редактирование

файлов в списке. Все эти команды описаны ниже:

<dl>

<dt><tt>args</tt><dd>

Высвечиваются элементы списка аргументов, при этом текущий аргумент заключен в квадратные скобки.  Например,  список  может

выглядеть следующим образом:  file1 file2 [file3] file4 file5.

Текущим является файл file3.

<p><dt><tt>

f</tt><dd>

Высвечивает имя текущего файла,  независимо от того, был ли он

модифицирован с момента последней команды write (или файл доступен только по чтению),  номер текущей строки,  число строк в

буфере и уже отредактированную часть содержимого буфера в процентах. В редких случаях, когда текущий файл помечен как "[Not

edited]" (не редактируется), об этом также сообщается; в таких

случаях вы должны использовать команду 'w!' для записи в файл,

т.к. редактор не уверен,  что команда 'w' не разрушит файл, не

относящийся к текущему содержимому буфера.

<p><dt><tt>

f file</tt><dd>

Текущее имя файла заменяется на имя file, которое подразумевается как "[Not edited]".

<p><dt><tt>

n</tt><dd>

Редактируется следующий файл из списка аргументов, показанного

в командной строке.

<p><dt><tt>

n!</tt><dd>

Этот вариант подавляет предупреждения о модификациях, не записанных в буфер,  отвергая необратимо любые изменения,  которые

могли быть выполнены.

<p><dt><tt>

n[+command] filelist</tt><dd>

Указанный список файлов filelist расширяется, и результирующий

список заменяет текущий список аргументов; затем редактируется

первый файл из нового списка. Если задана команда command (она

не должна содержать пробелов), то она выполняется после редактирования первого такого файла.

<p><dt><tt>

rew</tt><dd>

Порядок аргументов в списке меняется на обратный, и редактируется первый по новому порядку файл.

<p><dt><tt>

rew!</tt><dd>

Порядок аргументов в списке меняется на обратный, и подавляются любые изменения, сделанные в текущем файле.

</dl>

<p align=justify>Если вы используйте интерпретатор shell языка "Си" (C-Shell) и

устанавливаете переменную prompt для вывода подсказки-указания

prompt), требуемой для работы с неинтерактивными интерпретаторами shell,  то при использовании вами выше приведенных команд

prompt рассматривается  как  имя  файла.  Это может привести к

возникновению неожиданных ситуаций. Чтобы избежать их, используйте значение prompt, назначаемое по умолчанию, какое определено в файле /usr/lib/mkuser/mkuser.cshrc.

<p align=justify><b>КОМАНДЫ РЕДАКТИРОВАНИЯ</b><br>

Для редактирования файла, отличного от редактируемого в настоящее время, вы часто будете использовать один из вариантов команды 'e'.

<p align=justify>Отметим, что в последующем изложении имя текущего файла всегда

запоминается редактором vi и помечается знаком (%). Имя предыдущего файла в буфере редактирования отмечено знаком (#).

<dl><dt><tt>

e file</tt><dd>

Используется для начала редактирования нового файла.  Редактор

сначала проверяет,  был ли модифицирован буфер с  момента  использования последней команды 'w'.  Если это было сделано,  то

выдается предупреждение, и команда прерывается. Иначе, команда

удаляет желаемое содержимое буфера редактирования, делает указанный файл текущим и высвечивает новое имя файла.  После проверки, что  этот файл действителен (т.е.  не является двоичным

файлом, каталогом или устройством),  редактор  читает  файл  в

свой буфер.  Если чтение файла выполнено без ошибок,  в строке

состояния появляется число прочитанных строк и символов.  Если

файле встречаются какие-либо символы,  не соответствующие коду

ASCII, то они лишаются своих старших битов, которые определяют

несоответствие коду  ASCII,  а все пустые символы подавляются.

Если никакая из перечисленных ошибок  не  возникает,  то  файл

считается отредактированным.  Если  последняя  строка входного

файла пропускает хвостовой символ новой строки,  то она подавляется и об этом выдается сообщение. Текущей строкой изначально считается первая строка файла.

<p><dt><tt>

e! file</tt><dd>

Такой вызов  подавляет сообщение о модификациях,  которые были

сделаны и не записаны из буфера редактирования,  вызывая,  тем

самым, подавление всех изменений, которые были выполнены перед

редактированием нового файла.

<p><dt><tt>

e +n file</tt><dd>

Заставляет редактор начать редактирование с n-строки. Аргумент

'n' может быть также командой редактора,  не содержащей пробелы, например, +/pattern.

<p><dt><tt>

Ctrl-^</tt><dd>

Это сокращенный эквивалент ":e #RETURN",  который возвращает к

предыдущей позиции в последнем редактируемом файле. Если вы не

хотите записывать файл,  вам нужно  использовать  запись  вида

":e! #RETURN".

</dl>

<p align=justify><b>КОМАНДЫ ЗАПИСИ</b><br>

Команды записи  позволяют  вам переписывать весь ваш буфер редактирования или его часть в  текущий  или  какой-либо  другой

файл. Эти команды перечислены ниже:

<dl><dt><tt>

w file</tt><dd>

Переписывает сделанные изменения обратно в файл file, высвечивая количество переписанных строк и символов.  Обычно параметр

file пропускается, и буфер переписывается в текущий файл. Если

имя file определено  то текст переписывается в этот файл.  Редактор осуществляет запись в файл,  только  если  это  текущий

файл и он редактируется, или если файл не существует. В других

случаях для записи вы должны задать команду 'w'  в  измененной

форме - 'w!'.  Если файл не существует,  то он создается.  Имя

текущего файла меняется,  если только оно отлично от текущего;

текущая строка  никогда не изменяется.Если при записи текущего

или редактируемого файла возникает ошибка,  то редактор выдает

сообщение:<tt> No write since last change</tt> (С момента последнего изменения запись не производилась),

даже если буфер не был предварительно модифицирован.

<p><dt><tt>

w >> file</tt><dd>

Добавляет содержимое буфера к концу существующего файла.  Предыдущее содержимое файла не разрушается.

<p><dt><tt>

w! name</tt><dd>

Подавляет проверку обычной команды write и осуществляет запись

в любой файл, который разрешен со стороны системы.

<p><dt><tt>

w! command</tt><dd>

Записывает определенные  строки  в  команду command.  Обратите

внимание на различие между командой "w!  file", которая подавляет проверку,  и командой "w!  cmd", которая осуществляет запись в команду. Выходная информация этой команды высвечивается

на экране и в буфер редактирования не вставляется.

</dl>

<p align=justify><b>КОМАНДЫ ЧТЕНИЯ</b><br>

Команды чтения позволяют вам читать текст в ваш буфер редактирования с любого места. Текст, который вы читаете, должен состоять, по крайней мере, из одной строки, или быть либо файлом,

либо входной информацией команды.

<dl><dt><tt>

r file</tt><dd>

Помещает копию  текста из заданного файла в буфер редактирования после определенной строки.  Если файл не задан, то используется текущее имя файла.  Текущее имя файла не меняется, пока

его нет;  в этом случае файл принимает текущее имя. Если буфер

файла пустой, то это трактуется как команда 'e'.

<p align=justify>Адрес 0 разрешен для этой команды,  и он вызывает чтение файла

с начала буфера.  Когда команда 'r' заканчивается успешно,  то

выдается статистика подобно той, которая сопровождает выполнение команды 'e'. После команды 'r' текущей считается последняя

прочитанная строка.

<p><dt><tt>

r! command</tt><dd>

Читает входную  информацию команды command в буфер после определенной строки.  Пробел или метка табуляции перед знаком  (!)

обязательны.

</dl>

<p align=justify><b>КОМАНДЫ ОКОНЧАНИЯ РАБОТЫ</b><br>

Существует несколько  путей выхода из редактора vi.  Некоторые

прерывают сеанс редактирования, другие переписывают содержимое

буфера редактирования перед выходом, третьи предупреждают вас,

если вы решили выйти без переписывания буфера  редактирования.

Все эти способы описаны ниже:

<dl><dt><tt>

q</tt><dd>

Осуществляет выход из редактора vi.  Автоматическая запись  из

буфера редактирования в файл не производится.  Однако,  если с

момента последней команды 'w' были сделаны  изменения,  то  vi

выдает предупреждающее сообщение, и выход из редактора не осуществляется. vi также выдает диагностику,  если в списке аргументов остались  имена еще неотредактированных файлов.  Обычно

вы хотите сохранить все ваши изменения;  для этого вам следует

набрать команду 'w'.  Если вы захотите отвергнуть их, то набериите команду 'q!'.

<p><dt><tt>

q!</tt><dd>

Осуществляет выход  из редактора,  отвергая изменения в буфере

без предупреждения.

<p><dt><tt>

wq name</tt><dd>

Подобно последовательному выполнению команды 'w', затем 'q'.

<p><dt><tt>

wq! name</tt><dd>

Подавляет проверку,  обычно выполняемую  перед  командой  'w'.

Например, если вы владеете файлом,  но не имеете разрешения на

запись в него, команда 'wq!' позволит вам изменить содержимое.

<p><dt><tt>

x name</tt><dd>

Если были сделаны какие-либо изменения,  и они не  переписывались, то  переписывает буфер и затем осуществляет выход из редактора.

</dl>

<p align=justify><b>ГЛОБАЛЬНЫЕ КОМАНДЫ И КОМАНДЫ ЗАМЕЩЕНИЯ</b><br>

Глобальные команды и команды замещения позволяют вам выполнять

сложные изменения  в  файле  с помощью одной команды.  Опытный

пользователь vi должен уметь работать с этими командами.

<dl><dt><tt>

g/pattern/cmds</tt><dd>

Команда 'g'  имеет две отдельные фазы.  В первой фазе в буфере

редактирования отмечается каждая строка,  соответствующая шаблону pattern. Затем заданный список команд выполняется с текущей строкой;  знак (.) изначально устанавливается в каждой отмеченной строке.

</dl>

<p align=justify>Список команд состоит из команд,  оставшихся в текущей входной

строке, и может продолжать увеличение строк с помощью завершения, по крайней мере, последней такой строки знаком (\). Такая

многострочная опция  не  будет работать из пределов vi;  чтобы

выполнить эту операцию,  вам необходимо перейти в режим  'ex'.

Если параметр  cmds  (или  хвостовой разделитель(/)) пропущен,

высвечивается каждая строка, соответствующая шаблону pattern.

Сама команда  'q'  не может быть указана в списке команд cmds.

При выполнении глобальной команды опции autoprint и  autoident

подавляются, и значение опции report временно очень большое, в

отличие от обычного ее значения.  В конце,  перед началом глобальной команды  метка контекста (') или (') устанавливается в

значение текущей строки (.) и не меняется во время  выполнения

данной команды.

<p align=justify>Следующие глобальные  команды,  большинство  которых - команды

замещения, охватывают наиболее часто встречающиеся  потребности, свойственные глобальным командам:

<dl><dt><tt>

g/s1/p</tt><dd>

Печатает все строки, содержащие строку s1.

<p><dt><tt>

g/s1/s//s2</tt><dd>

Замещает первое  вхождение s1 во всех строках,  содержащих ее,

на подстроку s2.

<p><dt><tt>

g/s1/s//s2/g</tt><dd>

Заменяет все вхождения s1 на s2. Это распространяется также на

многократное вхождение s1 в одной строке.

<p><dt><tt>

g/s1/s//s2/gp</tt><dd>

Работает аналогично  предыдущей команде,  дополнительно выводя

все измененные строки.

<p><dt><tt>

g/s1/s//s2/gc</tt><dd>

Приглашает вас подтвердить каждое замещение s1 на s2.  Для положительного ответа нажмите 'Y',  для отрицательного  -  любую

другую клавишу.

<p><dt><tt>

g/s0/s/s1/s2/g</tt><dd>

Отмечает все линии,  содержащие строку s0,  и затем только для

них заменяет все вхождения s1 на s2.

<p><dt><tt>

g!/pattern/cmds</tt><dd>

Запускает команды cmds в  каждой  строке,  не  соответствующей

шаблону pattern.

<p><dt><tt>

g/^/s// /g</tt><dd>

Вставляет пробелы в начале каждой строки файла.

<p><dt><tt>

s/pattern/repl/options</tt><dd>

В каждой указанной линии первое вхождение текста, соответствующее регулярному выражению pattern,  заменяется текстом  repl.

Если применяется индикатор опции confirm-'c',  то перед каждым

замещением заменяемая линия печатается на экране  с  вставкой,

отмеченной символом  (^).  По  нажатию 'Y' замена выполняется;

любое другое нажатие замены не вызывает. После команды 's' текущей является последняя замененная строка.

<p><dt><tt>

v/pattern/cmds</tt><dd>

Синоним команды 'q!',  запускающий указанные  команды  cmds  в

каждой строке, не соответствующей шаблону pattern.

</dl>

<p align=justify><B>КОМАНДЫ ПЕРЕМЕЩЕНИЯ ТЕКСТА</B><BR>

   Команды перемещения текста в большой степени могут быть заменены командами,  доступными  в редакторе vi.  Однако,  очень

удобны следующие две команды:

<dl><dt><tt>

co addr flags</tt><dd>

Копия указанных  линий размещается после адреса addr,  которым

может быть 0.  Знак текущей строки (.) адресует  на  последнюю

строку копии.

<p><dt><tt>

[range]m addr</tt><dd>

Команда 'm' перемещает строки, определенные параметром range, в

позицию после строки,  заданной аргументом addr.  Например,  m+

меняет меняет текущую строку со следующей строкой, т.к. по умолчанию range указывает на текущую строку. Первая из перемещенных

строк становится текущей.

</dl>

<p align=justify><b>КОМАНДЫ ПЕРЕКЛЮЧЕНИЯ В SHELL</b><br>

Часто у вас возникает необходимость выйти из редактора  и  выполнить обычные команды системы XENIX.  Также у вас может возникнуть необходимость изменить вас рабочий каталог, чтобы ваше

редактирование не влияло на целостность другого рабочего каталога. Ниже описаны необходимые для этого операции:

<dl><dt><tt>

cd directory</tt><dd>

Указанный каталог  directory  становится вашим текущим каталогом. Если каталог не определен,  то в качестве имени  целевого

каталога используется  текущее значение опции home.  После выполнения команды 'cd' текущий файл не рассматривается как  уже

отредактированный, поэтому  запись в файлы,  существовавшие до

этого, по прежнему допустима.

<p><dt><tt>

sh</tt><dd>

Создается новый  shell.  В этом shell вы можете вызывать любое

количество команд. Для возврата в vi нажмите Ctrl-D.

<p><dt><tt>

!command</tt><dd>

Остаток линии  после знака (!) посылается в shell для выполнения. Внутри текста команды command символы '%' и '#'  расширяются как имена текущего файла и последнего редактируемого файла, а символ '!' заменяется на текст предыдущей команды. Таким

образом, в частности,  '!!' повторяет последнее такое переключение в shell.  Если выполняется любое  такое  расширение,  то

расширенная строка повторяется  на экране.  Текущая строка этой

команды не изменяется.

</dl>

<p align=justify>Если с момента последнего изменения  в  буфере  редактирования

перезапись отсутствовала (т.е.  "[No write]"), то перед выполнением команды в качестве предупреждения выдается диагностика.

Когда команда выполнится, высвечивается знак (!).

<p align=justify>Если вы используйте интерпретатор shell языка "Си" (C-Shell) и

устанавливаете переменную prompt для вывода подсказки-указания

prompt), требуемой для работы с неинтерактивными интерпретаторами shell,  то при использовании вами выше приведенных команд

prompt рассматривается  как  имя  файла.  Это может привести к

возникновению неожиданных ситуаций. Чтобы избежать их, используйте значение prompt, назначаемое по умолчанию, какое определено в файле /usr/lib/mkuser/mkuser.cshrc.

<p align=justify><b>ДРУГИЕ КОМАНДЫ</b><br>

Следующие описания команд объясняют, как использовать разнообразные ex-команды,  которые  не входят ни в одну из выше перечисленных категорий:

<dl><dt><tt>

abbr</tt><dd>

Преобразовывает первый  аргумент  в  следующую  за ним строку.

Например, команда ":abbr rainbow yellow green blue red" преобразовывает "rainbow" в "yellow green blue red". Преобразования

можно отключить с помощью команды unabbreviate: :una rainbow.

<p><dt><tt>

map, map!</tt><dd>

Преобразовывает любой  символ  или escape-последовательность в

существующую последовательность команд. Символы, преобразованные командой  map,  работают  и  в режиме команды,  и в режиме

вставки, в то  время  как  символы,  преобразованные  командой

map!, работают только в режиме команды. Символы, преобразованные командой map!, не могут быть возвращены в исходное состояние командой unmap.

<p><dt><tt>

nu</tt><dd>

Высвечивает каждую указанную строку со стоящим впереди  номером

строки в буфере. Текущей строкой считается последняя высвеченная

строка. Для задания автоматической нумерации линии в буфере установите опцию number.

<p><dt><tt>

preserve</tt><dd>

Текущий буфер редактирования сохраняется как в случае  внезапного выхода  системы  из строя.  ЭТА КОМАНДА ПРЕДНАЗНАЧЕНА ДЛЯ

ИСПОЛЬЗОВАНИЯ В СЛУЧАЕ ОПАСНОСТИ, когда выполнение команды 'w'

привело к ошибочной ситуации,  и вы не знаете,  как вам сохранить все сделанное ранее.

<p><dt><tt>

=</tt><dd>

Высвечивает линейный номер адресуемой линии.

<p><dt><tt>

recover file</tt><dd>

Восстанавливает файл из системной области сохранения.  Система

сохраняет копию буфера редактирования,  если только вы сделали

изменения в файле, и работа системы была нарушена, или если вы

выполняете команду  preserve.  Когда  вы  используете  команду

preserve, вас оповестят по электронной почте о том,  что  файл

был сохранен.

<p><dt><tt>

set argument</tt><dd>

Без аргументов argument команда set высвечивает те опции,  чье

значение изменилось с установленного по умолчанию;  с аргументом all эта команда высвечивает все значения опций.

Задание за именем опции знака (?) вызывает показ текущего значения этой опции. Нет необходимости использовать знак (?), если опция не является булевским значением.  Для задания  значений, являющихся опциями переключения, используйте запись вида:

set option, а для для их выключения: set nooption. Строковые и

числовые опции задаются следующим образом: set option=value.

Для команды  set может быть задано более одной опции;  все они

обрабатываются слева направо. Значения option могут устанавливаться автоматически  с  помощью переменной среды EXINIT.  Для

более детальной информации смотрите команду <a href="ENVIRON.5.shtml">environ(5)</a>.

<p><dt><tt>

tag label</tt><dd>

Основная цель  редактирования направлена на определение местоположения признака label.  При необходимости для поиска  label

редактор  vi  переключится  на другой файл в текущем каталоге.

Если перед заданием  команды  tag  вы  модифицировали  текущий

файл,  то сначала вы должны переписать его. Если следующую команду tag вы задаете без аргументов,  то используется предыдущее значение label.

<p align=justify>Подобно этому,  если вы нажимаете Ctrl-],  то vi  осуществляет

поиск слова, непосредственно следующего за курсором. Это эквивалентно выполнению  следующих  действий:  набирается  команда

':tag', затем искомое слово, нажимается клавиша ENTER.

Файл признаков (тегов - tegs) обычно создается такими программами как ctags, и состоит из набора линий с тремя полями, разделенными пробелами или метками табуляции.  Первое поле задает

имя тега,  второе  поле  -  имя файла,  где расположен тег,  и

третье - определяет режим адресования, который будет использоваться редактором для поиска данного тега. Это поле обычно является контекстуальной   разверткой,    использующей    шаблон

/pattern/, чтобы быть невосприимчивым к минимальным изменениям

в файле.  Такие развертки всегда выполняются, как если бы была

установлена опция  nomagic.  Имена  тегов в файле тегов должны

быть отсортированы в алфавитном порядке. Существует ряд опций,

которые могут  использоваться  для установки рабочей среды vi.

Они могут быть установлены ex-командой set или при  редактировании, или непосредственно сразу за вызовом vi в файле его установки .exrc .

<p><dt><tt>

unmap</tt><dd>

Возвращает любые символы или escape-последовательности, преобразованные командой map, в исходное состояние.

</dl>

<p align=justify>Первое, что должно быть сделано перед тем,  как вы сможете использовать возможности  редактора vi - это необходимо установвить тип терминала, чтобы vi мог понять, как общаться с терминалом, который вы используйте.

<p align=justify>Каждый раз,  при  своем  вызове  редактор vi читает команду из

файла с именем .exrc,  который находится в  вашем  собственном

каталоге. Этот   файл  обычно  устанавливает  предопределенные

пользователем опции таким образом, что нет необходимости устанавливать их вручную каждый раз при вызове vi. Каждая из опций

детально описана ниже.

<p align=justify><b>ОПЦИИ</b><br>

Существует только два вида опций: опции переключения и строковые опции.  Опции переключения - 'on' (включить) и 'off' (выключить). Переключение отменяется использованием слова 'no' перед именем  опции в команде set.  Строковые опции - это строки

символов, являющиеся назначаемыми значениями в форме option  =

value (опция  = значение).  В линии может быть определено несколько опций. Опции редактора vi описаны ниже:

<dl>

<dt>autoindent, ai        <br><i> по умолчанию:</i> noai

<dd>Может быть   использована  для  облегчения  подготовки  текста

структурированной программы.  Для каждой линии, созданной операцией присоединения, изменения, вставки, открытия или замещения, vi просматривает предыдущую  линию,  чтобы  определить  и

вставить соответствующее  количество  отступов.  Для  возврата

курсора на предыдущую метку табуляции  нажмите  Ctrl-D.  Метки

табуляции, следующие  в  обратном направлении,  определены как

многократная опция shiftwigth.  Вы не можете переместиться назад на абзац, кроме как по нажатию Ctrl-D.

<p align=justify>Специально обрабатываемой в этом  режиме  является  линия  без

символов, добавленных  к  ней,  которая  превращается в линию,

полностью заполненную пробелами (пропуски,  обеспечиваемые для

autoindent,  отвергаются).  Также,  специально обрабатываемыми

для данного режима являются строки, начинающиеся с символа  (^)

непосредственно  сопровождаемые  символом Ctrl-D. Это вызывает

перенаправление ввода на начало линии, но сохраняет предыдущий

отступ для следующей линии. Подобным образом, 'O' с  последующим  немедленным  символом  Ctrl-D переустанавливает курсор на

начало без сохранения предыдущего отступа. В глобальных командах опция autoindent не встречается.

<p><dt>

autoprint, ap         <br><i> по умолчанию:</i> ap

<dd>Вызывает высвечивание  текущей  линии  после каждой ex-команды

copy, move или substitute.  Это вызывает тот же самый  эффект,

что и  использование символа 'p' в конце каждой такой команды.

Autoprint подавляется  в  глобальных  командах, и  применяется

только к последней команде в строке.

<p><dt>

autowrite, aw         <br><i> по умолчанию:</i> noaw

<dd>Вызывает автоматическое переписывание содержимого буфера в текущий файл,  если  вы его модифицировали,  когда даете одну из

команд next,  rewind,  tag,  !, Ctrl-^ (переключить файлы) или

Ctrl-] (перевести тег).

<p><dt>

beautify, bf          <br><i> по умолчанию:</i> nobeautify

<dd>Вызывает при вводе подавление всех управляющих символов, кроме

меток табуляции, символов новой строки и прогона страницы. При

первом подавлении пробела регистрируется предупреждение. Опция

beautify не применяется для ввода команды.

<p><dt>

directory, dir        <br><i> по умолчанию:</i> dir=/tmp

<dd>Определяет каталог,  в котором vi размещает файл буфера редактирования. Если каталог не имеет разрешения на запись,  то редактор будет немедленно остановлен в случае неудачи при записи

в файл буфера.

<p><dt>

edcompatible          <br><i> по умолчанию:</i> noedcompatible

<dd>Вызывает запоминание факта наличия  или  отсутствия  суффиксов

'g' и 'c' в командах замещения, а также включение их с помощью

повтора суффиксов.  Суффикс 'r' вызывает замещение подобно команде (~), в отличие от команды (&).

<p><dt>

errorbells, eb         <br><i> по умолчанию:</i> noeb

<dd>Перед сообщением об ошибке  выдается  звонок.  Если  возможно,

вместо звонка  редактор  всегда  выводит сообщение об ошибке в

инверсном видеорежиме.

<p><dt>

hardtabs, ht          <br><i> по умолчанию:</i> ht=8

<dd>Задает границы,  в которых установлены метки табуляции для аппаратуры терминала или в которых система расширяет метки табуляции.

<p><dt>

ignorecase, ic        <br><i> по умолчанию:</i> noic

<dd>Преобразовывает все прописные символы в тексте  в  строчные  в

соответствующем регулярном выражении.  ПРи этом,  в регулярном

выражении производится  замена  всех  прописных  символов   на

строчные, за исключением символов,  стоящих в квадратных скобках.

<p><dt>

lisp                  <br><i> по умолчанию:</i> nolisp

<dd>autoindent делает отступ, соответствующий коду LISP, а команды

( ), { }, [[ и ]] модифицируются, чтобы иметь смысл для LISP.

<p><dt>

list                  <br><i> по умолчанию:</i> nolist

<dd>Высвечивает все напечатанные строки вместе с метками табуляции

и символами конца строки.

<p><dt>

magic                 <br><i> по умолчанию:</i> magic

<dd>Если установлено значение nomagic,  то количество метасимволов

в регулярном выражении значительно снижается,  только  символы

(^) и ($) имеют специальное значение. В дополнение к этому метасимволы (~) и (&) в замещаемых шаблонах трактуются как обычные символы. Все нормальные метасимволы могут быть сделаны типа magic, когда перед значением nomagic стоит знак (\).

<p><dt>

mesg                  <br><i> по умолчанию:</i> nomesg

<dd>Значение nomesg вызывает подавление разрешения записи в терминале, пока вы находитесь в визуальном режиме. Это предохраняет

вас от пользователей,  выполняющих команду write (запись) системы XENIX на ваш экран в то время, когда вы выполняете редактирование.

<p><dt>

number, n             <br><i> по умолчанию:</i> nonumber

<dd>Вызывает печать всех выходных линий вместе с их номерами.

<p><dt>

open                  <br><i> по умолчанию:</i> open

<dd>Если выполнена установка noopen,  то из 'ex' запрещены команды

open и visual.  Такая установка сделана в целях избежать недоразумений, происходящих в результате случайного входа в открытый или визуальный режим.

<p><dt>

optimize, opt         <br><i> по умолчанию:</i> optimize

<dd>Вывод текста  на экран сопровождается установкой терминала таким образом,  что не выполняется автоматически возврат каретки

при высвечивании более чем одной выводимой линии, что позволяет значительно увеличить скорость вывода на терминал без адресуемых курсоров,  когда  печатается  текст  со стоящим впереди

пустым пространством.

<p><dt>

paragraphs, para     <br><i> по умолчанию:</i> para=IPLPPPQPPTPbp

<dd>Определяет ограничители  параграфа  для операций { и }.  Парой

символов в значении  опции  являются  имена  макросов  команды

nroff, которые начинают параграф.

<p><dt>

prompt                <br><i> по умолчанию:</i> prompt

<dd>Ввод в режим 'ex' сопровождается указанием-подсказкой (:). Если вход в режим команды 'ex' выполняется по команде 'Q', и при

этом установлено значение noprompt,  то символ  (:)  в  строке

состояния отсутствует.

<p><dt>

redraw                <br><i> по умолчанию:</i> noredraw

<dd>Редактор работает "как-бы" (за счет большого объема  выводимой

информации) на "интеллектуальном" терминале, хотя используется

простой терминал. Данный режим очень удобен только при большой

скорости работы.

<p><dt>

remap                 <br><i> по умолчанию:</i> remap

<dd>Если установлено значение  'on',  то  преобразованные  символы

повторно обрабатываются,  пока не изменились.  Например,  если

'o' преобразовано в 'O',  а 'O' в 'I',  то,  если  установлено

remap, то 'o' преобразуется в 'I', а при установке noremap - в

'O'.

<p><dt>

report                <br><i> по умолчанию:</i> report = 5

<dd>Определяет порог обратной связи из команды. Любая команда, которая модифицирует большое число линий, чем было определено, в

качестве обратной  связи  передаст  число этих изменений.  Для

глобальных команд и команд уничтожения (undo) суммарное  изменение в ряде линий, размещенных в буфере, представлено в конце

команды. Такое оповещение подавляется при команде 'g' в  индивидуальных выполняемых командах.

<p><dt>

scroll                <br><i> по умолчанию:</i> scroll = 1/2 окна

<dd>Определяет число логических линий,  "прокрученных" к  моменту,

когда в  режиме  команды  на входе терминала был принят сигнал

Ctrl-D, а также число линий,  высвечиваемых командой 'z' в режиме команды (удвоенное значение scroll).

<p><dt>

section              <br><i> по умолчанию:</i> section = SHNHH HU

<dd>Определяет макрос раздела для операций [[ и ]].  Пара символов

в значении опции является именами макросов команды nroff,  которые начинают параграф.

<p><dt>

shell, sh             <br><i> по умолчанию:</i> shell = /bin/sh

<dd>Задает путь  к интерпретатору shell,  разветвляющемуся для команды переключения в shell - (!),  а также командой shell.  По

умолчанию берется значение из переменной среды SHELL, если она

присутствует.

<p><dt>

shiftwigth, sw        <br><i> по умолчанию:</i> sw = 8

<dd>Задает ширину программной расстановки меток табуляции, используемой при инверсной табуляции с  помощью  Ctrl-D,  когда  для

присоединения текста  используется  autoindent,  или командами

сдвига.

<p><dt>

showmatch, sm         <br><i> по умолчанию:</i> nosm

<dd>Когда нажаты клавиши ) или }, перемещает курсор на одну секунду на соответствующий символ ( или {,  если этот  символ  присутсвует на экране.

<p><dt>

showmode              <br><i> по умолчанию:</i> noshowmode

<dd>Вызывает появление сообщения "INPUT MODE" (РЕЖИМ ВВОДА) в нижнем правом углу экрана, если включен режим вставки.

<p><dt>

slowopen              <br><i> по умолчанию:</i> noslowopen

<dd>При команде вставки вводит задержку при модификации экрана.

<p><dt>

tabstop, ts           <br><i> по умолчанию:</i> ts = 8

<dd>Редактор расширяет  метки табуляции во входном файле по n-границе в целях, необходимых для дисплея.

<p><dt>

taglength, tl         <br><i> по умолчанию:</i> tl = 0

<dd>Первые n-символов в имени тега имеют значение,  остальные символы игнорируются.  Нулевое значение (по умолчанию)  указывает

на необходимость обработки всех символов.

<p><dt>

tags           <br><i> по умолчанию:</i> tags = tags/usr/lib/tags

<dd>Путь к файлам,  используемым как файлы тегов для команды  tag.

Требуемый тег  ищется во всех определенных файлах,  последовательно. По умолчанию, поиск файлов с именем tag осуществляется

в текущем каталоге и в каталоге /usr/lib.

<p><dt>

term           <br><i> по умолчанию:</i> значение переменной TERM

<dd>Тип терминала выходного устройства.

<p><dt>

terse                 <br><i> по умолчанию:</i> noterse

<dd>Для опытного  пользователя  выдает  сокращенную  информацию об

ошибках.

<p><dt>

timeout, to           <br><i> по умолчанию:</i> noto

<dd>Отменяет 1-секундный предел времени для команд map (преобразования символов).

<p><dt>

warn                  <br><i> по умолчанию:</i> warn

<dd>Предупреждает, если  было  сообщение  "[No  write  since  last

change]" перед командой переключения в shell - (!).

<p><dt>

window <br><i> по умолчанию:</i> window = зависимость от скорости

<dd>Определяет число  линий  в текстовом окне.  По умолчанию 8 для

малых скоростей (600 бод и менее),  16 - для средней  скорости

(1200 бод),  и  полный  экран  (минус одна строка) для высоких

скоростей.

<p><dt>

w300, w1200, w9600

<dd>Это не является действительной опцией,  но устанавливает параметр window (смотрите выше), если скорость низкая (300), средняя (1200) или высокая (9600).

<p><dt>

wrapscan,ws           <br><i> по умолчанию:</i> ws

<dd>Поиски, использующие в качестве адреса  регулярное  выражение,

будут продолжаться до конца файла.

<p><dt>

wrapmargin, wm        <br><i> по умолчанию:</i> wm = 0

<dd>Определяет предел рабочего поля для автоматической вставки новых линий при вводе текста.  Нулевое значение определяет нулевой предел.

<p><dt>

writeany, wa          <br><i> по умолчанию:</i> nowa

<dd>Отвергает проверки,  обычно  выполняемые перед командой write,

позволяя осуществлять запись в любой файл, разрешенный системным механизмом записи.

</dl>

<p align=justify><b>РЕГУЛЯРНЫЕ ВЫРАЖЕНИЯ</b><br>

Регулярное выражение определяет набор строк, состоящих из символов. Член  этого набора строк называется "заменяемым" на регулярное выражение.  vi запоминает два  предыдущих  выражения:

предыдущее регулярное выражение,  используемое в команде замещения, и предыдущее регулярное выражение, используемое где-нибудь еще,  на  которое  ссылаются как на предыдущее регулярное

выражение для сканирования. На предыдущее регулярное выражение

ссылка может осуществляться через пустое регулярное выражение:

например, "//" или "??".

<p align=justify>Регулярное выражение, допускаемое для обработки редактором vi,

составляется одним  из двух путей,  в зависимости от установки

опции magic. Используемая командами vi и ex по умолчанию установка magic дает доступ к мощному набору метасимволов, используемых в регулярном выражении.  Недостатком magic является то,

что пользователь должен помнить все символы magic и перед ними

ставить знак (\), чтобы использовать их как "обычные" символы.

С опцией  nomagic регулярные выражения значительно упрощаются,

т.к. в них используется только два метасимвола. Обеспечивается

возможность применения других метасимволов через использование

знака (\) перед имеющимися в данный момент обычными символами.

Необходимо отметить,  что  знак (\) всегда является метасимволом. В данном описании подразумевается опция magic.  С  опцией

nomagic специальными  символами являются только знак (^) в начале регулярного выражения, знак ($) в конце регулярного выражения и знак (\). Знаки (~) и (&) теряют свое специальное значение, относящееся к заменяемому шаблону замещения.

<p align=justify>Для составления регулярных выражений в режиме magic  используются следующие основные конструкции:

<table>

<tr valign=top><th>char<td>

Обычный символ соответствует самому себе.  Обычными могут быть

любые символы,  кроме  знака  (^) в начале линии,  знака ($) в

конце линии, знака (*) как любого символа, отличного от первого, и любого из следующих символов: ".", "\", "[", "~".

Если эти символы должны трактоваться как обычные,  перед  ними

должен стоять символ (\).

<tr valign=top><th>^<td>

Cтоящий в начале шаблона,  указывает на то, чтобы соответствие

достигло цели только в начале строки.

<tr valign=top><th>$<td>

Cтоящий в конце шаблона,  указывает на то,  чтобы соответствие

достигло цели только в конце строки.

Преобразовывает любой одиночный символ,  кроме  символа  новой

строки.

<tr valign=top><th>\&lt;<td>

Вызывает преобразование только в начале слова "word", т.е. либо в  начале линии или перед буквой,  цифрой или символом подчеркивания, или после символа,  не являющегося ни одним из перечисленных.

<tr valign=top><th>\><td>

Действие, схожее  с  "\&lt;",  только  преобразует  конец   слова

"word", т.е. либо в конце линии, либо перед символом, не являющимся буквой, цифрой или символом подчеркивания.

<tr valign=top><th>[string]<td>

Преобразует любой одиночный символ в класс, определяемый строкой string.  Большинство символов в string определяют сами себя. Пара символов, разделенных знаком (-) в string, определяет

набор символов между указанными строчными и прописными ограничениями, т.е.  "[a-z]"  трактуется,  что  регулярное выражение

преобразовывает любую строчную букву.  Если первым символом  в

строке string является (^), то конструкция преобразует те символы, которые иначе не преобразовывались. Т.е. "[^a-z]" преобразует все, кроме строчной буквы и символа новой строки. Чтобы

разместить в строке string любой из символов  "^",  "[",  "-",

они должны иметь перед собой знак (\).

</table>

<p align=justify>Объединение двух  регулярных выражений сначала преобразовывает

левое регулярное выражение и затем самую длинную строку, которая может быть опознана как регулярное выражение. Первая часть

этого нового выражения преобразует первое  регулярное  выражение, а вторая часть - второе регулярное выражение.

<p align=justify>Любой из одиночных символов,  соответствующий регулярным выражениям, упомянутым выше,  может иметь за собой знак  (  )  для

формирования регулярного выражения,  которое соответствует определенному (от нуля и более)  числу  установленных  вхождений

символов, замененных  предварительно  установленным регулярным

выражением. Знак (~) может использоваться в регулярном выражении для  преобразования  текста,  который определил заменяемую

часть последней команды 's'. Регулярное выражение может стоять

между последовательностями "\(" и "\)", чтобы запомнить текст,

замененный этим выражением. Этот текст может быть позже вставлен в  замещаемый текст при помощи следующего указания /digit,

где digit перечисляет набор запомненных регулярных выражений.

Базовыми метасимволами для шаблона замены являются (&) и  (~);

когда установлен nomagic, они задаются как "\&" и "\~". Каждый

экземпляр (&) заменяется символами,  соответствующими регулярному выражению.  В шаблоне замены знак (~) устанавливается для

текста предыдущего шаблона замены.

<p align=justify>Другие метапоследовательности,  возможные  в  шаблоне  замены,

вводятся символом   (\).  Последовательность  "\n"  заменяется

текстом, соответствующим n-му регулярному подвыражению,  выделенному знаками  "\("  и "\)".  При вложенности,  присутствуют

подвыражения, ограниченные круглыми скобками,  а значение  "n"

определяется числом вхождений "\(",  начиная слева. Последовательности "\u" и "\l" вызывают преобразование следуемых  сразу

за ними символов в прописные или строчные,  если эти символы буквы. Последовательности "\U" и "\L",  каждая, включают режим

такого преобразования,  пока  не встретится последовательность

"\E" или "\e", или пока не будет достигнут конец шаблона замены.

<p align=justify><b>РАЗРЕШЕНИЕ</b><br>

Эта утилита была разработана в Калифорнийском университете, г.

Беркли, и разрешена к использованию.

<p align=justify><b>ЗАМЕЧАНИЯ</b><br>

Программа /usr/lib/ex3.7preserve может быть  использована  для

восстановления файлов в буфере vi, которые были потеряны в результате аварии системы.  Программа осуществляет поиск  файлов

буфера vi   в   каталоге   /tmp   и   помещает  их  в  каталог

/usr/preserve. Владелец может найти эти файлы с помощью  опции

'-r'.

<p align=justify>Программа /usr/lib/ex3.7preserve должна быть размещена в файле

запуска системы /etc/rc, перед командой, которая очищает каталог /tmp.  Для  дополнительной информации о файле /etc/rc посмотрите "Руководство системного администратора системы  XENIX"

(XENIX Sytem Administrator's Guide).

</div>


<center><div style="width:500px; border:1px solid black; text-align: left;">  
  <div id="gfi_slide2" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/languard/?utm_source=citforum&utm_medium=banner&utm_campaign=languard" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/LANSS-1413629426-7a56c.png" width="183" height="30" alt="GFI LanGuard"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Поиск и автоматическое устранение уязвимостей в сети</td></tr>
    <tr><td colspan=2 align=center>Инвентаризация и управление программным обеспечением</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide1" style="display: block;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/mailessentials/?utm_source=citforum&utm_medium=banner&utm_campaign=mailessentials" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/ME-1413629452-7a56c.png" width="235" height="30" alt="GFI MailEssentials"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Защита от спама и вирусов для почтового сервера №1</td></tr>
    <tr><td colspan=2 align=center>Качество фильтрации выше 99%, без ложных срабатываний</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide4" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/archiver/?utm_source=citforum&utm_medium=banner&utm_campaign=archiver" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/AR-1422970393-7a56c.png" width="164" height="30" alt="GFI Archiver"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Резервное копирование электронных писем и документов</td></tr>
    <tr><td colspan=2 align=center>Быстрый поиск по архиву, анализ контента, отчетность</td></tr>
    </table>
	  </a>
  </div>
  <div id="gfi_slide3" style="display: none;  padding:5px; font-family: 'Open Sans', sans-serif !important; font-size:16px !important; color:black !important;">
	  <a href="http://gfi-software.ru/webmonitor/?utm_source=citforum&utm_medium=banner&utm_campaign=webmonitor" target="_blank" style="text-decoration:none; display:block; color:black !important;">
    <table cellpadding=0 cellspacing=0 width=490><tr><td><img src="http://static.gfi.me.uk/images/thumbs/WM-1413629470-7a56c.png" width="214" height="30" alt="GFI WebMonitor"></td>
    <td align=right><nobr><b>Код <b style="color:#f90000">CITFORUM</b> для скидки</b></nobr></td>
    </tr>
    <tr><td colspan=2 align=center>Контроль и безопасность доступа сотрудников в веб</td></tr>
    <tr><td colspan=2 align=center>Более 460.000.000 веб-сайтов в базе по категориям</td></tr>
    </table>
	  </a>
  </div>
  <div style="background:#F0F0F0; padding:2px; font-family: 'Open Sans', sans-serif !important; font-size:12px !important; color:black !important; text-align:center;">
    <b>30 дней бесплатно.</b> Техническая поддержка на русском.
  </div>
  <script>
    (function addEvent(element, event, fn) {
      if (element.addEventListener){
        element.addEventListener(event, fn, false);
      }else if (element.attachEvent){
        element.attachEvent('on' + event, fn);
      }
    })(window, 'load', function(){
      window.gfi_slides=4;
      window.gfi_slider=1;
      setInterval(function(){
        for(var i=1; i<=window.gfi_slides; i++){
          document.getElementById("gfi_slide"+i).style.display="none";
        }
        window.gfi_slider++;
        if (window.gfi_slider>window.gfi_slides){
          window.gfi_slider=1
        }
        document.getElementById("gfi_slide"+window.gfi_slider).style.display="block";
      }, 6000)
    });
  </script>
</div>
</center>

<center>


</center>

</td>


<td>

<table cellspacing=0 cellpadding=0 border=0 width="100%" align=right><tr>
<td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0></td>
<td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=2 height=1 border=0></td>
<td>

<table cellpadding=0 cellspacing=0 border=0>

<tr><td align="center"><!--  AdRiver code START. Type:240x400 Site: citforum PZ: 0 BN: 1 -->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write(
'<iframe src="http://ad.adriver.ru/cgi-bin/erle.cgi?'
+ 'sid=137295&bn=1&target=blank&bt=22&pz=0&rnd=' + RndNum4NoCash + '&tail256=' + ar_Tail
+ '" frameborder=0 vspace=0 hspace=0 width=240 height=400 marginwidth=0'
+ ' marginheight=0 scrolling=no></iframe>');
//--></script>
<noscript>
<a href="http://ad.adriver.ru/cgi-bin/click.cgi?sid=137295&bn=1&bt=22&pz=0&rnd=1132854728" target=_blank>
<img src="http://ad.adriver.ru/cgi-bin/rle.cgi?sid=137295&bn=1&bt=22&pz=0&rnd=1132854728" alt="-AdRiver-" border=0 width=240 height=400></a>
</noscript>

<!--  AdRiver code END  --></td></tr>



<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#ffffff>
<font size=2>
<p><b>Новости мира IT:</b>
<ul class=column>
<!--<b><a target=_blank href=http://citcity.ru/20070/>4&#x2013;5 декабря пройдёт &#xab;Платформа 2009&#xbb;</a></b>
<hr>-->

<li>06.02 - <a href=http://citforum.ru/news/33352/>В Почте и на портале Mail.Ru заработала двухфакторная аутентификация</a><li>06.02 - <a href=http://citforum.ru/news/33351/>Apple задумалась над созданием поисковой системы</a><li>06.02 - <a href=http://citforum.ru/news/33350/>IBM открыла первый центр предоставления услуг в России</a><li>06.02 - <a href=http://citforum.ru/news/33349/>Платформа Windows RT официально закрыта</a><li>06.02 - <a href=http://citforum.ru/news/33348/>Toshiba выпустила флеш-брелоки с шифрованием и клавиатурой для ввода пароля</a><li>06.02 - <a href=http://citforum.ru/news/33347/>Motorola бьёт рекорды продаж смартфонов после перехода в Lenovo</a><li>06.02 - <a href=http://citforum.ru/news/33346/>Buhel SoundGlasses: беспроводная гарнитура в солнцезащитных очках</a><li>06.02 - <a href=http://citforum.ru/news/33345/>Microsoft приобретет разработчика календарей для iOS и Android</a><li>05.02 - <a href=http://citforum.ru/news/33344/>Проведены первые операции через национальную систему платёжных карт</a><li>05.02 - <a href=http://citforum.ru/news/33343/>Рейтинг Rookies Award определил лучшие открытые проекты, созданные в 2014 году</a><li>05.02 - <a href=http://citforum.ru/news/33342/>OneBoard PRO+: механическая клавиатура со встроенным Android-компьютером</a><li>05.02 - <a href=http://citforum.ru/news/33341/>Проект FreeBSD переходит на новую модель поддержки релизов</a><li>05.02 - <a href=http://citforum.ru/news/33340/>IBM расширила штат инженеров, работающих над техпроцессами тоньше 7 нм</a><li>05.02 - <a href=http://citforum.ru/news/33339/>ARM представила 64-битное ядро Cortex-A72</a><li>05.02 - <a href=http://citforum.ru/news/33338/>Yota Devices заключила мировое соглашение в споре с PocketBook</a><li>05.02 - <a href=http://citforum.ru/news/33337/>На долю LTE-моделей впервые пришлось больше половины продаж смартфонов в России</a><li>04.02 - <a href=http://citforum.ru/news/33336/>Почта Mail.Ru предлагает пользователям убраться в ящике</a><li>04.02 - <a href=http://citforum.ru/news/33335/>Российский образовательный онлайн-проект привлек 2,1 миллиона долларов</a><li>04.02 - <a href=http://citforum.ru/news/33334/>&#xab;Яндекс&#xbb; внедрил двухфакторную аутентификацию</a><li>04.02 - <a href=http://citforum.ru/news/33333/>Sony продала подразделение видеоигр</a>

</ul>
<p><a target=_blank href=http://citforum.ru/news/><b>Архив новостей</b></a>
</font>
<p align=right><a href=http://citforum.ru/news/rss/news.xml><img src="../../pictures/xml_rss.gif" border=0 width=36 height=14></a>
</td></tr>


<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td style="padding-left: 5px; min-width: 240px"><p><b>Последние комментарии:</b>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33329/#comments>Минкомсвязь предлагает перенести домены в компании-регистраторы в РФ</a>&nbsp;(12)<br>
		<div class=comments_menu_date>Суббота 07.02, 21:22		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33352/#comments>В Почте и на портале Mail.Ru заработала двухфакторная аутентификация</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:08		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33349/#comments>Платформа Windows RT официально закрыта</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:04		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33307/#comments>В метро Петербурга запустили систему бесконтактных платежей PayPass</a>&nbsp;(13)<br>
		<div class=comments_menu_date>Суббота 07.02, 09:01		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33313/#comments>Ideum Duet: кофейный столик с двумя встроенными компьютерами и двумя ОС</a>&nbsp;(7)<br>
		<div class=comments_menu_date>Пятница 06.02, 21:32		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33346/#comments>Buhel SoundGlasses: беспроводная гарнитура в солнцезащитных очках</a>&nbsp;(2)<br>
		<div class=comments_menu_date>Пятница 06.02, 21:25		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33347/#comments>Motorola бьёт рекорды продаж смартфонов после перехода в Lenovo</a>&nbsp;(1)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:36		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33306/#comments>Прибыль Microsoft упала на 11 %</a>&nbsp;(4)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:20		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/32977/#comments>Новый &#xab;антипиратский&#xbb; закон вступит в силу 1 мая 2015 года</a>&nbsp;(35)<br>
		<div class=comments_menu_date>Пятница 06.02, 09:16		</div>
	</div>	<div class=comments_menu>
		<a href=http://citforum.ru/news/33328/#comments>МТС создаст отечественный аналог Skype</a>&nbsp;(5)<br>
		<div class=comments_menu_date>Пятница 06.02, 00:18		</div>
	</div></td></tr>

<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td><div id="cse" style="width: 100%;">Loading</div>
<script src="http://www.google.com/jsapi" type="text/javascript"></script>
<script type="text/javascript"> 
  google.load('search', '1', {language : 'ru'});
  google.setOnLoadCallback(function() {
    var customSearchControl = new google.search.CustomSearchControl('018117224161927867877:xbac02ystjy');
    customSearchControl.setResultSetSize(google.search.Search.FILTERED_CSE_RESULTSET);
    customSearchControl.draw('cse');
  }, true);
</script>
<link rel="stylesheet" href="http://www.google.com/cse/style/look/default.css" type="text/css" />
</td></tr>

<tr><td align="center"><!-- Soloway 240x400 code START-->
<script language="javascript" type="text/javascript"><!--
if(typeof(ar_cn)=="undefined") var ar_cn=1;
var ar_Tail=document.referrer ? escape(document.referrer) : 'unknown';
var ar_link="http://ad.adriver.ru/cgi-bin/erle.cgi?sid=126751&bt=49&target=blank&tail256=" + ar_Tail;
document.write('<div style="visibility:hidden;height:0px;"><iframe id="ar_container_'+ar_cn+'" width=1 height=1 marginwidth=0 marginheight=0 scrolling=no frameborder=0><\/iframe><\/div><div id="ad_ph_'+ar_cn+'"><\/div>');
function ar_getDoc(t,n,l){var doc;if(t<100){if(document.all && !window.opera){doc = window.frames['ar_container_'+n].document}
else if(document.getElementById){doc=document.getElementById('ar_container_'+n).contentDocument}
if(!doc){setTimeout('ar_getDoc('+(++t)+','+n+',"'+l+'")', 100)}else {var RndNum4NoCash = Math.round(Math.random() * 1000000000);
doc.write ('<sc'+'ript language="JavaScript" type="text/javascript">var ar_bnum='+n+';<\/sc'+'ript>');
doc.write ('<sc'+'ript language="JavaScript" type="text/javascript" src="'+l+'&rnd='+RndNum4NoCash+'"><\/sc'+'ript>');}}}
(function(num,link){function addEvent(e,t,f){if(e.addEventListener)e.addEventListener(t,f,false);else if(e.attachEvent)e.attachEvent('on'+t,f)}
function removeEvent(e,t,f){if(e.removeEventListener)e.removeEventListener(t,f,false);else if(e.detachEvent)e.detachEvent('on'+t,f)}
var BannerLoader={top:0,height:400,cm:document.compatMode=="CSS1Compat",
scroll:function(){var ch=self.innerHeight||this.cm&&document.documentElement.clientHeight||document.body.clientHeight;
var st=self.pageYOffset||this.cm&&document.documentElement.scrollTop||document.body.scrollTop;
var sh=self.scrollHeight||this.cm&&document.documentElement.scrollHeight||document.body.scrollHeight;
if((st-this.top<=this.height*0.2&&st+ch-this.top>=this.height*0.8)||(sh-this.top<=this.height*0.8&&(sh-st-ch<1||sh<ch))){
removeEvent(window,'scroll',this.sfunc);ar_getDoc(0,num,link)}},
sfunc: function(){BannerLoader.scroll()},init:function(){var t=this,obj=document.getElementById('ad_ph_'+num);
if(obj){while(obj.offsetParent){t.top += obj.offsetTop; obj = obj.offsetParent}
addEvent(window,'scroll',this.sfunc);t.scroll()}}};addEvent(window, 'load', function(){BannerLoader.init()})})(ar_cn++,ar_link);
//--></script>
<!-- Soloway 240x400 code END -->
</td></tr>

<tr><td align="center">
<font size="2"><a class=head href=http://forum.citforum.ru/>Форумы</a>
<a class=head href=http://citforum.ru/gazeta/>Газета</a></font>
</td></tr>
</table>

</td>
<td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=2 height=1 border=0></td>
<td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0></td>
</tr></table>

</td>
 <!--no_right-->

</tr>
</table>
</td>

</tr></table>

<p>
<table   cellspacing=0 cellpadding=0 border=0 width=100%>
<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=931 height=1 alt="" border=0></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 alt="" border=0></td></tr>
<tr><td bgcolor=#008080>

<table cellspacing=1 cellpadding=3 border=0 width=100%>
<tr>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/consulting/">IT-консалтинг</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/SE/">Software Engineering</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/programming/">Программирование</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/database/">СУБД</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/security/">Безопасность</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/internet/">Internet</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/nets/">Сети</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/operating_systems/">Операционные системы</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href="http://citforum.ru/hardware/">Hardware</a></font></td>
<!--
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/faq/>FAQ (ЧаВО)</a></font></td>
<td bgcolor=#F4F9F3 align=center><font size=-1><a class=head href=/howto/>HOWTO</a></font></td>
--> 
</tr>
</table>

</td></tr>
</table>

<p>

<table width=100%>
<tr><td>
<a href="http://citforum.ru/about/"><font size=2>Информация для рекламодателей</font></a> 
</td><td><font size=2>PR-акции, размещение рекламы &mdash; <a href="mailto:adv@citforum.ru">adv@citforum.ru</a>,
<br>тел. +7 495 6608306, ICQ 232284597</font>
</td><td align=right><font size=2>Пресс-релизы &mdash; <a href=mailto:pr@citforum.ru>pr@citforum.ru</a></font>
</td></tr></table>


<table cellspacing=0 cellpadding=0 border=0 width="100%"><tr><td><img src="../../pictures/1x1.gif" width=1 height=5 border=0 alt=""></td></tr>
<tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr>
<tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr></table>

<table cellspacing=0 cellpadding=4 border=0 width=100%><tr>
<td><font size=2>
<a href=http://www.citforum.ru/feedback.php?page=/operating_systems/manpages/VIEW.1.shtml&server=citforum.ru>Послать комментарий</a><br>
<a href="http://citforum.ru/how.shtml">Информация для авторов</a>

</font></td>

<td><a href=http://top100.rambler.ru/cgi-bin/stats_top100.cgi?13078><img src="../../pictures/logos/banner-88x31-rambler-darkblue2.gif" width=88 height=31 border=0 alt="Rambler's Top100"></a></td>
<td><!--TopList LOGO--><a target=_top href="http://top.list.ru/jump?from=26978"><img src="http://top.list.ru/counter?id=26978;t=54;l=1" border=0 height=31 width=88 alt="TopList"></a><!--TopList LOGO--></td>
<td>
<!--LiveInternet logo--><a href="http://www.liveinternet.ru/click" target=_blank><img
src="http://counter.yadro.ru/logo?12.6" border=0
alt="liveinternet.ru: показано число просмотров за 24 часа, посетителей за 24 часа и за сегодня"
width=88 height=31></a><!--/LiveInternet-->
</td>

<td align=right valign=bottom><FONT SIZE=1 face="Arial, sans-serif">This Web server launched on February 24, 1997<br>
Copyright &copy; 1997-2000 CIT, &copy; 2001-2015 <a href="http://citforum.ru/info.shtml">CIT Forum</a></font></td>
</tr></table>

<table cellspacing=0 cellpadding=0 border=0 width=100%><tr><td bgcolor=#daecd7><img src="../../pictures/1x1.gif" width=1 height=3 border=0 alt=""></td></tr><tr><td bgcolor=#008080><img src="../../pictures/1x1.gif" width=1 height=1 border=0 alt=""></td></tr></table>
<table cellspacing=0 cellpadding=0 border=0 width=100%><tr><td align=center><font size=1 face="Arial, sans-serif"><b>Внимание!</b> Любой из материалов, опубликованных на этом сервере, не может быть  воспроизведен в какой бы то ни было форме и какими бы то ни было средствами без письменного разрешения владельцев авторских прав. <a href="http://citforum.ru/copyright.shtml">Подробнее...</a></td></tr></table>


</table></center>


<!-- AdGravity Javascript code START-->
<script language="javascript" type="text/javascript"><!--
var RndNum4NoCash = Math.round(Math.random() * 1000000000);
var ar_Tail='unknown'; if (document.referrer) ar_Tail = escape(document.referrer);
document.write('<sc' + 'ript language="JavaScript" src="http://ad.adriver.ru/cgi-bin/erle.cgi?sid=126751&bt=16&target=blank&tail256="' + ar_Tail + '"></sc' + 'ript>');
//--></script>
<!-- AdGravity Javascript code END -->




</body>

</html>
