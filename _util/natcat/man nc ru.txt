ИМЯ
	nc - произвольные TCP и UDP соединения и прослушивания
>> arbitrary - произвольный
СИНТАКСИС
     nc [-46CDdhklnrStUuvz] [-I length] [-i interval] [-O length] [-P proxy_username] [-p source_port] [-s source] [-T toskeyword] [-V rtable]
        [-w timeout] [-X proxy_protocol] [-x proxy_address[:port]] [destination] [port]
ОПИСАНИЕ
	Утилита nc (или netcat) используется везде на свете где требуются TCP, UDP или umix-domain(?) сокеты.
>> involve - включать, вовлекать
	Она может создавать TCP соединения, слать UDP пакеты, слушать произвольные TCP и UDP порты, производить сканирование портов, а такж работать как IPv4 так и с IPv6.
	В отдичие от telnet(1), nc-скрипты лучше и отделяют сообщения об ошибках в поток ошибок а не шлет их на стандартный поток вывода, как это делают telnet(1) и некоторые.

	общее использование включает:
	*	простые TCP прокси
	*	shell-скрипты, основанные на HTTP клиентах и серверах
	*	тестирование сетевых демонов
	*	прокси-команды SOCK или HTTP для ssh(1)
	*	и многое многое другое
	
	ОПЦИИ:
	-4	заставляет nc использовать только IPv4 адреса
	-6	заставляет nc использовать только IPv6 адреса
	-С	слать CRLF как окончания строк
	-D	включить отладку сокета
	-d	не пытаться читать с stdin'а
	-h	напечатать справку
	-I длина
		задает размер приемного TCP буфера
	-i интервал
		задает времыя задержки между посылаемыми и принимаемыми строками текста.
		также задает задержку между соединениями с множеством портов
	-k	заставляет nc слушать другие соединения после того, как текущее соединение завершиться.
		использование этой опции без опции -l является ошибкой.
	-l	используется чтобы nc слушал вместо того чтобы инициировал соединение с удаленным хостом
		использование совместно с опциями -p, -s, или -z является ошибкой
		а также любые таймауты, заданные опцией -w игнорируются
	-n	не делать просмотр DNS или сервиса для заданного адреса, хоста или порта
	-p proxy_username
		
	-p source_port
